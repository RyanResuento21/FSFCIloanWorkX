<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="XrPictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAG0AAACICAYAAADtcWVnAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAABJxJREFUeF7t3U1MFHccxvEtaSUatY3hUDw0GNiW+gJcMU3TeGrsxSP2IriyQtW2
        adQoKmFt2rRNX0yb9C2xtIceeumLbUhNY9OYNmqIsi8GiCm7JrC4Ak2Y2V3Ky7K/zgx7aNZZZEYc5hme
        b/Lkf3HX1c9CwgwEH2OMMcaYK7vYn5MLkZz8EuWc2g/hORlMzUuBwFqjk/lzm4+npSyoytpDnFPzNSvS
        +dOMPbQ7k/mup06kpbxdlQ1HOKfmCyjSdeEB0KpOpmXtK6o8/irn1HwHFAn9TDSoEQ1wRAMc0QBHNMAR
        DXBEA5zjaOsPq7JO+6qesz9fywNeEbGCtlFbxRtp2XwsLU8e5exOv5T1do9DaGVBRd7S/rKB1LzEkpzd
        hUfmJaXkXy8wWMsqmv65+Ntrs/beIWx5soPW/RfRVjSiAUY0wIgGGNEAIxpgRAOMaIARDTCiAeYE2tzY
        +J7xr7pl/Px5MU5Oxj77XLLXr9t78zuBlu0LS6S6WsJVVcbJVcuNigpJvf+Be9GmojG5WV8vse3bjZOr
        l4j2Br778SdEQ1pkyxaioY1ogCMa4IgGOKIBjmiAIxrgPIkW27pVorW1nl1fZaWkPvzIQ2h1dTK4a5fc
        2v2S3Hpxtyc38NzzMvH1Nx5B27FDYtu2iXrpd3v/oNWQW9Gyvb1EK5Vb0TJXrhCtVEQDjGiAEQ0wogFG
        NMCIBhjRAHMt2tWrRCuVW9Gm+vqIVirXodXVGXC329ok2RWS5JlOT2742HGZ7Omx98Z0HVphUb/fuOfk
        1d3YtEmSobPeQvP6dLg7775HNKQRDXBEAxzRAEc0wBENcEQDHNEA53q0bDgi0Zoa44Xqp1enX3672dBg
        ilQ816NNxxOSaA1KIhBYOL224EFJHGiV/p07F+BMkIrnerTV0lDTXuOaqRlS8Yjmkob2vkw0tPiRBhjR
        ACMaYEQDjGiAEQ0wogFGNMD4xTVgQ01N3kGbHopLvGW/xPftWzi9tv0BiTe3SH9jo8S8csF4ajXcmvEX
        bs2YAJnN/Wi8CXrPiAY4ogGOaIAjGuCIBjiiAY5ogCMa4FyPxt81c+/03zUzevZN96LNjoz8mNReYDIU
        EuPkZLijQ5RfL7oXjS1zRAOMaIARDTCiAUY0wIgGGNEAIxpgRAOMaIA5hTaRyTdMpLXp52LT/4y2wsOY
        WU6ghYdz8syZjPhPZYxzsT19OiPVHRn58+8cP5pL5QTatURO1rSr8uhBVcq1c7E91qZKWVCV3waIVjIn
        0Hpv52Sj9tj1h82f8//bcESVdYdUuTRItJIRDTCiAUY0wIgGGNEAIxpgRAOMaIARDTCiAUY0wCyjBRT5
        rnfO0n/oYGqeaMuZVbQ1bYo0d/8rX16elU//mLnvvrg8Iye+nzYeq4MUP1/xiLaErKI98Zp++0QxPk0u
        dWVBxfS5zEa0JWQV7WGPaEuIaIARDTCiAUY0wIgGGNEAIxpgRANsdDJ/rvJoWh5pVaS8feWnX23Rr6Dw
        m1UXaUzN72l8Jys1pzLybOfKr1ab/zS/Lfy+/ZPJV42n8y+Y/kCEw9Nfh77CS2OMsYeaz/cfjHIkwepL
        GmkAAAAASUVORK5CYII=
</value>
  </data>
</root>