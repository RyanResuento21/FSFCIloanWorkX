Imports System.Drawing.Imaging
Imports DevExpress.XtraReports.UI
Public Class FrmCreditInvestigation

    Public ReferenceID_1 As String
    Public ReferenceID_2 As String
    Public ReferenceID_3 As String
    Public ReferenceID_4 As String
    Dim ApplicationStatus_V2 As String
    Dim ChangeCollateral As Boolean
    Dim CollateralFromROPOA As Boolean
    Dim FromApproveBM As Boolean
    Dim GMA As Double
    Dim UpdateAmount As Boolean
    Dim UpdatePercent As Boolean
    Public DefaultImage As New DevExpress.XtraEditors.PictureEdit
    ReadOnly DefaultMap As New DevExpress.XtraEditors.PictureEdit
    Public SketchC1 As New DevExpress.XtraEditors.PictureEdit
    Public SketchC2 As New DevExpress.XtraEditors.PictureEdit
    Public SketchC3 As New DevExpress.XtraEditors.PictureEdit
    Public SketchC4 As New DevExpress.XtraEditors.PictureEdit
    Public ChangeSketchC1 As Boolean
    Public ChangeSketchC2 As Boolean
    Public ChangeSketchC3 As Boolean
    Public ChangeSketchC4 As Boolean
    Dim BorrowerID As String
    Dim CreditNumber As String
    Dim Borrower_Branch As String
    Dim CoMakerID As String
    Dim SpouseID As String
    Dim Status As String = "PENDING"
    Dim Draft_Status As String = "DRAFT"
    Public CoMakerShift As Boolean
    Dim ChangeBorrowerPic As Boolean
    Dim FileName As String
    Public TotalImageC1 As Integer
    Public TotalImageC2 As Integer
    Public TotalImageC3 As Integer
    Public TotalImageC4 As Integer
    Public TotalImageS As Integer
    Public TotalImage As Integer
    Public TotalImage_Approval As Integer
    Public ChangeSketch As Boolean

    Dim Loan_Type As String
    Dim Mortgage As String
    Dim Collateral As String
    Dim TotalAppraised As Double
    Dim RecommendedLoan As Double
    Dim Product As String
    Dim ProductID As Integer
    Dim ApplicationDate As Date
    Public AmountApplied As Double
    Dim Interest As Double
    Dim Terms As Double
    Public BM_AmountApplied As Double
    Dim BM_Interest As Double
    Dim BM_Terms As Double
    '*** I D E N T I F I C A T I O N ***
    Public GSIS As String
    Public PhilHealth As String
    Public Senior As String
    Public UMID As String
    Public SEC As String
    Public DTI As String
    Public CDA As String
    Public Cooperative As String
    Public Drivers As String
    Public dDrivers As String
    Public VIN As String
    Public dVIN As String
    Public Passport As String
    Public dPassport As String
    Public PRC As String
    Public dPRC As String
    Public NBI As String
    Public dNBI As String
    Public Police As String
    Public dPolice As String
    Public Postal As String
    Public dPostal As String
    Public Barangay As String
    Public dBarangay As String
    Public OWWA As String
    Public dOWWA As String
    Public OFW As String
    Public dOFW As String
    Public Seaman As String
    Public dSeaman As String
    Public PNP As String
    Public dPNP As String
    Public AFP As String
    Public dAFP As String
    Public HDMF As String
    Public dHDMF As String
    Public PWD As String
    Public dPWD As String
    Public DSWD As String
    Public dDSWD As String
    Public ACR As String
    Public dACR As String
    Public DTI_Business As String
    Public dDTI_Business As String
    Public IBP As String
    Public dIBP As String
    Public FireArms As String
    Public dFireArms As String
    Public Government As String
    Public dGovernment As String
    Public Diplomat As String
    Public dDiplomat As String
    Public National As String
    Public dNational As String
    Public Work As String
    Public dWork As String
    Public GOCC As String
    Public dGOCC As String
    Public PLRA As String
    Public dPLRA As String
    Public Major As String
    Public dMajor As String
    Public Media As String
    Public dMedia As String
    Public Student As String
    Public dStudent As String
    Public SIRV As String
    Public dSIRV As String

    Public TIN_S As String
    Public SSS_S As String
    Public GSIS_S As String
    Public PhilHealth_S As String
    Public Senior_S As String
    Public UMID_S As String
    Public SEC_S As String
    Public DTI_S As String
    Public CDA_S As String
    Public Cooperative_S As String
    Public Drivers_S As String
    Public dDrivers_S As String
    Public VIN_S As String
    Public dVIN_S As String
    Public Passport_S As String
    Public dPassport_S As String
    Public PRC_S As String
    Public dPRC_S As String
    Public NBI_S As String
    Public dNBI_S As String
    Public Police_S As String
    Public dPolice_S As String
    Public Postal_S As String
    Public dPostal_S As String
    Public Barangay_S As String
    Public dBarangay_S As String
    Public OWWA_S As String
    Public dOWWA_S As String
    Public OFW_S As String
    Public dOFW_S As String
    Public Seaman_S As String
    Public dSeaman_S As String
    Public PNP_S As String
    Public dPNP_S As String
    Public AFP_S As String
    Public dAFP_S As String
    Public HDMF_S As String
    Public dHDMF_S As String
    Public PWD_S As String
    Public dPWD_S As String
    Public DSWD_S As String
    Public dDSWD_S As String
    Public ACR_S As String
    Public dACR_S As String
    Public DTI_Business_S As String
    Public dDTI_Business_S As String
    Public IBP_S As String
    Public dIBP_S As String
    Public FireArms_S As String
    Public dFireArms_S As String
    Public Government_S As String
    Public dGovernment_S As String
    Public Diplomat_S As String
    Public dDiplomat_S As String
    Public National_S As String
    Public dNational_S As String
    Public Work_S As String
    Public dWork_S As String
    Public GOCC_S As String
    Public dGOCC_S As String
    Public PLRA_S As String
    Public dPLRA_S As String
    Public Major_S As String
    Public dMajor_S As String
    Public Media_S As String
    Public dMedia_S As String
    Public Student_S As String
    Public dStudent_S As String
    Public SIRV_S As String
    Public dSIRV_S As String
    '*** I D E N T I F I C A T I O N ***

    '*** C O M A K E R   I N F O ***
    Public ChangePic1 As Boolean
    Public vPrefix_C1 As String
    Public vFirstN_C1 As String
    Public vMiddleN_C1 As String
    Public vLastN_C1 As String
    Public vSuffix_C1 As String
    Public vNoC_C1 As String
    Public vStreetC_C1 As String
    Public vBarangayC_C1 As String
    Public vAddressC_C1 As String
    Public vAddressC_C1_ID As Integer
    Public vNoP_C1 As String
    Public vStreetP_C1 As String
    Public vBarangayP_C1 As String
    Public vAddressP_C1 As String
    Public vAddressP_C1_ID As Integer
    Public vBirth_C1 As String
    Public vPlaceBirth_C1 As String
    Public vPlaceBirth_C1_ID As Integer
    Public vMale_C1 As Boolean
    Public vFemale_C1 As Boolean
    Public vSingle_C1 As Boolean
    Public vMarried_C1 As Boolean
    Public vSeparated_C1 As Boolean
    Public vWidowed_C1 As Boolean
    Public vCitizenship_C1 As String
    Public vTelephone_C1 As String
    Public vMobile_C1 As String
    Public vTIN_C1 As String
    Public vSSS_C1 As String
    Public vEmail_C1 As String
    Public vOwned_C1 As Boolean
    Public vFree_C1 As Boolean
    Public vRented_C1 As Boolean
    Public vRent_C1 As Double
    Public vRelationship_C1 As String
    Public vRelationship_C1_ID As Integer
    Public vEmployer_C1 As String
    Public vEmpAddress_C1 As String
    Public vEmpTelephone_C1 As String
    Public vPosition_C1 As String
    Public vCasual_C1 As Boolean
    Public vTemporary_C1 As Boolean
    Public vPermanent_C1 As Boolean
    Public vHired_C1 As String
    Public vYearHired_C1 As Integer
    Public vSupervisor_C1 As String
    Public vSalary_C1 As Double
    Public vBusinessName_C1 As String
    Public vBusinessAddress_C1 As String
    Public vBusinessTelephone_C1 As String
    Public vNatureBusiness_C1 As String
    Public vYrsOperation_C1 As Integer
    Public vBusinessIncome_C1 As Double
    Public vNoEmployees_C1 As Integer
    Public vCapital_C1 As Double
    Public vArea_C1 As String
    Public vExpiry_C1 As String
    Public vOutlet_C1 As Integer
    Public vOtherIncome_C1 As String
    Public vOtherIncomeD_C1 As Double
    Public Industry_C1 As New DevExpress.XtraEditors.CheckedComboBoxEdit
    'FOR COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************
    Public vCreditor_1_C1 As String
    Public vCreditAddress_1_C1 As String
    Public vCreditGranted_1_C1 As String
    Public vTerm_1_C1 As Integer
    Public vAmountGranted_1_C1 As Double
    Public vBalance_1_C1 As Double
    Public vCreditPayment_1_C1 As Double
    Public vCreditRemarks_1_C1 As String
    Public vCreditor_2_C1 As String
    Public vCreditAddress_2_C1 As String
    Public vCreditGranted_2_C1 As String
    Public vTerm_2_C1 As Integer
    Public vAmountGranted_2_C1 As Double
    Public vBalance_2_C1 As Double
    Public vCreditPayment_2_C1 As Double
    Public vCreditRemarks_2_C1 As String
    Public vBank_1_C1 As String
    Public vBranch_1_C1 As String
    Public vAccountT_1_C1 As String
    Public vSA_1_C1 As String
    Public vAverageBalance_1_C1 As Double
    Public vOpened_1_C1 As String
    Public vBank_2_C1 As String
    Public vBranch_2_C1 As String
    Public vAccountT_2_C1 As String
    Public vSA_2_C1 As String
    Public vAverageBalance_2_C1 As Double
    Public vOpened_2_C1 As String
    Public vCreditRating_C1 As String
    Public vRec_Remarks_C1 As String
    Public vTitle_C1 As String
    Public vCaseNum_C1 As String
    Public vDateFilled_C1 As String
    Public vCourt_C1 As String
    Public vCaseNature_C1 As String
    Public vAmountInvolved_C1 As Double
    Public vCaseStatus_C1 As String
    Public vFindings_C1 As String
    Public vFindingsStat_C1 As String
    Public vCACPI_C1 As String
    Public vLocation_1_C1 As String
    Public vTCT_1_C1 As String
    Public vArea_1_C1 As Double
    Public vPropertiesRemarks_1_C1 As String
    Public vLocation_2_C1 As String
    Public vTCT_2_C1 As String
    Public vArea_2_C1 As Double
    Public vPropertiesRemarks_2_C1 As String
    Public vVehicle_1_C1 As String
    Public vYear_1_C1 As String
    Public vWhomAcquired_1_C1 As String
    Public vVehicleRemarks_1_C1 As String
    Public vVehicle_2_C1 As String
    Public vYear_2_C1 As String
    Public vWhomAcquired_2_C1 As String
    Public vVehicleRemarks_2_C1 As String
    Public vOtherProperties_C1 As String
    Public vNarrative_C1 As String
    Public vEx_TotalDisposable_C1 As Double
    Public vEx_Living_C1 As Double
    Public vEx_Clothing_C1 As Double
    Public vEx_Education_C1 As Double
    Public vEx_Transportation_C1 As Double
    Public vEx_Lights_C1 As Double
    Public vEx_Insurance_C1 As Double
    Public vEx_Amortization_C1 As Double
    Public vEx_Miscellaneous_C1 As Double
    Public vEx_TotalExpenses_C1 As Double
    Public vEx_NetDisposable_C1 As Double
    Public vEx_TMFI_C1 As Double
    Public vEx_TMDI_C1 As Double
    Public vEx_Remarks_C1 As String
    Public vPurposeLoan_C1 As String
    Public vOthers_C1 As String
    Public vC1_C1 As String
    Public vC2_C1 As String
    Public vC3_C1 As String
    Public vC4_C1 As String
    Public vC5_C1 As String
    Public vC6_C1 As String
    Public vC7_C1 As String
    Public vC8_C1 As String
    Public vC9_C1 As String
    'FOR COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************

    Public ChangePic2 As Boolean
    Public vPrefix_C2 As String
    Public vFirstN_C2 As String
    Public vMiddleN_C2 As String
    Public vLastN_C2 As String
    Public vSuffix_C2 As String
    Public vNoC_C2 As String
    Public vStreetC_C2 As String
    Public vBarangayC_C2 As String
    Public vAddressC_C2 As String
    Public vAddressC_C2_ID As Integer
    Public vNoP_C2 As String
    Public vStreetP_C2 As String
    Public vBarangayP_C2 As String
    Public vAddressP_C2 As String
    Public vAddressP_C2_ID As Integer
    Public vBirth_C2 As String
    Public vPlaceBirth_C2 As String
    Public vPlaceBirth_C2_ID As Integer
    Public vMale_C2 As Boolean
    Public vFemale_C2 As Boolean
    Public vSingle_C2 As Boolean
    Public vMarried_C2 As Boolean
    Public vSeparated_C2 As Boolean
    Public vWidowed_C2 As Boolean
    Public vCitizenship_C2 As String
    Public vTelephone_C2 As String
    Public vMobile_C2 As String
    Public vTIN_C2 As String
    Public vSSS_C2 As String
    Public vEmail_C2 As String
    Public vOwned_C2 As Boolean
    Public vFree_C2 As Boolean
    Public vRented_C2 As Boolean
    Public vRent_C2 As Double
    Public vRelationship_C2 As String
    Public vRelationship_C2_ID As Integer
    Public vEmployer_C2 As String
    Public vEmpAddress_C2 As String
    Public vEmpTelephone_C2 As String
    Public vPosition_C2 As String
    Public vCasual_C2 As Boolean
    Public vTemporary_C2 As Boolean
    Public vPermanent_C2 As Boolean
    Public vHired_C2 As String
    Public vYearHired_C2 As Integer
    Public vSupervisor_C2 As String
    Public vSalary_C2 As Double
    Public vBusinessName_C2 As String
    Public vBusinessAddress_C2 As String
    Public vBusinessTelephone_C2 As String
    Public vNatureBusiness_C2 As String
    Public vYrsOperation_C2 As Integer
    Public vBusinessIncome_C2 As Double
    Public vNoEmployees_C2 As Integer
    Public vCapital_C2 As Double
    Public vArea_C2 As String
    Public vExpiry_C2 As String
    Public vOutlet_C2 As Integer
    Public vOtherIncome_C2 As String
    Public vOtherIncomeD_C2 As Double
    Public Industry_C2 As New DevExpress.XtraEditors.CheckedComboBoxEdit
    'FOR COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************
    Public vCreditor_1_C2 As String
    Public vCreditAddress_1_C2 As String
    Public vCreditGranted_1_C2 As String
    Public vTerm_1_C2 As Integer
    Public vAmountGranted_1_C2 As Double
    Public vBalance_1_C2 As Double
    Public vCreditPayment_1_C2 As Double
    Public vCreditRemarks_1_C2 As String
    Public vCreditor_2_C2 As String
    Public vCreditAddress_2_C2 As String
    Public vCreditGranted_2_C2 As String
    Public vTerm_2_C2 As Integer
    Public vAmountGranted_2_C2 As Double
    Public vBalance_2_C2 As Double
    Public vCreditPayment_2_C2 As Double
    Public vCreditRemarks_2_C2 As String
    Public vBank_1_C2 As String
    Public vBranch_1_C2 As String
    Public vAccountT_1_C2 As String
    Public vSA_1_C2 As String
    Public vAverageBalance_1_C2 As Double
    Public vOpened_1_C2 As String
    Public vBank_2_C2 As String
    Public vBranch_2_C2 As String
    Public vAccountT_2_C2 As String
    Public vSA_2_C2 As String
    Public vAverageBalance_2_C2 As Double
    Public vOpened_2_C2 As String
    Public vCreditRating_C2 As String
    Public vRec_Remarks_C2 As String
    Public vTitle_C2 As String
    Public vCaseNum_C2 As String
    Public vDateFilled_C2 As String
    Public vCourt_C2 As String
    Public vCaseNature_C2 As String
    Public vAmountInvolved_C2 As Double
    Public vCaseStatus_C2 As String
    Public vFindings_C2 As String
    Public vFindingsStat_C2 As String
    Public vCACPI_C2 As String
    Public vLocation_1_C2 As String
    Public vTCT_1_C2 As String
    Public vArea_1_C2 As Double
    Public vPropertiesRemarks_1_C2 As String
    Public vLocation_2_C2 As String
    Public vTCT_2_C2 As String
    Public vArea_2_C2 As Double
    Public vPropertiesRemarks_2_C2 As String
    Public vVehicle_1_C2 As String
    Public vYear_1_C2 As String
    Public vWhomAcquired_1_C2 As String
    Public vVehicleRemarks_1_C2 As String
    Public vVehicle_2_C2 As String
    Public vYear_2_C2 As String
    Public vWhomAcquired_2_C2 As String
    Public vVehicleRemarks_2_C2 As String
    Public vOtherProperties_C2 As String
    Public vNarrative_C2 As String
    Public vEx_TotalDisposable_C2 As Double
    Public vEx_Living_C2 As Double
    Public vEx_Clothing_C2 As Double
    Public vEx_Education_C2 As Double
    Public vEx_Transportation_C2 As Double
    Public vEx_Lights_C2 As Double
    Public vEx_Insurance_C2 As Double
    Public vEx_Amortization_C2 As Double
    Public vEx_Miscellaneous_C2 As Double
    Public vEx_TotalExpenses_C2 As Double
    Public vEx_NetDisposable_C2 As Double
    Public vEx_TMFI_C2 As Double
    Public vEx_TMDI_C2 As Double
    Public vEx_Remarks_C2 As String
    Public vPurposeLoan_C2 As String
    Public vOthers_C2 As String
    Public vC1_C2 As String
    Public vC2_C2 As String
    Public vC3_C2 As String
    Public vC4_C2 As String
    Public vC5_C2 As String
    Public vC6_C2 As String
    Public vC7_C2 As String
    Public vC8_C2 As String
    Public vC9_C2 As String
    'FOR COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************

    Public ChangePic3 As Boolean
    Public vPrefix_C3 As String
    Public vFirstN_C3 As String
    Public vMiddleN_C3 As String
    Public vLastN_C3 As String
    Public vSuffix_C3 As String
    Public vNoC_C3 As String
    Public vStreetC_C3 As String
    Public vBarangayC_C3 As String
    Public vAddressC_C3 As String
    Public vAddressC_C3_ID As Integer
    Public vNoP_C3 As String
    Public vStreetP_C3 As String
    Public vBarangayP_C3 As String
    Public vAddressP_C3 As String
    Public vAddressP_C3_ID As Integer
    Public vBirth_C3 As String
    Public vPlaceBirth_C3 As String
    Public vPlaceBirth_C3_ID As Integer
    Public vMale_C3 As Boolean
    Public vFemale_C3 As Boolean
    Public vSingle_C3 As Boolean
    Public vMarried_C3 As Boolean
    Public vSeparated_C3 As Boolean
    Public vWidowed_C3 As Boolean
    Public vCitizenship_C3 As String
    Public vTelephone_C3 As String
    Public vMobile_C3 As String
    Public vTIN_C3 As String
    Public vSSS_C3 As String
    Public vEmail_C3 As String
    Public vOwned_C3 As Boolean
    Public vFree_C3 As Boolean
    Public vRented_C3 As Boolean
    Public vRent_C3 As Double
    Public vRelationship_C3 As String
    Public vRelationship_C3_ID As Integer
    Public vEmployer_C3 As String
    Public vEmpAddress_C3 As String
    Public vEmpTelephone_C3 As String
    Public vPosition_C3 As String
    Public vCasual_C3 As Boolean
    Public vTemporary_C3 As Boolean
    Public vPermanent_C3 As Boolean
    Public vHired_C3 As String
    Public vYearHired_C3 As Integer
    Public vSupervisor_C3 As String
    Public vSalary_C3 As Double
    Public vBusinessName_C3 As String
    Public vBusinessAddress_C3 As String
    Public vBusinessTelephone_C3 As String
    Public vNatureBusiness_C3 As String
    Public vYrsOperation_C3 As Integer
    Public vBusinessIncome_C3 As Double
    Public vNoEmployees_C3 As Integer
    Public vCapital_C3 As Double
    Public vArea_C3 As String
    Public vExpiry_C3 As String
    Public vOutlet_C3 As Integer
    Public vOtherIncome_C3 As String
    Public vOtherIncomeD_C3 As Double
    Public Industry_C3 As New DevExpress.XtraEditors.CheckedComboBoxEdit
    'FOR COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************
    Public vCreditor_1_C3 As String
    Public vCreditAddress_1_C3 As String
    Public vCreditGranted_1_C3 As String
    Public vTerm_1_C3 As Integer
    Public vAmountGranted_1_C3 As Double
    Public vBalance_1_C3 As Double
    Public vCreditPayment_1_C3 As Double
    Public vCreditRemarks_1_C3 As String
    Public vCreditor_2_C3 As String
    Public vCreditAddress_2_C3 As String
    Public vCreditGranted_2_C3 As String
    Public vTerm_2_C3 As Integer
    Public vAmountGranted_2_C3 As Double
    Public vBalance_2_C3 As Double
    Public vCreditPayment_2_C3 As Double
    Public vCreditRemarks_2_C3 As String
    Public vBank_1_C3 As String
    Public vBranch_1_C3 As String
    Public vAccountT_1_C3 As String
    Public vSA_1_C3 As String
    Public vAverageBalance_1_C3 As Double
    Public vOpened_1_C3 As String
    Public vBank_2_C3 As String
    Public vBranch_2_C3 As String
    Public vAccountT_2_C3 As String
    Public vSA_2_C3 As String
    Public vAverageBalance_2_C3 As Double
    Public vOpened_2_C3 As String
    Public vCreditRating_C3 As String
    Public vRec_Remarks_C3 As String
    Public vTitle_C3 As String
    Public vCaseNum_C3 As String
    Public vDateFilled_C3 As String
    Public vCourt_C3 As String
    Public vCaseNature_C3 As String
    Public vAmountInvolved_C3 As Double
    Public vCaseStatus_C3 As String
    Public vFindings_C3 As String
    Public vFindingsStat_C3 As String
    Public vCACPI_C3 As String
    Public vLocation_1_C3 As String
    Public vTCT_1_C3 As String
    Public vArea_1_C3 As Double
    Public vPropertiesRemarks_1_C3 As String
    Public vLocation_2_C3 As String
    Public vTCT_2_C3 As String
    Public vArea_2_C3 As Double
    Public vPropertiesRemarks_2_C3 As String
    Public vVehicle_1_C3 As String
    Public vYear_1_C3 As String
    Public vWhomAcquired_1_C3 As String
    Public vVehicleRemarks_1_C3 As String
    Public vVehicle_2_C3 As String
    Public vYear_2_C3 As String
    Public vWhomAcquired_2_C3 As String
    Public vVehicleRemarks_2_C3 As String
    Public vOtherProperties_C3 As String
    Public vNarrative_C3 As String
    Public vEx_TotalDisposable_C3 As Double
    Public vEx_Living_C3 As Double
    Public vEx_Clothing_C3 As Double
    Public vEx_Education_C3 As Double
    Public vEx_Transportation_C3 As Double
    Public vEx_Lights_C3 As Double
    Public vEx_Insurance_C3 As Double
    Public vEx_Amortization_C3 As Double
    Public vEx_Miscellaneous_C3 As Double
    Public vEx_TotalExpenses_C3 As Double
    Public vEx_NetDisposable_C3 As Double
    Public vEx_TMFI_C3 As Double
    Public vEx_TMDI_C3 As Double
    Public vEx_Remarks_C3 As String
    Public vPurposeLoan_C3 As String
    Public vOthers_C3 As String
    Public vC1_C3 As String
    Public vC2_C3 As String
    Public vC3_C3 As String
    Public vC4_C3 As String
    Public vC5_C3 As String
    Public vC6_C3 As String
    Public vC7_C3 As String
    Public vC8_C3 As String
    Public vC9_C3 As String
    'FOR COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************

    Public ChangePic4 As Boolean
    Public vPrefix_C4 As String
    Public vFirstN_C4 As String
    Public vMiddleN_C4 As String
    Public vLastN_C4 As String
    Public vSuffix_C4 As String
    Public vNoC_C4 As String
    Public vStreetC_C4 As String
    Public vBarangayC_C4 As String
    Public vAddressC_C4 As String
    Public vAddressC_C4_ID As Integer
    Public vNoP_C4 As String
    Public vStreetP_C4 As String
    Public vBarangayP_C4 As String
    Public vAddressP_C4 As String
    Public vAddressP_C4_ID As Integer
    Public vBirth_C4 As String
    Public vPlaceBirth_C4 As String
    Public vPlaceBirth_C4_ID As Integer
    Public vMale_C4 As Boolean
    Public vFemale_C4 As Boolean
    Public vSingle_C4 As Boolean
    Public vMarried_C4 As Boolean
    Public vSeparated_C4 As Boolean
    Public vWidowed_C4 As Boolean
    Public vCitizenship_C4 As String
    Public vTelephone_C4 As String
    Public vMobile_C4 As String
    Public vTIN_C4 As String
    Public vSSS_C4 As String
    Public vEmail_C4 As String
    Public vOwned_C4 As Boolean
    Public vFree_C4 As Boolean
    Public vRented_C4 As Boolean
    Public vRent_C4 As Double
    Public vRelationship_C4 As String
    Public vRelationship_C4_ID As Integer
    Public vEmployer_C4 As String
    Public vEmpAddress_C4 As String
    Public vEmpTelephone_C4 As String
    Public vPosition_C4 As String
    Public vCasual_C4 As Boolean
    Public vTemporary_C4 As Boolean
    Public vPermanent_C4 As Boolean
    Public vHired_C4 As String
    Public vYearHired_C4 As Integer
    Public vSupervisor_C4 As String
    Public vSalary_C4 As Double
    Public vBusinessName_C4 As String
    Public vBusinessAddress_C4 As String
    Public vBusinessTelephone_C4 As String
    Public vNatureBusiness_C4 As String
    Public vYrsOperation_C4 As Integer
    Public vBusinessIncome_C4 As Double
    Public vNoEmployees_C4 As Integer
    Public vCapital_C4 As Double
    Public vArea_C4 As String
    Public vExpiry_C4 As String
    Public vOutlet_C4 As Integer
    Public vOtherIncome_C4 As String
    Public vOtherIncomeD_C4 As Double
    Public Industry_C4 As New DevExpress.XtraEditors.CheckedComboBoxEdit
    'FOR COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************
    Public vCreditor_1_C4 As String
    Public vCreditAddress_1_C4 As String
    Public vCreditGranted_1_C4 As String
    Public vTerm_1_C4 As Integer
    Public vAmountGranted_1_C4 As Double
    Public vBalance_1_C4 As Double
    Public vCreditPayment_1_C4 As Double
    Public vCreditRemarks_1_C4 As String
    Public vCreditor_2_C4 As String
    Public vCreditAddress_2_C4 As String
    Public vCreditGranted_2_C4 As String
    Public vTerm_2_C4 As Integer
    Public vAmountGranted_2_C4 As Double
    Public vBalance_2_C4 As Double
    Public vCreditPayment_2_C4 As Double
    Public vCreditRemarks_2_C4 As String
    Public vBank_1_C4 As String
    Public vBranch_1_C4 As String
    Public vAccountT_1_C4 As String
    Public vSA_1_C4 As String
    Public vAverageBalance_1_C4 As Double
    Public vOpened_1_C4 As String
    Public vBank_2_C4 As String
    Public vBranch_2_C4 As String
    Public vAccountT_2_C4 As String
    Public vSA_2_C4 As String
    Public vAverageBalance_2_C4 As Double
    Public vOpened_2_C4 As String
    Public vCreditRating_C4 As String
    Public vRec_Remarks_C4 As String
    Public vTitle_C4 As String
    Public vCaseNum_C4 As String
    Public vDateFilled_C4 As String
    Public vCourt_C4 As String
    Public vCaseNature_C4 As String
    Public vAmountInvolved_C4 As Double
    Public vCaseStatus_C4 As String
    Public vFindings_C4 As String
    Public vFindingsStat_C4 As String
    Public vCACPI_C4 As String
    Public vLocation_1_C4 As String
    Public vTCT_1_C4 As String
    Public vArea_1_C4 As Double
    Public vPropertiesRemarks_1_C4 As String
    Public vLocation_2_C4 As String
    Public vTCT_2_C4 As String
    Public vArea_2_C4 As Double
    Public vPropertiesRemarks_2_C4 As String
    Public vVehicle_1_C4 As String
    Public vYear_1_C4 As String
    Public vWhomAcquired_1_C4 As String
    Public vVehicleRemarks_1_C4 As String
    Public vVehicle_2_C4 As String
    Public vYear_2_C4 As String
    Public vWhomAcquired_2_C4 As String
    Public vVehicleRemarks_2_C4 As String
    Public vOtherProperties_C4 As String
    Public vNarrative_C4 As String
    Public vEx_TotalDisposable_C4 As Double
    Public vEx_Living_C4 As Double
    Public vEx_Clothing_C4 As Double
    Public vEx_Education_C4 As Double
    Public vEx_Transportation_C4 As Double
    Public vEx_Lights_C4 As Double
    Public vEx_Insurance_C4 As Double
    Public vEx_Amortization_C4 As Double
    Public vEx_Miscellaneous_C4 As Double
    Public vEx_TotalExpenses_C4 As Double
    Public vEx_NetDisposable_C4 As Double
    Public vEx_TMFI_C4 As Double
    Public vEx_TMDI_C4 As Double
    Public vEx_Remarks_C4 As String
    Public vPurposeLoan_C4 As String
    Public vOthers_C4 As String
    Public vC1_C4 As String
    Public vC2_C4 As String
    Public vC3_C4 As String
    Public vC4_C4 As String
    Public vC5_C4 As String
    Public vC6_C4 As String
    Public vC7_C4 As String
    Public vC8_C4 As String
    Public vC9_C4 As String
    'FOR COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************

    '*** C O M A K E R   I N F O ***

    '*** S P O U S E   I N F O ***
    Public ChangePicS As Boolean
    Public vPrefix_S As String
    Public vFirstN_S As String
    Public vMiddleN_S As String
    Public vLastN_S As String
    Public vSuffix_S As String
    Public vPrefix_M As String
    Public vFirstN_M As String
    Public vMiddleN_M As String
    Public vLastN_M As String
    Public vSuffix_M As String
    Public vNoC_S As String
    Public vStreetC_S As String
    Public vBarangayC_S As String
    Public vAddressC_S As String
    Public vAddressC_S_ID As Integer
    Public vNoP_S As String
    Public vStreetP_S As String
    Public vBarangayP_S As String
    Public vAddressP_S As String
    Public vAddressP_S_ID As Integer
    Public vBirth_S As String
    Public vPlaceBirth_S As String
    Public vPlaceBirth_S_ID As Integer
    Public vMale_S As Boolean
    Public vFemale_S As Boolean
    Public vCitizenship_S As String
    Public vTelephone_S As String
    Public vMobile_S As String
    Public vTIN_S As String
    Public vSSS_S As String
    Public vEmail_S As String
    Public vOwned_S As Boolean
    Public vFree_S As Boolean
    Public vRented_S As Boolean
    Public vRent_S As Double
    Public vEmployer_S As String
    Public vEmpAddress_S As String
    Public vEmpTelephone_S As String
    Public vPosition_S As String
    Public vCasual_S As Boolean
    Public vTemporary_S As Boolean
    Public vPermanent_S As Boolean
    Public vHired_S As String
    Public vYearHired_S As Integer
    Public vSupervisor_S As String
    Public vSalary_S As Double
    Public vBusinessName_S As String
    Public vBusinessAddress_S As String
    Public vBusinessTelephone_S As String
    Public vNatureBusiness_S As String
    Public vYrsOperation_S As Integer
    Public vBusinessIncome_S As Double
    Public vNoEmployees_S As Integer
    Public vCapital_S As Double
    Public vArea_S As String
    Public vExpiry_S As String
    Public vOutlet_S As Integer
    Public vOtherIncome_S As String
    Public vOtherIncomeD_S As Double
    Public Industry_S As New DevExpress.XtraEditors.CheckedComboBoxEdit
    '*** S P O U S E   I N F O ***

    '*** D A T A   S T O R A G E ***'
    'Personal Info

    Dim vMiddleN_1 As String
    Dim vLastN_1 As String
    Dim vSuffix_1 As String
    Dim vGrade_1 As String
    Dim vSchool_1 As String
    Dim vSchoolAddress_1 As String

    Dim vPrefix_2 As String
    Dim vFirstN_2 As String
    Dim vMiddleN_2 As String
    Dim vLastN_2 As String
    Dim vSuffix_2 As String
    Dim vGrade_2 As String
    Dim vSchool_2 As String
    Dim vSchoolAddress_2 As String

    Dim vPrefix_3 As String
    Dim vFirstN_3 As String
    Dim vMiddleN_3 As String
    Dim vLastN_3 As String
    Dim vSuffix_3 As String
    Dim vGrade_3 As String
    Dim vSchool_3 As String
    Dim vSchoolAddress_3 As String

    Dim vPrefix_4 As String
    Dim vFirstN_4 As String
    Dim vMiddleN_4 As String
    Dim vLastN_4 As String
    Dim vSuffix_4 As String
    Dim vGrade_4 As String
    Dim vSchool_4 As String
    Dim vSchoolAddress_4 As String

    'Income Checking
    Dim vEmployerAddress_B As String
    Dim vPosition_B As String
    Dim vCasual_B As Boolean
    Dim vTemporary_B As Boolean
    Dim vPermanent_B As Boolean
    Dim vMonthly_B As Double

    Dim vBusinessAddress As String
    Dim vBusinessNature As String
    Dim vBusinessCapital As Double
    Dim vBusinessEmployees As Integer
    Dim vBusinessStock As Double
    Dim vBusinessVehicle As String
    Dim vBusinessIncome As Double
    Dim vBusinessPermit As String
    Dim vOtherBusiness As String

    ReadOnly vOtherIncome As Double

    'Credit Checking
    Dim vCreditAddress_1 As String
    Dim vCreditTerm_1 As Integer
    Dim vCreditPrincipal_1 As Double
    Dim vCreditOutstanding_1 As Double
    Dim vCreditPayment_1 As Double
    Dim vCreditRemarks_1 As String
    Dim vCreditName_2 As String
    Dim vCreditAddress_2 As String
    Dim vCreditTerm_2 As Integer
    Dim vCreditPrincipal_2 As Double
    Dim vCreditOutstanding_2 As Double
    Dim vCreditPayment_2 As Double
    Dim vCreditRemarks_2 As String

    Dim vBranch_1 As String
    Dim vcSA_1 As Boolean
    Dim vcCA_1 As Boolean
    ReadOnly vAccount_1 As String
    Dim vAccountNum_1 As String
    Dim vADB_1 As Double
    Dim vBank_2 As String
    Dim vBranch_2 As String
    Dim vcSA_2 As Boolean
    Dim vcCA_2 As Boolean
    ReadOnly vAccount_2 As String
    Dim vAccountNum_2 As String
    Dim vADB_2 As Double

    Dim vApprovedAmount As Double
    Dim vApprovedTerms As Integer
    Dim vApprovedRate As Integer
    Dim vPDC As Boolean
    Dim vNoPDC As Boolean

    Dim vCaseNum As String
    Dim vCourt As String
    Dim vCaseNature As String
    Dim vAmountInvolved As Double
    Dim vCaseStatus As String
    Dim vFindings As String
    Dim vPositive As Boolean
    Dim vNegative As Boolean
    Dim vUnestablished As Boolean
    Dim vCACPI As String

    'Property Checking
    Dim vTCT_1 As String
    Dim vArea_1 As Double
    Dim vRealEstateRemarks_1 As String
    Dim vLocation_2 As String
    Dim vTCT_2 As String
    Dim vArea_2 As Double
    Dim vRealEstateRemarks_2 As String

    Dim vAcquired_1 As String
    Dim vVehicleRemarks_1 As String
    Dim vVehicles_2 As String
    Dim vAcquired_2 As String
    Dim vVehicleRemarks_2 As String
    '*** D A T A   S T O R A G E ***'
    Dim FirstLoad As Boolean = True
    ReadOnly VehicleApp As Integer = 2
    ReadOnly RealEstateApp As Integer = 1
    Public vSave As Boolean
    Public vUpdate As Boolean
    Public vDelete As Boolean
    Public vPrint As Boolean
    Public vCheck As Boolean
    Public vApprove As Boolean
    Dim PreparedBy As String
    Dim CheckedBy As String
    Dim ApprovedBy As String
    Dim AssetNumber_1 As String
    Dim AssetNumber_2 As String
    Dim AssetNumber_3 As String
    Dim AssetNumber_4 As String
    Dim AssetNumber_5 As String

    Private Sub FrmCreditInvestigation_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        GetGridAppearance({GridView1, GridView2, GridView5})
        FixUI(AllowStandardUI)
        Icon = My.Resources.iLoanWorkX_ico
        FixPictureEdit(PictureEdit1, 263, 64, 9, 1, True)
        FixPictureEdit(pb_B, 255, 230, 892, 6, False)
        pbSketch.Size = New Point(436, 264)
        pbSketch.Location = New Point(695, 244)
        cbxNatureBusiness_B2.Size = New Point(281, 24)
        cbxNatureBusiness_B2.Location = New Point(148, 181)

        DefaultImage.Image = pb_B.Image.Clone
        DefaultMap.Image = pbSketch.Image.Clone
        FirstLoad = True
        btnBack.Enabled = False
        btnCheckBM.Enabled = False
        btnEmailCrecom.Enabled = False
        btnApproveCI.Enabled = False
        cbxDisplay.SelectedIndex = 0
        Borrower_Branch = Branch_Code
        SuperTabControl1.SelectedTabIndex = 4

        dtpDate.Value = Date.Now
        DtpBirth_B.Value = Date.Now
        dtpHired_B.Value = Date.Now
        dtpBusinessStarted.Value = Date.Now
        dtpCreditGranted_1.Value = Date.Now
        dtpCreditGranted_2.Value = Date.Now
        dtpDateFilled.Value = Date.Now
        dtpYear_1.Value = Date.Now
        dtpYear_2.Value = Date.Now

        dtpHired_B.CustomFormat = ""
        dtpBusinessStarted.CustomFormat = ""
        dtpCreditGranted_1.CustomFormat = ""
        dtpCreditGranted_2.CustomFormat = ""
        dtpDateFilled.CustomFormat = ""
        dtpYear_1.CustomFormat = ""
        dtpYear_2.CustomFormat = ""

        'Borrower
        With CbxPrefix_B
            .ValueMember = "ID"
            .DisplayMember = "Prefix"
            .DataSource = Prefix.Copy
            .SelectedIndex = -1
        End With

        With cbxSuffix_B
            .DisplayMember = "Suffix"
            .DataSource = Suffix.Copy
            .SelectedIndex = -1
        End With

        With cbxAddressC_B
            .ValueMember = "City ID"
            .DisplayMember = "City"
            .DataSource = City.Copy
            .SelectedIndex = -1
        End With

        'Dependents 
        With CbxPrefix_1
            .ValueMember = "ID"
            .DisplayMember = "Prefix"
            .DataSource = Prefix.Copy
            .SelectedIndex = -1
        End With

        With cbxSuffix_1
            .DisplayMember = "Suffix"
            .DataSource = Suffix.Copy
            .SelectedIndex = -1
        End With

        With CbxPrefix_2
            .ValueMember = "ID"
            .DisplayMember = "Prefix"
            .DataSource = Prefix.Copy
            .SelectedIndex = -1
        End With

        With cbxSuffix_2
            .DisplayMember = "Suffix"
            .DataSource = Suffix.Copy
            .SelectedIndex = -1
        End With

        With CbxPrefix_3
            .ValueMember = "ID"
            .DisplayMember = "Prefix"
            .DataSource = Prefix.Copy
            .SelectedIndex = -1
        End With

        With cbxSuffix_3
            .DisplayMember = "Suffix"
            .DataSource = Suffix.Copy
            .SelectedIndex = -1
        End With

        With CbxPrefix_4
            .ValueMember = "ID"
            .DisplayMember = "Prefix"
            .DataSource = Prefix.Copy
            .SelectedIndex = -1
        End With

        With cbxSuffix_4
            .DisplayMember = "Suffix"
            .DataSource = Suffix.Copy
            .SelectedIndex = -1
        End With

        With cbxPosition_B
            .DisplayMember = "Position"
            .DataSource = DT_Position.Copy
            .SelectedIndex = -1
        End With

        With cbxEmployer_B
            .DisplayMember = "Employer"
            .DataSource = DT_Employer.Copy
            .SelectedIndex = -1
        End With

        Dim DT_Status As DataTable = DataSource("SELECT 'Draft' AS 'Status' UNION SELECT 'For BM Approval' UNION SELECT 'For Crecomm Approval' UNION SELECT 'For Reapproval' UNION SELECT 'For Special Approval' UNION SELECT 'For Payment Request' UNION SELECT 'For Check Preparation' UNION SELECT 'CV For Checking' UNION SELECT 'CV For Approval' UNION SELECT 'For Journal Voucher' UNION SELECT 'Currently at JV' UNION SELECT 'For Releasing' UNION SELECT 'Booked' UNION SELECT 'Closed Account' UNION SELECT 'Cancelled'")
        With cbxStatus
            .Location = New Point(553, 6)
            .Size = New Point(183, 26)
            .Properties.LookAndFeel.SkinName = "Blue"
            .Properties.Items.Clear()
            For x As Integer = 0 To DT_Status.Rows.Count - 1
                .Properties.Items.Add(DT_Status(x)("Status"), DT_Status(x)("Status"), If(DT_Status(x)("Status") = "Cancelled", CheckState.Unchecked, CheckState.Checked), True)
            Next
            .Properties.SeparatorChar = ";"
        End With

        cbxNatureBusiness_B2.Properties.LookAndFeel.SkinName = "Blue"
        Industry_C1.Properties.LookAndFeel.SkinName = "Blue"
        Industry_C2.Properties.LookAndFeel.SkinName = "Blue"
        Industry_C3.Properties.LookAndFeel.SkinName = "Blue"
        Industry_C4.Properties.LookAndFeel.SkinName = "Blue"
        For x As Integer = 0 To DT_Industry.Rows.Count - 1
            cbxNatureBusiness_B2.Properties.Items.Add(DT_Industry(x)("ID"), DT_Industry(x)("Nature"), CheckState.Unchecked, True)
            Industry_C1.Properties.Items.Add(DT_Industry(x)("ID"), DT_Industry(x)("Nature"), CheckState.Unchecked, True)
            Industry_C2.Properties.Items.Add(DT_Industry(x)("ID"), DT_Industry(x)("Nature"), CheckState.Unchecked, True)
            Industry_C3.Properties.Items.Add(DT_Industry(x)("ID"), DT_Industry(x)("Nature"), CheckState.Unchecked, True)
            Industry_C4.Properties.Items.Add(DT_Industry(x)("ID"), DT_Industry(x)("Nature"), CheckState.Unchecked, True)
        Next
        cbxNatureBusiness_B2.Properties.SeparatorChar = ";"
        Industry_C1.Properties.SeparatorChar = ";"
        Industry_C2.Properties.SeparatorChar = ";"
        Industry_C3.Properties.SeparatorChar = ";"
        Industry_C4.Properties.SeparatorChar = ";"

        cbxApplication.ValueMember = "CreditNumber"
        cbxApplication.DisplayMember = "Name"
        LoadApplication()

        LoadData()
        FirstLoad = False
    End Sub

    Private Sub BtnLogs_Click(sender As Object, e As EventArgs) Handles btnLogs.Click
        LblTitle_Click(sender, e)
    End Sub

    Private Sub FixUI(ApplyUI As Boolean)
        Try
            If ApplyUI = False Then
                Exit Sub
            End If
            GetLabelHeaderFontSettings({lblTitle})

            GetLabelFontSettings({LabelX239})

            GetLabelFontSettings({LabelX155, LabelX43, LabelX21, LabelX77, LabelX3, LabelX29, LabelX24, LabelX42, LabelX2, LabelX4, LabelX10, LabelX142, LabelX5, LabelX12, LabelX6, LabelX1, LabelX26, LabelX11, LabelX8, LabelX47, LabelX9, LabelX25, LabelX28, LabelX30, LabelX31, LabelX32, LabelX33, LabelX34, LabelX35, LabelX36, LabelX37, LabelX38, LabelX39, LabelX46, LabelX48, LabelX49, LabelX51, LabelX52, LabelX53, LabelX153, LabelX242, LabelX13, LabelX134, LabelX41, LabelX243, LabelX14, LabelX135, LabelX133, LabelX71, LabelX72, LabelX74, LabelX78, LabelX80, LabelX84, LabelX87, LabelX81, LabelX85, LabelX82, LabelX79, LabelX83, LabelX137, LabelX138, LabelX146, LabelX139, LabelX140, LabelX145, LabelX141, LabelX143, LabelX144, LabelX97, LabelX122, LabelX100, LabelX102, LabelX104, LabelX106, LabelX109, LabelX112, LabelX115, LabelX117, LabelX119, LabelX121, LabelX161, LabelX98, LabelX99, LabelX101, LabelX103, LabelX105, LabelX108, LabelX111, LabelX114, LabelX116, LabelX118, LabelX120, LabelX128, LabelX129, LabelX130, LabelX16, LabelX23, LabelX20, LabelX15})

            GetLabelFontSettings({LabelX44, LabelX22, LabelX27, LabelX63, LabelX64, LabelX68, LabelX69, LabelX76, LabelX88, LabelX89, LabelX94, LabelX136, LabelX96, LabelX127})

            GetLabelFontSettingsRed({lblNote})

            GetLabelFontSettingsRedDefault({LabelX50, LabelX54, LabelX95, LabelX70})

            GetLabelFontSettings({LabelX40, LabelX149, LabelX151, LabelX148, LabelX150, LabelX152, LabelX160, LabelX154, LabelX156, LabelX157, LabelX158, LabelX159, LabelX147, LabelX75, LabelX73})

            GetLabelWithBackgroundFontSettings({LabelX19, LabelX18, LabelX7, LabelX45, LabelX55, LabelX56, LabelX57, LabelX58, LabelX59, LabelX60, LabelX61, LabelX62, LabelX17, LabelX65, LabelX66, LabelX67, LabelX113, LabelX86, LabelX110, LabelX107, LabelX93, LabelX90, LabelX92, LabelX91, LabelX131, LabelX132})

            GetTextBoxFontSettings({txtCINumber, TxtFirstN_B, TxtMiddleN_B, TxtLastN_B, TxtFirstN_S, TxtMiddleN_S, TxtLastN_S, TxtFirstN_C1, TxtMiddleN_C1, TxtLastN_C1, TxtFirstN_C2, TxtMiddleN_C2, TxtLastN_C2, TxtFirstN_C3, TxtMiddleN_C3, TxtLastN_C3, TxtFirstN_C4, TxtMiddleN_C4, TxtLastN_C4, txtNoC_B, txtStreetC_B, txtBarangayC_B, txtConfirmed, txtLengthStay, txtPath_B, TxtFirstN_1, TxtMiddleN_1, TxtLastN_1, txtGrade_1, txtSchool_1, txtSchoolAddress_1, TxtFirstN_2, TxtMiddleN_2, TxtLastN_2, txtGrade_2, txtSchool_2, txtSchoolAddress_2, TxtFirstN_3, TxtMiddleN_3, TxtLastN_3, txtGrade_3, txtSchool_3, txtSchoolAddress_3, TxtFirstN_4, TxtMiddleN_4, TxtLastN_4, txtGrade_4, txtSchool_4, txtSchoolAddress_4, txtPath_S, txtEmployerAddress_B, txtBusinessName_B, txtBusinessAddress_B, txtBusinessVehicle, txtBusinessPermit, txtOtherIncome_B, txtCreditor_1, txtCreditAddress_1, txtCreditRemarks_1, txtCreditor_2, txtCreditAddress_2, txtCreditRemarks_2, txtBank_1, txtBranch_1, txtSA_1, txtOpened_1, txtBank_2, txtBranch_2, txtSA_2, txtOpened_2, txtTitle, txtCaseNum, txtFindings, txtCACPI, txtLocation_1, txtTCT_1, txtPropertiesRemarks_1, txtLocation_2, txtTCT_2, txtPropertiesRemarks_2, txtVehicle_1, txtWhomAcquired_1, txtVehicleRemarks_1, txtVehicle_2, txtWhomAcquired_2, txtVehicleRemarks_2, txtOtherProperties, txtC1, txtC2, txtC3, txtC4, txtC5, txtC6, txtC7, txtC8, txtC9})

            GetCheckBoxFontSettings({cbxSpouse_B, cbxCoMaker1_B, cbxCoMaker2_B, cbxCoMaker3_B, cbxCoMaker4_B, cbxOwned_B, cbxFree_B, cbxRented_B, cbxSingle_B, cbxMarried_B, cbxSeparated_B, cbxWidowed_B, cbxCasual_B, cbxTemporary_B, cbxPermanent_B, cbxYearHired, cbxIncludeSpouseBusiness, cbxIncludeC1, cbxIncludeC2, cbxIncludeC3, cbxIncludeC4, cbxSA_1, cbxCA_1, cbxSA_2, cbxCA_2, cbxPDC, cbxNoPDC, cbxPositive, cbxNegative, cbxUnestablished, cbxAll, cbxIncludeMigrated})

            'GetCheckBoxFontSettingsDefaultColor({cbxDraft, cbxPending, cbxApproved, cbxDisapproved})

            GetCheckBoxFontSettingsDefault({cbxGood, cbxFair, cbxPoor})

            GetComboBoxFontSettings({cbxApplication, CbxPrefix_B, cbxSuffix_B, CbxPrefix_S, cbxSuffix_S, CbxPrefix_C1, cbxSuffix_C1, CbxPrefix_C2, cbxSuffix_C2, CbxPrefix_C3, cbxSuffix_C3, CbxPrefix_C4, cbxSuffix_C4, cbxAddressC_B, cbxResidence, cbxNeighborhood, CbxPrefix_1, cbxSuffix_1, CbxPrefix_2, cbxSuffix_2, CbxPrefix_3, cbxSuffix_3, CbxPrefix_4, cbxSuffix_4, cbxEmployer_B, cbxPosition_B, cbxBusinessNature, cbxCaseStatus, cbxCourt, cbxCaseNature, cbxDisplay})

            GetDateTimeInputFontSettings({DtpBirth_B, dtpHired_B, dtpBusinessStarted, dtpCreditGranted_1, dtpCreditGranted_2, dtpDateFilled, dtpYear_1, dtpYear_2, dtpFrom, dtpTo, dtpDate})

            GetButtonFontSettings({btnBrowse_B, btnCalculator, btnSave, btnSave_F, btnRefresh, btnCancel, btnModify, btnDelete, btnAttach, btnPrint, btnCheckBM, btnEmailCrecom, btnApproveCI, btnAttachSketch, btnVehicleAppraisal, btnModifyVehicle, btnPrintVehicle, btnVehicleReappraise, btnRealEstate, btnModifyRealEstate, btnPrintRealEstate, btnRealEstateReappraise, btnSearch})

            GetContextMenuBarFontSettings({ContextMenuBar3})

            GetDoubleInputFontSettings({dRent_B, dCapital_B, dBusinessStock, dOtherIncome_B, dBusinessIncome_B, dMonthly_B, dSalary_B, dSalary_S, dBusinessNet, dCapitalP, dFuelMaintenanceP, dUtilitiesP, dSalariesWagesP, dBMiscellaneousP, dBOthersP, dCapital, dFuelMaintenance, dUtilities, dSalariesWages, dBMiscellaneous, dBOthers, dTotalBExpense, dSalary_C1, dSalary_C2, dSalary_C3, dSalary_C4, dAmountGranted_1, dBalance_1, dCreditPayment_1, dAmountGranted_2, dBalance_2, dCreditPayment_2, dAverageBalance_1, dAverageBalance_2, dApprovedAmount, dApprovedRate, dAmountInvolved, dArea_1, dArea_2, dTotalDisposable, dLiving, dClothing, dEducation, dTransportation, dLighths, dInsurance, dAmortization, dMiscellaneous, dTotalExpenses, dNetDisposable})

            GetDoubleInputFontSettingsDefault({dTotalIncome})

            GetCheckComboBoxFontSettings({cbxNatureBusiness_B2})

            GetContextMenuBarFontSettings({ContextMenuBar3})

            GetIntegerInputFontSettings({iAge_D1, iAge_D2, iAge_D3, iAge_D4, iNoEmployees_B, iTerm_1, iTerm_2, iApprovedTerms})

            GetRickTextBoxFontSettings({rRecommendation, rNarrative, rPurposeLoan, rOthers, txtExpenseRemarks})

            GetTabControlFontSettings({SuperTabControl1, SuperTabControl2})

            GetCheckComboBoxFontSettings({cbxStatus})
        Catch ex As Exception
            TriggerBugReport("Credit Investigation - FixUI", ex.Message.ToString)
        End Try
    End Sub

    Private Sub LblTitle_MouseEnter(sender As Object, e As EventArgs) Handles lblTitle.MouseEnter
        lblTitle.ForeColor = OfficialColor1
    End Sub

    Private Sub LblTitle_MouseLeave(sender As Object, e As EventArgs) Handles lblTitle.MouseLeave
        lblTitle.ForeColor = Color.Black
    End Sub

    Private Sub LblTitle_Click(sender As Object, e As EventArgs) Handles lblTitle.Click
        OpenFormHistory("Credit Investigation", lblTitle.Text, "CI Approve")
    End Sub

    Private Sub LoadApplication()
        Dim SQL As String = "SELECT"
        SQL &= String.Format("   CONCAT('[ ', C.CreditNumber, ' ] - ', IF(AssumptionCredit = '',CONCAT(IF(FirstN_B = '','',CONCAT(FirstN_B, ' ')), IF(MiddleN_B = '','',CONCAT(MiddleN_B, ' ')), IF(LastN_B = '','',CONCAT(LastN_B, ' ')), Suffix_B, IF(OutsourceCI != '' AND C.Branch_ID != '{0}',CONCAT(' [',(SELECT branch_code FROM branch WHERE ID = C.Branch_ID),']'),'')), CONCAT(IF(FirstN_A = '','',CONCAT(FirstN_A, ' ')), IF(MiddleN_A = '','',CONCAT(MiddleN_A, ' ')), IF(LastN_A = '','',CONCAT(LastN_A, ' ')), Suffix_A))) AS 'Name',", Branch_ID)
        SQL &= "   C.*,"
        SQL &= "   S.*,"
        SQL &= "   IFNULL(D1.Prefix_D,'') AS 'Prefix_D1',   "
        SQL &= "   IFNULL(D1.FirstN_D,'') AS 'FirstN_D1',   "
        SQL &= "   IFNULL(D1.MiddleN_D,'') AS 'MiddleN_D1',   "
        SQL &= "   IFNULL(D1.LastN_D,'') AS 'LastN_D1',   "
        SQL &= "   IFNULL(D1.Suffix_D,'') AS 'Suffix_D1',   "
        SQL &= "   IFNULL(D1.Age_D,0) AS 'Age_D1',   "
        SQL &= "   IFNULL(D1.Grade_D,'') AS 'Grade_D1',   "
        SQL &= "   IFNULL(D1.School_D,'') AS 'School_D1',   "
        SQL &= "   IFNULL(D1.SchoolAddress_D,'') AS 'SchoolAddress_D1',   "
        SQL &= "   IFNULL(D2.Prefix_D,'') AS 'Prefix_D2',   "
        SQL &= "   IFNULL(D2.FirstN_D,'') AS 'FirstN_D2',   "
        SQL &= "   IFNULL(D2.MiddleN_D,'') AS 'MiddleN_D2',   "
        SQL &= "   IFNULL(D2.LastN_D,'') AS 'LastN_D2',   "
        SQL &= "   IFNULL(D2.Suffix_D,'') AS 'Suffix_D2',   "
        SQL &= "   IFNULL(D2.Age_D,0) AS 'Age_D2',   "
        SQL &= "   IFNULL(D2.Grade_D,'') AS 'Grade_D2',   "
        SQL &= "   IFNULL(D2.School_D,'') AS 'School_D2',   "
        SQL &= "   IFNULL(D2.SchoolAddress_D,'') AS 'SchoolAddress_D2',   "
        SQL &= "   IFNULL(D3.Prefix_D,'') AS 'Prefix_D3',   "
        SQL &= "   IFNULL(D3.FirstN_D,'') AS 'FirstN_D3',   "
        SQL &= "   IFNULL(D3.MiddleN_D,'') AS 'MiddleN_D3',   "
        SQL &= "   IFNULL(D3.LastN_D,'') AS 'LastN_D3',   "
        SQL &= "   IFNULL(D3.Suffix_D,'') AS 'Suffix_D3',   "
        SQL &= "   IFNULL(D3.Age_D,0) AS 'Age_D3',   "
        SQL &= "   IFNULL(D3.Grade_D,'') AS 'Grade_D3',   "
        SQL &= "   IFNULL(D3.School_D,'') AS 'School_D3',   "
        SQL &= "   IFNULL(D3.SchoolAddress_D,'') AS 'SchoolAddress_D3',   "
        SQL &= "   IFNULL(D4.Prefix_D,'') AS 'Prefix_D4',   "
        SQL &= "   IFNULL(D4.FirstN_D,'') AS 'FirstN_D4',   "
        SQL &= "   IFNULL(D4.MiddleN_D,'') AS 'MiddleN_D4',   "
        SQL &= "   IFNULL(D4.LastN_D,'') AS 'LastN_D4',   "
        SQL &= "   IFNULL(D4.Suffix_D,'') AS 'Suffix_D4',   "
        SQL &= "   IFNULL(D4.Age_D,0) AS 'Age_D4',   "
        SQL &= "   IFNULL(D4.Grade_D,'') AS 'Grade_D4',   "
        SQL &= "   IFNULL(D4.School_D,'') AS 'School_D4',   "
        SQL &= "   IFNULL(D4.SchoolAddress_D,'') AS 'SchoolAddress_D4' "
        SQL &= " FROM credit_application C"
        SQL &= " LEFT JOIN profile_spouse S ON S.BorrowerID = C.BorrowerID AND S.`status` = 'ACTIVE'"
        SQL &= " LEFT JOIN (SELECT ID, DependentID, BorrowerID, Prefix_D, FirstN_D, MiddleN_D, LastN_D, Suffix_D, Age_D, Grade_D, School_D, SchoolAddress_D FROM profile_dependent WHERE `status` = 'ACTIVE' AND `Rank` = 1) D1    "
        SQL &= "    ON C.BorrowerID = D1.BorrowerID "
        SQL &= " LEFT JOIN (SELECT ID, DependentID, BorrowerID, Prefix_D, FirstN_D, MiddleN_D, LastN_D, Suffix_D, Age_D, Grade_D, School_D, SchoolAddress_D FROM profile_dependent WHERE `status` = 'ACTIVE' AND `Rank` = 2) D2    "
        SQL &= "    ON C.BorrowerID = D2.BorrowerID "
        SQL &= " LEFT JOIN (SELECT ID, DependentID, BorrowerID, Prefix_D, FirstN_D, MiddleN_D, LastN_D, Suffix_D, Age_D, Grade_D, School_D, SchoolAddress_D FROM profile_dependent WHERE `status` = 'ACTIVE' AND `Rank` = 3) D3    "
        SQL &= "    ON C.BorrowerID = D3.BorrowerID "
        SQL &= " LEFT JOIN (SELECT ID, DependentID, BorrowerID, Prefix_D, FirstN_D, MiddleN_D, LastN_D, Suffix_D, Age_D, Grade_D, School_D, SchoolAddress_D FROM profile_dependent WHERE `status` = 'ACTIVE' AND `Rank` = 4) D4    "
        SQL &= "    ON C.BorrowerID = D4.BorrowerID "
        SQL &= String.Format(" WHERE IF(C.OutsourceCI = '',FIND_IN_SET(C.Branch_ID,'{0}'),FIND_IN_SET(C.OutsourceCI,'{0}')) AND C.`status` = 'ACTIVE' AND C.application_status = 'APPROVED' AND C.CI_Status = 'PENDING' AND ForCI_Product(Product_ID) = 'Yes' AND IF('{1}' = 'ADMIN' OR Assigned_CI = 0,TRUE,Assigned_CI = '{2}') GROUP BY C.CreditNumber ORDER BY C.CreditNumber;", If(Multiple_ID = "", Branch_ID, Multiple_ID), User_Type, Empl_ID)
        FirstLoad = True
        cbxApplication.DataSource = DataSource(SQL)
        cbxApplication.SelectedIndex = -1
        FirstLoad = False
    End Sub

    Private Sub BtnVehicleAppraisal_Click(sender As Object, e As EventArgs) Handles btnVehicleAppraisal.Click
        Dim Vehicle As New FrmVehicleAppraisal
        With Vehicle
            .Tag = 54
            FormRestriction(.Tag)
            If allow_Access Then
                .vSave = allow_Save
                .vUpdate = allow_Update
                .vDelete = allow_Delete
                .vPrint = allow_Print
            Else
                MsgBox(mBox_Access, MsgBoxStyle.Information, "Info")
                Exit Sub
            End If

            Dim DT_Appraisal As New DataTable
            .CreditNumber = CreditNumber
            If cbxApplication.Enabled = False Then
                .CINumber = txtCINumber.Text
            End If
            If CollateralFromROPOA Then
                .btnROPA.Visible = True
                .PanelEx1.Enabled = False
            End If
            .cbxAppraiseFor.Text = "Credit Investigation"
            .AssetNumber_1 = AssetNumber_1
            .AssetNumber_2 = AssetNumber_2
            .AssetNumber_3 = AssetNumber_3
            .AssetNumber_4 = AssetNumber_4
            .AssetNumber_5 = AssetNumber_5
            .btnDelete.Enabled = False
            .btnModify.Enabled = False
            .ChangeCollateral = ChangeCollateral

            If GridView1.RowCount > 0 Then
                DT_Appraisal = GridControl1.DataSource
            Else
                With DT_Appraisal
                    .Columns.Add("ID")
                    .Columns.Add("Col_ID")
                    .Columns.Add("No")
                    .Columns.Add("Collateral")
                    .Columns.Add("Market Value")
                    .Columns.Add("AppraisedValue")
                    .Columns.Add("LoanableValue")
                    .Columns.Add("LoanPercent")
                    .Columns.Add("AssetNumber")
                    .Columns.Add("SellingPrice")
                End With
            End If

            If .ShowDialog = DialogResult.OK Then
                DT_Appraisal.Rows.Add(.txtAppraiseNumber.Text, .CollateralNumber, GridView1.RowCount + 1, .cbxMake.Text & " " & .cbxType.Text & " Plate Number " & .txtPlateNum.Text, .dFairMarketValue.Text, .dAppraisedValue.Text, .dLoanableValue.Text, .dLoanablePercent.Text, .AssetNumber, .SellingPrice)
                GridControl1.DataSource = DT_Appraisal
            End If

            If GridView1.RowCount = 0 Then
                btnModifyVehicle.Enabled = False
                btnPrintVehicle.Enabled = False
            Else
                btnModifyVehicle.Enabled = True
                btnPrintVehicle.Enabled = True
            End If
            Collateral = If(Collateral = "", "", Collateral & ", ") & .cbxMake.Text & " " & .cbxType.Text & " Plate Number " & .txtPlateNum.Text
            TotalAppraised += .dFairMarketValue.Value
            .Dispose()
        End With
    End Sub

    Private Sub BtnModifyVehicle_Click(sender As Object, e As EventArgs) Handles btnModifyVehicle.Click, GridView1.DoubleClick
        Try
            If GridView1.GetFocusedRowCellValue("Collateral") = "" Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim Vehicle As New FrmVehicleAppraisal
        With Vehicle
            .Tag = 54
            FormRestriction(.Tag)
            If allow_Access Then
                .vSave = allow_Save
                .vUpdate = allow_Update
                .vDelete = allow_Delete
                .vPrint = allow_Print
            Else
                MsgBox(mBox_Access, MsgBoxStyle.Information, "Info")
                Exit Sub
            End If

            .CreditNumber = CreditNumber
            .AssetNumber = GridView1.GetFocusedRowCellValue("AssetNumber").ToString
            .SellingPrice = If(GridView1.GetFocusedRowCellValue("SellingPrice").ToString = "", 0, GridView1.GetFocusedRowCellValue("SellingPrice"))
            .AssetNumber_1 = AssetNumber_1
            .AssetNumber_2 = AssetNumber_2
            .AssetNumber_3 = AssetNumber_3
            .AssetNumber_4 = AssetNumber_4
            .AssetNumber_5 = AssetNumber_5
            .ChangeCollateral = ChangeCollateral
            .txtAppraiseNumber.Text = GridView1.GetFocusedRowCellValue("ID")
            .CollateralNumber = GridView1.GetFocusedRowCellValue("Col_ID")
            .cbxAppraiseFor.Text = "Credit Investigation"

            Dim DT As DataTable = DataSource(String.Format("SELECT A.appraise_by, (SELECT CONCAT(IF(First_Name = '','',CONCAT(First_Name, ' ')), IF(Middle_Name = '','',CONCAT(Middle_Name, ' ')), Last_Name) FROM employee_setup WHERE ID = A.appraise_by) AS 'Appraised By', C.Make, C.`Type`, C.Used, C.Model, C.Series, C.PlateNum, C.Transmission, C.Fuel, C.BodyColor, C.`Year`, C.EngineNum, C.ChassisNum, C.RegistryCert, C.ORNum, C.GrossWeight, C.RimHoles, C.MileAge, C.MileAgeType, C.DateRegistered, C.LTO, A.appraise_num AS 'Appraise Number', DATE_FORMAT(A.appraise_date,'%b %d, %Y') AS 'Date', A.`Engine`, A.Engine_R AS 'Engine Remarks', A.Steering, A.Steering_R AS 'Steering Remarks', A.Clutch, A.Clutch_R AS 'Clutch Remarks', A.HeadLight AS 'Head Light', A.HeadLight_R AS 'Head Light Remarks', A.SignalLight AS 'Signal Light', A.SignalLight_R AS 'Signal Light Remarks', A.Shock, A.Shock_R AS 'Shock Remarks', A.Underchassis, A.Underchassis_R AS 'Underchassis Remarks', A.Upholstery, A.Upholstery_R AS 'Upholstery Remarks', A.TempGauge AS 'Temp Gauge', A.TempGauge_R AS 'Temp Gauge Remarks', A.Odometer AS 'Odometer', A.Odometer_R AS 'Odometer Remarks', A.Transmission AS 'Transmission', A.Transmission_R AS 'Transmission Remarks', A.Tires, A.Tires_R AS 'Tires Remarks', A.Acceleration, A.Acceleration_R AS 'Acceleration Remarks', A.ParkLight AS 'Park Light', A.ParkLight_R AS 'Park Light Remarks', A.Horn, A.Horn_R AS 'Horn Remarks', A.Chassis,A.Chassis_R AS 'Chassis Remarks', A.FrontBumper AS 'Front Bumper', A.FrontBumper_R AS 'Front Bumper Remarks', A.Ampheres, A.Ampheres_R AS 'Ampheres Remarks', A.Fuel, A.Fuel_R AS 'Fuel Remarks', A.Starter, A.Starter_R AS 'Starter Remarks', A.Differential, A.Differential_R AS 'Differential Remarks', A.Brakes, A.Brakes_R AS 'Brakes Remarks', A.Wiper, A.Wiper_R AS 'Wiper Remarks', A.`BackUp` AS 'Back Up', A.BackUp_R AS 'Back Up Remarks', A.SideMirror AS 'Side Mirror', A.SideMirror_R AS 'Side Mirror Remarks', A.BodyFlooring AS 'Body Flooring', A.BodyFlooring_R AS 'Body Flooring Remarks', A.RearBumper AS 'Rear Bumper', A.RearBumper_R AS 'Rear Bumper Remarks', A.OilPressure AS 'Oil Pressure', A.OilPressure_R AS 'Oil Pressure Remarks', A.Speedometer, A.Speedometer_R AS 'Speedometer Remarks', A.BodyPaint AS 'Body Paint', A.BodyPaint_R AS 'Body Paint Remarks', A.Remarks AS 'Appraiser Remarks', A.Source, A.telephone_num AS 'Telephone Num', FORMAT(A.selling_price,2) AS 'Selling Price', FORMAT(A.market_value,2) AS 'Market Value', FORMAT(A.appraised_value,2) AS 'Appraised Value', FORMAT(A.loanable_value,2) AS 'Loanable Value', FORMAT(A.loanable_percent,2) AS 'Loanable Percent', A.Attach, Attach_2, A.BaseMarket FROM collateral_ve C LEFT JOIN appraise_ve A ON C.CollateralNumber = A.CollateralNumber WHERE C.CollateralNumber = '{0}' AND A.appraise = 'Credit Investigation' AND A.appraise_num = '{1}';", GridView1.GetFocusedRowCellValue("Col_ID"), GridView1.GetFocusedRowCellValue("ID")))
            If DT.Rows.Count > 0 Then
                .TotalImage = DT(0)("Attach")
                .TotalImage_II = DT(0)("Attach_2")
                .btnSave.Text = "Update"
                .dtpDate.Value = DT(0)("Date")
                .txtAppraiseNumber.Text = DT(0)("Appraise Number")
                .vAppraised = DT(0)("Appraised By")
                .vMake = DT(0)("Make")
                .vType = DT(0)("Type")
                .cbxUsed.Text = DT(0)("Used")
                .vModel = DT(0)("Model")
                .txtSeries.Text = DT(0)("Series")
                .txtPlateNum.Text = DT(0)("PlateNum")
                .cbxTransmission.Text = DT(0)("Transmission")
                .vFuel = DT(0)("Fuel")
                .cbxBodyColor.Text = DT(0)("BodyColor")
                If DT(0)("Year") = "" Then
                    .dtpYear.CustomFormat = ""
                Else
                    .dtpYear.CustomFormat = "     yyyy"
                    .dtpYear.Value = CDate(DT(0)("Year") & "-01-01")
                End If
                .cbxEngineNumber.Text = DT(0)("EngineNum")
                .txtChassisNum.Text = DT(0)("ChassisNum")
                .txtRegistryCert.Text = DT(0)("RegistryCert")
                .txtORNum.Text = DT(0)("ORNum")
                .dGrossWeight.Value = DT(0)("GrossWeight")
                .iRim.Value = CInt(DT(0)("RimHoles"))
                .dMileAge.Value = CDbl(DT(0)("MileAge"))
                .vMileAge = DT(0)("MileAgeType")
                If DT(0)("DateRegistered") = "" Then
                    .cbxNA.Checked = True
                    .dtpRegistered.CustomFormat = ""
                Else
                    .cbxNA.Checked = False
                    .dtpRegistered.CustomFormat = "MMMM dd, yyyy"
                    .dtpRegistered.Value = DT(0)("DateRegistered")
                End If
                .txtLTO.Text = DT(0)("LTO")

                'Enabled False
                .PanelEx4.Enabled = False
                .PanelEx1.Enabled = False
                'Engine
                If DT(0)("Engine") = "G" Then
                    .cbxEngine_G.Checked = True
                ElseIf DT(0)("Engine") = "F" Then
                    .cbxEngine_F.Checked = True
                ElseIf DT(0)("Engine") = "P" Then
                    .cbxEngine_P.Checked = True
                End If
                .txtEngine.Text = DT(0)("Engine Remarks")
                .txtEngine.Tag = DT(0)("Engine Remarks")
                .cbxEngine_G.Tag = DT(0)("Engine")
                .cbxEngine_F.Tag = DT(0)("Engine")
                .cbxEngine_P.Tag = DT(0)("Engine")
                'Steering
                If DT(0)("Steering") = "G" Then
                    .cbxSteering_G.Checked = True
                ElseIf DT(0)("Steering") = "F" Then
                    .cbxSteering_F.Checked = True
                ElseIf DT(0)("Steering") = "P" Then
                    .cbxSteering_P.Checked = True
                End If
                .txtSteering.Text = DT(0)("Steering Remarks")
                .txtSteering.Tag = DT(0)("Steering Remarks")
                .cbxSteering_G.Tag = DT(0)("Steering")
                .cbxSteering_F.Tag = DT(0)("Steering")
                .cbxSteering_P.Tag = DT(0)("Steering")
                'Clutch
                If DT(0)("Clutch") = "G" Then
                    .cbxClutch_G.Checked = True
                ElseIf DT(0)("Clutch") = "F" Then
                    .cbxClutch_F.Checked = True
                ElseIf DT(0)("Clutch") = "P" Then
                    .cbxClutch_P.Checked = True
                End If
                .txtClutch.Text = DT(0)("Clutch Remarks")
                .txtClutch.Tag = DT(0)("Clutch Remarks")
                .cbxClutch_G.Tag = DT(0)("Clutch")
                .cbxClutch_F.Tag = DT(0)("Clutch")
                .cbxClutch_P.Tag = DT(0)("Clutch")
                'Head Light
                If DT(0)("Head Light") = "G" Then
                    .cbxHeadLight_G.Checked = True
                ElseIf DT(0)("Head Light") = "F" Then
                    .cbxHeadLight_F.Checked = True
                ElseIf DT(0)("Head Light") = "P" Then
                    .cbxHeadLight_P.Checked = True
                End If
                .txtHeadLight.Text = DT(0)("Head Light Remarks")
                .txtHeadLight.Tag = DT(0)("Head Light Remarks")
                .cbxHeadLight_G.Tag = DT(0)("Head Light")
                .cbxHeadLight_F.Tag = DT(0)("Head Light")
                .cbxHeadLight_P.Tag = DT(0)("Head Light")
                'Signal Light
                If DT(0)("Signal Light") = "G" Then
                    .cbxSignalLight_G.Checked = True
                ElseIf DT(0)("Signal Light") = "F" Then
                    .cbxSignalLight_F.Checked = True
                ElseIf DT(0)("Signal Light") = "P" Then
                    .cbxSignalLight_P.Checked = True
                End If
                .txtSignalLight.Text = DT(0)("Signal Light Remarks")
                .txtSignalLight.Tag = DT(0)("Signal Light Remarks")
                .cbxSignalLight_G.Tag = DT(0)("Signal Light")
                .cbxSignalLight_F.Tag = DT(0)("Signal Light")
                .cbxSignalLight_P.Tag = DT(0)("Signal Light")
                'Shock
                If DT(0)("Shock") = "G" Then
                    .cbxShock_G.Checked = True
                ElseIf DT(0)("Shock") = "F" Then
                    .cbxShock_F.Checked = True
                ElseIf DT(0)("Shock") = "P" Then
                    .cbxShock_P.Checked = True
                End If
                .txtShock.Text = DT(0)("Shock Remarks")
                .txtShock.Tag = DT(0)("Shock Remarks")
                .cbxShock_G.Tag = DT(0)("Shock")
                .cbxShock_F.Tag = DT(0)("Shock")
                .cbxShock_P.Tag = DT(0)("Shock")
                'Underchassis
                If DT(0)("Underchassis") = "G" Then
                    .cbxUnderchassis_G.Checked = True
                ElseIf DT(0)("Underchassis") = "F" Then
                    .cbxUnderchassis_F.Checked = True
                ElseIf DT(0)("Underchassis") = "P" Then
                    .cbxUnderchassis_P.Checked = True
                End If
                .txtUnderchassis.Text = DT(0)("Underchassis Remarks")
                .txtUnderchassis.Tag = DT(0)("Underchassis Remarks")
                .cbxUnderchassis_G.Tag = DT(0)("Underchassis")
                .cbxUnderchassis_F.Tag = DT(0)("Underchassis")
                .cbxUnderchassis_P.Tag = DT(0)("Underchassis")
                'Upholstery
                If DT(0)("Upholstery") = "G" Then
                    .cbxUpholstery_G.Checked = True
                ElseIf DT(0)("Upholstery") = "F" Then
                    .cbxUpholstery_F.Checked = True
                ElseIf DT(0)("Upholstery") = "P" Then
                    .cbxUpholstery_P.Checked = True
                End If
                .txtUpholstery.Text = DT(0)("Upholstery Remarks")
                .txtUpholstery.Tag = DT(0)("Upholstery Remarks")
                .cbxUpholstery_G.Tag = DT(0)("Upholstery")
                .cbxUpholstery_F.Tag = DT(0)("Upholstery")
                .cbxUpholstery_P.Tag = DT(0)("Upholstery")
                'Temp Gauge
                If DT(0)("Temp Gauge") = "G" Then
                    .cbxTempGauge_G.Checked = True
                ElseIf DT(0)("Temp Gauge") = "F" Then
                    .cbxTempGauge_F.Checked = True
                ElseIf DT(0)("Temp Gauge") = "P" Then
                    .cbxTempGauge_P.Checked = True
                End If
                .txtTempGauge.Text = DT(0)("Temp Gauge Remarks")
                .txtTempGauge.Tag = DT(0)("Temp Gauge Remarks")
                .cbxTempGauge_G.Tag = DT(0)("Temp Gauge")
                .cbxTempGauge_F.Tag = DT(0)("Temp Gauge")
                .cbxTempGauge_P.Tag = DT(0)("Temp Gauge")
                'Odometer
                If DT(0)("Odometer") = "G" Then
                    .cbxOdometer_G.Checked = True
                ElseIf DT(0)("Odometer") = "F" Then
                    .cbxOdometer_F.Checked = True
                ElseIf DT(0)("Odometer") = "P" Then
                    .cbxOdometer_P.Checked = True
                End If
                .txtOdometer.Text = DT(0)("Odometer Remarks")
                .txtOdometer.Tag = DT(0)("Odometer Remarks")
                .cbxOdometer_G.Tag = DT(0)("Odometer")
                .cbxOdometer_F.Tag = DT(0)("Odometer")
                .cbxOdometer_P.Tag = DT(0)("Odometer")
                'Transmission
                If DT(0)("Transmission1") = "G" Then
                    .cbxTransmission_G.Checked = True
                ElseIf DT(0)("Transmission1") = "F" Then
                    .cbxTransmission_F.Checked = True
                ElseIf DT(0)("Transmission1") = "P" Then
                    .cbxTransmission_P.Checked = True
                End If
                .txtTransmission.Text = DT(0)("Transmission Remarks")
                .txtTransmission.Tag = DT(0)("Transmission Remarks")
                .cbxTransmission_G.Tag = DT(0)("Transmission1")
                .cbxTransmission_F.Tag = DT(0)("Transmission1")
                .cbxTransmission_P.Tag = DT(0)("Transmission1")
                'Tires
                .dTires.Value = CDbl(DT(0)("Tires"))
                .dTires.Tag = CDbl(DT(0)("Tires"))
                .txtTires.Text = DT(0)("Tires Remarks")
                .txtTires.Tag = DT(0)("Tires Remarks")
                'Acceleration
                If DT(0)("Acceleration") = "G" Then
                    .cbxAcceleration_G.Checked = True
                ElseIf DT(0)("Acceleration") = "F" Then
                    .cbxAcceleration_F.Checked = True
                ElseIf DT(0)("Acceleration") = "P" Then
                    .cbxAcceleration_P.Checked = True
                End If
                .txtAcceleration.Text = DT(0)("Acceleration Remarks")
                .txtAcceleration.Tag = DT(0)("Acceleration Remarks")
                .cbxAcceleration_G.Tag = DT(0)("Acceleration")
                .cbxAcceleration_F.Tag = DT(0)("Acceleration")
                .cbxAcceleration_P.Tag = DT(0)("Acceleration")
                'Parklight
                If DT(0)("Park Light") = "G" Then
                    .cbxParkLight_G.Checked = True
                ElseIf DT(0)("Park Light") = "F" Then
                    .cbxParkLight_F.Checked = True
                ElseIf DT(0)("Park Light") = "P" Then
                    .cbxParkLight_P.Checked = True
                End If
                .txtParkLight.Text = DT(0)("Park Light Remarks")
                .txtParkLight.Tag = DT(0)("Park Light Remarks")
                .cbxParkLight_G.Tag = DT(0)("Park Light")
                .cbxParkLight_F.Tag = DT(0)("Park Light")
                .cbxParkLight_P.Tag = DT(0)("Park Light")
                'Horn
                If DT(0)("Horn") = "G" Then
                    .cbxHorn_G.Checked = True
                ElseIf DT(0)("Horn") = "F" Then
                    .cbxHorn_F.Checked = True
                ElseIf DT(0)("Horn") = "P" Then
                    .cbxHorn_P.Checked = True
                End If
                .txtHorn.Text = DT(0)("Horn Remarks")
                .txtHorn.Tag = DT(0)("Horn Remarks")
                .cbxHorn_G.Tag = DT(0)("Horn")
                .cbxHorn_F.Tag = DT(0)("Horn")
                .cbxHorn_P.Tag = DT(0)("Horn")
                'Chassis
                If DT(0)("Chassis") = "G" Then
                    .cbxChassis_G.Checked = True
                ElseIf DT(0)("Chassis") = "F" Then
                    .cbxChassis_F.Checked = True
                ElseIf DT(0)("Chassis") = "P" Then
                    .cbxChassis_P.Checked = True
                End If
                .txtChassis.Text = DT(0)("Chassis Remarks")
                .txtChassis.Tag = DT(0)("Chassis Remarks")
                .cbxChassis_G.Tag = DT(0)("Chassis")
                .cbxChassis_F.Tag = DT(0)("Chassis")
                .cbxChassis_P.Tag = DT(0)("Chassis")
                'Front Bumper
                If DT(0)("Front Bumper") = "G" Then
                    .cbxFrontBumper_G.Checked = True
                ElseIf DT(0)("Front Bumper") = "F" Then
                    .cbxFrontBumper_F.Checked = True
                ElseIf DT(0)("Front Bumper") = "P" Then
                    .cbxFrontBumper_P.Checked = True
                End If
                .txtFrontBumper.Text = DT(0)("Front Bumper Remarks")
                .txtFrontBumper.Tag = DT(0)("Front Bumper Remarks")
                .cbxFrontBumper_G.Tag = DT(0)("Front Bumper")
                .cbxFrontBumper_F.Tag = DT(0)("Front Bumper")
                .cbxFrontBumper_P.Tag = DT(0)("Front Bumper")
                'Ampheres
                If DT(0)("Ampheres") = "G" Then
                    .cbxAmpheres_G.Checked = True
                ElseIf DT(0)("Ampheres") = "F" Then
                    .cbxAmpheres_F.Checked = True
                ElseIf DT(0)("Ampheres") = "P" Then
                    .cbxAmpheres_P.Checked = True
                End If
                .txtAmpheres.Text = DT(0)("Ampheres Remarks")
                .txtAmpheres.Tag = DT(0)("Ampheres Remarks")
                .cbxAmpheres_G.Tag = DT(0)("Ampheres")
                .cbxAmpheres_F.Tag = DT(0)("Ampheres")
                .cbxAmpheres_P.Tag = DT(0)("Ampheres")
                'Fuel
                If DT(0)("Fuel1") = "G" Then
                    .cbxFuel_G.Checked = True
                ElseIf DT(0)("Fuel1") = "F" Then
                    .cbxFuel_F.Checked = True
                ElseIf DT(0)("Fuel1") = "P" Then
                    .cbxFuel_P.Checked = True
                End If
                .txtFuel.Text = DT(0)("Fuel Remarks")
                .txtFuel.Tag = DT(0)("Fuel Remarks")
                .cbxFuel_G.Tag = DT(0)("Fuel1")
                .cbxFuel_F.Tag = DT(0)("Fuel1")
                .cbxFuel_P.Tag = DT(0)("Fuel1")
                'Starter
                If DT(0)("Starter") = "G" Then
                    .cbxStarter_G.Checked = True
                ElseIf DT(0)("Starter") = "F" Then
                    .cbxStarter_F.Checked = True
                ElseIf DT(0)("Starter") = "P" Then
                    .cbxStarter_P.Checked = True
                End If
                .txtStarter.Text = DT(0)("Starter Remarks")
                .txtStarter.Tag = DT(0)("Starter Remarks")
                .cbxStarter_G.Tag = DT(0)("Starter")
                .cbxStarter_F.Tag = DT(0)("Starter")
                .cbxStarter_P.Tag = DT(0)("Starter")
                'Differential
                If DT(0)("Differential") = "G" Then
                    .cbxDifferential_G.Checked = True
                ElseIf DT(0)("Differential") = "F" Then
                    .cbxDifferential_F.Checked = True
                ElseIf DT(0)("Differential") = "P" Then
                    .cbxDifferential_P.Checked = True
                End If
                .txtDifferential.Text = DT(0)("Differential Remarks")
                .txtDifferential.Tag = DT(0)("Differential Remarks")
                .cbxDifferential_G.Tag = DT(0)("Differential")
                .cbxDifferential_F.Tag = DT(0)("Differential")
                .cbxDifferential_P.Tag = DT(0)("Differential")
                'Brakes
                If DT(0)("Brakes") = "G" Then
                    .cbxBrakes_G.Checked = True
                ElseIf DT(0)("Brakes") = "F" Then
                    .cbxBrakes_F.Checked = True
                ElseIf DT(0)("Brakes") = "P" Then
                    .cbxBrakes_P.Checked = True
                End If
                .txtBrakes.Text = DT(0)("Brakes Remarks")
                .txtBrakes.Tag = DT(0)("Brakes Remarks")
                .cbxBrakes_G.Tag = DT(0)("Brakes")
                .cbxBrakes_F.Tag = DT(0)("Brakes")
                .cbxBrakes_P.Tag = DT(0)("Brakes")
                'Wiper
                If DT(0)("Wiper") = "G" Then
                    .cbxWiper_G.Checked = True
                ElseIf DT(0)("Wiper") = "F" Then
                    .cbxWiper_F.Checked = True
                ElseIf DT(0)("Wiper") = "P" Then
                    .cbxWiper_P.Checked = True
                End If
                .txtWiper.Text = DT(0)("Wiper Remarks")
                .txtWiper.Tag = DT(0)("Wiper Remarks")
                .cbxWiper_G.Tag = DT(0)("Wiper")
                .cbxWiper_F.Tag = DT(0)("Wiper")
                .cbxWiper_P.Tag = DT(0)("Wiper")
                'Backup
                If DT(0)("Back Up") = "G" Then
                    .cbxBackUp_G.Checked = True
                ElseIf DT(0)("Back Up") = "F" Then
                    .cbxBackUp_F.Checked = True
                ElseIf DT(0)("Back Up") = "P" Then
                    .cbxBackUp_P.Checked = True
                End If
                .txtBackUp.Text = DT(0)("Back Up Remarks")
                .txtBackUp.Tag = DT(0)("Back Up Remarks")
                .cbxBackUp_G.Tag = DT(0)("Back Up")
                .cbxBackUp_F.Tag = DT(0)("Back Up")
                .cbxBackUp_P.Tag = DT(0)("Back Up")
                'SideMirror
                If DT(0)("Side Mirror") = "G" Then
                    .cbxSideMirror_G.Checked = True
                ElseIf DT(0)("Side Mirror") = "F" Then
                    .cbxSideMirror_F.Checked = True
                ElseIf DT(0)("Side Mirror") = "P" Then
                    .cbxSideMirror_P.Checked = True
                End If
                .txtSideMirror.Text = DT(0)("Side Mirror Remarks")
                .txtSideMirror.Tag = DT(0)("Side Mirror Remarks")
                .cbxSideMirror_G.Tag = DT(0)("Side Mirror")
                .cbxSideMirror_F.Tag = DT(0)("Side Mirror")
                .cbxSideMirror_P.Tag = DT(0)("Side Mirror")
                'Body Flooring
                If DT(0)("Body Flooring") = "G" Then
                    .cbxBodyFlooring_G.Checked = True
                ElseIf DT(0)("Body Flooring") = "F" Then
                    .cbxBodyFlooring_F.Checked = True
                ElseIf DT(0)("Body Flooring") = "P" Then
                    .cbxBodyFlooring_P.Checked = True
                End If
                .txtBodyFlooring.Text = DT(0)("Body Flooring Remarks")
                .txtBodyFlooring.Tag = DT(0)("Body Flooring Remarks")
                .cbxBodyFlooring_G.Tag = DT(0)("Body Flooring")
                .cbxBodyFlooring_F.Tag = DT(0)("Body Flooring")
                .cbxBodyFlooring_P.Tag = DT(0)("Body Flooring")
                'Rear Bumper
                If DT(0)("Rear Bumper") = "G" Then
                    .cbxRearBumper_G.Checked = True
                ElseIf DT(0)("Rear Bumper") = "F" Then
                    .cbxRearBumper_F.Checked = True
                ElseIf DT(0)("Rear Bumper") = "P" Then
                    .cbxRearBumper_P.Checked = True
                End If
                .txtRearBumper.Text = DT(0)("Rear Bumper Remarks")
                .txtRearBumper.Tag = DT(0)("Rear Bumper Remarks")
                .cbxRearBumper_G.Tag = DT(0)("Rear Bumper")
                .cbxRearBumper_F.Tag = DT(0)("Rear Bumper")
                .cbxRearBumper_P.Tag = DT(0)("Rear Bumper")
                'Oil Pressure
                If DT(0)("Oil Pressure") = "G" Then
                    .cbxOilPressure_G.Checked = True
                ElseIf DT(0)("Oil Pressure") = "F" Then
                    .cbxOilPressure_F.Checked = True
                ElseIf DT(0)("Oil Pressure") = "P" Then
                    .cbxOilPressure_P.Checked = True
                End If
                .txtOilPressure.Text = DT(0)("Oil Pressure Remarks")
                .txtOilPressure.Tag = DT(0)("Oil Pressure Remarks")
                .cbxOilPressure_G.Tag = DT(0)("Oil Pressure")
                .cbxOilPressure_F.Tag = DT(0)("Oil Pressure")
                .cbxOilPressure_P.Tag = DT(0)("Oil Pressure")
                'Speedometer
                If DT(0)("Speedometer") = "G" Then
                    .cbxSpeedometer_G.Checked = True
                ElseIf DT(0)("Speedometer") = "F" Then
                    .cbxSpeedometer_F.Checked = True
                ElseIf DT(0)("Speedometer") = "P" Then
                    .cbxSpeedometer_P.Checked = True
                End If
                .txtSpeedometer.Text = DT(0)("Speedometer Remarks")
                .txtSpeedometer.Tag = DT(0)("Speedometer Remarks")
                .cbxSpeedometer_G.Tag = DT(0)("Speedometer")
                .cbxSpeedometer_F.Tag = DT(0)("Speedometer")
                .cbxSpeedometer_P.Tag = DT(0)("Speedometer")
                'Body Paint
                If DT(0)("Body Paint") = "G" Then
                    .cbxBodyPaint_G.Checked = True
                ElseIf DT(0)("Body Paint") = "F" Then
                    .cbxBodyPaint_F.Checked = True
                ElseIf DT(0)("Body Paint") = "P" Then
                    .cbxBodyPaint_P.Checked = True
                End If
                .cbxBodyPaint_G.Tag = DT(0)("Body Paint")
                .cbxBodyPaint_F.Tag = DT(0)("Body Paint")
                .cbxBodyPaint_P.Tag = DT(0)("Body Paint")
                .txtBodyPaint.Text = DT(0)("Body Paint Remarks")
                .txtBodyPaint.Tag = DT(0)("Body Paint Remarks")

                .rRemarks.Text = DT(0)("Appraiser Remarks")
                .rRemarks.Tag = DT(0)("Appraiser Remarks")
                .txtSource.Text = DT(0)("Source")
                .txtSource.Tag = DT(0)("Source")
                .txtTelephoneNum.Text = DT(0)("Telephone Num")
                .txtTelephoneNum.Tag = DT(0)("Telephone Num")
                .dSellingPrice.Value = CDbl(DT(0)("Selling Price"))
                .dSellingPrice.Tag = CDbl(DT(0)("Selling Price"))
                .dFairMarketValue.Value = CDbl(DT(0)("Market Value"))
                .dFairMarketValue.Tag = CDbl(DT(0)("Market Value"))
                .dAppraisedValue.Value = CDbl(DT(0)("Appraised Value"))
                .dAppraisedValue.Tag = CDbl(DT(0)("Appraised Value"))
                .dLoanablePercent.Value = CDbl(DT(0)("Loanable Percent"))
                .cbxBaseMarket.Checked = DT(0)("BaseMarket")

                .btnModify.Enabled = ChangeCollateral OrElse (btnModify.Enabled Or btnSave.Enabled)
                .btnRefresh.Enabled = False
                .btnSave.Enabled = False
                .btnAddImage.Enabled = True
                .btnAttach.Enabled = True
                .PanelEx2.Enabled = False
            End If

            Dim Result As DialogResult
            Result = .ShowDialog
            If Result = DialogResult.OK Then
                GridView1.SetFocusedRowCellValue("Collateral", .cbxMake.Text & " " & .cbxType.Text & " Plate Number " & .txtPlateNum.Text)
                GridView1.SetFocusedRowCellValue("Market Value", .dFairMarketValue.Text)
                GridView1.SetFocusedRowCellValue("AppraisedValue", .dAppraisedValue.Text)
                GridView1.SetFocusedRowCellValue("LoanableValue", .dLoanableValue.Text)
                GridView1.SetFocusedRowCellValue("LoanPercent", .dLoanablePercent.Text)
                GridView1.SetFocusedRowCellValue("AssetNumber", .AssetNumber)
            ElseIf Result = DialogResult.Abort Then
                GridView1.DeleteRow(GridView1.FocusedRowHandle)
                For x As Integer = 0 To GridView1.RowCount - 1
                    GridView1.SetRowCellValue(x, "No", x + 1)
                Next
            End If

            If GridView1.RowCount = 0 Then
                btnModifyVehicle.Enabled = False
                btnPrintVehicle.Enabled = False
            Else
                btnModifyVehicle.Enabled = True
                btnPrintVehicle.Enabled = True
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnRealEstate_Click(sender As Object, e As EventArgs) Handles btnRealEstate.Click
        Dim RealEstate As New FrmRealEstateAppraisal
        With RealEstate
            .Tag = 54
            FormRestriction(.Tag)
            If allow_Access Then
                .vSave = allow_Save
                .vUpdate = allow_Update
                .vDelete = allow_Delete
                .vPrint = allow_Print
            Else
                MsgBox(mBox_Access, MsgBoxStyle.Information, "Info")
                Exit Sub
            End If

            Dim DT_Appraisal As New DataTable
            If CollateralFromROPOA Then
                .btnROPA.Visible = True
                .txtTCT.Enabled = False
                .txtLot.Enabled = False
                .dArea.Enabled = False
                .txtRegisteredOwner.Enabled = False
                .txtRegistryOfDeeds.Enabled = False
                .rLocation.Enabled = False
                .txtCoordinates.Enabled = False
                .cbxVacant.Enabled = False
                .cbxResidential.Enabled = False
                .cbxCommercial.Enabled = False
                .cbxAgricultural.Enabled = False
                .cbxTourism.Enabled = False
                .cbxIndustrial.Enabled = False
                .cbxCondominium.Enabled = False
                .cbxOthers.Enabled = False
                .txtOthers.Enabled = False
                .txtStorey.Enabled = False
                .txtFrame.Enabled = False
                .txtWalling.Enabled = False
                .txtPartitions.Enabled = False
                .txtRoofings.Enabled = False
                .txtBeams.Enabled = False
                .txtCeilings.Enabled = False
                .txtFlooring.Enabled = False
                .txtDoors.Enabled = False
                .txtWindows.Enabled = False
                .txtTandB.Enabled = False
                .txtYearConstructed.Enabled = False
                .txtFloorArea.Enabled = False
                .rRemarks.Enabled = False
            End If
            .cbxAppraiseFor.Text = "Credit Investigation"
            .AssetNumber_1 = AssetNumber_1
            .AssetNumber_2 = AssetNumber_2
            .AssetNumber_3 = AssetNumber_3
            .AssetNumber_4 = AssetNumber_4
            .AssetNumber_5 = AssetNumber_5
            .CreditNumber = CreditNumber
            If cbxApplication.Enabled = False Then
                .CINumber = txtCINumber.Text
            End If
            .ChangeCollateral = ChangeCollateral
            .btnDelete.Enabled = False
            .btnModify.Enabled = False
            If CollateralFromROPOA Then
                .btnROPA.Visible = True
            End If
            If GridView2.RowCount > 0 Then
                DT_Appraisal = GridControl2.DataSource
            Else
                With DT_Appraisal
                    .Columns.Add("ID")
                    .Columns.Add("Col_ID")
                    .Columns.Add("No")
                    .Columns.Add("Collateral")
                    .Columns.Add("Market Value")
                    .Columns.Add("AppraisedValue")
                    .Columns.Add("LoanableValue")
                    .Columns.Add("LoanPercent")
                    .Columns.Add("Coordinates")
                    .Columns.Add("AssetNumber")
                    .Columns.Add("SellingPrice")
                End With
            End If
            If .ShowDialog = DialogResult.OK Then
                DT_Appraisal.Rows.Add(.txtAppraiseNumber.Text, .CollateralNumber, GridView2.RowCount + 1, .txtTCT.Text & " of the Registry of " & .txtRegistryOfDeeds.Text, .dFairMarketValue.Text, .dAppraisedValue.Text, .dRecommendedAmount.Text, .dRecommendedPercent.Text, .txtCoordinates.Text, .AssetNumber)
                GridControl2.DataSource = DT_Appraisal
            End If

            If GridView2.RowCount = 0 Then
                btnModifyRealEstate.Enabled = False
                btnPrintRealEstate.Enabled = False
            Else
                btnModifyRealEstate.Enabled = True
                btnPrintRealEstate.Enabled = True
            End If
            Collateral = If(Collateral = "", "", Collateral & ", ") & .txtTCT.Text & " of the Registry of " & .txtRegistryOfDeeds.Text
            TotalAppraised += .dAppraisedValue.Value
            .Dispose()
        End With
    End Sub

    Private Sub BtnModifyRealEstate_Click(sender As Object, e As EventArgs) Handles btnModifyRealEstate.Click, GridView2.DoubleClick
        Try
            If GridView2.GetFocusedRowCellValue("Collateral") = "" Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim RealEstate As New FrmRealEstateAppraisal
        With RealEstate
            .Tag = 54
            FormRestriction(.Tag)
            If allow_Access Then
                .vSave = allow_Save
                .vUpdate = allow_Update
                .vDelete = allow_Delete
                .vPrint = allow_Print
            Else
                MsgBox(mBox_Access, MsgBoxStyle.Information, "Info")
                Exit Sub
            End If

            .ChangeCollateral = ChangeCollateral
            .CreditNumber = CreditNumber
            .AssetNumber = GridView2.GetFocusedRowCellValue("AssetNumber").ToString
            .SellingPrice = If(GridView2.GetFocusedRowCellValue("SellingPrice").ToString = "", 0, GridView2.GetFocusedRowCellValue("SellingPrice"))
            .AssetNumber_1 = AssetNumber_1
            .AssetNumber_2 = AssetNumber_2
            .AssetNumber_3 = AssetNumber_3
            .AssetNumber_4 = AssetNumber_4
            .AssetNumber_5 = AssetNumber_5
            .txtAppraiseNumber.Text = GridView2.GetFocusedRowCellValue("ID")
            .CollateralNumber = GridView2.GetFocusedRowCellValue("Col_ID")
            .cbxAppraiseFor.Text = "Credit Investigation"

            Dim SQL As String = "SELECT"
            SQL &= "   A.appraise_num      AS 'Appraise Number',"
            SQL &= "   DATE_FORMAT(A.appraise_date,'%b %d, %Y') AS 'Date',"
            SQL &= "   A.appraise_by, (SELECT CONCAT(IF(First_Name = '','',CONCAT(First_Name, ' ')), IF(Middle_Name = '','',CONCAT(Middle_Name, ' ')), Last_Name) FROM employee_setup WHERE ID = A.appraise_by) AS 'Appraised By',"
            SQL &= "   A.asset_number      AS 'Credit Number',"
            SQL &= "   Land,"
            SQL &= "   FORMAT(A.land_area,2) AS 'Land Area',"
            SQL &= "   FORMAT(A.land_price,2) AS 'Land Price',"
            SQL &= "   FORMAT(A.land_price * land_area,2) AS 'Land Total',"
            SQL &= "   land_remarks_1 AS 'Land Remarks',"
            SQL &= "   FORMAT(A.land_area_2,2) AS 'Land Area 2',"
            SQL &= "   FORMAT(A.land_price_2,2) AS 'Land Price 2',"
            SQL &= "   FORMAT(A.land_price_2 * land_area_2,2) AS 'Land Total 2',"
            SQL &= "   land_remarks_2 AS 'Land Remarks 2',"
            SQL &= "   FORMAT(A.land_area_3,2) AS 'Land Area 3',"
            SQL &= "   FORMAT(A.land_price_3,2) AS 'Land Price 3',"
            SQL &= "   FORMAT(A.land_price_3 * land_area_3,2) AS 'Land Total 3',"
            SQL &= "   land_remarks_3 AS 'Land Remarks 3',"
            SQL &= "   FORMAT(A.land_area_4,2) AS 'Land Area 4',"
            SQL &= "   FORMAT(A.land_price_4,2) AS 'Land Price 4',"
            SQL &= "   FORMAT(A.land_price_4 * land_area_4,2) AS 'Land Total 4',"
            SQL &= "   land_remarks_4 AS 'Land Remarks 4',"
            SQL &= "   FORMAT(A.land_area_5,2) AS 'Land Area 5',"
            SQL &= "   FORMAT(A.land_price_5,2) AS 'Land Price 5',"
            SQL &= "   FORMAT(A.land_price_5 * land_area_5,2) AS 'Land Total 5',"
            SQL &= "   land_remarks_5 AS 'Land Remarks 5',"
            SQL &= "   Machine,"
            SQL &= "   FORMAT(A.Machine_area,2) AS 'Machine Area',"
            SQL &= "   FORMAT(A.Machine_price,2) AS 'Machine Price',"
            SQL &= "   FORMAT(A.Machine_price * Machine_area,2) AS 'Machine Total',"
            SQL &= "   Machine_remarks_1 AS 'Machine Remarks',"
            SQL &= "   FORMAT(A.Machine_area_2,2) AS 'Machine Area 2',"
            SQL &= "   FORMAT(A.Machine_price_2,2) AS 'Machine Price 2',"
            SQL &= "   FORMAT(A.Machine_price_2 * Machine_area_2,2) AS 'Machine Total 2',"
            SQL &= "   Machine_remarks_2 AS 'Machine Remarks 2',"
            SQL &= "   FORMAT(A.Machine_area_3,2) AS 'Machine Area 3',"
            SQL &= "   FORMAT(A.Machine_price_3,2) AS 'Machine Price 3',"
            SQL &= "   FORMAT(A.Machine_price_3 * Machine_area_3,2) AS 'Machine Total 3',"
            SQL &= "   Machine_remarks_3 AS 'Machine Remarks 3',"
            SQL &= "   FORMAT(A.Machine_area_4,2) AS 'Machine Area 4',"
            SQL &= "   FORMAT(A.Machine_price_4,2) AS 'Machine Price 4',"
            SQL &= "   FORMAT(A.Machine_price_4 * Machine_area_4,2) AS 'Machine Total 4',"
            SQL &= "   Machine_remarks_4 AS 'Machine Remarks 4',"
            SQL &= "   FORMAT(A.Machine_area_5,2) AS 'Machine Area 5',"
            SQL &= "   FORMAT(A.Machine_price_5,2) AS 'Machine Price 5',"
            SQL &= "   FORMAT(A.Machine_price_5 * Machine_area_5,2) AS 'Machine Total 5',"
            SQL &= "   Machine_remarks_5 AS 'Machine Remarks 5',"
            SQL &= "   Improvement,"
            SQL &= "   FORMAT(A.Improvement_area,2) AS 'Improvement Area',"
            SQL &= "   FORMAT(A.Improvement_price,2) AS 'Improvement Price',"
            SQL &= "   FORMAT(A.Improvement_price * Improvement_area,2) AS 'Improvement Total',"
            SQL &= "   Improvement_remarks_1 AS 'Improvement Remarks',"
            SQL &= "   FORMAT(A.Improvement_area_2,2) AS 'Improvement Area 2',"
            SQL &= "   FORMAT(A.Improvement_price_2,2) AS 'Improvement Price 2',"
            SQL &= "   FORMAT(A.Improvement_price_2 * Improvement_area_2,2) AS 'Improvement Total 2',"
            SQL &= "   Improvement_remarks_2 AS 'Improvement Remarks 2',"
            SQL &= "   FORMAT(A.Improvement_area_3,2) AS 'Improvement Area 3',"
            SQL &= "   FORMAT(A.Improvement_price_3,2) AS 'Improvement Price 3',"
            SQL &= "   FORMAT(A.Improvement_price_3 * Improvement_area_3,2) AS 'Improvement Total 3',"
            SQL &= "   Improvement_remarks_3 AS 'Improvement Remarks 3',"
            SQL &= "   FORMAT(A.Improvement_area_4,2) AS 'Improvement Area 4',"
            SQL &= "   FORMAT(A.Improvement_price_4,2) AS 'Improvement Price 4',"
            SQL &= "   FORMAT(A.Improvement_price_4 * Improvement_area_4,2) AS 'Improvement Total 4',"
            SQL &= "   Improvement_remarks_4 AS 'Improvement Remarks 4',"
            SQL &= "   FORMAT(A.Improvement_area_5,2) AS 'Improvement Area 5',"
            SQL &= "   FORMAT(A.Improvement_price_5,2) AS 'Improvement Price 5',"
            SQL &= "   FORMAT(A.Improvement_price_5 * Improvement_area_5,2) AS 'Improvement Total 5',"
            SQL &= "   Improvement_remarks_5 AS 'Improvement Remarks 5',"
            SQL &= "   FORMAT((A.land_price * A.land_area) + (A.land_price_2 * land_area_2) + (A.land_price_3 * land_area_3) + (A.land_price_4 * land_area_4) + (A.land_price_5 * land_area_5) + (A.machine_price * A.machine_area) + (A.machine_price_2 * machine_area_2) + (A.machine_price_3 * machine_area_3) + (A.machine_price_4 * machine_area_4) + (A.machine_price_5 * machine_area_5) + (A.improvement_price * A.improvement_area) + (A.improvement_price_2 * improvement_area_2) + (A.improvement_price_3 * improvement_area_3) + (A.improvement_price_4 * improvement_area_4) + (A.improvement_price_5 * improvement_area_5),2) AS 'Total',"
            SQL &= "   FORMAT(A.prevailing_selling,2) AS 'Prevailing Selling Price',"
            SQL &= "   FORMAT(A.rounded_to,2) AS 'Zonal Valuation',"
            SQL &= "   A.TCT               AS 'TCT No.',"
            SQL &= "   A.lot_block         AS 'Lot / Block No.',"
            SQL &= "   FORMAT(A.area_sqm,2) AS 'Area SQ.M.',"
            SQL &= "   A.registered_owner  AS 'Registered Owner',"
            SQL &= "   A.registry_deeds    AS 'Registry of Deeds',"
            SQL &= "   A.Location,"
            SQL &= "   A.Coordinates,"
            SQL &= "   A.vacant_lot        AS 'Vacant Lot',"
            SQL &= "   A.Classification,"
            SQL &= "   A.Storey_R          AS 'Storey',"
            SQL &= "   A.Roofing_R         AS 'Roofing',"
            SQL &= "   A.FLooring_R        AS 'Flooring',"
            SQL &= "   A.TandB_R           AS 'T and B',"
            SQL &= "   A.Frame_R           AS 'Frame',"
            SQL &= "   A.Beams_R           AS 'Beams',"
            SQL &= "   A.Doors_R           AS 'Door',"
            SQL &= "   A.YearConstructed_R AS 'Year Constructed',"
            SQL &= "   A.Walling_R         AS 'Walling',"
            SQL &= "   A.Ceiling_R         AS 'Ceiling',"
            SQL &= "   A.Windows_R         AS 'Windows',"
            SQL &= "   A.FloorArea_R       AS 'Floor Area',"
            SQL &= "   A.Partitions_R      AS 'Partitions',"
            SQL &= "   A.Remarks           AS 'Remarks',"
            SQL &= "   FORMAT(A.market_value,2) AS 'Market Value',"
            SQL &= "   FORMAT(A.appraised_value,2) AS 'Appraised Value',"
            SQL &= "   A.as_of             AS 'As of',"
            SQL &= "   FORMAT(A.loanable_value,2) AS 'Loanable Value',"
            SQL &= "   FORMAT(A.loanable_percent,2) AS 'Loanable Percent', Attach"
            SQL &= " FROM appraise_re A"
            SQL &= String.Format("   WHERE A.appraise = 'Credit Investigation' AND A.appraise_num = '{1}' AND CollateralNumber = '{0}'", GridView2.GetFocusedRowCellValue("Col_ID"), GridView2.GetFocusedRowCellValue("ID"))

            Dim DT As DataTable = DataSource(SQL)
            If DT.Rows.Count > 0 Then
                .btnSave.Text = "Update"
                .dtpDate.Value = DT(0)("Date")
                .txtAppraiseNumber.Text = DT(0)("Appraise Number")
                .vAppraised = DT(0)("Appraised By")
                .cbxAppraiseFor.Text = "Credit Investigation"

                .txtLand.Text = DT(0)("Land")
                .txtLand.Tag = DT(0)("Land")

                .dLandArea.Value = DT(0)("Land Area")
                .dLandArea.Tag = DT(0)("Land Area")
                .dLandPrice_1.Value = DT(0)("Land Price")
                .dLandPrice_1.Tag = DT(0)("Land Price")
                .dLandTotal_1.Value = DT(0)("Land Total")
                .dLandTotal_1.Tag = DT(0)("Land Total")
                .txtLandRemarks_1.Text = DT(0)("Land Remarks")
                .txtLandRemarks_1.Tag = DT(0)("Land Remarks")

                If CDbl(DT(0)("Land Total 2")) > 0 Then
                    .dLandArea_2.Visible = True
                    .lblLandSQM_2.Visible = True
                    .dLandPrice_2.Visible = True
                    .lblLandCons_2.Visible = True
                    .lblLandPhp_2.Visible = True
                    .dLandTotal_2.Visible = True
                    .txtLandRemarks_2.Visible = True
                    .btnAddLand_2.Visible = True
                    .btnRemoveLand_2.Visible = True
                End If
                .dLandArea_2.Value = DT(0)("Land Area 2")
                .dLandArea_2.Tag = DT(0)("Land Area 2")
                .dLandPrice_2.Value = DT(0)("Land Price 2")
                .dLandPrice_2.Tag = DT(0)("Land Price 2")
                .dLandTotal_2.Value = DT(0)("Land Total 2")
                .dLandTotal_2.Tag = DT(0)("Land Total 2")
                .txtLandRemarks_2.Text = DT(0)("Land Remarks 2")
                .txtLandRemarks_2.Tag = DT(0)("Land Remarks 2")

                If CDbl(DT(0)("Land Total 3")) > 0 Then
                    .dLandArea_3.Visible = True
                    .lblLandSQM_3.Visible = True
                    .dLandPrice_3.Visible = True
                    .lblLandCons_3.Visible = True
                    .lblLandPhp_3.Visible = True
                    .dLandTotal_3.Visible = True
                    .txtLandRemarks_3.Visible = True
                    .btnAddLand_3.Visible = True
                    .btnRemoveLand_3.Visible = True
                End If
                .dLandArea_3.Value = DT(0)("Land Area 3")
                .dLandArea_3.Tag = DT(0)("Land Area 3")
                .dLandPrice_3.Value = DT(0)("Land Price 3")
                .dLandPrice_3.Tag = DT(0)("Land Price 3")
                .dLandTotal_3.Value = DT(0)("Land Total 3")
                .dLandTotal_3.Tag = DT(0)("Land Total 3")
                .txtLandRemarks_3.Text = DT(0)("Land Remarks 3")
                .txtLandRemarks_3.Tag = DT(0)("Land Remarks 3")

                If CDbl(DT(0)("Land Total 4")) > 0 Then
                    .dLandArea_4.Visible = True
                    .lblLandSQM_4.Visible = True
                    .dLandPrice_4.Visible = True
                    .lblLandCons_4.Visible = True
                    .lblLandPhp_4.Visible = True
                    .dLandTotal_4.Visible = True
                    .txtLandRemarks_4.Visible = True
                    .btnAddLand_4.Visible = True
                    .btnRemoveLand_4.Visible = True
                End If
                .dLandArea_4.Value = DT(0)("Land Area 4")
                .dLandArea_4.Tag = DT(0)("Land Area 4")
                .dLandPrice_4.Value = DT(0)("Land Price 4")
                .dLandPrice_4.Tag = DT(0)("Land Price 4")
                .dLandTotal_4.Value = DT(0)("Land Total 4")
                .dLandTotal_4.Tag = DT(0)("Land Total 4")
                .txtLandRemarks_4.Text = DT(0)("Land Remarks 4")
                .txtLandRemarks_4.Tag = DT(0)("Land Remarks 4")

                If CDbl(DT(0)("Land Total 5")) > 0 Then
                    .dLandArea_5.Visible = True
                    .lblLandSQM_5.Visible = True
                    .dLandPrice_5.Visible = True
                    .lblLandCons_5.Visible = True
                    .lblLandPhp_5.Visible = True
                    .dLandTotal_5.Visible = True
                    .txtLandRemarks_5.Visible = True
                    .btnRemoveLand_5.Visible = True
                End If
                .dLandArea_5.Value = DT(0)("Land Area 5")
                .dLandArea_5.Tag = DT(0)("Land Area 5")
                .dLandPrice_5.Value = DT(0)("Land Price 5")
                .dLandPrice_5.Tag = DT(0)("Land Price 5")
                .dLandTotal_5.Value = DT(0)("Land Total 5")
                .dLandTotal_5.Tag = DT(0)("Land Total 5")
                .txtLandRemarks_5.Text = DT(0)("Land Remarks 5")
                .txtLandRemarks_5.Tag = DT(0)("Land Remarks 5")

                .txtMachine.Text = DT(0)("Machine")
                .txtMachine.Tag = DT(0)("Machine")

                .dMachineArea_1.Value = DT(0)("Machine Area")
                .dMachineArea_1.Tag = DT(0)("Machine Area")
                .dMachinePrice_1.Value = DT(0)("Machine Price")
                .dMachinePrice_1.Tag = DT(0)("Machine Price")
                .dMachineTotal_1.Value = DT(0)("Machine Total")
                .dMachineTotal_1.Tag = DT(0)("Machine Total")
                .txtMachineRemarks_1.Text = DT(0)("Machine Remarks")
                .txtMachineRemarks_1.Tag = DT(0)("Machine Remarks")

                If CDbl(DT(0)("Machine Total 2")) > 0 Then
                    .dMachineArea_2.Visible = True
                    .lblMachineSQM_2.Visible = True
                    .dMachinePrice_2.Visible = True
                    .lblMachineCons_2.Visible = True
                    .lblMachinePhp_2.Visible = True
                    .dMachineTotal_2.Visible = True
                    .txtMachineRemarks_2.Visible = True
                    .btnAddMachine_2.Visible = True
                    .btnRemoveMachine_2.Visible = True
                End If
                .dMachineArea_2.Value = DT(0)("Machine Area 2")
                .dMachineArea_2.Tag = DT(0)("Machine Area 2")
                .dMachinePrice_2.Value = DT(0)("Machine Price 2")
                .dMachinePrice_2.Tag = DT(0)("Machine Price 2")
                .dMachineTotal_2.Value = DT(0)("Machine Total 2")
                .dMachineTotal_2.Tag = DT(0)("Machine Total 2")
                .txtMachineRemarks_2.Text = DT(0)("Machine Remarks 2")
                .txtMachineRemarks_2.Tag = DT(0)("Machine Remarks 2")

                If CDbl(DT(0)("Machine Total 3")) > 0 Then
                    .dMachineArea_3.Visible = True
                    .lblMachineSQM_3.Visible = True
                    .dMachinePrice_3.Visible = True
                    .lblMachineCons_3.Visible = True
                    .lblMachinePhp_3.Visible = True
                    .dMachineTotal_3.Visible = True
                    .txtMachineRemarks_3.Visible = True
                    .btnAddMachine_3.Visible = True
                    .btnRemoveMachine_3.Visible = True
                End If
                .dMachineArea_3.Value = DT(0)("Machine Area 3")
                .dMachineArea_3.Tag = DT(0)("Machine Area 3")
                .dMachinePrice_3.Value = DT(0)("Machine Price 3")
                .dMachinePrice_3.Tag = DT(0)("Machine Price 3")
                .dMachineTotal_3.Value = DT(0)("Machine Total 3")
                .dMachineTotal_3.Tag = DT(0)("Machine Total 3")
                .txtMachineRemarks_3.Text = DT(0)("Machine Remarks 3")
                .txtMachineRemarks_3.Tag = DT(0)("Machine Remarks 3")

                If CDbl(DT(0)("Machine Total 4")) > 0 Then
                    .dMachineArea_4.Visible = True
                    .lblMachineSQM_4.Visible = True
                    .dMachinePrice_4.Visible = True
                    .lblMachineCons_4.Visible = True
                    .lblMachinePhp_4.Visible = True
                    .dMachineTotal_4.Visible = True
                    .txtMachineRemarks_4.Visible = True
                    .btnAddMachine_4.Visible = True
                    .btnRemoveMachine_4.Visible = True
                End If
                .dMachineArea_4.Value = DT(0)("Machine Area 4")
                .dMachineArea_4.Tag = DT(0)("Machine Area 4")
                .dMachinePrice_4.Value = DT(0)("Machine Price 4")
                .dMachinePrice_4.Tag = DT(0)("Machine Price 4")
                .dMachineTotal_4.Value = DT(0)("Machine Total 4")
                .dMachineTotal_4.Tag = DT(0)("Machine Total 4")
                .txtMachineRemarks_4.Text = DT(0)("Machine Remarks 4")
                .txtMachineRemarks_4.Tag = DT(0)("Machine Remarks 4")

                If CDbl(DT(0)("Machine Total 5")) > 0 Then
                    .dMachineArea_5.Visible = True
                    .lblMachineSQM_5.Visible = True
                    .dMachinePrice_5.Visible = True
                    .lblMachineCons_5.Visible = True
                    .lblMachinePhp_5.Visible = True
                    .dMachineTotal_5.Visible = True
                    .txtMachineRemarks_5.Visible = True
                    .btnRemoveMachine_5.Visible = True
                End If
                .dMachineArea_5.Value = DT(0)("Machine Area 5")
                .dMachineArea_5.Tag = DT(0)("Machine Area 5")
                .dMachinePrice_5.Value = DT(0)("Machine Price 5")
                .dMachinePrice_5.Tag = DT(0)("Machine Price 5")
                .dMachineTotal_5.Value = DT(0)("Machine Total 5")
                .dMachineTotal_5.Tag = DT(0)("Machine Total 5")
                .txtMachineRemarks_5.Text = DT(0)("Machine Remarks 5")
                .txtMachineRemarks_5.Tag = DT(0)("Machine Remarks 5")

                .txtImprovements.Text = DT(0)("Improvement")
                .txtImprovements.Tag = DT(0)("Improvement")

                .dImprovementArea_1.Value = DT(0)("Improvement Area")
                .dImprovementArea_1.Tag = DT(0)("Improvement Area")
                .dImprovementPrice_1.Value = DT(0)("Improvement Price")
                .dImprovementPrice_1.Tag = DT(0)("Improvement Price")
                .dImprovementTotal_1.Value = DT(0)("Improvement Total")
                .dImprovementTotal_1.Tag = DT(0)("Improvement Total")
                .txtImprovementRemarks_1.Text = DT(0)("Improvement Remarks")
                .txtImprovementRemarks_1.Tag = DT(0)("Improvement Remarks")

                If CDbl(DT(0)("Improvement Total 2")) > 0 Then
                    .dImprovementArea_2.Visible = True
                    .lblImprovementSQM_2.Visible = True
                    .dImprovementPrice_2.Visible = True
                    .lblImprovementCons_2.Visible = True
                    .lblImprovementPhp_2.Visible = True
                    .dImprovementTotal_2.Visible = True
                    .txtImprovementRemarks_2.Visible = True
                    .btnAddImprovement_2.Visible = True
                    .btnRemoveImprovement_2.Visible = True
                End If
                .dImprovementArea_2.Value = DT(0)("Improvement Area 2")
                .dImprovementArea_2.Tag = DT(0)("Improvement Area 2")
                .dImprovementPrice_2.Value = DT(0)("Improvement Price 2")
                .dImprovementPrice_2.Tag = DT(0)("Improvement Price 2")
                .dImprovementTotal_2.Value = DT(0)("Improvement Total 2")
                .dImprovementTotal_2.Tag = DT(0)("Improvement Total 2")
                .txtImprovementRemarks_2.Text = DT(0)("Improvement Remarks 2")
                .txtImprovementRemarks_2.Tag = DT(0)("Improvement Remarks 2")

                If CDbl(DT(0)("Improvement Total 3")) > 0 Then
                    .dImprovementArea_3.Visible = True
                    .lblImprovementSQM_3.Visible = True
                    .dImprovementPrice_3.Visible = True
                    .lblImprovementCons_3.Visible = True
                    .lblImprovementPhp_3.Visible = True
                    .dImprovementTotal_3.Visible = True
                    .txtImprovementRemarks_3.Visible = True
                    .btnAddImprovement_3.Visible = True
                    .btnRemoveImprovement_3.Visible = True
                End If
                .dImprovementArea_3.Value = DT(0)("Improvement Area 3")
                .dImprovementArea_3.Tag = DT(0)("Improvement Area 3")
                .dImprovementPrice_3.Value = DT(0)("Improvement Price 3")
                .dImprovementPrice_3.Tag = DT(0)("Improvement Price 3")
                .dImprovementTotal_3.Value = DT(0)("Improvement Total 3")
                .dImprovementTotal_3.Tag = DT(0)("Improvement Total 3")
                .txtImprovementRemarks_3.Text = DT(0)("Improvement Remarks 3")
                .txtImprovementRemarks_3.Tag = DT(0)("Improvement Remarks 3")

                If CDbl(DT(0)("Improvement Total 4")) > 0 Then
                    .dImprovementArea_4.Visible = True
                    .lblImprovementSQM_4.Visible = True
                    .dImprovementPrice_4.Visible = True
                    .lblImprovementCons_4.Visible = True
                    .lblImprovementPhp_4.Visible = True
                    .dImprovementTotal_4.Visible = True
                    .txtImprovementRemarks_4.Visible = True
                    .btnAddImprovement_4.Visible = True
                    .btnRemoveImprovement_4.Visible = True
                End If
                .dImprovementArea_4.Value = DT(0)("Improvement Area 4")
                .dImprovementArea_4.Tag = DT(0)("Improvement Area 4")
                .dImprovementPrice_4.Value = DT(0)("Improvement Price 4")
                .dImprovementPrice_4.Tag = DT(0)("Improvement Price 4")
                .dImprovementTotal_4.Value = DT(0)("Improvement Total 4")
                .dImprovementTotal_4.Tag = DT(0)("Improvement Total 4")
                .txtImprovementRemarks_4.Text = DT(0)("Improvement Remarks 4")
                .txtImprovementRemarks_4.Tag = DT(0)("Improvement Remarks 4")

                If CDbl(DT(0)("Improvement Total 5")) > 0 Then
                    .dImprovementArea_5.Visible = True
                    .lblImprovementSQM_5.Visible = True
                    .dImprovementPrice_5.Visible = True
                    .lblImprovementCons_5.Visible = True
                    .lblImprovementPhp_5.Visible = True
                    .dImprovementTotal_5.Visible = True
                    .txtImprovementRemarks_5.Visible = True
                    .btnRemoveImprovement_5.Visible = True
                End If
                .dImprovementArea_5.Value = DT(0)("Improvement Area 5")
                .dImprovementArea_5.Tag = DT(0)("Improvement Area 5")
                .dImprovementPrice_5.Value = DT(0)("Improvement Price 5")
                .dImprovementPrice_5.Tag = DT(0)("Improvement Price 5")
                .dImprovementTotal_5.Value = DT(0)("Improvement Total 5")
                .dImprovementTotal_5.Tag = DT(0)("Improvement Total 5")
                .txtImprovementRemarks_5.Text = DT(0)("Improvement Remarks 5")
                .txtImprovementRemarks_5.Tag = DT(0)("Improvement Remarks 5")

                .dTotalAmount.Value = DT(0)("Total")
                .dTotalAmount.Tag = DT(0)("Total")
                .dPrevailingSellingPrice.Value = DT(0)("Prevailing Selling Price")
                .dPrevailingSellingPrice.Tag = DT(0)("Prevailing Selling Price")
                .dZonalValuation.Value = DT(0)("Zonal Valuation")
                .dZonalValuation.Tag = DT(0)("Zonal Valuation")
                .txtTCT.Text = DT(0)("TCT No.")
                .txtTCT.Tag = DT(0)("TCT No.")
                .txtLot.Text = DT(0)("Lot / Block No.")
                .txtLot.Tag = DT(0)("Lot / Block No.")
                .dArea.Value = DT(0)("Area SQ.M.")
                .dArea.Tag = DT(0)("Area SQ.M.")
                .txtRegisteredOwner.Text = DT(0)("Registered Owner")
                .txtRegisteredOwner.Tag = DT(0)("Registered Owner")
                .txtRegistryOfDeeds.Text = DT(0)("Registry of Deeds")
                .txtRegistryOfDeeds.Tag = DT(0)("Registry of Deeds")
                .rLocation.Text = DT(0)("Location")
                .rLocation.Tag = DT(0)("Location")
                .txtCoordinates.Text = DT(0)("Coordinates")
                .txtCoordinates.Tag = DT(0)("Coordinates")
                .cbxVacant.Checked = If(DT(0)("Vacant Lot") = "YES", True, False)
                .cbxVacant.Tag = If(DT(0)("Vacant Lot") = "YES", True, False)
                If DT(0)("Classification") = "Residential" Then
                    .cbxResidential.Checked = True
                ElseIf DT(0)("Classification") = "Commercial" Then
                    .cbxCommercial.Checked = True
                ElseIf DT(0)("Classification") = "Agricultural" Then
                    .cbxAgricultural.Checked = True
                ElseIf DT(0)("Classification") = "Tourism" Then
                    .cbxTourism.Checked = True
                ElseIf DT(0)("Classification") = "Industrial" Then
                    .cbxIndustrial.Checked = True
                ElseIf DT(0)("Classification") = "Condominium" Then
                    .cbxCondominium.Checked = True
                Else
                    .cbxOthers.Checked = True
                    .txtOthers.Text = DT(0)("Classification")
                End If
                .cbxResidential.Tag = DT(0)("Classification")
                .cbxCommercial.Tag = DT(0)("Classification")
                .cbxAgricultural.Tag = DT(0)("Classification")
                .cbxTourism.Tag = DT(0)("Classification")
                .cbxIndustrial.Tag = DT(0)("Classification")
                .cbxCondominium.Tag = DT(0)("Classification")
                .cbxOthers.Tag = DT(0)("Classification")

                .txtStorey.Text = DT(0)("Storey")
                .txtStorey.Tag = DT(0)("Storey")
                .txtRoofings.Text = DT(0)("Roofing")
                .txtRoofings.Tag = DT(0)("Roofing")
                .txtFlooring.Text = DT(0)("Flooring")
                .txtFlooring.Tag = DT(0)("Flooring")
                .txtTandB.Text = DT(0)("T and B")
                .txtTandB.Tag = DT(0)("T and B")
                .txtFrame.Text = DT(0)("Frame")
                .txtFrame.Tag = DT(0)("Frame")
                .txtBeams.Text = DT(0)("Beams")
                .txtBeams.Tag = DT(0)("Beams")
                .txtDoors.Text = DT(0)("Door")
                .txtDoors.Tag = DT(0)("Door")
                .txtYearConstructed.Text = DT(0)("Year Constructed")
                .txtYearConstructed.Tag = DT(0)("Year Constructed")
                .txtWalling.Text = DT(0)("Walling")
                .txtWalling.Tag = DT(0)("Walling")
                .txtCeilings.Text = DT(0)("Ceiling")
                .txtCeilings.Tag = DT(0)("Ceiling")
                .txtWindows.Text = DT(0)("Windows")
                .txtWindows.Tag = DT(0)("Windows")
                .txtFloorArea.Text = DT(0)("Floor Area")
                .txtFloorArea.Tag = DT(0)("Floor Area")
                .txtPartitions.Text = DT(0)("Partitions")
                .txtPartitions.Tag = DT(0)("Partitions")
                .rRemarks.Text = DT(0)("Remarks")
                .rRemarks.Tag = DT(0)("Remarks")
                .dFairMarketValue.Value = DT(0)("Market Value")
                .dFairMarketValue.Tag = DT(0)("Market Value")
                .dAppraisedValue.Value = DT(0)("Appraised Value")
                .dAppraisedValue.Tag = DT(0)("Appraised Value")
                If DT(0)("As of") = "" Then
                    .dtpAsOf.CustomFormat = ""
                Else
                    .dtpAsOf.CustomFormat = "MMMM dd, yyyy"
                    .dtpAsOf.Value = CDate(DT(0)("As of"))
                End If
                .dtpAsOf.Tag = DT(0)("As of")
                .dRecommendedAmount.Value = DT(0)("Loanable Value")
                .dRecommendedAmount.Tag = DT(0)("Loanable Value")
                .dRecommendedPercent.Value = DT(0)("Loanable Percent")
                .dRecommendedPercent.Tag = DT(0)("Loanable Percent")
                .TotalImage = DT(0)("Attach")

                .btnModify.Enabled = ChangeCollateral OrElse (btnModify.Enabled Or btnSave.Enabled)
                .btnRefresh.Enabled = False
                .btnSave.Enabled = False
                .btnAddImage.Enabled = True
                .PanelEx4.Enabled = False
                .PanelEx1.Enabled = False
                .PanelEx2.Enabled = False
            End If

            Dim Result As DialogResult
            Result = .ShowDialog
            If Result = DialogResult.OK Then
                GridView2.SetFocusedRowCellValue("Collateral", .txtTCT.Text & " of the Registry of " & .txtRegistryOfDeeds.Text)
                GridView2.SetFocusedRowCellValue("Market Value", .dFairMarketValue.Text)
                GridView2.SetFocusedRowCellValue("AppraisedValue", .dAppraisedValue.Text)
                GridView2.SetFocusedRowCellValue("LoanableValue", .dRecommendedAmount.Text)
                GridView2.SetFocusedRowCellValue("LoanPercent", .dRecommendedPercent.Text)
                GridView2.SetFocusedRowCellValue("AssetNumber", .AssetNumber)
            ElseIf Result = DialogResult.Abort Then
                GridView2.DeleteRow(GridView2.FocusedRowHandle)
                For x As Integer = 0 To GridView2.RowCount - 1
                    GridView2.SetRowCellValue(x, "No", x + 1)
                Next
            End If

            If GridView2.RowCount = 0 Then
                btnModifyRealEstate.Enabled = False
                btnPrintRealEstate.Enabled = False
            Else
                btnModifyRealEstate.Enabled = True
                btnPrintRealEstate.Enabled = True
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnAttachSketch_Click(sender As Object, e As EventArgs) Handles btnAttachSketch.Click
        Using OFD As New OpenFileDialog
            OFD.Filter = "Image File|*.jpg;*.jpeg;*.png"
            If (OFD.ShowDialog() = DialogResult.OK) Then
                Try
                    Using TempPB As New DevExpress.XtraEditors.PictureEdit
                        TempPB.Image = Image.FromFile(OFD.FileName)
                        ResizeImages(TempPB.Image.Clone, pbSketch, 650, 500)
                    End Using
                    ChangeSketch = True
                Catch ex As Exception
                    MsgBox("File type not supported. Please select JPG, JPEG and PNG files only.", MsgBoxStyle.Information, "Info")
                End Try
            End If
        End Using
    End Sub

    Private Sub SuperTabControl1_SelectedTabChanged(sender As Object, e As DevComponents.DotNetBar.SuperTabStripSelectedTabChangedEventArgs) Handles SuperTabControl1.SelectedTabChanged
        If SuperTabControl1.SelectedTabIndex = 0 Then
            btnBack.Enabled = False
            btnNext.Enabled = True

            If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" And PanelEx10.Enabled = True Then
                btnDelete.Enabled = False
                btnModify.Enabled = False
                btnSave.Enabled = True
                btnSave_F.Enabled = True
            Else
                btnAttach.Enabled = True
                If PanelEx10.Enabled = True Then
                    If Draft_Status = "DRAFT" Then
                        btnSave.Enabled = True
                    Else
                        btnSave.Enabled = False
                    End If
                    btnSave_F.Enabled = True
                    btnModify.Enabled = False
                    btnDelete.Enabled = True
                Else
                    btnSave.Enabled = False
                    btnSave_F.Enabled = False
                    If btnModify.Enabled = False Then
                    Else
                        btnModify.Enabled = True
                    End If
                    btnDelete.Enabled = False
                End If
            End If
        ElseIf SuperTabControl1.SelectedTabIndex = 1 Then
            btnBack.Enabled = True
            btnNext.Enabled = True

            If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" And PanelEx10.Enabled = True Then
                btnDelete.Enabled = False
                btnModify.Enabled = False
                btnSave.Enabled = True
                btnSave_F.Enabled = True
            Else
                btnAttach.Enabled = True
                If PanelEx10.Enabled = True Then
                    If Draft_Status = "DRAFT" Then
                        btnSave.Enabled = True
                    Else
                        btnSave.Enabled = False
                    End If
                    btnSave_F.Enabled = True
                    btnModify.Enabled = False
                    btnDelete.Enabled = True
                Else
                    btnSave.Enabled = False
                    btnSave_F.Enabled = False
                    If btnModify.Enabled = False Then
                    Else
                        btnModify.Enabled = True
                    End If
                    btnDelete.Enabled = False
                End If
            End If
        ElseIf SuperTabControl1.SelectedTabIndex = 2 Then
            btnBack.Enabled = True
            btnNext.Enabled = True

            If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" And PanelEx10.Enabled = True Then
                btnDelete.Enabled = False
                btnModify.Enabled = False
                btnSave.Enabled = True
                btnSave_F.Enabled = True
            Else
                btnAttach.Enabled = True
                If PanelEx10.Enabled = True Then
                    If Draft_Status = "DRAFT" Then
                        btnSave.Enabled = True
                    Else
                        btnSave.Enabled = False
                    End If
                    btnSave_F.Enabled = True
                    btnModify.Enabled = False
                    btnDelete.Enabled = True
                Else
                    btnSave.Enabled = False
                    btnSave_F.Enabled = False
                    If btnModify.Enabled = False Then
                    Else
                        btnModify.Enabled = True
                    End If
                    btnDelete.Enabled = False
                End If
            End If
        ElseIf SuperTabControl1.SelectedTabIndex = 3 Then
            btnBack.Enabled = True
            btnNext.Enabled = True

            If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" And PanelEx10.Enabled = True Then
                btnDelete.Enabled = False
                btnModify.Enabled = False
                btnSave.Enabled = True
                btnSave_F.Enabled = True
            Else
                btnAttach.Enabled = True
                If PanelEx10.Enabled = True Then
                    If Draft_Status = "DRAFT" Then
                        btnSave.Enabled = True
                    Else
                        btnSave.Enabled = False
                    End If
                    btnSave_F.Enabled = True
                    btnModify.Enabled = False
                    btnDelete.Enabled = True
                Else
                    btnSave.Enabled = False
                    btnSave_F.Enabled = False
                    If btnModify.Enabled = False Then
                    Else
                        btnModify.Enabled = True
                    End If
                    btnDelete.Enabled = False
                End If
            End If
        ElseIf SuperTabControl1.SelectedTabIndex = 4 Then
            btnBack.Enabled = True
            btnNext.Enabled = False
            btnAttach.Enabled = False

            If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" And PanelEx10.Enabled = True Then
                btnDelete.Enabled = False
                btnModify.Enabled = False
                btnSave.Enabled = False
                btnSave_F.Enabled = False
            Else
                If PanelEx10.Enabled = True Then
                    If Draft_Status = "DRAFT" Then
                        btnSave.Enabled = True
                    Else
                        btnSave.Enabled = False
                    End If
                    btnSave_F.Enabled = True
                    btnModify.Enabled = False
                    btnDelete.Enabled = True
                Else
                    btnSave.Enabled = False
                    btnSave_F.Enabled = False
                    If btnModify.Enabled = False Then
                    Else
                        btnModify.Enabled = True
                    End If
                    btnDelete.Enabled = False
                End If
            End If
        End If
    End Sub

    Private Sub BtnNext_Click(sender As Object, e As EventArgs) Handles btnNext.Click
        If SuperTabControl1.SelectedTabIndex = 0 Then
            SuperTabControl1.SelectedTab = tabIncome
        ElseIf SuperTabControl1.SelectedTabIndex = 1 Then
            SuperTabControl1.SelectedTab = tabAppraisal
        ElseIf SuperTabControl1.SelectedTabIndex = 2 Then
            SuperTabControl1.SelectedTab = tabCI
            SuperTabControl2.SelectedTab = tabCredit
        ElseIf SuperTabControl1.SelectedTabIndex = 3 Then
            If SuperTabControl2.SelectedTabIndex = 0 Then
                SuperTabControl2.SelectedTab = tabProperty
            ElseIf SuperTabControl2.SelectedTabIndex = 1 Then
                SuperTabControl2.SelectedTab = tabAdditional
            ElseIf SuperTabControl2.SelectedTabIndex = 2 Then
                SuperTabControl1.SelectedTab = tabList
            End If
        End If
    End Sub

    Private Sub BtnBack_Click(sender As Object, e As EventArgs) Handles btnBack.Click
        If SuperTabControl1.SelectedTabIndex = 4 Then
            SuperTabControl1.SelectedTab = tabCI
            SuperTabControl2.SelectedTab = tabAdditional
        ElseIf SuperTabControl1.SelectedTabIndex = 3 Then
            If SuperTabControl2.SelectedTabIndex = 2 Then
                SuperTabControl2.SelectedTab = tabProperty
            ElseIf SuperTabControl2.SelectedTabIndex = 1 Then
                SuperTabControl2.SelectedTab = tabCredit
            ElseIf SuperTabControl2.SelectedTabIndex = 0 Then
                SuperTabControl1.SelectedTab = tabAppraisal
            End If
        ElseIf SuperTabControl1.SelectedTabIndex = 2 Then
            SuperTabControl1.SelectedTab = tabIncome
        ElseIf SuperTabControl1.SelectedTabIndex = 1 Then
            SuperTabControl1.SelectedTab = tabBorrower
        End If
    End Sub

    Private Sub BtnCancel_Click(sender As Object, e As EventArgs) Handles btnCancel.Click
        If MsgBoxYes(mClose) = MsgBoxResult.Yes Then
            Close()
        End If
    End Sub

    Private Sub BtnApproveCI_Click(sender As Object, e As EventArgs) Handles btnApproveCI.Click
        Dim Approved As New FrmCIApproved
        With Approved
            If BorrowerID.Contains("C") Then
                .Corporate = True
            End If
            .BorrowerID = BorrowerID
            .CreditNumber = CreditNumber
            .CINumber = txtCINumber.Text
            .CbxPrefix_B.Text = CbxPrefix_B.Text
            .TxtFirstN_B.Text = TxtFirstN_B.Text
            .TxtMiddleN_B.Text = TxtMiddleN_B.Text
            .TxtLastN_B.Text = TxtLastN_B.Text
            .cbxSuffix_B.Text = cbxSuffix_B.Text
            .CollateralFromROPOA = CollateralFromROPOA
            Dim DT As DataTable = DataSource(String.Format("SELECT AmountApplied, Terms, TermType, net_proceeds, interest_rate, ServiceCharge_Rate, ApproveStatus, ApprovedAmount_Crecomm, ApprovedTerm_Crecomm, ApprovedInterest_Crecomm, ApprovedSC_Crecomm, BM_Amount, BM_Terms, BM_Interest FROM credit_application WHERE CreditNumber = '{0}';", CreditNumber))
            If DT.Rows.Count > 0 Then
                .dPrincipal.Value = DT(0)("BM_Amount")
                .iTerms.Value = DT(0)("BM_Terms")
                .cbxTerms.Text = DT(0)("TermType")
                .dInterestRate.Value = DT(0)("BM_Interest")
                .dServiceCharge.Value = DT(0)("ServiceCharge_Rate")
                .dNetProceeds_C.Value = DT(0)("net_proceeds")
                .cbxProduct.Text = Product
                .ApproveStatus = DT(0)("ApproveStatus")

                If DT(0)("ApproveStatus") = "For ReApprove" Or DT(0)("ApproveStatus") = "For Special" Then
                    .dPrincipalA.Value = DT(0)("ApprovedAmount_Crecomm")
                    .iTermsA.Value = DT(0)("ApprovedTerm_Crecomm")
                    .cbxTermsA.Text = DT(0)("TermType")
                    .dInterestRateA.Value = DT(0)("ApprovedInterest_Crecomm")
                    .dServiceChargeA.Value = DT(0)("ApprovedSC_Crecomm")
                Else
                    '.dPrincipalA.Value = DT(0)("AmountApplied")
                    '.iTermsA.Value = DT(0)("Terms")
                    '.cbxTermsA.Text = DT(0)("TermType")
                    '.dInterestRateA.Value = DT(0)("interest_rate")
                    .dPrincipalA.Value = DT(0)("BM_Amount")
                    .iTermsA.Value = DT(0)("BM_Terms")
                    .cbxTermsA.Text = DT(0)("TermType")
                    .dInterestRateA.Value = DT(0)("BM_Interest")
                    .dServiceChargeA.Value = DT(0)("ServiceCharge_Rate")
                End If

                .dPrincipalA.MaxValue = DT(0)("BM_Amount")
            End If
            .pb_B.Image = pb_B.Image.Clone
            .lblCINumber.Text = txtCINumber.Text
            .cbxGood.Checked = cbxGood.Checked
            .cbxFair.Checked = cbxFair.Checked
            .cbxPoor.Checked = cbxPoor.Checked
            .rNarrative.Text = rNarrative.Text
            .dTotalDisposable.Value = dTotalDisposable.Value
            .dTotalExpenses.Value = dTotalExpenses.Value
            .dNetDisposable.Value = dNetDisposable.Value
            .dTMFI.Value = dTMFI.Value
            .dTMDI.Value = dTMDI.Value
            .TotalImage = TotalImage_Approval
            Dim TotalLoanable As Double
            For x As Integer = 0 To GridView1.RowCount - 1
                TotalLoanable += CDbl(GridView1.GetRowCellValue(x, "LoanableValue"))
            Next
            For x As Integer = 0 To GridView2.RowCount - 1
                TotalLoanable += CDbl(GridView2.GetRowCellValue(x, "LoanableValue"))
            Next
            .dLoanable.Value = TotalLoanable

            If .ShowDialog = DialogResult.OK Then
                Clear()
                LoadData()
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnRefresh_Click(sender As Object, e As EventArgs) Handles btnRefresh.Click
        If SuperTabControl1.SelectedTabIndex = 4 Then
            LoadData()
        Else
            If MsgBoxYes(mRefresh) = MsgBoxResult.Yes Then
                Clear()
            End If
        End If
    End Sub

#Region "Keydown"
    'PERSONAL INFORMATION
    Private Sub CbxApplication_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxApplication.KeyDown
        If e.KeyCode = Keys.Enter Then
            CbxPrefix_B.Focus()
        End If
    End Sub

    Private Sub CbxPrefix_B_KeyDown(sender As Object, e As KeyEventArgs) Handles CbxPrefix_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtFirstN_B.Focus()
        End If
    End Sub

    Private Sub TxtFirstN_B_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtFirstN_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtMiddleN_B.Focus()
        End If
    End Sub

    Private Sub TxtMiddleN_B_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtMiddleN_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtLastN_B.Focus()
        End If
    End Sub

    Private Sub TxtLastN_B_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtLastN_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSuffix_B.Focus()
        End If
    End Sub

    Private Sub CbxSuffix_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSuffix_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtNoC_B.Focus()
        End If
    End Sub

    Private Sub TxtNoC_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtNoC_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtStreetC_B.Focus()
        End If
    End Sub

    Private Sub TxtStreetC_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtStreetC_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBarangayC_B.Focus()
        End If
    End Sub

    Private Sub TxtBarangayC_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBarangayC_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxAddressC_B.Focus()
        End If
    End Sub

    Private Sub CbxAddressC_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxAddressC_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxResidence.Focus()
        End If
    End Sub

    Private Sub CbxResidence_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxResidence.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxOwned_B.Focus()
        End If
    End Sub

    Private Sub CbxOwned_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxOwned_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxFree_B.Focus()
        End If
    End Sub

    Private Sub CbxFree_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxFree_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxRented_B.Focus()
        End If
    End Sub

    Private Sub CbxRented_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxRented_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dRent_B.Focus()
        End If
    End Sub

    Private Sub DRent_B_KeyDown(sender As Object, e As KeyEventArgs) Handles dRent_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtConfirmed.Focus()
        End If
    End Sub

    Private Sub TxtConfirmed_KeyDown(sender As Object, e As KeyEventArgs) Handles txtConfirmed.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtLengthStay.Focus()
        End If
    End Sub

    Private Sub TxtLengthStay_KeyDown(sender As Object, e As KeyEventArgs) Handles txtLengthStay.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxNeighborhood.Focus()
        End If
    End Sub

    Private Sub CbxNeighborhood_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxNeighborhood.KeyDown
        If e.KeyCode = Keys.Enter Then
            DtpBirth_B.Focus()
        End If
    End Sub

    Private Sub DtpBirth_B_KeyDown(sender As Object, e As KeyEventArgs) Handles DtpBirth_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSingle_B.Focus()
        End If
    End Sub

    Private Sub CbxSingle_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSingle_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxMarried_B.Focus()
        End If
    End Sub

    Private Sub CbxMarried_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxMarried_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSeparated_B.Focus()
        End If
    End Sub

    Private Sub CbxSeparated_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSeparated_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxWidowed_B.Focus()
        End If
    End Sub

    Private Sub CbxWidowed_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxWidowed_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            CbxPrefix_1.Focus()
        End If
    End Sub

    Private Sub CbxPrefix_1_KeyDown(sender As Object, e As KeyEventArgs) Handles CbxPrefix_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtFirstN_1.Focus()
        End If
    End Sub

    Private Sub TxtFirstN_1_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtFirstN_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtMiddleN_1.Focus()
        End If
    End Sub

    Private Sub TxtMiddleN_1_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtMiddleN_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtLastN_1.Focus()
        End If
    End Sub

    Private Sub TxtLastN_1_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtLastN_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSuffix_1.Focus()
        End If
    End Sub

    Private Sub CbxSuffix_1_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSuffix_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            iAge_D1.Focus()
        End If
    End Sub

    Private Sub IAge_D1_KeyDown(sender As Object, e As KeyEventArgs) Handles iAge_D1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtGrade_1.Focus()
        End If
    End Sub

    Private Sub TxtGrade_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtGrade_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchool_1.Focus()
        End If
    End Sub

    Private Sub TxtSchool_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchool_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchoolAddress_1.Focus()
        End If
    End Sub

    Private Sub TxtAddress_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchoolAddress_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            CbxPrefix_2.Focus()
        End If
    End Sub

    Private Sub CbxPrefix_2_KeyDown(sender As Object, e As KeyEventArgs) Handles CbxPrefix_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtFirstN_2.Focus()
        End If
    End Sub

    Private Sub TxtFirstN_2_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtFirstN_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtMiddleN_2.Focus()
        End If
    End Sub

    Private Sub TxtMiddleN_2_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtMiddleN_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtLastN_2.Focus()
        End If
    End Sub

    Private Sub TxtLastN_2_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtLastN_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSuffix_2.Focus()
        End If
    End Sub

    Private Sub CbxSuffix_2_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSuffix_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            iAge_D2.Focus()
        End If
    End Sub

    Private Sub IAge_D2_KeyDown(sender As Object, e As KeyEventArgs) Handles iAge_D2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtGrade_2.Focus()
        End If
    End Sub

    Private Sub TxtGrade_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtGrade_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchool_2.Focus()
        End If
    End Sub

    Private Sub TxtSchool_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchool_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchoolAddress_2.Focus()
        End If
    End Sub

    Private Sub TxtAddress_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchoolAddress_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            CbxPrefix_1.Focus()
        End If
    End Sub

    Private Sub CbxPrefix_3_KeyDown(sender As Object, e As KeyEventArgs) Handles CbxPrefix_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtFirstN_3.Focus()
        End If
    End Sub

    Private Sub TxtFirstN_3_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtFirstN_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtMiddleN_3.Focus()
        End If
    End Sub

    Private Sub TxtMiddleN_3_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtMiddleN_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtLastN_3.Focus()
        End If
    End Sub

    Private Sub TxtLastN_3_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtLastN_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSuffix_3.Focus()
        End If
    End Sub

    Private Sub CbxSuffix_3_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSuffix_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            iAge_D3.Focus()
        End If
    End Sub

    Private Sub IAge_D3_KeyDown(sender As Object, e As KeyEventArgs) Handles iAge_D3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtGrade_3.Focus()
        End If
    End Sub

    Private Sub TxtGrade_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtGrade_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchool_3.Focus()
        End If
    End Sub

    Private Sub TxtSchool_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchool_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchoolAddress_3.Focus()
        End If
    End Sub

    Private Sub TxtAddress_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchoolAddress_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            CbxPrefix_4.Focus()
        End If
    End Sub

    Private Sub CbxPrefix_4_KeyDown(sender As Object, e As KeyEventArgs) Handles CbxPrefix_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtFirstN_4.Focus()
        End If
    End Sub

    Private Sub TxtFirstN_4_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtFirstN_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtMiddleN_4.Focus()
        End If
    End Sub

    Private Sub TxtMiddleN_4_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtMiddleN_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtLastN_4.Focus()
        End If
    End Sub

    Private Sub TxtLastN_4_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtLastN_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSuffix_4.Focus()
        End If
    End Sub

    Private Sub CbxSuffix_4_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSuffix_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            iAge_D4.Focus()
        End If
    End Sub

    Private Sub IAge_D4_KeyDown(sender As Object, e As KeyEventArgs) Handles iAge_D4.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtGrade_4.Focus()
        End If
    End Sub

    Private Sub TxtGrade_4_KeyDown(sender As Object, e As KeyEventArgs) Handles txtGrade_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchool_4.Focus()
        End If
    End Sub

    Private Sub TxtSchool_4_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchool_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchoolAddress_4.Focus()
        End If
    End Sub

    'INCOME CHECKING
    Private Sub TxtAddress_4_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchoolAddress_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxEmployer_B.Focus()
            SuperTabControl1.SelectedTab = tabIncome
        End If
    End Sub

    Private Sub CbxEmployer_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxEmployer_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtEmployerAddress_B.Focus()
        End If
    End Sub

    Private Sub TxtEmployerAddress_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtEmployerAddress_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dtpHired_B.Focus()
        End If
    End Sub

    Private Sub CbxPosition_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxPosition_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dMonthly_B.Focus()
        End If
    End Sub

    Private Sub CbxCasual_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxCasual_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxTemporary_B.Focus()
        End If
    End Sub

    Private Sub CbxTemporary_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxTemporary_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxPermanent_B.Focus()
        End If
    End Sub

    Private Sub CbxPermanent_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxPermanent_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dtpHired_B.Focus()
        End If
    End Sub

    Private Sub DtpHired_B_KeyDown(sender As Object, e As KeyEventArgs) Handles dtpHired_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxCasual_B.Focus()
        End If
    End Sub

    Private Sub DMonthly_B_KeyDown(sender As Object, e As KeyEventArgs) Handles dMonthly_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBusinessName_B.Focus()
        End If
    End Sub

    Private Sub CbxNature_S_KeyDown(sender As Object, e As KeyEventArgs)
        If e.KeyCode = Keys.Enter Then
            txtBusinessName_B.Focus()
        End If
    End Sub

    Private Sub TxtBusiness_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBusinessName_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBusinessAddress_B.Focus()
        End If
    End Sub

    Private Sub TxtBusinessAddress_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBusinessAddress_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dtpBusinessStarted.Focus()
        End If
    End Sub

    Private Sub DtpBusinessStarted_KeyDown(sender As Object, e As KeyEventArgs) Handles dtpBusinessStarted.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxNatureBusiness_B2.Focus()
        End If
    End Sub

    Private Sub CbxBusinessNature_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxNatureBusiness_B2.KeyDown
        If e.KeyCode = Keys.Enter Then
            dCapital_B.Focus()
        End If
    End Sub

    Private Sub DBusinessCapital_KeyDown(sender As Object, e As KeyEventArgs) Handles dCapital_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            iNoEmployees_B.Focus()
        End If
    End Sub

    Private Sub IBusinessEmployees_KeyDown(sender As Object, e As KeyEventArgs) Handles iNoEmployees_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dBusinessStock.Focus()
        End If
    End Sub

    Private Sub DBusinessStock_KeyDown(sender As Object, e As KeyEventArgs) Handles dBusinessStock.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBusinessVehicle.Focus()
        End If
    End Sub

    Private Sub TxtBusinessVehicle_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBusinessVehicle.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBusinessPermit.Focus()
        End If
    End Sub

    Private Sub TxtBusinessPermit_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBusinessPermit.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtOtherIncome_B.Focus()
        End If
    End Sub

    Private Sub TxtOtherBusiness_KeyDown(sender As Object, e As KeyEventArgs) Handles txtOtherIncome_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dOtherIncome_B.Focus()
        End If
    End Sub

    Private Sub DOtherIncome_KeyDown(sender As Object, e As KeyEventArgs) Handles dOtherIncome_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dSalary_B.Focus()
        End If
    End Sub

    Private Sub DSalary_B_KeyDown(sender As Object, e As KeyEventArgs) Handles dSalary_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dSalary_S.Focus()
        End If
    End Sub

    Private Sub DSalary_S_KeyDown(sender As Object, e As KeyEventArgs) Handles dSalary_S.KeyDown
        If e.KeyCode = Keys.Enter Then
            dBusinessNet.Focus()
        End If
    End Sub

    Private Sub DBusinessNet_KeyDown(sender As Object, e As KeyEventArgs) Handles dBusinessNet.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCreditor_1.Focus()
            SuperTabControl1.SelectedTab = tabCI
        End If
    End Sub

    'Credit / Court Checking
    Private Sub DTotalIncome_KeyDown(sender As Object, e As KeyEventArgs) Handles dTotalIncome.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCreditor_1.Focus()
            SuperTabControl1.SelectedTab = tabCI
        End If
    End Sub

    Private Sub TxtCreditName_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtCreditor_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCreditAddress_1.Focus()
        End If
    End Sub

    Private Sub TxtCreditAddress_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtCreditAddress_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            dtpCreditGranted_1.Focus()
        End If
    End Sub

    Private Sub DtpCreditGranted_1_KeyDown(sender As Object, e As KeyEventArgs) Handles dtpCreditGranted_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            iTerm_1.Focus()
        ElseIf e.KeyCode = Keys.Delete Or e.KeyCode = Keys.Escape Then
            dtpCreditGranted_1.CustomFormat = ""
        End If
    End Sub

    Private Sub ICreditTerm_1_KeyDown(sender As Object, e As KeyEventArgs) Handles iTerm_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            dAmountGranted_1.Focus()
        End If
    End Sub

    Private Sub DCreditPrincipal_1_KeyDown(sender As Object, e As KeyEventArgs) Handles dAmountGranted_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            dBalance_1.Focus()
        End If
    End Sub

    Private Sub DCreditOutstanding_1_KeyDown(sender As Object, e As KeyEventArgs) Handles dBalance_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            dCreditPayment_1.Focus()
        End If
    End Sub

    Private Sub DCreditPayment_1_KeyDown(sender As Object, e As KeyEventArgs) Handles dCreditPayment_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCreditRemarks_1.Focus()
        End If
    End Sub

    Private Sub TxtCreditRemarks_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtCreditRemarks_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCreditor_2.Focus()
        End If
    End Sub

    Private Sub TxtCreditName_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtCreditor_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCreditAddress_2.Focus()
        End If
    End Sub

    Private Sub TxtCreditAddress_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtCreditAddress_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            dtpCreditGranted_2.Focus()
        End If
    End Sub

    Private Sub DtpCreditGranted_2_KeyDown(sender As Object, e As KeyEventArgs) Handles dtpCreditGranted_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            iTerm_2.Focus()
        ElseIf e.KeyCode = Keys.Delete Or e.KeyCode = Keys.Escape Then
            dtpCreditGranted_2.CustomFormat = ""
        End If
    End Sub

    Private Sub ICreditTerm_2_KeyDown(sender As Object, e As KeyEventArgs) Handles iTerm_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            dAmountGranted_2.Focus()
        End If
    End Sub

    Private Sub DCreditPrincipal_2_KeyDown(sender As Object, e As KeyEventArgs) Handles dAmountGranted_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            dBalance_2.Focus()
        End If
    End Sub

    Private Sub DCreditOutstanding_2_KeyDown(sender As Object, e As KeyEventArgs) Handles dBalance_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            dCreditPayment_2.Focus()
        End If
    End Sub

    Private Sub DCreditPayment_2_KeyDown(sender As Object, e As KeyEventArgs) Handles dCreditPayment_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCreditRemarks_2.Focus()
        End If
    End Sub

    Private Sub TxtCreditRemarks_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtCreditRemarks_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBank_1.Focus()
        End If
    End Sub

    Private Sub TxtBank_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBank_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBranch_1.Focus()
        End If
    End Sub

    Private Sub TxtBranch_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBranch_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSA_1.Focus()
        End If
    End Sub

    Private Sub CbxSA_1_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSA_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxCA_1.Focus()
        End If
    End Sub

    Private Sub CbxCA_1_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxCA_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSA_1.Focus()
        End If
    End Sub

    Private Sub TxtSA_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSA_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            dAverageBalance_1.Focus()
        End If
    End Sub

    Private Sub DADB_1_KeyDown(sender As Object, e As KeyEventArgs) Handles dAverageBalance_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtOpened_1.Focus()
        End If
    End Sub

    Private Sub DtpOpened_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtOpened_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBank_2.Focus()
        End If
    End Sub

    Private Sub TxtBank_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBank_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBranch_2.Focus()
        End If
    End Sub

    Private Sub TxtBranch_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBranch_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSA_2.Focus()
        End If
    End Sub

    Private Sub CbxSA_2_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSA_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxCA_2.Focus()
        End If
    End Sub

    Private Sub CbxCA_2_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxCA_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSA_2.Focus()
        End If
    End Sub

    Private Sub TxtSA_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSA_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            dAverageBalance_2.Focus()
        End If
    End Sub

    Private Sub DADB_2_KeyDown(sender As Object, e As KeyEventArgs) Handles dAverageBalance_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtOpened_2.Focus()
        End If
    End Sub

    Private Sub DtpOpened_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtOpened_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxGood.Focus()
        End If
    End Sub

    Private Sub CbxGood_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxGood.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxFair.Focus()
        End If
    End Sub

    Private Sub CbxFair_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxFair.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxPoor.Focus()
        End If
    End Sub

    Private Sub CbxPoor_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxPoor.KeyDown
        If e.KeyCode = Keys.Enter Then
            rRecommendation.Focus()
        End If
    End Sub

    Private Sub RRecommendation_KeyDown(sender As Object, e As KeyEventArgs) Handles rRecommendation.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxApproval.Focus()
        End If
    End Sub

    Private Sub CbxApproval_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxApproval.KeyDown
        If e.KeyCode = Keys.Enter Then
            dApprovedAmount.Focus()
        End If
    End Sub

    Private Sub DApprovedAmount_KeyDown(sender As Object, e As KeyEventArgs) Handles dApprovedAmount.KeyDown
        If e.KeyCode = Keys.Enter Then
            iApprovedTerms.Focus()
        End If
    End Sub

    Private Sub IApprovedTerms_KeyDown(sender As Object, e As KeyEventArgs) Handles iApprovedTerms.KeyDown
        If e.KeyCode = Keys.Enter Then
            dApprovedRate.Focus()
        End If
    End Sub

    Private Sub DApprovedRate_KeyDown(sender As Object, e As KeyEventArgs) Handles dApprovedRate.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxPDC.Focus()
        End If
    End Sub

    Private Sub CbxPDC_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxPDC.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxNoPDC.Focus()
        End If
    End Sub

    Private Sub CbxNoPDC_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxNoPDC.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxDisapproval.Focus()
        End If
    End Sub

    Private Sub CbxDisapproval_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxDisapproval.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtTitle.Focus()
        End If
    End Sub

    Private Sub TxtTitle_KeyDown(sender As Object, e As KeyEventArgs) Handles txtTitle.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCaseNum.Focus()
        End If
    End Sub

    Private Sub TxtCaseNum_KeyDown(sender As Object, e As KeyEventArgs) Handles txtCaseNum.KeyDown
        If e.KeyCode = Keys.Enter Then
            dtpDateFilled.Focus()
        End If
    End Sub

    Private Sub DtpDateFilled_KeyDown(sender As Object, e As KeyEventArgs) Handles dtpDateFilled.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxCourt.Focus()
        ElseIf e.KeyCode = Keys.Delete Or e.KeyCode = Keys.Escape Then
            dtpDateFilled.CustomFormat = ""
        End If
    End Sub

    Private Sub CbxCourt_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxCourt.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxCaseNature.Focus()
        End If
    End Sub

    Private Sub CbxCaseNature_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxCaseNature.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxCaseStatus.Focus()
        End If
    End Sub

    Private Sub CbxCaseStatus_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxCaseStatus.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtFindings.Focus()
        End If
    End Sub

    Private Sub CbxFindings_KeyDown(sender As Object, e As KeyEventArgs) Handles txtFindings.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxPositive.Focus()
        End If
    End Sub

    Private Sub CbxPositive_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxPositive.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxNegative.Focus()
        End If
    End Sub

    Private Sub CbxNegative_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxNegative.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxUnestablished.Focus()
        End If
    End Sub

    Private Sub CbxUnestablished_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxUnestablished.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCACPI.Focus()
        End If
    End Sub

    'PROPERTY CHECKING
    Private Sub TxtCACPI_KeyDown(sender As Object, e As KeyEventArgs) Handles txtCACPI.KeyDown
        If e.KeyCode = Keys.Enter Then
            SuperTabControl2.SelectedTab = tabProperty
            txtLocation_1.Focus()
        End If
    End Sub

    Private Sub TxtLocation_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtLocation_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtTCT_1.Focus()
        End If
    End Sub

    Private Sub TxtTCT_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtTCT_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            dArea_1.Focus()
        End If
    End Sub

    Private Sub DArea_1_KeyDown(sender As Object, e As KeyEventArgs) Handles dArea_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtPropertiesRemarks_1.Focus()
        End If
    End Sub

    Private Sub TxtRealEstateRemarks_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtPropertiesRemarks_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtLocation_2.Focus()
        End If
    End Sub

    Private Sub TxtLocation_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtLocation_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtTCT_2.Focus()
        End If
    End Sub

    Private Sub TxtTCT_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtTCT_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            dArea_2.Focus()
        End If
    End Sub

    Private Sub DArea_2_KeyDown(sender As Object, e As KeyEventArgs) Handles dArea_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtPropertiesRemarks_2.Focus()
        End If
    End Sub

    Private Sub TxtRealEstateRemarks_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtPropertiesRemarks_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtVehicle_1.Focus()
        End If
    End Sub

    Private Sub TxtVehicles_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtVehicle_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            dtpYear_1.Focus()
        End If
    End Sub

    Private Sub DtpModel_1_KeyDown(sender As Object, e As KeyEventArgs) Handles dtpYear_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtWhomAcquired_1.Focus()
        ElseIf e.KeyCode = Keys.Delete Or e.KeyCode = Keys.Escape Then
            dtpYear_1.CustomFormat = ""
        End If
    End Sub

    Private Sub TxtAcquired_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtWhomAcquired_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtVehicleRemarks_1.Focus()
        End If
    End Sub

    Private Sub TxtVehicleRemarks_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtVehicleRemarks_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtVehicle_2.Focus()
        End If
    End Sub

    Private Sub TxtVehicles_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtVehicle_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            dtpYear_2.Focus()
        End If
    End Sub

    Private Sub DtpModel_2_KeyDown(sender As Object, e As KeyEventArgs) Handles dtpYear_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtWhomAcquired_2.Focus()
        ElseIf e.KeyCode = Keys.Delete Or e.KeyCode = Keys.Escape Then
            dtpYear_2.CustomFormat = ""
        End If
    End Sub

    Private Sub TxtAcquired_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtWhomAcquired_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtVehicleRemarks_2.Focus()
        End If
    End Sub

    Private Sub TxtVehicleRemarks_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtVehicleRemarks_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtOtherProperties.Focus()
        End If
    End Sub

    Private Sub TxtOtherProperties_KeyDown(sender As Object, e As KeyEventArgs) Handles txtOtherProperties.KeyDown
        If e.KeyCode = Keys.Enter Then
            rNarrative.Focus()
        End If
    End Sub

    'ADDITIONAL INFO
    Private Sub RNarrative_KeyDown(sender As Object, e As KeyEventArgs) Handles rNarrative.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtC1.Focus()
        End If
    End Sub

    Private Sub TxtC1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtC1.KeyDown
        If e.KeyCode = Keys.Enter Then
            If txtC2.Enabled Then
                txtC2.Focus()
            Else
                SuperTabControl2.SelectedTab = tabAdditional
                dLiving.Focus()
            End If
        End If
    End Sub

    Private Sub TxtC2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtC2.KeyDown
        If e.KeyCode = Keys.Enter Then
            If txtC3.Enabled Then
                txtC3.Focus()
            Else
                SuperTabControl2.SelectedTab = tabAdditional
                dLiving.Focus()
            End If
        End If
    End Sub

    Private Sub TxtC3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtC3.KeyDown
        If e.KeyCode = Keys.Enter Then
            If txtC4.Enabled Then
                txtC4.Focus()
            Else
                SuperTabControl2.SelectedTab = tabAdditional
                dLiving.Focus()
            End If
        End If
    End Sub

    Private Sub TxtC4_KeyDown(sender As Object, e As KeyEventArgs) Handles txtC4.KeyDown
        If e.KeyCode = Keys.Enter Then
            If txtC5.Enabled Then
                txtC5.Focus()
            Else
                SuperTabControl2.SelectedTab = tabAdditional
                dLiving.Focus()
            End If
        End If
    End Sub

    Private Sub TxtC5_KeyDown(sender As Object, e As KeyEventArgs) Handles txtC5.KeyDown
        If e.KeyCode = Keys.Enter Then
            If txtC6.Enabled Then
                txtC6.Focus()
            Else
                SuperTabControl2.SelectedTab = tabAdditional
                dLiving.Focus()
            End If
        End If
    End Sub

    Private Sub TxtC6_KeyDown(sender As Object, e As KeyEventArgs) Handles txtC6.KeyDown
        If e.KeyCode = Keys.Enter Then
            If txtC7.Enabled Then
                txtC7.Focus()
            Else
                SuperTabControl2.SelectedTab = tabAdditional
                dLiving.Focus()
            End If
        End If
    End Sub

    Private Sub TxtC7_KeyDown(sender As Object, e As KeyEventArgs) Handles txtC7.KeyDown
        If e.KeyCode = Keys.Enter Then
            If txtC8.Enabled Then
                txtC8.Focus()
            Else
                SuperTabControl2.SelectedTab = tabAdditional
                dLiving.Focus()
            End If
        End If
    End Sub

    Private Sub TxtC8_KeyDown(sender As Object, e As KeyEventArgs) Handles txtC8.KeyDown
        If e.KeyCode = Keys.Enter Then
            If txtC9.Enabled Then
                txtC9.Focus()
            Else
                SuperTabControl2.SelectedTab = tabAdditional
                dLiving.Focus()
            End If
        End If
    End Sub

    Private Sub TxtC9_KeyDown(sender As Object, e As KeyEventArgs) Handles txtC9.KeyDown
        If e.KeyCode = Keys.Enter Then
            SuperTabControl2.SelectedTab = tabAdditional
            dLiving.Focus()
        End If
    End Sub

    Private Sub DTotalDisposable_KeyDown(sender As Object, e As KeyEventArgs) Handles dTotalDisposable.KeyDown
        If e.KeyCode = Keys.Enter Then
            dLiving.Focus()
        End If
    End Sub

    Private Sub DLiving_KeyDown(sender As Object, e As KeyEventArgs) Handles dLiving.KeyDown
        If e.KeyCode = Keys.Enter Then
            dClothing.Focus()
        End If
    End Sub

    Private Sub DClothing_KeyDown(sender As Object, e As KeyEventArgs) Handles dClothing.KeyDown
        If e.KeyCode = Keys.Enter Then
            dEducation.Focus()
        End If
    End Sub

    Private Sub DEducation_KeyDown(sender As Object, e As KeyEventArgs) Handles dEducation.KeyDown
        If e.KeyCode = Keys.Enter Then
            dTransportation.Focus()
        End If
    End Sub

    Private Sub DTransportation_KeyDown(sender As Object, e As KeyEventArgs) Handles dTransportation.KeyDown
        If e.KeyCode = Keys.Enter Then
            dLighths.Focus()
        End If
    End Sub

    Private Sub DLighths_KeyDown(sender As Object, e As KeyEventArgs) Handles dLighths.KeyDown
        If e.KeyCode = Keys.Enter Then
            dInsurance.Focus()
        End If
    End Sub

    Private Sub DInsurance_KeyDown(sender As Object, e As KeyEventArgs) Handles dInsurance.KeyDown
        If e.KeyCode = Keys.Enter Then
            dAmortization.Focus()
        End If
    End Sub

    Private Sub DAmortization_KeyDown(sender As Object, e As KeyEventArgs) Handles dAmortization.KeyDown
        If e.KeyCode = Keys.Enter Then
            dMiscellaneous.Focus()
        End If
    End Sub

    Private Sub DMiscellaneous_KeyDown(sender As Object, e As KeyEventArgs) Handles dMiscellaneous.KeyDown
        If e.KeyCode = Keys.Enter Then
            dTotalExpenses.Focus()
        End If
    End Sub

    Private Sub DTotalExpenses_KeyDown(sender As Object, e As KeyEventArgs) Handles dTotalExpenses.KeyDown
        If e.KeyCode = Keys.Enter Then
            dNetDisposable.Focus()
        End If
    End Sub

    Private Sub DNetDisposable_KeyDown(sender As Object, e As KeyEventArgs) Handles dNetDisposable.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtExpenseRemarks.Focus()
        End If
    End Sub

    Private Sub TxtExpenseRemarks_KeyDown(sender As Object, e As KeyEventArgs) Handles txtExpenseRemarks.KeyDown
        If e.KeyCode = Keys.Enter Then
            rPurposeLoan.Focus()
        End If
    End Sub

    Private Sub DTMFI_KeyDown(sender As Object, e As KeyEventArgs) Handles dTMFI.KeyDown
        If e.KeyCode = Keys.Enter Then
            dTMDI.Focus()
        End If
    End Sub

    Private Sub DTMDI_KeyDown(sender As Object, e As KeyEventArgs) Handles dTMDI.KeyDown
        If e.KeyCode = Keys.Enter Then
            rPurposeLoan.Focus()
        End If
    End Sub

    Private Sub RPurposeLoan_KeyDown(sender As Object, e As KeyEventArgs) Handles rPurposeLoan.KeyDown
        If e.KeyCode = Keys.Enter Then
            rOthers.Focus()
        End If
    End Sub

    Private Sub ROthers_KeyDown(sender As Object, e As KeyEventArgs) Handles rOthers.KeyDown
        If e.KeyCode = Keys.Enter Then
            pbSketch.Focus()
        End If
    End Sub
#End Region

#Region "Leaves"
    Private Sub CbxApplication_Leave(sender As Object, e As EventArgs) Handles cbxApplication.Leave
        cbxApplication.Text = ReplaceText(cbxApplication.Text.Trim)
    End Sub

    Private Sub CbxPrefix_B_Leave(sender As Object, e As EventArgs) Handles CbxPrefix_B.Leave
        CbxPrefix_B.Text = ReplaceText(CbxPrefix_B.Text.Trim)
    End Sub

    Private Sub TxtFirstN_B_Leave(sender As Object, e As EventArgs) Handles TxtFirstN_B.Leave
        TxtFirstN_B.Text = ReplaceText(TxtFirstN_B.Text.Trim)
    End Sub

    Private Sub TxtMiddleN_B_Leave(sender As Object, e As EventArgs) Handles TxtMiddleN_B.Leave
        TxtMiddleN_B.Text = ReplaceText(TxtMiddleN_B.Text.Trim)
    End Sub

    Private Sub TxtLastN_B_Leave(sender As Object, e As EventArgs) Handles TxtLastN_B.Leave
        TxtLastN_B.Text = ReplaceText(TxtLastN_B.Text.Trim)
    End Sub

    Private Sub CbxSuffix_B_Leave(sender As Object, e As EventArgs) Handles cbxSuffix_B.Leave
        cbxSuffix_B.Text = ReplaceText(cbxSuffix_B.Text.Trim)
    End Sub

    Private Sub TxtNoC_B_Leave(sender As Object, e As EventArgs) Handles txtNoC_B.Leave
        txtNoC_B.Text = ReplaceText(txtNoC_B.Text.Trim)
    End Sub

    Private Sub TxtStreetC_B_Leave(sender As Object, e As EventArgs) Handles txtStreetC_B.Leave
        txtStreetC_B.Text = ReplaceText(txtStreetC_B.Text.Trim)
    End Sub

    Private Sub TxtBarangayC_B_Leave(sender As Object, e As EventArgs) Handles txtBarangayC_B.Leave
        txtBarangayC_B.Text = ReplaceText(txtBarangayC_B.Text.Trim)
    End Sub

    Private Sub CbxAddressC_B_Leave(sender As Object, e As EventArgs) Handles cbxAddressC_B.Leave
        cbxAddressC_B.Text = ReplaceText(cbxAddressC_B.Text.Trim)
    End Sub

    Private Sub CbxResidence_Leave(sender As Object, e As EventArgs) Handles cbxResidence.Leave
        cbxResidence.Text = ReplaceText(cbxResidence.Text.Trim)
    End Sub

    Private Sub TxtConfirmed_Leave(sender As Object, e As EventArgs) Handles txtConfirmed.Leave
        txtConfirmed.Text = ReplaceText(txtConfirmed.Text.Trim)
    End Sub

    Private Sub TxtLengthStay_Leave(sender As Object, e As EventArgs) Handles txtLengthStay.Leave
        txtLengthStay.Text = ReplaceText(txtLengthStay.Text.Trim)
    End Sub

    Private Sub CbxNeighborhood_Leave(sender As Object, e As EventArgs) Handles cbxNeighborhood.Leave
        cbxNeighborhood.Text = ReplaceText(cbxNeighborhood.Text.Trim)
    End Sub

    Private Sub CbxPrefix_1_Leave(sender As Object, e As EventArgs) Handles CbxPrefix_1.Leave
        CbxPrefix_1.Text = ReplaceText(CbxPrefix_1.Text.Trim)
    End Sub

    Private Sub TxtFirstN_1_Leave(sender As Object, e As EventArgs) Handles TxtFirstN_1.Leave
        TxtFirstN_1.Text = ReplaceText(TxtFirstN_1.Text.Trim)
    End Sub

    Private Sub TxtMiddleN_1_Leave(sender As Object, e As EventArgs) Handles TxtMiddleN_1.Leave
        TxtMiddleN_1.Text = ReplaceText(TxtMiddleN_1.Text.Trim)
    End Sub

    Private Sub TxtLastN_1_Leave(sender As Object, e As EventArgs) Handles TxtLastN_1.Leave
        TxtLastN_1.Text = ReplaceText(TxtLastN_1.Text.Trim)
    End Sub

    Private Sub CbxSuffix_1_Leave(sender As Object, e As EventArgs) Handles cbxSuffix_1.Leave
        cbxSuffix_1.Text = ReplaceText(cbxSuffix_1.Text.Trim)
    End Sub

    Private Sub TxtGrade_1_Leave(sender As Object, e As EventArgs) Handles txtGrade_1.Leave
        txtGrade_1.Text = ReplaceText(txtGrade_1.Text.Trim)
    End Sub

    Private Sub TxtSchool_1_Leave(sender As Object, e As EventArgs) Handles txtSchool_1.Leave
        txtSchool_1.Text = ReplaceText(txtSchool_1.Text.Trim)
    End Sub

    Private Sub TxtAddress_1_Leave(sender As Object, e As EventArgs) Handles txtSchoolAddress_1.Leave
        txtSchoolAddress_1.Text = ReplaceText(txtSchoolAddress_1.Text.Trim)
    End Sub

    Private Sub CbxPrefix_2_Leave(sender As Object, e As EventArgs) Handles CbxPrefix_2.Leave
        CbxPrefix_2.Text = ReplaceText(CbxPrefix_2.Text.Trim)
    End Sub

    Private Sub TxtFirstN_2_Leave(sender As Object, e As EventArgs) Handles TxtFirstN_2.Leave
        TxtFirstN_2.Text = ReplaceText(TxtFirstN_2.Text.Trim)
    End Sub

    Private Sub TxtMiddleN_2_Leave(sender As Object, e As EventArgs) Handles TxtMiddleN_2.Leave
        TxtMiddleN_2.Text = ReplaceText(TxtMiddleN_2.Text.Trim)
    End Sub

    Private Sub TxtLastN_2_Leave(sender As Object, e As EventArgs) Handles TxtLastN_2.Leave
        TxtLastN_2.Text = ReplaceText(TxtLastN_2.Text.Trim)
    End Sub

    Private Sub CbxSuffix_2_Leave(sender As Object, e As EventArgs) Handles cbxSuffix_2.Leave
        cbxSuffix_2.Text = ReplaceText(cbxSuffix_2.Text.Trim)
    End Sub

    Private Sub TxtGrade_2_Leave(sender As Object, e As EventArgs) Handles txtGrade_2.Leave
        txtGrade_2.Text = ReplaceText(txtGrade_2.Text.Trim)
    End Sub

    Private Sub TxtSchool_2_Leave(sender As Object, e As EventArgs) Handles txtSchool_2.Leave
        txtSchool_2.Text = ReplaceText(txtSchool_2.Text.Trim)
    End Sub

    Private Sub TxtAddress_2_Leave(sender As Object, e As EventArgs) Handles txtSchoolAddress_2.Leave
        txtSchoolAddress_2.Text = ReplaceText(txtSchoolAddress_2.Text.Trim)
    End Sub

    Private Sub CbxPrefix_3_Leave(sender As Object, e As EventArgs) Handles CbxPrefix_3.Leave
        CbxPrefix_3.Text = ReplaceText(CbxPrefix_3.Text.Trim)
    End Sub

    Private Sub TxtFirstN_3_Leave(sender As Object, e As EventArgs) Handles TxtFirstN_3.Leave
        TxtFirstN_3.Text = ReplaceText(TxtFirstN_3.Text.Trim)
    End Sub

    Private Sub TxtMiddleN_3_Leave(sender As Object, e As EventArgs) Handles TxtMiddleN_3.Leave
        TxtMiddleN_3.Text = ReplaceText(TxtMiddleN_3.Text.Trim)
    End Sub

    Private Sub TxtLastN_3_Leave(sender As Object, e As EventArgs) Handles TxtLastN_3.Leave
        TxtLastN_3.Text = ReplaceText(TxtLastN_3.Text.Trim)
    End Sub

    Private Sub CbxSuffix_3_Leave(sender As Object, e As EventArgs) Handles cbxSuffix_3.Leave
        cbxSuffix_3.Text = ReplaceText(cbxSuffix_3.Text.Trim)
    End Sub

    Private Sub TxtGrade_3_Leave(sender As Object, e As EventArgs) Handles txtGrade_3.Leave
        txtGrade_3.Text = ReplaceText(txtGrade_3.Text.Trim)
    End Sub

    Private Sub TxtSchool_3_Leave(sender As Object, e As EventArgs) Handles txtSchool_3.Leave
        txtSchool_3.Text = ReplaceText(txtSchool_3.Text.Trim)
    End Sub

    Private Sub TxtAddress_3_Leave(sender As Object, e As EventArgs) Handles txtSchoolAddress_3.Leave
        txtSchoolAddress_3.Text = ReplaceText(txtSchoolAddress_3.Text.Trim)
    End Sub

    Private Sub CbxPrefix_4_Leave(sender As Object, e As EventArgs) Handles CbxPrefix_4.Leave
        CbxPrefix_4.Text = ReplaceText(CbxPrefix_4.Text.Trim)
    End Sub

    Private Sub TxtFirstN_4_Leave(sender As Object, e As EventArgs) Handles TxtFirstN_4.Leave
        TxtFirstN_4.Text = ReplaceText(TxtFirstN_4.Text.Trim)
    End Sub

    Private Sub TxtMiddleN_4_Leave(sender As Object, e As EventArgs) Handles TxtMiddleN_4.Leave
        TxtMiddleN_4.Text = ReplaceText(TxtMiddleN_4.Text.Trim)
    End Sub

    Private Sub TxtLastN_4_Leave(sender As Object, e As EventArgs) Handles TxtLastN_4.Leave
        TxtLastN_4.Text = ReplaceText(TxtLastN_4.Text.Trim)
    End Sub

    Private Sub CbxSuffix_4_Leave(sender As Object, e As EventArgs) Handles cbxSuffix_4.Leave
        cbxSuffix_4.Text = ReplaceText(cbxSuffix_4.Text.Trim)
    End Sub

    Private Sub TxtGrade_4_Leave(sender As Object, e As EventArgs) Handles txtGrade_4.Leave
        txtGrade_4.Text = ReplaceText(txtGrade_4.Text.Trim)
    End Sub

    Private Sub TxtSchool_4_Leave(sender As Object, e As EventArgs) Handles txtSchool_4.Leave
        txtSchool_4.Text = ReplaceText(txtSchool_4.Text.Trim)
    End Sub

    Private Sub TxtAddress_4_Leave(sender As Object, e As EventArgs) Handles txtSchoolAddress_4.Leave
        txtSchoolAddress_4.Text = ReplaceText(txtSchoolAddress_4.Text.Trim)
    End Sub

    Private Sub CbxEmployer_B_Leave(sender As Object, e As EventArgs) Handles cbxEmployer_B.Leave
        cbxEmployer_B.Text = ReplaceText(cbxEmployer_B.Text.Trim)
    End Sub

    Private Sub TxtEmployerAddress_B_Leave(sender As Object, e As EventArgs) Handles txtEmployerAddress_B.Leave
        txtEmployerAddress_B.Text = ReplaceText(txtEmployerAddress_B.Text.Trim)
    End Sub

    Private Sub CbxPosition_B_Leave(sender As Object, e As EventArgs) Handles cbxPosition_B.Leave
        cbxPosition_B.Text = ReplaceText(cbxPosition_B.Text.Trim)
    End Sub

    Private Sub TxtBusiness_Leave(sender As Object, e As EventArgs) Handles txtBusinessName_B.Leave
        txtBusinessName_B.Text = ReplaceText(txtBusinessName_B.Text.Trim)
    End Sub

    Private Sub TxtBusinessAddress_Leave(sender As Object, e As EventArgs) Handles txtBusinessAddress_B.Leave
        txtBusinessAddress_B.Text = ReplaceText(txtBusinessAddress_B.Text.Trim)
    End Sub

    Private Sub CbxBusinessNature_Leave(sender As Object, e As EventArgs) Handles cbxBusinessNature.Leave
        cbxBusinessNature.Text = ReplaceText(cbxBusinessNature.Text.Trim)
    End Sub

    Private Sub TxtBusinessVehicle_Leave(sender As Object, e As EventArgs) Handles txtBusinessVehicle.Leave
        txtBusinessVehicle.Text = ReplaceText(txtBusinessVehicle.Text.Trim)
    End Sub

    Private Sub TxtBusinessPermit_Leave(sender As Object, e As EventArgs) Handles txtBusinessPermit.Leave
        txtBusinessPermit.Text = ReplaceText(txtBusinessPermit.Text.Trim)
    End Sub

    Private Sub TxtOtherBusiness_Leave(sender As Object, e As EventArgs) Handles txtOtherIncome_B.Leave
        txtOtherIncome_B.Text = ReplaceText(txtOtherIncome_B.Text.Trim)
    End Sub

    Private Sub TxtCreditName_1_Leave(sender As Object, e As EventArgs) Handles txtCreditor_1.Leave
        txtCreditor_1.Text = ReplaceText(txtCreditor_1.Text.Trim)
    End Sub

    Private Sub TxtCreditAddress_1_Leave(sender As Object, e As EventArgs) Handles txtCreditAddress_1.Leave
        txtCreditAddress_1.Text = ReplaceText(txtCreditAddress_1.Text.Trim)
    End Sub

    Private Sub TxtCreditRemarks_1_Leave(sender As Object, e As EventArgs) Handles txtCreditRemarks_1.Leave
        txtCreditRemarks_1.Text = ReplaceText(txtCreditRemarks_1.Text.Trim)
    End Sub

    Private Sub TxtCreditName_2_Leave(sender As Object, e As EventArgs) Handles txtCreditor_2.Leave
        txtCreditor_2.Text = ReplaceText(txtCreditor_2.Text.Trim)
    End Sub

    Private Sub TxtCreditAddress_2_Leave(sender As Object, e As EventArgs) Handles txtCreditAddress_2.Leave
        txtCreditAddress_2.Text = ReplaceText(txtCreditAddress_2.Text.Trim)
    End Sub

    Private Sub TxtCreditRemarks_2_Leave(sender As Object, e As EventArgs) Handles txtCreditRemarks_2.Leave
        txtCreditRemarks_2.Text = ReplaceText(txtCreditRemarks_2.Text.Trim)
    End Sub

    Private Sub TxtBank_1_Leave(sender As Object, e As EventArgs) Handles txtBank_1.Leave
        txtBank_1.Text = ReplaceText(txtBank_1.Text.Trim)
    End Sub

    Private Sub TxtBranch_1_Leave(sender As Object, e As EventArgs) Handles txtBranch_1.Leave
        txtBranch_1.Text = ReplaceText(txtBranch_1.Text.Trim)
    End Sub

    Private Sub TxtSA_1_Leave(sender As Object, e As EventArgs) Handles txtSA_1.Leave
        txtSA_1.Text = ReplaceText(txtSA_1.Text.Trim)
    End Sub

    Private Sub TxtBank_2_Leave(sender As Object, e As EventArgs) Handles txtBank_2.Leave
        txtBank_2.Text = ReplaceText(txtBank_2.Text.Trim)
    End Sub

    Private Sub TxtBranch_2_Leave(sender As Object, e As EventArgs) Handles txtBranch_2.Leave
        txtBranch_2.Text = ReplaceText(txtBranch_2.Text.Trim)
    End Sub

    Private Sub TxtAccountNum_2_Leave(sender As Object, e As EventArgs) Handles txtSA_2.Leave
        txtSA_2.Text = ReplaceText(txtSA_2.Text.Trim)
    End Sub

    Private Sub RRecommendation_Leave(sender As Object, e As EventArgs) Handles rRecommendation.Leave
        rRecommendation.Text = ReplaceText(rRecommendation.Text.Trim)
    End Sub

    Private Sub TxtTitle_Leave(sender As Object, e As EventArgs) Handles txtTitle.Leave
        txtTitle.Text = ReplaceText(txtTitle.Text.Trim)
    End Sub

    Private Sub TxtCaseNum_Leave(sender As Object, e As EventArgs) Handles txtCaseNum.Leave
        txtCaseNum.Text = ReplaceText(txtCaseNum.Text.Trim)
    End Sub

    Private Sub CbxCourt_Leave(sender As Object, e As EventArgs) Handles cbxCourt.Leave
        cbxCourt.Text = ReplaceText(cbxCourt.Text.Trim)
    End Sub

    Private Sub CbxCaseNature_Leave(sender As Object, e As EventArgs) Handles cbxCaseNature.Leave
        cbxCaseNature.Text = ReplaceText(cbxCaseNature.Text.Trim)
    End Sub

    Private Sub CbxCaseStatus_Leave(sender As Object, e As EventArgs) Handles cbxCaseStatus.Leave
        cbxCaseStatus.Text = ReplaceText(cbxCaseStatus.Text.Trim)
    End Sub

    Private Sub CbxFindings_Leave(sender As Object, e As EventArgs) Handles txtFindings.Leave
        txtFindings.Text = ReplaceText(txtFindings.Text.Trim)
    End Sub

    Private Sub TxtCACPI_Leave(sender As Object, e As EventArgs) Handles txtCACPI.Leave
        txtCACPI.Text = ReplaceText(txtCACPI.Text.Trim)
    End Sub

    Private Sub TxtLocation_1_Leave(sender As Object, e As EventArgs) Handles txtLocation_1.Leave
        txtLocation_1.Text = ReplaceText(txtLocation_1.Text.Trim)
    End Sub

    Private Sub TxtTCT_1_Leave(sender As Object, e As EventArgs) Handles txtTCT_1.Leave
        txtTCT_1.Text = ReplaceText(txtTCT_1.Text.Trim)
    End Sub

    Private Sub TxtRealEstateRemarks_1_Leave(sender As Object, e As EventArgs) Handles txtPropertiesRemarks_1.Leave
        txtPropertiesRemarks_1.Text = ReplaceText(txtPropertiesRemarks_1.Text.Trim)
    End Sub

    Private Sub TxtLocation_2_Leave(sender As Object, e As EventArgs) Handles txtLocation_2.Leave
        txtLocation_2.Text = ReplaceText(txtLocation_2.Text.Trim)
    End Sub

    Private Sub TxtTCT_2_Leave(sender As Object, e As EventArgs) Handles txtTCT_2.Leave
        txtTCT_2.Text = ReplaceText(txtTCT_2.Text.Trim)
    End Sub

    Private Sub TxtRealEstateRemarks_2_Leave(sender As Object, e As EventArgs) Handles txtPropertiesRemarks_2.Leave
        txtPropertiesRemarks_2.Text = ReplaceText(txtPropertiesRemarks_2.Text.Trim)
    End Sub

    Private Sub TxtVehicles_1_Leave(sender As Object, e As EventArgs) Handles txtVehicle_1.Leave
        txtVehicle_1.Text = ReplaceText(txtVehicle_1.Text.Trim)
    End Sub

    Private Sub TxtAcquired_1_Leave(sender As Object, e As EventArgs) Handles txtWhomAcquired_1.Leave
        txtWhomAcquired_1.Text = ReplaceText(txtWhomAcquired_1.Text.Trim)
    End Sub

    Private Sub TxtVehicleRemarks_1_Leave(sender As Object, e As EventArgs) Handles txtVehicleRemarks_1.Leave
        txtVehicleRemarks_1.Text = ReplaceText(txtVehicleRemarks_1.Text.Trim)
    End Sub

    Private Sub TxtVehicles_2_Leave(sender As Object, e As EventArgs) Handles txtVehicle_2.Leave
        txtVehicle_2.Text = ReplaceText(txtVehicle_2.Text.Trim)
    End Sub

    Private Sub TxtAcquired_2_Leave(sender As Object, e As EventArgs) Handles txtWhomAcquired_2.Leave
        txtWhomAcquired_2.Text = ReplaceText(txtWhomAcquired_2.Text.Trim)
    End Sub

    Private Sub TxtVehicleRemarks_2_Leave(sender As Object, e As EventArgs) Handles txtVehicleRemarks_2.Leave
        txtVehicleRemarks_2.Text = ReplaceText(txtVehicleRemarks_2.Text.Trim)
    End Sub

    Private Sub TxtOtherProperties_Leave(sender As Object, e As EventArgs) Handles txtOtherProperties.Leave
        txtOtherProperties.Text = ReplaceText(txtOtherProperties.Text.Trim)
    End Sub

    Private Sub RNarrative_Leave(sender As Object, e As EventArgs) Handles rNarrative.Leave
        rNarrative.Text = ReplaceTextWithQuote(rNarrative.Text.Trim)
    End Sub

    Private Sub TxtC1_Leave(sender As Object, e As EventArgs) Handles txtC1.Leave
        txtC1.Text = ReplaceTextWithQuote(txtC1.Text.Trim)
    End Sub

    Private Sub TxtC2_Leave(sender As Object, e As EventArgs) Handles txtC2.Leave
        txtC2.Text = ReplaceTextWithQuote(txtC2.Text.Trim)
    End Sub

    Private Sub TxtC3_Leave(sender As Object, e As EventArgs) Handles txtC3.Leave
        txtC3.Text = ReplaceTextWithQuote(txtC3.Text.Trim)
    End Sub

    Private Sub TxtC4_Leave(sender As Object, e As EventArgs) Handles txtC4.Leave
        txtC4.Text = ReplaceTextWithQuote(txtC4.Text.Trim)
    End Sub

    Private Sub TxtC5_Leave(sender As Object, e As EventArgs) Handles txtC5.Leave
        txtC5.Text = ReplaceTextWithQuote(txtC5.Text.Trim)
    End Sub

    Private Sub TxtC6_Leave(sender As Object, e As EventArgs) Handles txtC6.Leave
        txtC6.Text = ReplaceTextWithQuote(txtC6.Text.Trim)
    End Sub

    Private Sub TxtC7_Leave(sender As Object, e As EventArgs) Handles txtC7.Leave
        txtC7.Text = ReplaceTextWithQuote(txtC7.Text.Trim)
    End Sub

    Private Sub TxtC8_Leave(sender As Object, e As EventArgs) Handles txtC8.Leave
        txtC8.Text = ReplaceTextWithQuote(txtC8.Text.Trim)
    End Sub

    Private Sub TxtC9_Leave(sender As Object, e As EventArgs) Handles txtC9.Leave
        txtC9.Text = ReplaceTextWithQuote(txtC9.Text.Trim)
    End Sub

    Private Sub RPurposeLoan_Leave(sender As Object, e As EventArgs) Handles rPurposeLoan.Leave
        rPurposeLoan.Text = ReplaceTextWithQuote(rPurposeLoan.Text.Trim)
    End Sub

    Private Sub ROthers_Leave(sender As Object, e As EventArgs) Handles rOthers.Leave
        rOthers.Text = ReplaceTextWithQuote(rOthers.Text.Trim)
    End Sub
#End Region

    '***CHECKED CHANGED
    'HOUSE
    Private Sub CbxOwned_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxOwned_B.CheckedChanged
        If cbxOwned_B.Checked Then
            cbxFree_B.Checked = False
            cbxRented_B.Checked = False

            dRent_B.Enabled = False
        End If
    End Sub

    Private Sub CbxFree_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxFree_B.CheckedChanged
        If cbxFree_B.Checked Then
            cbxOwned_B.Checked = False
            cbxRented_B.Checked = False

            dRent_B.Enabled = False
        End If
    End Sub

    Private Sub CbxRented_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxRented_B.CheckedChanged
        If cbxRented_B.Checked Then
            cbxOwned_B.Checked = False
            cbxFree_B.Checked = False

            dRent_B.Enabled = True
        End If
    End Sub

    'CIVIL STATUS
    Private Sub CbxSingle_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxSingle_B.CheckedChanged
        If cbxSingle_B.Checked Then
            btnSN.Enabled = False
            cbxMarried_B.Checked = False
            cbxSeparated_B.Checked = False
            cbxWidowed_B.Checked = False
        End If
    End Sub

    Private Sub CbxMarried_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxMarried_B.CheckedChanged
        If cbxMarried_B.Checked Then
            btnSN.Enabled = True
            cbxSingle_B.Checked = False
            cbxSeparated_B.Checked = False
            cbxWidowed_B.Checked = False

            If vPrefix_S = "" And vFirstN_S = "" And vMiddleN_S = "" And vLastN_S = "" And vSuffix_S = "" Then
            Else
                If CbxPrefix_S.Text = "" Then
                    CbxPrefix_S.Text = vPrefix_S
                End If
                If TxtFirstN_S.Text = "" Then
                    TxtFirstN_S.Text = vFirstN_S
                End If
                If TxtMiddleN_S.Text = "" Then
                    TxtMiddleN_S.Text = vMiddleN_S
                End If
                If TxtLastN_S.Text = "" Then
                    TxtLastN_S.Text = vLastN_S
                End If
                If cbxSuffix_S.Text = "" Then
                    cbxSuffix_S.Text = vSuffix_S
                End If
            End If
        Else
            btnSN.Enabled = False
            CbxPrefix_S.Enabled = False
            TxtFirstN_S.Enabled = False
            TxtMiddleN_S.Enabled = False
            TxtLastN_S.Enabled = False
            cbxSuffix_S.Enabled = False

            vPrefix_S = CbxPrefix_S.Text
            vFirstN_S = TxtFirstN_S.Text
            vMiddleN_S = TxtMiddleN_S.Text
            vLastN_S = TxtLastN_S.Text
            vSuffix_S = cbxSuffix_S.Text

            CbxPrefix_S.Text = ""
            TxtFirstN_S.Text = ""
            TxtMiddleN_S.Text = ""
            TxtLastN_S.Text = ""
            cbxSuffix_S.Text = ""
        End If
    End Sub

    Private Sub CbxSeparated_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxSeparated_B.CheckedChanged
        If cbxSeparated_B.Checked Then
            btnSN.Enabled = True
            cbxSingle_B.Checked = False
            cbxMarried_B.Checked = False
            cbxWidowed_B.Checked = False

            If vPrefix_S = "" And vFirstN_S = "" And vMiddleN_S = "" And vLastN_S = "" And vSuffix_S = "" Then
            Else
                If CbxPrefix_S.Text = "" Then
                    CbxPrefix_S.Text = vPrefix_S
                End If
                If TxtFirstN_S.Text = "" Then
                    TxtFirstN_S.Text = vFirstN_S
                End If
                If TxtMiddleN_S.Text = "" Then
                    TxtMiddleN_S.Text = vMiddleN_S
                End If
                If TxtLastN_S.Text = "" Then
                    TxtLastN_S.Text = vLastN_S
                End If
                If cbxSuffix_S.Text = "" Then
                    cbxSuffix_S.Text = vSuffix_S
                End If
            End If
        Else
            btnSN.Enabled = False
            CbxPrefix_S.Enabled = False
            TxtFirstN_S.Enabled = False
            TxtMiddleN_S.Enabled = False
            TxtLastN_S.Enabled = False
            cbxSuffix_S.Enabled = False

            vPrefix_S = CbxPrefix_S.Text
            vFirstN_S = TxtFirstN_S.Text
            vMiddleN_S = TxtMiddleN_S.Text
            vLastN_S = TxtLastN_S.Text
            vSuffix_S = cbxSuffix_S.Text

            CbxPrefix_S.Text = ""
            TxtFirstN_S.Text = ""
            TxtMiddleN_S.Text = ""
            TxtLastN_S.Text = ""
            cbxSuffix_S.Text = ""
        End If
    End Sub

    Private Sub CbxWidowed_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxWidowed_B.CheckedChanged
        If cbxWidowed_B.Checked Then
            btnSN.Enabled = False
            cbxSingle_B.Checked = False
            cbxMarried_B.Checked = False
            cbxSeparated_B.Checked = False
        End If
    End Sub

    'EMPLOYMENT BORROWER
    Private Sub CbxCasual_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCasual_B.CheckedChanged
        If cbxCasual_B.Checked Then
            cbxTemporary_B.Checked = False
            cbxPermanent_B.Checked = False
        End If
    End Sub

    Private Sub CbxTemporary_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxTemporary_B.CheckedChanged
        If cbxTemporary_B.Checked Then
            cbxCasual_B.Checked = False
            cbxPermanent_B.Checked = False
        End If
    End Sub

    Private Sub CbxPermanent_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxPermanent_B.CheckedChanged
        If cbxPermanent_B.Checked Then
            cbxCasual_B.Checked = False
            cbxTemporary_B.Checked = False
        End If
    End Sub

    'RATING
    Private Sub CbxGood_CheckedChanged(sender As Object, e As EventArgs) Handles cbxGood.CheckedChanged
        If cbxGood.Checked Then
            cbxFair.Checked = False
            cbxPoor.Checked = False
        End If
    End Sub

    Private Sub CbxFair_CheckedChanged(sender As Object, e As EventArgs) Handles cbxFair.CheckedChanged
        If cbxFair.Checked Then
            cbxGood.Checked = False
            cbxPoor.Checked = False
        End If
    End Sub

    Private Sub CbxPoor_CheckedChanged(sender As Object, e As EventArgs) Handles cbxPoor.CheckedChanged
        If cbxPoor.Checked Then
            cbxGood.Checked = False
            cbxFair.Checked = False
        End If
    End Sub

    'APPROVAL
    Private Sub CbxApproval_CheckedChanged(sender As Object, e As EventArgs) Handles cbxApproval.CheckedChanged
        If cbxApproval.Checked Then
            cbxDisapproval.Checked = False

            dApprovedAmount.Enabled = True
            iApprovedTerms.Enabled = True
            dApprovedRate.Enabled = True

            cbxPDC.Enabled = True
            cbxNoPDC.Enabled = True

            If RetrieveData Then
            Else
                dApprovedAmount.Value = AmountApplied
                iApprovedTerms.Value = Terms
                dApprovedRate.Value = Interest
                If btnVehicleAppraisal.Enabled Or btnRealEstate.Enabled Then
                    cbxPDC.Checked = True
                Else
                    cbxNoPDC.Checked = True
                End If
                Exit Sub
            End If
            If vApprovedAmount = 0 And vApprovedTerms = 0 And vApprovedRate = 0 And vPDC = False And vNoPDC = False Then
            Else
                If dApprovedAmount.Value = 0 Then
                    dApprovedAmount.Value = vApprovedAmount
                End If
                If iApprovedTerms.Value = 0 Then
                    iApprovedTerms.Value = vApprovedTerms
                End If
                If dApprovedRate.Value = 0 Then
                    dApprovedRate.Value = vApprovedRate
                End If
                If cbxPDC.Checked = False Then
                    cbxPDC.Checked = vPDC
                End If
                If cbxNoPDC.Checked = False Then
                    cbxNoPDC.Checked = vNoPDC
                End If
            End If
        Else
            dApprovedAmount.Enabled = False
            iApprovedTerms.Enabled = False
            dApprovedRate.Enabled = False

            cbxPDC.Enabled = False
            cbxNoPDC.Enabled = False

            vApprovedAmount = dApprovedAmount.Value
            vApprovedTerms = iApprovedTerms.Value
            vApprovedRate = dApprovedRate.Value
            vPDC = cbxPDC.Checked
            vNoPDC = cbxNoPDC.Checked

            dApprovedAmount.Value = 0
            iApprovedTerms.Value = 0
            dApprovedRate.Value = 0
            cbxPDC.Checked = False
            cbxNoPDC.Checked = False
        End If
    End Sub

    Private Sub CbxDisapproval_CheckedChanged(sender As Object, e As EventArgs) Handles cbxDisapproval.CheckedChanged
        If cbxDisapproval.Checked Then
            cbxApproval.Checked = False
        End If
    End Sub

    'PDC
    Private Sub CbxPDC_CheckedChanged(sender As Object, e As EventArgs) Handles cbxPDC.CheckedChanged
        If cbxPDC.Checked Then
            cbxNoPDC.Checked = False
        End If
    End Sub

    Private Sub CbxNoPDC_CheckedChanged(sender As Object, e As EventArgs) Handles cbxNoPDC.CheckedChanged
        If cbxNoPDC.Checked Then
            cbxPDC.Checked = False
        End If
    End Sub

    'POSITIVE
    Private Sub CbxPositive_CheckedChanged(sender As Object, e As EventArgs) Handles cbxPositive.CheckedChanged
        If cbxPositive.Checked Then
            cbxNegative.Checked = False
            cbxUnestablished.Checked = False
        End If
    End Sub

    Private Sub CbxNegative_CheckedChanged(sender As Object, e As EventArgs) Handles cbxNegative.CheckedChanged
        If cbxNegative.Checked Then
            cbxPositive.Checked = False
            cbxUnestablished.Checked = False
        End If
    End Sub

    Private Sub CbxUnestablished_CheckedChanged(sender As Object, e As EventArgs) Handles cbxUnestablished.CheckedChanged
        If cbxUnestablished.Checked Then
            cbxPositive.Checked = False
            cbxNegative.Checked = False
        End If
    End Sub

    'ERROR PREVENTION
    Private Sub TxtFirstN_1_TextChanged(sender As Object, e As EventArgs) Handles TxtFirstN_1.TextChanged
        If TxtFirstN_1.Text.Trim = "" Then
            TxtMiddleN_1.Enabled = False
            TxtLastN_1.Enabled = False
            cbxSuffix_1.Enabled = False
            iAge_D1.Enabled = False
            txtGrade_1.Enabled = False
            txtSchool_1.Enabled = False
            txtSchoolAddress_1.Enabled = False
            CbxPrefix_2.Enabled = False
            TxtFirstN_2.Enabled = False

            vMiddleN_1 = TxtMiddleN_1.Text
            vLastN_1 = TxtLastN_1.Text
            vSuffix_1 = cbxSuffix_1.Text
            vGrade_1 = txtGrade_1.Text
            vSchool_1 = txtSchool_1.Text
            vSchoolAddress_1 = txtSchoolAddress_1.Text
            vPrefix_2 = CbxPrefix_2.Text
            vFirstN_2 = TxtFirstN_2.Text

            TxtMiddleN_1.Text = ""
            TxtLastN_1.Text = ""
            cbxSuffix_1.Text = ""
            txtGrade_1.Text = ""
            txtSchool_1.Text = ""
            txtSchoolAddress_1.Text = ""
            CbxPrefix_2.Text = ""
            TxtFirstN_2.Text = ""
        Else
            TxtMiddleN_1.Enabled = True
            TxtLastN_1.Enabled = True
            cbxSuffix_1.Enabled = True
            iAge_D1.Enabled = True
            txtGrade_1.Enabled = True
            txtSchool_1.Enabled = True
            txtSchoolAddress_1.Enabled = True
            CbxPrefix_2.Enabled = True
            TxtFirstN_2.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vMiddleN_1 = "" And vLastN_1 = "" And vSuffix_1 = "" And vGrade_1 = "" And vSchool_1 = "" And vSchoolAddress_1 = "" And vPrefix_2 = "" And vFirstN_2 = "" Then
            Else
                If TxtMiddleN_1.Text = "" Then
                    TxtMiddleN_1.Text = vMiddleN_1
                End If
                If TxtLastN_1.Text = "" Then
                    TxtLastN_1.Text = vLastN_1
                End If
                If cbxSuffix_1.Text = "" Then
                    cbxSuffix_1.Text = vSuffix_1
                End If
                If txtGrade_1.Text = "" Then
                    txtGrade_1.Text = vGrade_1
                End If
                If txtSchool_1.Text = "" Then
                    txtSchool_1.Text = vSchool_1
                End If
                If txtSchoolAddress_1.Text = "" Then
                    txtSchoolAddress_1.Text = vSchoolAddress_1
                End If
                If CbxPrefix_2.Text = "" Then
                    CbxPrefix_2.Text = vPrefix_2
                End If
                If TxtFirstN_2.Text = "" Then
                    TxtFirstN_2.Text = vFirstN_2
                End If
            End If
        End If
    End Sub

    Private Sub TxtFirstN_2_TextChanged(sender As Object, e As EventArgs) Handles TxtFirstN_2.TextChanged
        If TxtFirstN_2.Text.Trim = "" Then
            TxtMiddleN_2.Enabled = False
            TxtLastN_2.Enabled = False
            cbxSuffix_2.Enabled = False
            iAge_D2.Enabled = False
            txtGrade_2.Enabled = False
            txtSchool_2.Enabled = False
            txtSchoolAddress_2.Enabled = False
            CbxPrefix_3.Enabled = False
            TxtFirstN_3.Enabled = False

            vMiddleN_2 = TxtMiddleN_2.Text
            vLastN_2 = TxtLastN_2.Text
            vSuffix_2 = cbxSuffix_2.Text
            vGrade_2 = txtGrade_2.Text
            vSchool_2 = txtSchool_2.Text
            vSchoolAddress_2 = txtSchoolAddress_2.Text
            vPrefix_3 = CbxPrefix_3.Text
            vFirstN_3 = TxtFirstN_3.Text

            TxtMiddleN_2.Text = ""
            TxtLastN_2.Text = ""
            cbxSuffix_2.Text = ""
            txtGrade_2.Text = ""
            txtSchool_2.Text = ""
            txtSchoolAddress_2.Text = ""
            CbxPrefix_3.Text = ""
            TxtFirstN_3.Text = ""
        Else
            TxtMiddleN_2.Enabled = True
            TxtLastN_2.Enabled = True
            cbxSuffix_2.Enabled = True
            iAge_D2.Enabled = True
            txtGrade_2.Enabled = True
            txtSchool_2.Enabled = True
            txtSchoolAddress_2.Enabled = True
            CbxPrefix_3.Enabled = True
            TxtFirstN_3.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vMiddleN_2 = "" And vLastN_2 = "" And vSuffix_2 = "" And vGrade_2 = "" And vSchool_2 = "" And vSchoolAddress_2 = "" And vPrefix_3 = "" And vFirstN_3 = "" Then
            Else
                If TxtMiddleN_2.Text = "" Then
                    TxtMiddleN_2.Text = vMiddleN_2
                End If
                If TxtLastN_2.Text = "" Then
                    TxtLastN_2.Text = vLastN_2
                End If
                If cbxSuffix_2.Text = "" Then
                    cbxSuffix_2.Text = vSuffix_2
                End If
                If txtGrade_2.Text = "" Then
                    txtGrade_2.Text = vGrade_2
                End If
                If txtSchool_2.Text = "" Then
                    txtSchool_2.Text = vSchool_2
                End If
                If txtSchoolAddress_2.Text = "" Then
                    txtSchoolAddress_2.Text = vSchoolAddress_2
                End If
                If CbxPrefix_3.Text = "" Then
                    CbxPrefix_3.Text = vPrefix_3
                End If
                If TxtFirstN_3.Text = "" Then
                    TxtFirstN_3.Text = vFirstN_3
                End If
            End If
        End If
    End Sub

    Private Sub TxtFirstN_3_TextChanged(sender As Object, e As EventArgs) Handles TxtFirstN_3.TextChanged
        If TxtFirstN_3.Text.Trim = "" Then
            TxtMiddleN_3.Enabled = False
            TxtLastN_3.Enabled = False
            cbxSuffix_3.Enabled = False
            iAge_D3.Enabled = False
            txtGrade_3.Enabled = False
            txtSchool_3.Enabled = False
            txtSchoolAddress_3.Enabled = False
            CbxPrefix_4.Enabled = False
            TxtFirstN_4.Enabled = False

            vMiddleN_3 = TxtMiddleN_3.Text
            vLastN_3 = TxtLastN_3.Text
            vSuffix_3 = cbxSuffix_3.Text
            vGrade_3 = txtGrade_3.Text
            vSchool_3 = txtSchool_3.Text
            vSchoolAddress_3 = txtSchoolAddress_3.Text
            vPrefix_4 = CbxPrefix_4.Text
            vFirstN_4 = TxtFirstN_4.Text

            TxtMiddleN_3.Text = ""
            TxtLastN_3.Text = ""
            cbxSuffix_3.Text = ""
            txtGrade_3.Text = ""
            txtSchool_3.Text = ""
            txtSchoolAddress_3.Text = ""
            CbxPrefix_4.Text = ""
            TxtFirstN_4.Text = ""
        Else
            TxtMiddleN_3.Enabled = True
            TxtLastN_3.Enabled = True
            cbxSuffix_3.Enabled = True
            iAge_D3.Enabled = True
            txtGrade_3.Enabled = True
            txtSchool_3.Enabled = True
            txtSchoolAddress_3.Enabled = True
            CbxPrefix_4.Enabled = True
            TxtFirstN_4.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vMiddleN_3 = "" And vLastN_3 = "" And vSuffix_3 = "" And vGrade_3 = "" And vSchool_3 = "" And vSchoolAddress_3 = "" And vPrefix_4 = "" And vFirstN_4 = "" Then
            Else
                If TxtMiddleN_3.Text = "" Then
                    TxtMiddleN_3.Text = vMiddleN_3
                End If
                If TxtLastN_3.Text = "" Then
                    TxtLastN_3.Text = vLastN_3
                End If
                If cbxSuffix_3.Text = "" Then
                    cbxSuffix_3.Text = vSuffix_3
                End If
                If txtGrade_3.Text = "" Then
                    txtGrade_3.Text = vGrade_3
                End If
                If txtSchool_3.Text = "" Then
                    txtSchool_3.Text = vSchool_3
                End If
                If txtSchoolAddress_3.Text = "" Then
                    txtSchoolAddress_3.Text = vSchoolAddress_3
                End If
                If CbxPrefix_4.Text = "" Then
                    CbxPrefix_4.Text = vPrefix_4
                End If
                If TxtFirstN_4.Text = "" Then
                    TxtFirstN_4.Text = vFirstN_4
                End If
            End If
        End If
    End Sub

    Private Sub TxtFirstN_4_TextChanged(sender As Object, e As EventArgs) Handles TxtFirstN_4.TextChanged
        If TxtFirstN_4.Text.Trim = "" Then
            TxtMiddleN_4.Enabled = False
            TxtLastN_4.Enabled = False
            cbxSuffix_4.Enabled = False
            iAge_D4.Enabled = False
            txtGrade_4.Enabled = False
            txtSchool_4.Enabled = False
            txtSchoolAddress_4.Enabled = False

            vMiddleN_4 = TxtMiddleN_4.Text
            vLastN_4 = TxtLastN_4.Text
            vSuffix_4 = cbxSuffix_4.Text
            vGrade_4 = txtGrade_4.Text
            vSchool_4 = txtSchool_4.Text
            vSchoolAddress_4 = txtSchoolAddress_4.Text

            TxtMiddleN_4.Text = ""
            TxtLastN_4.Text = ""
            cbxSuffix_4.Text = ""
            txtGrade_4.Text = ""
            txtSchool_4.Text = ""
            txtSchoolAddress_4.Text = ""
        Else
            TxtMiddleN_4.Enabled = True
            TxtLastN_4.Enabled = True
            cbxSuffix_4.Enabled = True
            iAge_D4.Enabled = True
            txtGrade_4.Enabled = True
            txtSchool_4.Enabled = True
            txtSchoolAddress_4.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vMiddleN_4 = "" And vLastN_4 = "" And vSuffix_4 = "" And vGrade_4 = "" And vSchool_4 = "" And vSchoolAddress_4 = "" Then
            Else
                If TxtMiddleN_4.Text = "" Then
                    TxtMiddleN_4.Text = vMiddleN_4
                End If
                If TxtLastN_4.Text = "" Then
                    TxtLastN_4.Text = vLastN_4
                End If
                If cbxSuffix_4.Text = "" Then
                    cbxSuffix_4.Text = vSuffix_4
                End If
                If txtGrade_4.Text = "" Then
                    txtGrade_4.Text = vGrade_4
                End If
                If txtSchool_4.Text = "" Then
                    txtSchool_4.Text = vSchool_4
                End If
                If txtSchoolAddress_4.Text = "" Then
                    txtSchoolAddress_4.Text = vSchoolAddress_4
                End If
            End If
        End If
    End Sub

    Private Sub CbxEmployer_B_TextChanged(sender As Object, e As EventArgs) Handles cbxEmployer_B.TextChanged
        If cbxEmployer_B.Text.Trim = "" Then
            txtEmployerAddress_B.Enabled = False
            cbxPosition_B.Enabled = False
            cbxCasual_B.Enabled = False
            cbxTemporary_B.Enabled = False
            cbxPermanent_B.Enabled = False
            dtpHired_B.Enabled = False
            dMonthly_B.Enabled = False
            cbxNatureBusiness_B2.Enabled = False
            cbxYearHired.Enabled = False
            cbxYearHired.Checked = False

            dtpHired_B.CustomFormat = ""
            dMonthly_B.Value = 0

            vEmployerAddress_B = txtEmployerAddress_B.Text
            vPosition_B = cbxPosition_B.Text
            vCasual_B = cbxCasual_B.Checked
            vTemporary_B = cbxTemporary_B.Checked
            vPermanent_B = cbxPermanent_B.Checked
            vMonthly_B = dMonthly_B.Value

            txtEmployerAddress_B.Text = ""
            cbxPosition_B.Text = ""
            cbxCasual_B.Checked = False
            cbxTemporary_B.Checked = False
            cbxPermanent_B.Checked = False
            dMonthly_B.Value = 0
        Else
            txtEmployerAddress_B.Enabled = True
            cbxPosition_B.Enabled = True
            cbxCasual_B.Enabled = True
            cbxTemporary_B.Enabled = True
            cbxPermanent_B.Enabled = True
            dtpHired_B.Enabled = True
            dMonthly_B.Enabled = True
            cbxNatureBusiness_B2.Enabled = True
            dtpHired_B.CustomFormat = "MMM. dd, yyyy"
            cbxYearHired.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vEmployerAddress_B = "" And vPosition_B = "" And vCasual_B = False And vTemporary_B = False And vPermanent_B = False And vMonthly_B = 0 Then
            Else
                If txtEmployerAddress_B.Text = "" Then
                    txtEmployerAddress_B.Text = vEmployerAddress_B
                End If
                If cbxPosition_B.Text = "" Then
                    cbxPosition_B.Text = vPosition_B
                End If
                If cbxCasual_B.Checked = False Then
                    cbxCasual_B.Checked = vCasual_B
                End If
                If cbxTemporary_B.Checked = False Then
                    cbxTemporary_B.Checked = vTemporary_B
                End If
                If cbxPermanent_B.Checked = False Then
                    cbxPermanent_B.Checked = vPermanent_B
                End If
                If dMonthly_B.Value = 0 Then
                    dMonthly_B.Value = vMonthly_B
                End If
            End If
        End If
    End Sub

    Private Sub TxtBusiness_TextChanged(sender As Object, e As EventArgs) Handles txtBusinessName_B.TextChanged
        If txtBusinessName_B.Text.Trim = "" Then
            txtBusinessAddress_B.Enabled = False
            dtpBusinessStarted.Enabled = False
            cbxBusinessNature.Enabled = False
            cbxNatureBusiness_B2.Enabled = False
            dCapital_B.Enabled = False
            iNoEmployees_B.Enabled = False
            dBusinessStock.Enabled = False
            txtBusinessVehicle.Enabled = False
            dBusinessIncome_B.Enabled = False
            txtBusinessPermit.Enabled = False
            txtOtherIncome_B.Enabled = False

            vBusinessAddress = txtBusinessAddress_B.Text
            vBusinessNature = cbxBusinessNature.Text
            vBusinessCapital = dCapital_B.Value
            vBusinessEmployees = iNoEmployees_B.Value
            vBusinessStock = dBusinessStock.Value
            vBusinessVehicle = txtBusinessVehicle.Text
            vBusinessIncome = dBusinessIncome_B.Value
            vBusinessPermit = txtBusinessPermit.Text
            vOtherBusiness = txtOtherIncome_B.Text

            txtBusinessAddress_B.Text = ""
            cbxBusinessNature.Text = ""
            dCapital_B.Value = 0
            iNoEmployees_B.Value = 0
            dBusinessStock.Value = 0
            txtBusinessVehicle.Text = ""
            dBusinessIncome_B.Value = 0
            txtBusinessPermit.Text = ""
            txtOtherIncome_B.Text = ""

            dtpBusinessStarted.CustomFormat = ""
        Else
            txtBusinessAddress_B.Enabled = True
            dtpBusinessStarted.Enabled = True
            cbxBusinessNature.Enabled = True
            cbxNatureBusiness_B2.Enabled = True
            dCapital_B.Enabled = True
            iNoEmployees_B.Enabled = True
            dBusinessStock.Enabled = True
            txtBusinessVehicle.Enabled = True
            dBusinessIncome_B.Enabled = True
            txtBusinessPermit.Enabled = True
            txtOtherIncome_B.Enabled = True

            dtpBusinessStarted.CustomFormat = "MMM. dd, yyyy"

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vBusinessAddress = "" And vBusinessNature = "" And vBusinessCapital = 0 And vBusinessEmployees = 0 And vBusinessStock = 0 And vBusinessVehicle = "" And vBusinessIncome = 0 And vBusinessPermit = "" And vOtherBusiness = "" Then
            Else
                If txtBusinessAddress_B.Text = "" Then
                    txtBusinessAddress_B.Text = vBusinessAddress
                End If
                If cbxBusinessNature.Text = "" Then
                    cbxBusinessNature.Text = vBusinessNature
                End If
                If dCapital_B.Value = 0 Then
                    dCapital_B.Value = vBusinessCapital
                End If
                If iNoEmployees_B.Value = 0 Then
                    iNoEmployees_B.Value = vBusinessEmployees
                End If
                If dBusinessStock.Value = 0 Then
                    dBusinessStock.Value = vBusinessStock
                End If
                If txtBusinessVehicle.Text = "" Then
                    txtBusinessVehicle.Text = vBusinessVehicle
                End If
                If dBusinessIncome_B.Value = 0 Then
                    dBusinessIncome_B.Value = vBusinessIncome
                End If
                If txtBusinessPermit.Text = "" Then
                    txtBusinessPermit.Text = vBusinessPermit
                End If
                If txtOtherIncome_B.Text = "" Then
                    txtOtherIncome_B.Text = vOtherBusiness
                End If
            End If
        End If
    End Sub

    Private Sub TxtOtherBusiness_TextChanged(sender As Object, e As EventArgs) Handles txtOtherIncome_B.TextChanged
        If txtOtherIncome_B.Text.Trim = "" Then
            dOtherIncome_B.Enabled = False

            dOtherIncome_B.Value = 0
        Else
            dOtherIncome_B.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vOtherIncome = 0 Then
            Else
                If dOtherIncome_B.Value = 0 Then
                    dOtherIncome_B.Value = vOtherIncome
                End If
            End If
        End If
    End Sub

    Private Sub DMonthly_B_ValueChanged(sender As Object, e As EventArgs) Handles dMonthly_B.ValueChanged
        dSalary_B.Value = dMonthly_B.Value
    End Sub

    Private Sub DBusinessIncome_ValueChanged(sender As Object, e As EventArgs) Handles dBusinessIncome_B.ValueChanged
        dBusinessNet.Value = dBusinessIncome_B.Value + dOtherIncome_B.Value
    End Sub

    Private Sub DOtherIncome_ValueChanged(sender As Object, e As EventArgs) Handles dOtherIncome_B.ValueChanged
        dBusinessNet.Value = dBusinessIncome_B.Value + dOtherIncome_B.Value
    End Sub

    Private Sub DSalary_B_ValueChanged(sender As Object, e As EventArgs) Handles dSalary_B.ValueChanged
        dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + (dBusinessNet.Value - (dCapital.Value + dFuelMaintenance.Value + dUtilities.Value + dSalariesWages.Value + dBMiscellaneous.Value + dBOthers.Value)) + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
    End Sub

    Private Sub DSalary_S_ValueChanged(sender As Object, e As EventArgs) Handles dSalary_S.ValueChanged
        dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + (dBusinessNet.Value - (dCapital.Value + dFuelMaintenance.Value + dUtilities.Value + dSalariesWages.Value + dBMiscellaneous.Value + dBOthers.Value)) + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
    End Sub

    Private Sub DBusinessNet_ValueChanged(sender As Object, e As EventArgs) Handles dBusinessNet.ValueChanged
        If dBusinessNet.Value > 0 Then
            dCapitalP.Enabled = True
            dFuelMaintenanceP.Enabled = True
            dUtilitiesP.Enabled = True
            dSalariesWagesP.Enabled = True
            dBMiscellaneousP.Enabled = True
            dBOthersP.Enabled = True

            dCapital.Enabled = True
            dFuelMaintenance.Enabled = True
            dUtilities.Enabled = True
            dSalariesWages.Enabled = True
            dBMiscellaneous.Enabled = True
            dBOthers.Enabled = True
        Else
            dCapitalP.Enabled = False
            dFuelMaintenanceP.Enabled = False
            dUtilitiesP.Enabled = False
            dSalariesWagesP.Enabled = False
            dBMiscellaneousP.Enabled = False
            dBOthersP.Enabled = False

            dCapital.Enabled = False
            dFuelMaintenance.Enabled = False
            dUtilities.Enabled = False
            dSalariesWages.Enabled = False
            dBMiscellaneous.Enabled = False
            dBOthers.Enabled = False
        End If

        dCapital.Value = dBusinessNet.Value * (dCapitalP.Value / 100)
        dFuelMaintenance.Value = dBusinessNet.Value * (dFuelMaintenanceP.Value / 100)
        dUtilities.Value = dBusinessNet.Value * (dUtilitiesP.Value / 100)
        dSalariesWages.Value = dBusinessNet.Value * (dSalariesWagesP.Value / 100)
        dBMiscellaneous.Value = dBusinessNet.Value * (dBMiscellaneousP.Value / 100)
        dBOthers.Value = dBusinessNet.Value * (dBOthersP.Value / 100)
        dTotalBExpense.Value = dCapital.Value + dFuelMaintenance.Value + dUtilities.Value + dSalariesWages.Value + dBMiscellaneous.Value + dBOthers.Value
        dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + (dBusinessNet.Value - (dCapital.Value + dFuelMaintenance.Value + dUtilities.Value + dSalariesWages.Value + dBMiscellaneous.Value + dBOthers.Value)) + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
    End Sub

    Private Sub DSalary_C1_ValueChanged(sender As Object, e As EventArgs) Handles dSalary_C1.ValueChanged
        dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + (dBusinessNet.Value - (dCapital.Value + dFuelMaintenance.Value + dUtilities.Value + dSalariesWages.Value + dBMiscellaneous.Value + dBOthers.Value)) + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
    End Sub

    Private Sub DSalary_C2_ValueChanged(sender As Object, e As EventArgs) Handles dSalary_C2.ValueChanged
        dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + (dBusinessNet.Value - (dCapital.Value + dFuelMaintenance.Value + dUtilities.Value + dSalariesWages.Value + dBMiscellaneous.Value + dBOthers.Value)) + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
    End Sub

    Private Sub DSalary_C3_ValueChanged(sender As Object, e As EventArgs) Handles dSalary_C3.ValueChanged
        dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + (dBusinessNet.Value - (dCapital.Value + dFuelMaintenance.Value + dUtilities.Value + dSalariesWages.Value + dBMiscellaneous.Value + dBOthers.Value)) + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
    End Sub

    Private Sub DSalary_C4_ValueChanged(sender As Object, e As EventArgs) Handles dSalary_C4.ValueChanged
        dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + (dBusinessNet.Value - (dCapital.Value + dFuelMaintenance.Value + dUtilities.Value + dSalariesWages.Value + dBMiscellaneous.Value + dBOthers.Value)) + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
    End Sub

    Private Sub DTotalIncome_ValueChanged(sender As Object, e As EventArgs) Handles dTotalIncome.ValueChanged
        dTotalDisposable.Value = dTotalIncome.Value - If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) - If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) - If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) - If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
    End Sub

    Private Sub TxtCreditName_1_TextChanged(sender As Object, e As EventArgs) Handles txtCreditor_1.TextChanged
        If txtCreditor_1.Text.Trim = "" Then
            txtCreditAddress_1.Enabled = False
            dtpCreditGranted_1.Enabled = False
            iTerm_1.Enabled = False
            dAmountGranted_1.Enabled = False
            dBalance_1.Enabled = False
            dCreditPayment_1.Enabled = False
            txtCreditRemarks_1.Enabled = False
            txtCreditor_2.Enabled = False

            vCreditAddress_1 = txtCreditAddress_1.Text
            vCreditTerm_1 = iTerm_1.Value
            vCreditPrincipal_1 = dAmountGranted_1.Value
            vCreditOutstanding_1 = dBalance_1.Value
            vCreditPayment_1 = dCreditPayment_1.Value
            vCreditRemarks_1 = txtCreditRemarks_1.Text
            vCreditName_2 = txtCreditor_2.Text

            txtCreditAddress_1.Text = ""
            iTerm_1.Value = 0
            dAmountGranted_1.Value = 0
            dBalance_1.Value = 0
            dCreditPayment_1.Value = 0
            txtCreditRemarks_1.Text = ""
            txtCreditor_2.Text = ""

            dtpCreditGranted_1.CustomFormat = ""
        Else
            txtCreditAddress_1.Enabled = True
            dtpCreditGranted_1.Enabled = True
            iTerm_1.Enabled = True
            dAmountGranted_1.Enabled = True
            dBalance_1.Enabled = True
            dCreditPayment_1.Enabled = True
            txtCreditRemarks_1.Enabled = True
            txtCreditor_2.Enabled = True

            dtpCreditGranted_1.CustomFormat = "MMM. dd, yyyy"

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vCreditAddress_1 = "" And vCreditTerm_1 = 0 And vCreditPrincipal_1 = 0 And vCreditOutstanding_1 = 0 And vCreditPayment_1 = 0 And vCreditRemarks_1 = "" And vCreditName_2 = "" Then
            Else
                If txtCreditAddress_1.Text = "" Then
                    txtCreditAddress_1.Text = vCreditAddress_1
                End If
                If iTerm_1.Value = 0 Then
                    iTerm_1.Value = vCreditTerm_1
                End If
                If dAmountGranted_1.Value = 0 Then
                    dAmountGranted_1.Value = vCreditPrincipal_1
                End If
                If dBalance_1.Value = 0 Then
                    dBalance_1.Value = vCreditOutstanding_1
                End If
                If dCreditPayment_1.Value = 0 Then
                    dCreditPayment_1.Value = vCreditPayment_1
                End If
                If txtCreditRemarks_1.Text = "" Then
                    txtCreditRemarks_1.Text = vCreditRemarks_1
                End If
                If txtCreditor_2.Text = "" Then
                    txtCreditor_2.Text = vCreditName_2
                End If
            End If
        End If
    End Sub

    Private Sub TxtCreditName_2_TextChanged(sender As Object, e As EventArgs) Handles txtCreditor_2.TextChanged
        If txtCreditor_2.Text.Trim = "" Then
            txtCreditAddress_2.Enabled = False
            dtpCreditGranted_2.Enabled = False
            iTerm_2.Enabled = False
            dAmountGranted_2.Enabled = False
            dBalance_2.Enabled = False
            dCreditPayment_2.Enabled = False
            txtCreditRemarks_2.Enabled = False

            vCreditAddress_2 = txtCreditAddress_2.Text
            vCreditTerm_2 = iTerm_2.Value
            vCreditPrincipal_2 = dAmountGranted_2.Value
            vCreditOutstanding_2 = dBalance_2.Value
            vCreditPayment_2 = dCreditPayment_2.Value
            vCreditRemarks_2 = txtCreditRemarks_2.Text

            txtCreditAddress_2.Text = ""
            iTerm_2.Value = 0
            dAmountGranted_2.Value = 0
            dBalance_2.Value = 0
            dCreditPayment_2.Value = 0
            txtCreditRemarks_2.Text = ""

            dtpCreditGranted_2.CustomFormat = ""
        Else
            txtCreditAddress_2.Enabled = True
            dtpCreditGranted_2.Enabled = True
            iTerm_2.Enabled = True
            dAmountGranted_2.Enabled = True
            dBalance_2.Enabled = True
            dCreditPayment_2.Enabled = True
            txtCreditRemarks_2.Enabled = True

            dtpCreditGranted_2.CustomFormat = "MMM. dd, yyyy"

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vCreditAddress_2 = "" And vCreditTerm_2 = 0 And vCreditPrincipal_2 = 0 And vCreditOutstanding_2 = 0 And vCreditPayment_2 = 0 And vCreditRemarks_2 = "" Then
            Else
                If txtCreditAddress_2.Text = "" Then
                    txtCreditAddress_2.Text = vCreditAddress_2
                End If
                If iTerm_2.Value = 0 Then
                    iTerm_2.Value = vCreditTerm_2
                End If
                If dAmountGranted_2.Value = 0 Then
                    dAmountGranted_2.Value = vCreditPrincipal_2
                End If
                If dBalance_2.Value = 0 Then
                    dBalance_2.Value = vCreditOutstanding_2
                End If
                If dCreditPayment_2.Value = 0 Then
                    dCreditPayment_2.Value = vCreditPayment_2
                End If
                If txtCreditRemarks_2.Text = "" Then
                    txtCreditRemarks_2.Text = vCreditRemarks_2
                End If
            End If
        End If
    End Sub

    Private Sub TxtBank_1_TextChanged(sender As Object, e As EventArgs) Handles txtBank_1.TextChanged
        If txtBank_1.Text.Trim = "" Then
            txtBranch_1.Enabled = False
            cbxSA_1.Enabled = False
            cbxCA_1.Enabled = False
            txtSA_1.Enabled = False
            dAverageBalance_1.Enabled = False
            txtOpened_1.Enabled = False
            txtBank_2.Enabled = False

            vBranch_1 = txtBranch_1.Text
            vcSA_1 = cbxSA_1.Checked
            vcCA_1 = cbxCA_1.Checked
            vAccountNum_1 = txtSA_1.Text
            vADB_1 = dAverageBalance_1.Value
            vBank_2 = txtBank_2.Text

            txtBranch_1.Text = ""
            cbxSA_1.Checked = False
            cbxCA_1.Checked = False
            txtSA_1.Text = ""
            dAverageBalance_1.Value = 0
            txtBank_2.Text = ""
        Else
            cbxSA_1.Enabled = True
            cbxCA_1.Enabled = True
            txtSA_1.Enabled = True
            dAverageBalance_1.Enabled = True
            txtOpened_1.Enabled = True
            txtBank_2.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vBranch_1 = "" And vcSA_1 = False And vcCA_1 = False And vAccountNum_1 = "" And vADB_1 = 0 And vBank_2 = "" Then
            Else
                If txtBranch_1.Text = "" Then
                    txtBranch_1.Text = vBranch_1
                End If
                If cbxSA_1.Checked = False Then
                    cbxSA_1.Checked = vcSA_1
                End If
                If cbxCA_1.Checked = False Then
                    cbxCA_1.Checked = vcCA_1
                End If
                If txtSA_1.Text = "" Then
                    txtSA_1.Text = vAccountNum_1
                End If
                If dAverageBalance_1.Value = 0 Then
                    dAverageBalance_1.Value = vADB_1
                End If
                If txtBank_2.Text = "" Then
                    txtBank_2.Text = vBank_2
                End If
            End If
        End If
    End Sub

    Private Sub TxtBank_2_TextChanged(sender As Object, e As EventArgs) Handles txtBank_2.TextChanged
        If txtBank_2.Text.Trim = "" Then
            txtBranch_2.Enabled = False
            cbxSA_2.Enabled = False
            cbxCA_2.Enabled = False
            txtSA_2.Enabled = False
            dAverageBalance_2.Enabled = False
            txtOpened_2.Enabled = False

            vBranch_2 = txtBranch_2.Text
            vcSA_2 = cbxSA_2.Checked
            vcCA_2 = cbxCA_2.Checked
            vAccountNum_2 = txtSA_2.Text
            vADB_2 = dAverageBalance_2.Value

            txtBranch_2.Text = ""
            cbxSA_2.Checked = False
            cbxCA_2.Checked = False
            txtSA_2.Text = ""
            dAverageBalance_2.Value = 0
        Else
            txtBranch_2.Enabled = True
            cbxSA_2.Enabled = True
            cbxCA_2.Enabled = True
            txtSA_2.Enabled = True
            dAverageBalance_2.Enabled = True
            txtOpened_2.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vBranch_2 = "" And vcSA_2 = False And vcCA_2 = False And vAccountNum_2 = "" And vADB_2 = 0 Then
            Else
                If txtBranch_2.Text = "" Then
                    txtBranch_2.Text = vBranch_2
                End If
                If cbxSA_2.Checked = False Then
                    cbxSA_2.Checked = vcSA_2
                End If
                If cbxCA_2.Checked = False Then
                    cbxCA_2.Checked = vcCA_2
                End If
                If txtSA_2.Text = "" Then
                    txtSA_2.Text = vAccountNum_2
                End If
                If dAverageBalance_2.Value = 0 Then
                    dAverageBalance_2.Value = vADB_2
                End If
            End If
        End If
    End Sub

    Private Sub TxtTitle_TextChanged(sender As Object, e As EventArgs) Handles txtTitle.TextChanged
        If txtTitle.Text.Trim = "" Then
            txtCaseNum.Enabled = False
            dtpDateFilled.Enabled = False
            cbxCourt.Enabled = False
            cbxCaseNature.Enabled = False
            dAmountInvolved.Enabled = False
            cbxCaseStatus.Enabled = False
            txtFindings.Enabled = False
            cbxPositive.Enabled = False
            cbxNegative.Enabled = False
            cbxUnestablished.Enabled = False
            txtCACPI.Enabled = False

            vCaseNum = txtCaseNum.Text
            vCourt = cbxCourt.Text
            vCaseNature = cbxCaseNature.Text
            vAmountInvolved = dAmountInvolved.Value
            vCaseStatus = cbxCaseStatus.Text
            vFindings = txtFindings.Text
            vPositive = cbxPositive.Checked
            vNegative = cbxNegative.Checked
            vUnestablished = cbxUnestablished.Checked
            vCACPI = txtCACPI.Text

            txtCaseNum.Text = ""
            cbxCourt.Text = ""
            cbxCaseNature.Text = ""
            dAmountInvolved.Value = 0
            cbxCaseStatus.Text = ""
            txtFindings.Text = ""
            cbxPositive.Checked = False
            cbxNegative.Checked = False
            cbxUnestablished.Checked = False
            txtCACPI.Text = ""

            dtpDateFilled.CustomFormat = ""
        Else
            txtCaseNum.Enabled = True
            dtpDateFilled.Enabled = True
            cbxCourt.Enabled = True
            cbxCaseNature.Enabled = True
            dAmountInvolved.Enabled = True
            cbxCaseStatus.Enabled = True
            txtFindings.Enabled = True
            cbxPositive.Enabled = True
            cbxNegative.Enabled = True
            cbxUnestablished.Enabled = True
            txtCACPI.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vCaseNum = "" And vCourt = "" And vCaseNature = "" And vAmountInvolved = 0 And vCaseStatus = "" And vFindings = "" And vPositive = False And vNegative = False And vUnestablished = False And vCACPI = "" Then
            Else
                If txtCaseNum.Text = "" Then
                    txtCaseNum.Text = vCaseNum
                End If
                If cbxCourt.Text = "" Then
                    cbxCourt.Text = vCourt
                End If
                If cbxCaseNature.Text = "" Then
                    cbxCaseNature.Text = vCaseNature
                End If
                If dAmountInvolved.Value = 0 Then
                    dAmountInvolved.Value = vAmountInvolved
                End If
                If cbxCaseStatus.Text = "" Then
                    cbxCaseStatus.Text = vCaseStatus
                End If
                If txtFindings.Text = "" Then
                    txtFindings.Text = vFindings
                End If
                If cbxPositive.Checked = False Then
                    cbxPositive.Checked = vPositive
                End If
                If cbxNegative.Checked = False Then
                    cbxNegative.Checked = vNegative
                End If
                If cbxUnestablished.Checked = False Then
                    cbxUnestablished.Checked = vUnestablished
                End If
                If txtCACPI.Text = "" Then
                    txtCACPI.Text = vCACPI
                End If
            End If

            dtpDateFilled.CustomFormat = "MMM. dd, yyyy"
        End If
    End Sub

    Private Sub TxtLocation_1_TextChanged(sender As Object, e As EventArgs) Handles txtLocation_1.TextChanged
        If txtLocation_1.Text.Trim = "" Then
            txtTCT_1.Enabled = False
            dArea_1.Enabled = False
            txtPropertiesRemarks_1.Enabled = False
            txtLocation_2.Enabled = False

            vTCT_1 = txtTCT_1.Text
            vArea_1 = dArea_1.Value
            vRealEstateRemarks_1 = txtPropertiesRemarks_1.Text
            vLocation_2 = txtLocation_2.Text

            txtTCT_1.Text = ""
            dArea_1.Value = 0
            txtPropertiesRemarks_1.Text = ""
            txtLocation_2.Text = ""
        Else
            txtTCT_1.Enabled = True
            dArea_1.Enabled = True
            txtPropertiesRemarks_1.Enabled = True
            txtLocation_2.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vTCT_1 = "" And vArea_1 = 0 And vRealEstateRemarks_1 = "" And vLocation_2 = "" Then
            Else
                If txtTCT_1.Text = "" Then
                    txtTCT_1.Text = vTCT_1
                End If
                If dArea_1.Value = 0 Then
                    dArea_1.Value = vArea_1
                End If
                If txtPropertiesRemarks_1.Text = "" Then
                    txtPropertiesRemarks_1.Text = vRealEstateRemarks_1
                End If
                If txtLocation_2.Text = "" Then
                    txtLocation_2.Text = vLocation_2
                End If
            End If
        End If
    End Sub

    Private Sub TxtLocation_2_TextChanged(sender As Object, e As EventArgs) Handles txtLocation_2.TextChanged
        If txtLocation_2.Text.Trim = "" Then
            txtTCT_2.Enabled = False
            dArea_2.Enabled = False
            txtPropertiesRemarks_2.Enabled = False

            vTCT_2 = txtTCT_2.Text
            vArea_2 = dArea_2.Value
            vRealEstateRemarks_2 = txtPropertiesRemarks_2.Text

            txtTCT_2.Text = ""
            dArea_2.Value = 0
            txtPropertiesRemarks_2.Text = ""
        Else
            txtTCT_2.Enabled = True
            dArea_2.Enabled = True
            txtPropertiesRemarks_2.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vTCT_2 = "" And vArea_2 = 0 And vRealEstateRemarks_2 = "" Then
            Else
                If txtTCT_2.Text = "" Then
                    txtTCT_2.Text = vTCT_2
                End If
                If dArea_2.Value = 0 Then
                    dArea_2.Value = vArea_2
                End If
                If txtPropertiesRemarks_2.Text = "" Then
                    txtPropertiesRemarks_2.Text = vRealEstateRemarks_2
                End If
            End If
        End If
    End Sub

    Private Sub TxtVehicles_1_TextChanged(sender As Object, e As EventArgs) Handles txtVehicle_1.TextChanged
        If txtVehicle_1.Text.Trim = "" Then
            dtpYear_1.Enabled = False
            txtWhomAcquired_1.Enabled = False
            txtVehicleRemarks_1.Enabled = False
            txtVehicle_2.Enabled = False

            dtpYear_1.CustomFormat = ""

            vAcquired_1 = txtWhomAcquired_1.Text
            vVehicleRemarks_1 = txtVehicleRemarks_1.Text
            vVehicles_2 = txtVehicle_2.Text

            txtWhomAcquired_1.Text = ""
            txtVehicleRemarks_1.Text = ""
            txtVehicle_2.Text = ""
        Else
            dtpYear_1.Enabled = True
            txtWhomAcquired_1.Enabled = True
            txtVehicleRemarks_1.Enabled = True
            txtVehicle_2.Enabled = True

            dtpYear_1.CustomFormat = "     yyyy"

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vAcquired_1 = "" And vVehicleRemarks_1 = "" And vVehicles_2 = "" Then
            Else
                If txtWhomAcquired_1.Text = "" Then
                    txtWhomAcquired_1.Text = vAcquired_1
                End If
                If txtVehicleRemarks_1.Text = "" Then
                    txtVehicleRemarks_1.Text = vVehicleRemarks_1
                End If
                If txtVehicle_2.Text = "" Then
                    txtVehicle_2.Text = vVehicles_2
                End If
            End If
        End If
    End Sub

    Private Sub TxtVehicles_2_TextChanged(sender As Object, e As EventArgs) Handles txtVehicle_2.TextChanged
        If txtVehicle_2.Text.Trim = "" Then
            dtpYear_2.Enabled = False
            txtWhomAcquired_2.Enabled = False
            txtVehicleRemarks_2.Enabled = False

            dtpYear_2.CustomFormat = ""

            vAcquired_2 = txtWhomAcquired_2.Text
            vVehicleRemarks_2 = txtVehicleRemarks_2.Text

            txtWhomAcquired_2.Text = ""
            txtVehicleRemarks_2.Text = ""
        Else
            dtpYear_2.Enabled = True
            txtWhomAcquired_2.Enabled = True
            txtVehicleRemarks_2.Enabled = True

            dtpYear_2.CustomFormat = "     yyyy"

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vAcquired_2 = "" And vVehicleRemarks_2 = "" Then
            Else
                If txtWhomAcquired_2.Text = "" Then
                    txtWhomAcquired_2.Text = vAcquired_2
                End If
                If txtVehicleRemarks_2.Text = "" Then
                    txtVehicleRemarks_2.Text = vVehicleRemarks_2
                End If
            End If
        End If
    End Sub

    Private Sub DTotalDisposable_ValueChanged(sender As Object, e As EventArgs) Handles dTotalDisposable.ValueChanged
        dNetDisposable.Value = dTotalDisposable.Value - dTotalExpenses.Value
    End Sub

    Private Sub DLiving_ValueChanged(sender As Object, e As EventArgs) Handles dLiving.ValueChanged
        dTotalExpenses.Value = dLiving.Value + dClothing.Value + dEducation.Value + dTransportation.Value + dLighths.Value + dInsurance.Value + dAmortization.Value + dMiscellaneous.Value
    End Sub

    Private Sub DClothing_ValueChanged(sender As Object, e As EventArgs) Handles dClothing.ValueChanged
        dTotalExpenses.Value = dLiving.Value + dClothing.Value + dEducation.Value + dTransportation.Value + dLighths.Value + dInsurance.Value + dAmortization.Value + dMiscellaneous.Value
    End Sub

    Private Sub DEducation_ValueChanged(sender As Object, e As EventArgs) Handles dEducation.ValueChanged
        dTotalExpenses.Value = dLiving.Value + dClothing.Value + dEducation.Value + dTransportation.Value + dLighths.Value + dInsurance.Value + dAmortization.Value + dMiscellaneous.Value
    End Sub

    Private Sub DTransportation_ValueChanged(sender As Object, e As EventArgs) Handles dTransportation.ValueChanged
        dTotalExpenses.Value = dLiving.Value + dClothing.Value + dEducation.Value + dTransportation.Value + dLighths.Value + dInsurance.Value + dAmortization.Value + dMiscellaneous.Value
    End Sub

    Private Sub DLighths_ValueChanged(sender As Object, e As EventArgs) Handles dLighths.ValueChanged
        dTotalExpenses.Value = dLiving.Value + dClothing.Value + dEducation.Value + dTransportation.Value + dLighths.Value + dInsurance.Value + dAmortization.Value + dMiscellaneous.Value
    End Sub

    Private Sub DInsurance_ValueChanged(sender As Object, e As EventArgs) Handles dInsurance.ValueChanged
        dTotalExpenses.Value = dLiving.Value + dClothing.Value + dEducation.Value + dTransportation.Value + dLighths.Value + dInsurance.Value + dAmortization.Value + dMiscellaneous.Value
    End Sub

    Private Sub DAmortization_ValueChanged(sender As Object, e As EventArgs) Handles dAmortization.ValueChanged
        dTotalExpenses.Value = dLiving.Value + dClothing.Value + dEducation.Value + dTransportation.Value + dLighths.Value + dInsurance.Value + dAmortization.Value + dMiscellaneous.Value
    End Sub

    Private Sub DMiscellaneous_ValueChanged(sender As Object, e As EventArgs) Handles dMiscellaneous.ValueChanged
        dTotalExpenses.Value = dLiving.Value + dClothing.Value + dEducation.Value + dTransportation.Value + dLighths.Value + dInsurance.Value + dAmortization.Value + dMiscellaneous.Value
    End Sub

    Private Sub DTotalExpenses_ValueChanged(sender As Object, e As EventArgs) Handles dTotalExpenses.ValueChanged
        dNetDisposable.Value = dTotalDisposable.Value - dTotalExpenses.Value
    End Sub

    Private Sub CbxApplication_TextChanged(sender As Object, e As EventArgs) Handles cbxApplication.TextChanged
        If cbxApplication.Text = "" And TxtFirstN_B.Text <> "" Then
            Clear()
        End If
    End Sub

    Private Sub CbxApplication_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbxApplication.SelectedIndexChanged
        If FirstLoad Then
            Exit Sub
        End If

        Cursor = Cursors.WaitCursor
        If cbxApplication.SelectedIndex = -1 Or cbxApplication.Text = "" Then
            Clear()
        Else
            Dim drv As DataRowView = DirectCast(cbxApplication.SelectedItem, DataRowView)
            CbxPrefix_B.Enabled = True
            TxtFirstN_B.Enabled = True
            TxtMiddleN_B.Enabled = True
            TxtLastN_B.Enabled = True
            cbxSuffix_B.Enabled = True
            btnSN.Enabled = True
            btnCM_1.Enabled = True
            btnCM_2.Enabled = True
            btnCM_3.Enabled = True
            btnCM_4.Enabled = True
            dSalary_S.Value = 0
            dSalary_C1.Value = 0
            dSalary_C2.Value = 0
            dSalary_C3.Value = 0
            dSalary_C4.Value = 0
            btnCalculator.Enabled = True
            GMA = drv("GMA")

            Loan_Type = drv("Loan_Type")
            BorrowerID = drv("BorrowerID")
            If BorrowerID.Contains("C") Then
                LabelX43.Text = "Trade Name :"
                LabelX21.Text = "Representative 1 :"
                LabelX77.Text = "Representative 2 :"
                LabelX3.Text = "Representative 3 :"
                LabelX29.Text = "Representative 4 :"
                LabelX24.Text = "Representative 5 :"
                cbxSpouse_B.Visible = False
                cbxCoMaker1_B.Visible = False
                cbxCoMaker2_B.Visible = False
                cbxCoMaker3_B.Visible = False
                cbxCoMaker4_B.Visible = False

                btnSN.Visible = False
                btnCM_1.Visible = False
                btnCM_2.Visible = False
                btnCM_3.Visible = False
                btnCM_4.Visible = False

                TxtFirstN_B.Location = New Point(146, 35)
                TxtFirstN_B.Size = New Point(740, 23)
                CbxPrefix_B.Visible = False
                TxtMiddleN_B.Visible = False
                TxtLastN_B.Visible = False
                cbxSuffix_B.Visible = False
                LabelX10.Text = "Incorporation Date :"

                LabelX142.Visible = False
                LabelX19.Visible = False
                LabelX18.Visible = False
                LabelX7.Visible = False
                CbxPrefix_1.Visible = False
                TxtFirstN_1.Visible = False
                TxtMiddleN_1.Visible = False
                TxtLastN_1.Visible = False
                cbxSuffix_1.Visible = False
                iAge_D1.Visible = False
                txtGrade_1.Visible = False
                txtSchool_1.Visible = False
                txtSchoolAddress_1.Visible = False

                CbxPrefix_2.Visible = False
                TxtFirstN_2.Visible = False
                TxtMiddleN_2.Visible = False
                TxtLastN_2.Visible = False
                cbxSuffix_2.Visible = False
                iAge_D2.Visible = False
                txtGrade_2.Visible = False
                txtSchool_2.Visible = False
                txtSchoolAddress_2.Visible = False

                CbxPrefix_3.Visible = False
                TxtFirstN_3.Visible = False
                TxtMiddleN_3.Visible = False
                TxtLastN_3.Visible = False
                cbxSuffix_3.Visible = False
                iAge_D3.Visible = False
                txtGrade_3.Visible = False
                txtSchool_3.Visible = False
                txtSchoolAddress_3.Visible = False

                CbxPrefix_4.Visible = False
                TxtFirstN_4.Visible = False
                TxtMiddleN_4.Visible = False
                TxtLastN_4.Visible = False
                cbxSuffix_4.Visible = False
                iAge_D4.Visible = False
                txtGrade_4.Visible = False
                txtSchool_4.Visible = False
                txtSchoolAddress_4.Visible = False
            Else
                LabelX43.Text = "<span align='right'><font color='red'>*</font>Borrower's Name :</span>"
                LabelX21.Text = "Spouse Name :"
                LabelX77.Text = "Co-Maker I :"
                LabelX3.Text = "Co-Maker II :"
                LabelX29.Text = "Co-Maker III :"
                LabelX24.Text = "Co-Maker IV :"
                cbxSpouse_B.Visible = True
                cbxCoMaker1_B.Visible = True
                cbxCoMaker2_B.Visible = True
                cbxCoMaker3_B.Visible = True
                cbxCoMaker4_B.Visible = True

                btnSN.Visible = True
                btnCM_1.Visible = True
                btnCM_2.Visible = True
                btnCM_3.Visible = True
                btnCM_4.Visible = True

                TxtFirstN_B.Location = New Point(224, 35)
                TxtFirstN_B.Size = New Point(200, 23)
                CbxPrefix_B.Visible = True
                TxtMiddleN_B.Visible = True
                TxtLastN_B.Visible = True
                cbxSuffix_B.Visible = True
                LabelX10.Text = "<span align='right'><font color='red'>*</font>Date of Birth :</span>"

                LabelX142.Visible = True
                LabelX19.Visible = True
                LabelX18.Visible = True
                LabelX7.Visible = True
                CbxPrefix_1.Visible = True
                TxtFirstN_1.Visible = True
                TxtMiddleN_1.Visible = True
                TxtLastN_1.Visible = True
                cbxSuffix_1.Visible = True
                iAge_D1.Visible = True
                txtGrade_1.Visible = True
                txtSchool_1.Visible = True
                txtSchoolAddress_1.Visible = True

                CbxPrefix_2.Visible = True
                TxtFirstN_2.Visible = True
                TxtMiddleN_2.Visible = True
                TxtLastN_2.Visible = True
                cbxSuffix_2.Visible = True
                iAge_D2.Visible = True
                txtGrade_2.Visible = True
                txtSchool_2.Visible = True
                txtSchoolAddress_2.Visible = True

                CbxPrefix_3.Visible = True
                TxtFirstN_3.Visible = True
                TxtMiddleN_3.Visible = True
                TxtLastN_3.Visible = True
                cbxSuffix_3.Visible = True
                iAge_D3.Visible = True
                txtGrade_3.Visible = True
                txtSchool_3.Visible = True
                txtSchoolAddress_3.Visible = True

                CbxPrefix_4.Visible = True
                TxtFirstN_4.Visible = True
                TxtMiddleN_4.Visible = True
                TxtLastN_4.Visible = True
                cbxSuffix_4.Visible = True
                iAge_D4.Visible = True
                txtGrade_4.Visible = True
                txtSchool_4.Visible = True
                txtSchoolAddress_4.Visible = True
            End If

            Borrower_Branch = drv("branch_code")
            CreditNumber = drv("CreditNumber")
            CollateralFromROPOA = drv("From_ROPOA")
            AssetNumber_1 = drv("AssetNumber_1")
            AssetNumber_2 = drv("AssetNumber_2")
            AssetNumber_3 = drv("AssetNumber_3")
            AssetNumber_4 = drv("AssetNumber_4")
            AssetNumber_5 = drv("AssetNumber_5")
            CbxPrefix_B.Text = drv("Prefix_B")
            CbxPrefix_B.Tag = drv("Prefix_B")

            TxtFirstN_B.Text = drv("FirstN_B")
            TxtFirstN_B.Tag = drv("FirstN_B")

            TxtMiddleN_B.Text = drv("MiddleN_B")
            TxtMiddleN_B.Tag = drv("MiddleN_B")

            TxtLastN_B.Text = drv("LastN_B")
            TxtLastN_B.Tag = drv("LastN_B")

            cbxSuffix_B.Text = drv("Suffix_B")
            cbxSuffix_B.Tag = drv("Suffix_B")

            CbxPrefix_S.Text = drv("Prefix_S")
            CbxPrefix_S.Tag = drv("Prefix_S")

            TxtFirstN_S.Text = drv("FirstN_S")
            TxtFirstN_S.Tag = drv("FirstN_S")

            TxtMiddleN_S.Text = drv("MiddleN_S")
            TxtMiddleN_S.Tag = drv("MiddleN_S")

            TxtLastN_S.Text = drv("LastN_S")
            TxtLastN_S.Tag = drv("LastN_S")

            cbxSuffix_S.Text = drv("Suffix_S")
            cbxSuffix_S.Tag = drv("Suffix_S")

            If TxtFirstN_S.Text = "" Then
                SpouseID = ""
            Else
                Dim Spouse As DataTable = DataSource(String.Format("SELECT * FROM profile_spouse WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE' ORDER BY ID DESC LIMIT 1;", BorrowerID))
                If Spouse.Rows.Count > 0 Then
                    SpouseID = Spouse(0)("SpouseID")
                    vPrefix_S = Spouse(0)("Prefix_S")
                    vFirstN_S = Spouse(0)("FirstN_S")
                    vMiddleN_S = Spouse(0)("MiddleN_S")
                    vLastN_S = Spouse(0)("LastN_S")
                    vSuffix_S = Spouse(0)("Suffix_S")
                    vNoC_S = Spouse(0)("NoC_S")
                    vStreetC_S = Spouse(0)("StreetC_S")
                    vBarangayC_S = Spouse(0)("BarangayC_S")
                    vAddressC_S = Spouse(0)("AddressC_S")
                    vNoP_S = Spouse(0)("NoP_S")
                    vStreetP_S = Spouse(0)("StreetP_S")
                    vBarangayP_S = Spouse(0)("BarangayP_S")
                    vAddressP_S = Spouse(0)("AddressP_S")
                    vBirth_S = Spouse(0)("Birth_S")
                    vPlaceBirth_S = Spouse(0)("PlaceBirth_S")
                    If Spouse(0)("Gender_S") = "Male" Then
                        vMale_S = True
                    ElseIf Spouse(0)("Gender_S") = "Female" Then
                        vFemale_S = True
                    End If
                    vCitizenship_S = Spouse(0)("Citizenship_S")
                    vTIN_S = Spouse(0)("TIN_S")
                    vTelephone_S = Spouse(0)("Telephone_S")
                    vSSS_S = Spouse(0)("SSS_S")
                    vMobile_S = Spouse(0)("Mobile_S")
                    vEmail_S = Spouse(0)("Email_S")
                    If Spouse(0)("House_S") = "Owned" Then
                        vOwned_S = True
                    ElseIf Spouse(0)("House_S") = "Free" Then
                        vFree_S = True
                    ElseIf Spouse(0)("House_S") = "Rented" Then
                        vRented_S = True
                        vRent_S = Spouse(0)("Rent_S")
                    End If
                    Try
                        Using TempPB As New DevExpress.XtraEditors.PictureEdit
                            TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Borrowers\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, BorrowerID, "Spouse.jpg"))
                            If IO.File.Exists(String.Format("{0}\{1}\{2}\Borrowers\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, BorrowerID, "Spouse.jpg")) Then
                                txtPath_S.Text = "Spouse.jpg"
                            Else
                                txtPath_S.Text = ""
                            End If
                            ResizeImages(TempPB.Image.Clone, pb_Spouse, 850, 700)
                        End Using
                    Catch ex As Exception
                        txtPath_S.Text = ""
                    End Try
                    vEmployer_S = Spouse(0)("Employer_S")
                    vEmpAddress_S = Spouse(0)("EmployerAddress_S")
                    vEmpTelephone_S = Spouse(0)("EmployerTelephone_S")
                    vPosition_S = Spouse(0)("Position_S")
                    If Spouse(0)("EmploymentStat_S") = "Casual" Then
                        vCasual_S = True
                    ElseIf Spouse(0)("EmploymentStat_S") = "Temporary" Then
                        vTemporary_S = True
                    ElseIf Spouse(0)("EmploymentStat_S") = "Permanent" Then
                        vPermanent_S = True
                    End If
                    vHired_S = Spouse(0)("Hired_S")
                    vYearHired_S = Spouse(0)("YearHired_S")
                    vSupervisor_S = Spouse(0)("Supervisor_S")
                    vSalary_S = Spouse(0)("Monthly_S")
                    dSalary_S.Value = vSalary_S + If(cbxIncludeSpouseBusiness.Checked, If(Spouse(0)("BusinessName_S") = drv("BusinessName_B"), 0, Spouse(0)("BusinessIncome_S")) + If(Spouse(0)("OtherIncome_S") = drv("OtherIncome_B"), 0, Spouse(0)("OtherIncome_S-Amount")), 0)
                    vBusinessName_S = Spouse(0)("BusinessName_S")
                    vBusinessAddress_S = Spouse(0)("BusinessAddress_S")
                    vBusinessTelephone_S = Spouse(0)("BusinessTelephone_S")
                    vNatureBusiness_S = Spouse(0)("NatureBusiness_S")
                    vYrsOperation_S = Spouse(0)("YrsOperation_S")
                    vBusinessIncome_S = Spouse(0)("BusinessIncome_S")
                    vNoEmployees_S = Spouse(0)("NoEmployees_S")
                    vCapital_S = Spouse(0)("Capital_S")
                    vArea_S = Spouse(0)("Area_S")
                    vExpiry_S = Spouse(0)("Expiry_S")
                    vOutlet_S = Spouse(0)("Outlet_S")
                    vOtherIncome_S = Spouse(0)("OtherIncome_S")
                    vOtherIncomeD_S = Spouse(0)("OtherIncome_S-Amount")
                    Industry_S.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'Spouse'", CreditNumber)))

                    '*** I D E N T I F I C A T I O N ***
                    Dim BorrowerID_S As DataTable = DataSource(String.Format("SELECT * FROM profile_borrowerid WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE' AND ID_Type = 'S'", BorrowerID))
                    If BorrowerID_S.Rows.Count > 0 Then
                        GSIS_S = BorrowerID_S(0)("GSIS")
                        PhilHealth_S = BorrowerID_S(0)("PhilHealth")
                        Senior_S = BorrowerID_S(0)("Senior")
                        UMID_S = BorrowerID_S(0)("UMID")
                        SEC_S = BorrowerID_S(0)("SEC")
                        DTI_S = BorrowerID_S(0)("DTI")
                        CDA_S = BorrowerID_S(0)("CDA")
                        Cooperative_S = BorrowerID_S(0)("Cooperative")
                        Drivers_S = BorrowerID_S(0)("Drivers")
                        dDrivers_S = BorrowerID_S(0)("dDrivers")
                        VIN_S = BorrowerID_S(0)("VIN")
                        dVIN_S = BorrowerID_S(0)("dVIN")
                        Passport_S = BorrowerID_S(0)("Passport")
                        dPassport_S = BorrowerID_S(0)("dPassport")
                        PRC_S = BorrowerID_S(0)("PRC")
                        dPRC_S = BorrowerID_S(0)("dPRC")
                        NBI_S = BorrowerID_S(0)("NBI")
                        dNBI_S = BorrowerID_S(0)("dNBI")
                        Police_S = BorrowerID_S(0)("Police")
                        dPolice_S = BorrowerID_S(0)("dPolice")
                        Postal_S = BorrowerID_S(0)("Postal")
                        dPostal_S = BorrowerID_S(0)("dPostal")
                        Barangay_S = BorrowerID_S(0)("Barangay")
                        dBarangay_S = BorrowerID_S(0)("dBarangay")
                        OWWA_S = BorrowerID_S(0)("OWWA")
                        dOWWA_S = BorrowerID_S(0)("dOWWA")
                        OFW_S = BorrowerID_S(0)("OFW")
                        dOFW_S = BorrowerID_S(0)("dOFW")
                        Seaman_S = BorrowerID_S(0)("Seaman")
                        dSeaman_S = BorrowerID_S(0)("dSeaman")
                        PNP_S = BorrowerID_S(0)("PNP")
                        dPNP_S = BorrowerID_S(0)("dPNP")
                        AFP_S = BorrowerID_S(0)("AFP")
                        dAFP_S = BorrowerID_S(0)("dAFP")
                        HDMF_S = BorrowerID_S(0)("HDMF")
                        dHDMF_S = BorrowerID_S(0)("dHDMF")
                        PWD_S = BorrowerID_S(0)("PWD")
                        dPWD_S = BorrowerID_S(0)("dPWD")
                        DSWD_S = BorrowerID_S(0)("DSWD")
                        dDSWD_S = BorrowerID_S(0)("dDSWD")
                        ACR_S = BorrowerID_S(0)("ACR")
                        dACR_S = BorrowerID_S(0)("dACR")
                        DTI_Business_S = BorrowerID_S(0)("DTI_Business")
                        dDTI_Business_S = BorrowerID_S(0)("dDTI_Business")
                        IBP_S = BorrowerID_S(0)("IBP")
                        dIBP_S = BorrowerID_S(0)("dIBP")
                        FireArms_S = BorrowerID_S(0)("FireArms")
                        dFireArms_S = BorrowerID_S(0)("dFireArms")
                        Government_S = BorrowerID_S(0)("Government")
                        dGovernment_S = BorrowerID_S(0)("dGovernment")
                        Diplomat_S = BorrowerID_S(0)("Diplomat")
                        dDiplomat_S = BorrowerID_S(0)("dDiplomat")
                        National_S = BorrowerID_S(0)("National")
                        dNational_S = BorrowerID_S(0)("dNational")
                        Work_S = BorrowerID_S(0)("Work")
                        dWork_S = BorrowerID_S(0)("dWork")
                        GOCC_S = BorrowerID_S(0)("GOCC")
                        dGOCC_S = BorrowerID_S(0)("dGOCC")
                        PLRA_S = BorrowerID_S(0)("PLRA")
                        dPLRA_S = BorrowerID_S(0)("dPLRA")
                        Major_S = BorrowerID_S(0)("Major")
                        dMajor_S = BorrowerID_S(0)("dMajor")
                        Media_S = BorrowerID_S(0)("Media")
                        dMedia_S = BorrowerID_S(0)("dMedia")
                        Student_S = BorrowerID_S(0)("Student")
                        dStudent_S = BorrowerID_S(0)("dStudent")
                        SIRV_S = BorrowerID_S(0)("SIRV")
                        dSIRV_S = BorrowerID_S(0)("dSIRV")
                    End If
                    '*** I D E N T I F I C A T I O N ***
                End If
            End If

            CbxPrefix_C1.Text = drv("Prefix_C1")
            CbxPrefix_C1.Tag = drv("Prefix_C1")

            TxtFirstN_C1.Text = drv("FirstN_C1")
            TxtFirstN_C1.Tag = drv("FirstN_C1")

            TxtMiddleN_C1.Text = drv("MiddleN_C1")
            TxtMiddleN_C1.Tag = drv("MiddleN_C1")

            TxtLastN_C1.Text = drv("LastN_C1")
            TxtLastN_C1.Tag = drv("LastN_C1")

            cbxSuffix_C1.Text = drv("Suffix_C1")
            cbxSuffix_C1.Tag = drv("Suffix_C1")

            CbxPrefix_C2.Text = drv("Prefix_C2")
            CbxPrefix_C2.Tag = drv("Prefix_C2")

            TxtFirstN_C2.Text = drv("FirstN_C2")
            TxtFirstN_C2.Tag = drv("FirstN_C2")

            TxtMiddleN_C2.Text = drv("MiddleN_C2")
            TxtMiddleN_C2.Tag = drv("MiddleN_C2")

            TxtLastN_C2.Text = drv("LastN_C2")
            TxtLastN_C2.Tag = drv("LastN_C2")

            cbxSuffix_C2.Text = drv("Suffix_C2")
            cbxSuffix_C2.Tag = drv("Suffix_C2")

            CbxPrefix_C3.Text = drv("Prefix_C3")
            CbxPrefix_C3.Tag = drv("Prefix_C3")

            TxtFirstN_C3.Text = drv("FirstN_C3")
            TxtFirstN_C3.Tag = drv("FirstN_C3")

            TxtMiddleN_C3.Text = drv("MiddleN_C3")
            TxtMiddleN_C3.Tag = drv("MiddleN_C3")

            TxtLastN_C3.Text = drv("LastN_C3")
            TxtLastN_C3.Tag = drv("LastN_C3")

            cbxSuffix_C3.Text = drv("Suffix_C3")
            cbxSuffix_C3.Tag = drv("Suffix_C3")

            CbxPrefix_C4.Text = drv("Prefix_C4")
            CbxPrefix_C4.Tag = drv("Prefix_C4")

            TxtFirstN_C4.Text = drv("FirstN_C4")
            TxtFirstN_C4.Tag = drv("FirstN_C4")

            TxtMiddleN_C4.Text = drv("MiddleN_C4")
            TxtMiddleN_C4.Tag = drv("MiddleN_C4")

            TxtLastN_C4.Text = drv("LastN_C4")
            TxtLastN_C4.Tag = drv("LastN_C4")

            cbxSuffix_C4.Text = drv("Suffix_C4")
            cbxSuffix_C4.Tag = drv("Suffix_C4")

            If TxtFirstN_C1.Text = "" Then
                CoMakerID = ""
            Else
                Dim CoMaker As DataTable = DataSource(String.Format("SELECT * FROM credit_application_comaker WHERE CreditNumber = '{0}' AND `status` = 'ACTIVE' ORDER BY `Rank`", CreditNumber))
                If CoMaker.Rows.Count > 0 Then
                    CoMakerID = CoMaker(0)("CoMakerID")
                    vPrefix_C1 = CoMaker(0)("Prefix_C")
                    vFirstN_C1 = CoMaker(0)("FirstN_C")
                    vMiddleN_C1 = CoMaker(0)("MiddleN_C")
                    vLastN_C1 = CoMaker(0)("LastN_C")
                    vSuffix_C1 = CoMaker(0)("Suffix_C")
                    vNoC_C1 = CoMaker(0)("NoC_C")
                    vStreetC_C1 = CoMaker(0)("StreetC_C")
                    vBarangayC_C1 = CoMaker(0)("BarangayC_C")
                    vAddressC_C1 = CoMaker(0)("AddressC_C")
                    vNoP_C1 = CoMaker(0)("NoP_C")
                    vStreetP_C1 = CoMaker(0)("StreetP_C")
                    vBarangayP_C1 = CoMaker(0)("BarangayP_C")
                    vAddressP_C1 = CoMaker(0)("AddressP_C")
                    vBirth_C1 = CoMaker(0)("Birth_C")
                    vPlaceBirth_C1 = CoMaker(0)("PlaceBirth_C")
                    If CoMaker(0)("Gender_C") = "Male" Then
                        vMale_C1 = True
                    ElseIf CoMaker(0)("Gender_C") = "Female" Then
                        vFemale_C1 = True
                    End If
                    If CoMaker(0)("Civil_C") = "Single" Then
                        vSingle_C1 = True
                    ElseIf CoMaker(0)("Civil_C") = "Married" Then
                        vMarried_C1 = True
                    ElseIf CoMaker(0)("Civil_C") = "Separated" Then
                        vSeparated_C1 = True
                    ElseIf CoMaker(0)("Civil_C") = "Widowed" Then
                        vWidowed_C1 = True
                    End If
                    vCitizenship_C1 = CoMaker(0)("Citizenship_C")
                    vTIN_C1 = CoMaker(0)("TIN_C")
                    vTelephone_C1 = CoMaker(0)("Telephone_C")
                    vSSS_C1 = CoMaker(0)("SSS_C")
                    vMobile_C1 = CoMaker(0)("Mobile_C")
                    vEmail_C1 = CoMaker(0)("Email_C")
                    If CoMaker(0)("House_C") = "Owned" Then
                        vOwned_C1 = True
                    ElseIf CoMaker(0)("House_C") = "Free" Then
                        vFree_C1 = True
                    ElseIf CoMaker(0)("House_C") = "Rented" Then
                        vRented_C1 = True
                        vRent_C1 = CoMaker(0)("Rent_C")
                    End If
                    Try
                        Using TempPB As New DevExpress.XtraEditors.PictureEdit
                            TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, CreditNumber, "CoMaker1.jpg"))
                            ResizeImages(TempPB.Image.Clone, CoMaker1, 850, 700)
                        End Using
                    Catch ex As Exception
                        TriggerBugReport("Credit Investigation - SelectedIndexChanged", ex.Message.ToString)
                    End Try
                    TotalImageC1 = CoMaker(0)("Attach")
                    vRelationship_C1 = CoMaker(0)("Relation")
                    vRelationship_C1_ID = CoMaker(0)("Relation_ID")
                    vEmployer_C1 = CoMaker(0)("Employer_C")
                    vEmpAddress_C1 = CoMaker(0)("EmployerAddress_C")
                    vEmpTelephone_C1 = CoMaker(0)("EmployerTelephone_C")
                    vPosition_C1 = CoMaker(0)("Position_C")
                    If CoMaker(0)("EmploymentStat_C") = "Casual" Then
                        vCasual_C1 = True
                    ElseIf CoMaker(0)("EmploymentStat_C") = "Temporary" Then
                        vTemporary_C1 = True
                    ElseIf CoMaker(0)("EmploymentStat_C") = "Permanent" Then
                        vPermanent_C1 = True
                    End If
                    vHired_C1 = CoMaker(0)("Hired_C")
                    vYearHired_C1 = CoMaker(0)("YearHired_C")
                    vSupervisor_C1 = CoMaker(0)("Supervisor_C")
                    vSalary_C1 = CoMaker(0)("Monthly_C")
                    dSalary_C1.Value = vSalary_C1 + CoMaker(0)("OtherIncome_C-Amount") + CoMaker(0)("BusinessIncome_C")
                    vBusinessName_C1 = CoMaker(0)("BusinessName_C")
                    vBusinessAddress_C1 = CoMaker(0)("BusinessAddress_C")
                    vBusinessTelephone_C1 = CoMaker(0)("BusinessTelephone_C")
                    vNatureBusiness_C1 = CoMaker(0)("NatureBusiness_C")
                    vYrsOperation_C1 = CoMaker(0)("YrsOperation_C")
                    vBusinessIncome_C1 = CoMaker(0)("BusinessIncome_C")
                    vNoEmployees_C1 = CoMaker(0)("NoEmployees_C")
                    vCapital_C1 = CoMaker(0)("Capital_C")
                    vArea_C1 = CoMaker(0)("Area_C")
                    vExpiry_C1 = CoMaker(0)("Expiry_C")
                    vOutlet_C1 = CoMaker(0)("Outlet_C")
                    vOtherIncome_C1 = CoMaker(0)("OtherIncome_C")
                    vOtherIncomeD_C1 = CoMaker(0)("OtherIncome_C-Amount")
                    Industry_C1.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker1'", CreditNumber)))

                    If CoMaker.Rows.Count > 1 Then 'COMAKER 2
                        vPrefix_C2 = CoMaker(1)("Prefix_C")
                        vFirstN_C2 = CoMaker(1)("FirstN_C")
                        vMiddleN_C2 = CoMaker(1)("MiddleN_C")
                        vLastN_C2 = CoMaker(1)("LastN_C")
                        vSuffix_C2 = CoMaker(1)("Suffix_C")
                        vNoC_C2 = CoMaker(1)("NoC_C")
                        vStreetC_C2 = CoMaker(1)("StreetC_C")
                        vBarangayC_C2 = CoMaker(1)("BarangayC_C")
                        vAddressC_C2 = CoMaker(1)("AddressC_C")
                        vNoP_C2 = CoMaker(1)("NoP_C")
                        vStreetP_C2 = CoMaker(1)("StreetP_C")
                        vBarangayP_C2 = CoMaker(1)("BarangayP_C")
                        vAddressP_C2 = CoMaker(1)("AddressP_C")
                        vBirth_C2 = CoMaker(1)("Birth_C")
                        vPlaceBirth_C2 = CoMaker(1)("PlaceBirth_C")
                        If CoMaker(1)("Gender_C") = "Male" Then
                            vMale_C2 = True
                        ElseIf CoMaker(1)("Gender_C") = "Female" Then
                            vFemale_C2 = True
                        End If
                        If CoMaker(1)("Civil_C") = "Single" Then
                            vSingle_C2 = True
                        ElseIf CoMaker(1)("Civil_C") = "Married" Then
                            vMarried_C2 = True
                        ElseIf CoMaker(1)("Civil_C") = "Separated" Then
                            vSeparated_C2 = True
                        ElseIf CoMaker(1)("Civil_C") = "Widowed" Then
                            vWidowed_C2 = True
                        End If
                        vCitizenship_C2 = CoMaker(1)("Citizenship_C")
                        vTIN_C2 = CoMaker(1)("TIN_C")
                        vTelephone_C2 = CoMaker(1)("Telephone_C")
                        vSSS_C2 = CoMaker(1)("SSS_C")
                        vMobile_C2 = CoMaker(1)("Mobile_C")
                        vEmail_C2 = CoMaker(1)("Email_C")
                        If CoMaker(1)("House_C") = "Owned" Then
                            vOwned_C2 = True
                        ElseIf CoMaker(1)("House_C") = "Free" Then
                            vFree_C2 = True
                        ElseIf CoMaker(1)("House_C") = "Rented" Then
                            vRented_C2 = True
                            vRent_C2 = CoMaker(1)("Rent_C")
                        End If
                        Try
                            Using TempPB As New DevExpress.XtraEditors.PictureEdit
                                TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, CreditNumber, "CoMaker2.jpg"))
                                ResizeImages(TempPB.Image.Clone, CoMaker2, 850, 700)
                            End Using
                        Catch ex As Exception
                            TriggerBugReport("Credit Investigation - SelectedIndexChanged", ex.Message.ToString)
                        End Try
                        TotalImageC2 = CoMaker(1)("Attach")
                        vRelationship_C2 = CoMaker(1)("Relation")
                        vRelationship_C2_ID = CoMaker(1)("Relation_ID")
                        vEmployer_C2 = CoMaker(1)("Employer_C")
                        vEmpAddress_C2 = CoMaker(1)("EmployerAddress_C")
                        vEmpTelephone_C2 = CoMaker(1)("EmployerTelephone_C")
                        vPosition_C2 = CoMaker(1)("Position_C")
                        If CoMaker(1)("EmploymentStat_C") = "Casual" Then
                            vCasual_C2 = True
                        ElseIf CoMaker(1)("EmploymentStat_C") = "Temporary" Then
                            vTemporary_C2 = True
                        ElseIf CoMaker(1)("EmploymentStat_C") = "Permanent" Then
                            vPermanent_C2 = True
                        End If
                        vHired_C2 = CoMaker(1)("Hired_C")
                        vYearHired_C2 = CoMaker(1)("YearHired_C")
                        vSupervisor_C2 = CoMaker(1)("Supervisor_C")
                        vSalary_C2 = CoMaker(1)("Monthly_C")
                        dSalary_C2.Value = vSalary_C2 + CoMaker(1)("OtherIncome_C-Amount") + CoMaker(1)("BusinessIncome_C")
                        vBusinessName_C2 = CoMaker(1)("BusinessName_C")
                        vBusinessAddress_C2 = CoMaker(1)("BusinessAddress_C")
                        vBusinessTelephone_C2 = CoMaker(1)("BusinessTelephone_C")
                        vNatureBusiness_C2 = CoMaker(1)("NatureBusiness_C")
                        vYrsOperation_C2 = CoMaker(1)("YrsOperation_C")
                        vBusinessIncome_C2 = CoMaker(1)("BusinessIncome_C")
                        vNoEmployees_C2 = CoMaker(1)("NoEmployees_C")
                        vCapital_C2 = CoMaker(1)("Capital_C")
                        vArea_C2 = CoMaker(1)("Area_C")
                        vExpiry_C2 = CoMaker(1)("Expiry_C")
                        vOutlet_C2 = CoMaker(1)("Outlet_C")
                        vOtherIncome_C2 = CoMaker(1)("OtherIncome_C")
                        vOtherIncomeD_C2 = CoMaker(1)("OtherIncome_C-Amount")
                        Industry_C2.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker2'", CreditNumber)))

                        If CoMaker.Rows.Count > 2 Then 'COMAKER 3
                            vPrefix_C3 = CoMaker(2)("Prefix_C")
                            vFirstN_C3 = CoMaker(2)("FirstN_C")
                            vMiddleN_C3 = CoMaker(2)("MiddleN_C")
                            vLastN_C3 = CoMaker(2)("LastN_C")
                            vSuffix_C3 = CoMaker(2)("Suffix_C")
                            vNoC_C3 = CoMaker(2)("NoC_C")
                            vStreetC_C3 = CoMaker(2)("StreetC_C")
                            vBarangayC_C3 = CoMaker(2)("BarangayC_C")
                            vAddressC_C3 = CoMaker(2)("AddressC_C")
                            vNoP_C3 = CoMaker(2)("NoP_C")
                            vStreetP_C3 = CoMaker(2)("StreetP_C")
                            vBarangayP_C3 = CoMaker(2)("BarangayP_C")
                            vAddressP_C3 = CoMaker(2)("AddressP_C")
                            vBirth_C3 = CoMaker(2)("Birth_C")
                            vPlaceBirth_C3 = CoMaker(2)("PlaceBirth_C")
                            If CoMaker(2)("Gender_C") = "Male" Then
                                vMale_C3 = True
                            ElseIf CoMaker(2)("Gender_C") = "Female" Then
                                vFemale_C3 = True
                            End If
                            If CoMaker(2)("Civil_C") = "Single" Then
                                vSingle_C3 = True
                            ElseIf CoMaker(2)("Civil_C") = "Married" Then
                                vMarried_C3 = True
                            ElseIf CoMaker(2)("Civil_C") = "Separated" Then
                                vSeparated_C3 = True
                            ElseIf CoMaker(2)("Civil_C") = "Widowed" Then
                                vWidowed_C3 = True
                            End If
                            vCitizenship_C3 = CoMaker(2)("Citizenship_C")
                            vTIN_C3 = CoMaker(2)("TIN_C")
                            vTelephone_C3 = CoMaker(2)("Telephone_C")
                            vSSS_C3 = CoMaker(2)("SSS_C")
                            vMobile_C3 = CoMaker(2)("Mobile_C")
                            vEmail_C3 = CoMaker(2)("Email_C")
                            If CoMaker(2)("House_C") = "Owned" Then
                                vOwned_C3 = True
                            ElseIf CoMaker(2)("House_C") = "Free" Then
                                vFree_C3 = True
                            ElseIf CoMaker(2)("House_C") = "Rented" Then
                                vRented_C3 = True
                                vRent_C3 = CoMaker(2)("Rent_C")
                            End If
                            Try
                                Using TempPB As New DevExpress.XtraEditors.PictureEdit
                                    TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, CreditNumber, "CoMaker3.jpg"))
                                    ResizeImages(TempPB.Image.Clone, CoMaker3, 850, 700)
                                End Using
                            Catch ex As Exception
                                TriggerBugReport("Credit Investigation - SelectedIndexChanged", ex.Message.ToString)
                            End Try
                            TotalImageC3 = CoMaker(2)("Attach")
                            vRelationship_C3 = CoMaker(2)("Relation")
                            vRelationship_C3_ID = CoMaker(2)("Relation_ID")
                            vEmployer_C3 = CoMaker(2)("Employer_C")
                            vEmpAddress_C3 = CoMaker(2)("EmployerAddress_C")
                            vEmpTelephone_C3 = CoMaker(2)("EmployerTelephone_C")
                            vPosition_C3 = CoMaker(2)("Position_C")
                            If CoMaker(2)("EmploymentStat_C") = "Casual" Then
                                vCasual_C3 = True
                            ElseIf CoMaker(2)("EmploymentStat_C") = "Temporary" Then
                                vTemporary_C3 = True
                            ElseIf CoMaker(2)("EmploymentStat_C") = "Permanent" Then
                                vPermanent_C3 = True
                            End If
                            vHired_C3 = CoMaker(2)("Hired_C")
                            vYearHired_C3 = CoMaker(2)("YearHired_C")
                            vSupervisor_C3 = CoMaker(2)("Supervisor_C")
                            vSalary_C3 = CoMaker(2)("Monthly_C")
                            dSalary_C3.Value = vSalary_C3 + CoMaker(2)("OtherIncome_C-Amount") + CoMaker(2)("BusinessIncome_C")
                            vBusinessName_C3 = CoMaker(2)("BusinessName_C")
                            vBusinessAddress_C3 = CoMaker(2)("BusinessAddress_C")
                            vBusinessTelephone_C3 = CoMaker(2)("BusinessTelephone_C")
                            vNatureBusiness_C3 = CoMaker(2)("NatureBusiness_C")
                            vYrsOperation_C3 = CoMaker(2)("YrsOperation_C")
                            vBusinessIncome_C3 = CoMaker(2)("BusinessIncome_C")
                            vNoEmployees_C3 = CoMaker(2)("NoEmployees_C")
                            vCapital_C3 = CoMaker(2)("Capital_C")
                            vArea_C3 = CoMaker(2)("Area_C")
                            vExpiry_C3 = CoMaker(2)("Expiry_C")
                            vOutlet_C3 = CoMaker(2)("Outlet_C")
                            vOtherIncome_C3 = CoMaker(2)("OtherIncome_C")
                            vOtherIncomeD_C3 = CoMaker(2)("OtherIncome_C-Amount")
                            Industry_C3.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker3'", CreditNumber)))

                            If CoMaker.Rows.Count > 3 Then 'COMAKER 4
                                vPrefix_C4 = CoMaker(3)("Prefix_C")
                                vFirstN_C4 = CoMaker(3)("FirstN_C")
                                vMiddleN_C4 = CoMaker(3)("MiddleN_C")
                                vLastN_C4 = CoMaker(3)("LastN_C")
                                vSuffix_C4 = CoMaker(3)("Suffix_C")
                                vNoC_C4 = CoMaker(3)("NoC_C")
                                vStreetC_C4 = CoMaker(3)("StreetC_C")
                                vBarangayC_C4 = CoMaker(3)("BarangayC_C")
                                vAddressC_C4 = CoMaker(3)("AddressC_C")
                                vNoP_C4 = CoMaker(3)("NoP_C")
                                vStreetP_C4 = CoMaker(3)("StreetP_C")
                                vBarangayP_C4 = CoMaker(3)("BarangayP_C")
                                vAddressP_C4 = CoMaker(3)("AddressP_C")
                                vBirth_C4 = CoMaker(3)("Birth_C")
                                vPlaceBirth_C4 = CoMaker(3)("PlaceBirth_C")
                                If CoMaker(3)("Gender_C") = "Male" Then
                                    vMale_C4 = True
                                ElseIf CoMaker(3)("Gender_C") = "Female" Then
                                    vFemale_C4 = True
                                End If
                                If CoMaker(3)("Civil_C") = "Single" Then
                                    vSingle_C4 = True
                                ElseIf CoMaker(3)("Civil_C") = "Married" Then
                                    vMarried_C4 = True
                                ElseIf CoMaker(3)("Civil_C") = "Separated" Then
                                    vSeparated_C4 = True
                                ElseIf CoMaker(3)("Civil_C") = "Widowed" Then
                                    vWidowed_C4 = True
                                End If
                                vCitizenship_C4 = CoMaker(3)("Citizenship_C")
                                vTIN_C4 = CoMaker(3)("TIN_C")
                                vTelephone_C4 = CoMaker(3)("Telephone_C")
                                vSSS_C4 = CoMaker(3)("SSS_C")
                                vMobile_C4 = CoMaker(3)("Mobile_C")
                                vEmail_C4 = CoMaker(3)("Email_C")
                                If CoMaker(3)("House_C") = "Owned" Then
                                    vOwned_C4 = True
                                ElseIf CoMaker(3)("House_C") = "Free" Then
                                    vFree_C4 = True
                                ElseIf CoMaker(3)("House_C") = "Rented" Then
                                    vRented_C4 = True
                                    vRent_C4 = CoMaker(3)("Rent_C")
                                End If
                                Try
                                    Using TempPB As New DevExpress.XtraEditors.PictureEdit
                                        TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, CreditNumber, "CoMaker4.jpg"))
                                        ResizeImages(TempPB.Image.Clone, CoMaker4, 850, 700)
                                    End Using
                                Catch ex As Exception
                                    TriggerBugReport("Credit Investigation - SelectedIndexChanged", ex.Message.ToString)
                                End Try
                                TotalImageC4 = CoMaker(3)("Attach")
                                vRelationship_C4 = CoMaker(3)("Relation")
                                vRelationship_C4_ID = CoMaker(3)("Relation_ID")
                                vEmployer_C4 = CoMaker(3)("Employer_C")
                                vEmpAddress_C4 = CoMaker(3)("EmployerAddress_C")
                                vEmpTelephone_C4 = CoMaker(3)("EmployerTelephone_C")
                                vPosition_C4 = CoMaker(3)("Position_C")
                                If CoMaker(3)("EmploymentStat_C") = "Casual" Then
                                    vCasual_C4 = True
                                ElseIf CoMaker(3)("EmploymentStat_C") = "Temporary" Then
                                    vTemporary_C4 = True
                                ElseIf CoMaker(3)("EmploymentStat_C") = "Permanent" Then
                                    vPermanent_C4 = True
                                End If
                                vHired_C4 = CoMaker(3)("Hired_C")
                                vYearHired_C4 = CoMaker(3)("YearHired_C")
                                vSupervisor_C4 = CoMaker(3)("Supervisor_C")
                                vSalary_C4 = CoMaker(3)("Monthly_C")
                                dSalary_C4.Value = vSalary_C4 + CoMaker(3)("OtherIncome_C-Amount") + CoMaker(3)("BusinessIncome_C")
                                vBusinessName_C4 = CoMaker(3)("BusinessName_C")
                                vBusinessAddress_C4 = CoMaker(3)("BusinessAddress_C")
                                vBusinessTelephone_C4 = CoMaker(3)("BusinessTelephone_C")
                                vNatureBusiness_C4 = CoMaker(3)("NatureBusiness_C")
                                vYrsOperation_C4 = CoMaker(3)("YrsOperation_C")
                                vBusinessIncome_C4 = CoMaker(3)("BusinessIncome_C")
                                vNoEmployees_C4 = CoMaker(3)("NoEmployees_C")
                                vCapital_C4 = CoMaker(3)("Capital_C")
                                vArea_C4 = CoMaker(3)("Area_C")
                                vExpiry_C4 = CoMaker(3)("Expiry_C")
                                vOutlet_C4 = CoMaker(3)("Outlet_C")
                                vOtherIncome_C4 = CoMaker(3)("OtherIncome_C")
                                vOtherIncomeD_C4 = CoMaker(3)("OtherIncome_C-Amount")
                                Industry_C4.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker4'", CreditNumber)))
                            End If
                        End If
                    End If
                End If
            End If

            '*** I D E N T I F I C A T I O N ***
            Dim BorrowerID_B As DataTable = DataSource(String.Format("SELECT * FROM profile_borrowerid WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE' AND ID_Type = 'B'", BorrowerID))
            If BorrowerID_B.Rows.Count > 0 Then
                GSIS = BorrowerID_B(0)("GSIS")
                PhilHealth = BorrowerID_B(0)("PhilHealth")
                Senior = BorrowerID_B(0)("Senior")
                UMID = BorrowerID_B(0)("UMID")
                SEC = BorrowerID_B(0)("SEC")
                DTI = BorrowerID_B(0)("DTI")
                CDA = BorrowerID_B(0)("CDA")
                Cooperative = BorrowerID_B(0)("Cooperative")
                Drivers = BorrowerID_B(0)("Drivers")
                dDrivers = BorrowerID_B(0)("dDrivers")
                VIN = BorrowerID_B(0)("VIN")
                dVIN = BorrowerID_B(0)("dVIN")
                Passport = BorrowerID_B(0)("Passport")
                dPassport = BorrowerID_B(0)("dPassport")
                PRC = BorrowerID_B(0)("PRC")
                dPRC = BorrowerID_B(0)("dPRC")
                NBI = BorrowerID_B(0)("NBI")
                dNBI = BorrowerID_B(0)("dNBI")
                Police = BorrowerID_B(0)("Police")
                dPolice = BorrowerID_B(0)("dPolice")
                Postal = BorrowerID_B(0)("Postal")
                dPostal = BorrowerID_B(0)("dPostal")
                Barangay = BorrowerID_B(0)("Barangay")
                dBarangay = BorrowerID_B(0)("dBarangay")
                OWWA = BorrowerID_B(0)("OWWA")
                dOWWA = BorrowerID_B(0)("dOWWA")
                OFW = BorrowerID_B(0)("OFW")
                dOFW = BorrowerID_B(0)("dOFW")
                Seaman = BorrowerID_B(0)("Seaman")
                dSeaman = BorrowerID_B(0)("dSeaman")
                PNP = BorrowerID_B(0)("PNP")
                dPNP = BorrowerID_B(0)("dPNP")
                AFP = BorrowerID_B(0)("AFP")
                dAFP = BorrowerID_B(0)("dAFP")
                HDMF = BorrowerID_B(0)("HDMF")
                dHDMF = BorrowerID_B(0)("dHDMF")
                PWD = BorrowerID_B(0)("PWD")
                dPWD = BorrowerID_B(0)("dPWD")
                DSWD = BorrowerID_B(0)("DSWD")
                dDSWD = BorrowerID_B(0)("dDSWD")
                ACR = BorrowerID_B(0)("ACR")
                dACR = BorrowerID_B(0)("dACR")
                DTI_Business = BorrowerID_B(0)("DTI_Business")
                dDTI_Business = BorrowerID_B(0)("dDTI_Business")
                IBP = BorrowerID_B(0)("IBP")
                dIBP = BorrowerID_B(0)("dIBP")
                FireArms = BorrowerID_B(0)("FireArms")
                dFireArms = BorrowerID_B(0)("dFireArms")
                Government = BorrowerID_B(0)("Government")
                dGovernment = BorrowerID_B(0)("dGovernment")
                Diplomat = BorrowerID_B(0)("Diplomat")
                dDiplomat = BorrowerID_B(0)("dDiplomat")
                National = BorrowerID_B(0)("National")
                dNational = BorrowerID_B(0)("dNational")
                Work = BorrowerID_B(0)("Work")
                dWork = BorrowerID_B(0)("dWork")
                GOCC = BorrowerID_B(0)("GOCC")
                dGOCC = BorrowerID_B(0)("dGOCC")
                PLRA = BorrowerID_B(0)("PLRA")
                dPLRA = BorrowerID_B(0)("dPLRA")
                Major = BorrowerID_B(0)("Major")
                dMajor = BorrowerID_B(0)("dMajor")
                Media = BorrowerID_B(0)("Media")
                dMedia = BorrowerID_B(0)("dMedia")
                Student = BorrowerID_B(0)("Student")
                dStudent = BorrowerID_B(0)("dStudent")
                SIRV = BorrowerID_B(0)("SIRV")
                dSIRV = BorrowerID_B(0)("dSIRV")
            End If

            txtNoC_B.Text = drv("NoC_B")
            txtNoC_B.Tag = drv("NoC_B")

            txtStreetC_B.Text = drv("StreetC_B")
            txtStreetC_B.Tag = drv("StreetC_B")

            txtBarangayC_B.Text = drv("BarangayC_B")
            txtBarangayC_B.Tag = drv("BarangayC_B")

            cbxAddressC_B.Text = drv("AddressC_B")
            cbxAddressC_B.Tag = drv("AddressC_B")

            If drv("Birth_B") = "" Then
                DtpBirth_B.CustomFormat = ""
            Else
                DtpBirth_B.CustomFormat = "MMMM dd, yyyy"
                DtpBirth_B.Value = drv("Birth_B")
                DtpBirth_B.Tag = drv("Birth_B")
            End If

            If drv("Civil_B") = "Single" Then
                cbxSingle_B.Checked = True
            ElseIf drv("Civil_B") = "Married" Then
                cbxMarried_B.Checked = True
            ElseIf drv("Civil_B") = "Separated" Then
                cbxSeparated_B.Checked = True
            ElseIf drv("Civil_B") = "Widowed" Then
                cbxWidowed_B.Checked = True
            End If
            cbxSingle_B.Tag = drv("Civil_B")
            cbxMarried_B.Tag = drv("Civil_B")
            cbxSeparated_B.Tag = drv("Civil_B")
            cbxWidowed_B.Tag = drv("Civil_B")

            If drv("House_B") = "Owned" Then
                cbxOwned_B.Checked = True
            ElseIf drv("House_B") = "Free" Then
                cbxFree_B.Checked = True
            ElseIf drv("House_B") = "Rented" Then
                cbxRented_B.Checked = True
                dRent_B.Value = drv("Rent_B")
                dRent_B.Tag = drv("Rent_B")
            End If
            cbxOwned_B.Tag = drv("House_B")
            cbxFree_B.Tag = drv("House_B")
            cbxRented_B.Tag = drv("House_B")
            Try
                Using TempPB As New DevExpress.XtraEditors.PictureEdit
                    TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, CreditNumber, "Borrower.jpg"))
                    If IO.File.Exists(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, CreditNumber, "Borrower.jpg")) Then
                        txtPath_B.Text = "Borrower.jpg"
                    Else
                        txtPath_B.Text = ""
                    End If
                    ResizeImages(TempPB.Image.Clone, pb_B, 650, 500)
                End Using
            Catch ex As Exception
                pb_B.Image = DefaultImage.Image.Clone
                txtPath_B.Text = ""
            End Try
            '**DEPENDENT
            CbxPrefix_1.Text = drv("Prefix_D1")
            CbxPrefix_1.Tag = drv("Prefix_D1")

            TxtFirstN_1.Text = drv("FirstN_D1")
            TxtFirstN_1.Tag = drv("FirstN_D1")
            If drv("FirstN_D1") = "" Then
                TxtMiddleN_1.Enabled = False
                TxtLastN_1.Enabled = False
                cbxSuffix_1.Enabled = False
                iAge_D1.Enabled = False
                txtGrade_1.Enabled = False
                txtSchool_1.Enabled = False
                txtSchoolAddress_1.Enabled = False
            Else
                CbxPrefix_1.Enabled = True
                TxtFirstN_1.Enabled = True
                TxtMiddleN_1.Enabled = True
                TxtLastN_1.Enabled = True
                cbxSuffix_1.Enabled = True
                iAge_D1.Enabled = True
                txtGrade_1.Enabled = True
                txtSchool_1.Enabled = True
                txtSchoolAddress_1.Enabled = True
            End If

            TxtMiddleN_1.Text = drv("MiddleN_D1")
            TxtMiddleN_1.Tag = drv("MiddleN_D1")

            TxtLastN_1.Text = drv("LastN_D1")
            TxtLastN_1.Tag = drv("LastN_D1")

            cbxSuffix_1.Text = drv("Suffix_D1")
            cbxSuffix_1.Tag = drv("Suffix_D1")

            iAge_D1.Value = drv("Age_D1")
            iAge_D1.Tag = drv("Age_D1")

            txtGrade_1.Text = drv("Grade_D1")
            txtGrade_1.Tag = drv("Grade_D1")

            txtSchool_1.Text = drv("School_D1")
            txtSchool_1.Tag = drv("School_D1")

            txtSchoolAddress_1.Text = drv("SchoolAddress_D1")
            txtSchoolAddress_1.Tag = drv("SchoolAddress_D1")

            CbxPrefix_2.Text = drv("Prefix_D2")
            CbxPrefix_2.Tag = drv("Prefix_D2")

            TxtFirstN_2.Text = drv("FirstN_D2")
            TxtFirstN_2.Tag = drv("FirstN_D2")
            If drv("FirstN_D2") = "" Then
                CbxPrefix_2.Enabled = False
                TxtFirstN_2.Enabled = False
                TxtMiddleN_2.Enabled = False
                TxtLastN_2.Enabled = False
                cbxSuffix_2.Enabled = False
                iAge_D2.Enabled = False
                txtGrade_2.Enabled = False
                txtSchool_2.Enabled = False
                txtSchoolAddress_2.Enabled = False
            Else
                CbxPrefix_2.Enabled = True
                TxtFirstN_2.Enabled = True
                TxtMiddleN_2.Enabled = True
                TxtLastN_2.Enabled = True
                cbxSuffix_2.Enabled = True
                iAge_D2.Enabled = True
                txtGrade_2.Enabled = True
                txtSchool_2.Enabled = True
                txtSchoolAddress_2.Enabled = True
            End If

            TxtMiddleN_2.Text = drv("MiddleN_D2")
            TxtMiddleN_2.Tag = drv("MiddleN_D2")

            TxtLastN_2.Text = drv("LastN_D2")
            TxtLastN_2.Tag = drv("LastN_D2")

            cbxSuffix_2.Text = drv("Suffix_D2")
            cbxSuffix_2.Tag = drv("Suffix_D2")

            iAge_D2.Value = drv("Age_D2")
            iAge_D2.Tag = drv("Age_D2")

            txtGrade_2.Text = drv("Grade_D2")
            txtGrade_2.Tag = drv("Grade_D2")

            txtSchool_2.Text = drv("School_D2")
            txtSchool_2.Tag = drv("School_D2")

            txtSchoolAddress_2.Text = drv("SchoolAddress_D2")
            txtSchoolAddress_2.Tag = drv("SchoolAddress_D2")

            CbxPrefix_3.Text = drv("Prefix_D3")
            CbxPrefix_3.Tag = drv("Prefix_D3")

            TxtFirstN_3.Text = drv("FirstN_D3")
            TxtFirstN_3.Tag = drv("FirstN_D3")
            If drv("FirstN_D3") = "" Then
                CbxPrefix_3.Enabled = False
                TxtFirstN_3.Enabled = False
                TxtMiddleN_3.Enabled = False
                TxtLastN_3.Enabled = False
                cbxSuffix_3.Enabled = False
                iAge_D3.Enabled = False
                txtGrade_3.Enabled = False
                txtSchool_3.Enabled = False
                txtSchoolAddress_3.Enabled = False
            Else
                CbxPrefix_3.Enabled = True
                TxtFirstN_3.Enabled = True
                TxtMiddleN_3.Enabled = True
                TxtLastN_3.Enabled = True
                cbxSuffix_3.Enabled = True
                iAge_D3.Enabled = True
                txtGrade_3.Enabled = True
                txtSchool_3.Enabled = True
                txtSchoolAddress_3.Enabled = True
            End If

            TxtMiddleN_3.Text = drv("MiddleN_D3")
            TxtMiddleN_3.Tag = drv("MiddleN_D3")

            TxtLastN_3.Text = drv("LastN_D3")
            TxtLastN_3.Tag = drv("LastN_D3")

            cbxSuffix_3.Text = drv("Suffix_D3")
            cbxSuffix_3.Tag = drv("Suffix_D3")

            iAge_D3.Value = drv("Age_D3")
            iAge_D3.Tag = drv("Age_D3")

            txtGrade_3.Text = drv("Grade_D3")
            txtGrade_3.Tag = drv("Grade_D3")

            txtSchool_3.Text = drv("School_D3")
            txtSchool_3.Tag = drv("School_D3")

            txtSchoolAddress_3.Text = drv("SchoolAddress_D3")
            txtSchoolAddress_3.Tag = drv("SchoolAddress_D3")

            CbxPrefix_4.Text = drv("Prefix_D4")
            CbxPrefix_4.Tag = drv("Prefix_D4")

            TxtFirstN_4.Text = drv("FirstN_D4")
            TxtFirstN_4.Tag = drv("FirstN_D4")
            If drv("FirstN_D4") = "" Then
                CbxPrefix_4.Enabled = False
                TxtFirstN_4.Enabled = False
                TxtMiddleN_4.Enabled = False
                TxtLastN_4.Enabled = False
                cbxSuffix_4.Enabled = False
                iAge_D4.Enabled = False
                txtGrade_4.Enabled = False
                txtSchool_4.Enabled = False
                txtSchoolAddress_4.Enabled = False
            Else
                CbxPrefix_4.Enabled = True
                TxtFirstN_4.Enabled = True
                TxtMiddleN_4.Enabled = True
                TxtLastN_4.Enabled = True
                cbxSuffix_4.Enabled = True
                iAge_D4.Enabled = True
                txtGrade_4.Enabled = True
                txtSchool_4.Enabled = True
                txtSchoolAddress_4.Enabled = True
            End If

            TxtMiddleN_4.Text = drv("MiddleN_D4")
            TxtMiddleN_4.Tag = drv("MiddleN_D4")

            TxtLastN_4.Text = drv("LastN_D4")
            TxtLastN_4.Tag = drv("LastN_D4")

            cbxSuffix_4.Text = drv("Suffix_D4")
            cbxSuffix_4.Tag = drv("Suffix_D4")

            iAge_D4.Value = drv("Age_D4")
            iAge_D4.Tag = drv("Age_D4")

            txtGrade_4.Text = drv("Grade_D4")
            txtGrade_4.Tag = drv("Grade_D4")

            txtSchool_4.Text = drv("School_D4")
            txtSchool_4.Tag = drv("School_D4")

            txtSchoolAddress_4.Text = drv("SchoolAddress_D4")
            txtSchoolAddress_4.Tag = drv("SchoolAddress_D4")

            '**DEPENDENT

            cbxSpouse_B.Checked = drv("Borrower_S")
            cbxCoMaker1_B.Checked = drv("Borrower_C1")
            cbxCoMaker2_B.Checked = drv("Borrower_C2")
            cbxCoMaker3_B.Checked = drv("Borrower_C3")
            cbxCoMaker4_B.Checked = drv("Borrower_C4")

            cbxEmployer_B.Text = drv("Employer_B")
            cbxEmployer_B.Tag = drv("Employer_B")

            txtEmployerAddress_B.Text = drv("EmployerAddress_B")
            txtEmployerAddress_B.Tag = drv("EmployerAddress_B")

            cbxPosition_B.Text = drv("Position_B")
            cbxPosition_B.Tag = drv("Position_B")

            If drv("EmploymentStat_B") = "Casual" Then
                cbxCasual_B.Checked = True
            ElseIf drv("EmploymentStat_B") = "Temporary" Then
                cbxTemporary_B.Checked = True
            ElseIf drv("EmploymentStat_B") = "Permanent" Then
                cbxPermanent_B.Checked = True
            End If
            cbxCasual_B.Tag = drv("EmploymentStat_B")
            cbxTemporary_B.Tag = drv("EmploymentStat_B")
            cbxPermanent_B.Tag = drv("EmploymentStat_B")
            dtpHired_B.Text = drv("Hired_B")
            dtpHired_B.Tag = drv("Hired_B")
            cbxYearHired.Checked = drv("YearHired")

            dMonthly_B.Value = drv("Monthly_B")
            dMonthly_B.Tag = drv("Monthly_B")

            txtBusinessName_B.Text = drv("BusinessName_B")
            txtBusinessName_B.Tag = drv("BusinessName_B")

            txtBusinessAddress_B.Text = drv("BusinessAddress_B")
            txtBusinessAddress_B.Tag = drv("BusinessAddress_B")

            cbxBusinessNature.Text = drv("NatureBusiness_B")
            cbxBusinessNature.Tag = drv("NatureBusiness_B")

            cbxNatureBusiness_B2.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM profile_borrower_industry WHERE `status` = 'ACTIVE' AND BorrowerID = '{0}' AND `Type` = 'Borrower'", drv("BorrowerID"))))

            dBusinessIncome_B.Value = drv("BusinessIncome_B")
            dBusinessIncome_B.Tag = drv("BusinessIncome_B")

            iNoEmployees_B.Value = drv("NoEmployees_B")
            iNoEmployees_B.Tag = drv("NoEmployees_B")

            dCapital_B.Value = drv("Capital_B")
            dCapital_B.Tag = drv("Capital_B")

            txtOtherIncome_B.Text = drv("OtherIncome_B")
            txtOtherIncome_B.Tag = drv("OtherIncome_B")

            dOtherIncome_B.Value = drv("OtherIncome_B-Amount")
            dOtherIncome_B.Tag = drv("OtherIncome_B-Amount")

            txtCreditor_1.Text = drv("Creditor_1")
            txtCreditor_1.Tag = drv("Creditor_1")

            dAmountGranted_1.Value = drv("AmountGranted_1")
            dAmountGranted_1.Tag = drv("AmountGranted_1")

            iTerm_1.Value = drv("Term_1")
            iTerm_1.Tag = drv("Term_1")

            dBalance_1.Value = drv("Balance_1")
            dBalance_1.Tag = drv("Balance_1")

            txtCreditRemarks_1.Text = drv("CreditRemarks_1")
            txtCreditRemarks_1.Tag = drv("CreditRemarks_1")

            txtCreditor_2.Text = drv("Creditor_2")
            txtCreditor_2.Tag = drv("Creditor_2")

            dAmountGranted_2.Value = drv("AmountGranted_2")
            dAmountGranted_2.Tag = drv("AmountGranted_2")

            iTerm_2.Value = drv("Term_2")
            iTerm_2.Tag = drv("Term_2")

            dBalance_2.Value = drv("Balance_2")
            dBalance_2.Tag = drv("Balance_2")

            txtCreditRemarks_2.Text = drv("CreditRemarks_2")
            txtCreditRemarks_2.Tag = drv("CreditRemarks_2")

            txtBank_1.Text = drv("Bank_1")
            txtBank_1.Tag = drv("Bank_1")

            txtBranch_1.Text = drv("Branch_1")
            txtBranch_1.Tag = drv("Branch_1")

            If drv("AccountT_1") = "SA" Then
                cbxSA_1.Checked = True
            ElseIf drv("AccountT_1") = "CA" Then
                cbxCA_1.Checked = True
            End If
            cbxSA_1.Tag = drv("AccountT_1")
            cbxCA_1.Tag = drv("AccountT_1")
            txtSA_1.Text = drv("SA_1")
            txtSA_1.Tag = drv("SA_1")

            dAverageBalance_1.Value = drv("AverageBalance_1")
            dAverageBalance_1.Tag = drv("AverageBalance_1")

            txtOpened_1.Text = drv("Opened_1")
            txtOpened_1.Tag = drv("Opened_1")

            txtBank_2.Text = drv("Bank_2")
            txtBank_2.Tag = drv("Bank_2")

            txtBranch_2.Text = drv("Branch_2")
            txtBranch_2.Tag = drv("Branch_2")

            If drv("AccountT_2") = "SA" Then
                cbxSA_2.Checked = True
            ElseIf drv("AccountT_2") = "CA" Then
                cbxCA_2.Checked = True
            End If
            cbxSA_2.Tag = drv("AccountT_2")
            cbxCA_2.Tag = drv("AccountT_2")
            txtSA_2.Text = drv("SA_2")
            txtSA_2.Tag = drv("SA_2")

            dAverageBalance_2.Value = drv("AverageBalance_2")
            dAverageBalance_2.Tag = drv("AverageBalance_2")

            txtOpened_2.Text = drv("Opened_2")
            txtOpened_2.Tag = drv("Opened_2")

            txtLocation_1.Text = drv("Location_1")
            txtLocation_1.Tag = drv("Location_1")

            txtTCT_1.Text = drv("TCT_1")
            txtTCT_1.Tag = drv("TCT_1")

            dArea_1.Value = drv("Area_1")
            dArea_1.Tag = drv("Area_1")

            txtWhomAcquired_1.Text = drv("Acquired_1")
            txtWhomAcquired_1.Tag = drv("Acquired_1")

            txtPropertiesRemarks_1.Text = drv("PropertiesRemarks_1")
            txtPropertiesRemarks_1.Tag = drv("PropertiesRemarks_1")

            txtLocation_2.Text = drv("Location_2")
            txtLocation_2.Tag = drv("Location_2")

            txtTCT_2.Text = drv("TCT_2")
            txtTCT_2.Tag = drv("TCT_2")

            dArea_2.Value = drv("Area_2")
            dArea_2.Tag = drv("Area_2")

            txtWhomAcquired_2.Text = drv("Acquired_2")
            txtWhomAcquired_2.Tag = drv("Acquired_2")

            txtPropertiesRemarks_2.Text = drv("PropertiesRemarks_2")
            txtPropertiesRemarks_2.Tag = drv("PropertiesRemarks_2")

            txtVehicle_1.Text = drv("Vehicle_1")
            txtVehicle_1.Tag = drv("Vehicle_1")

            dtpYear_1.Text = drv("Year_1")
            dtpYear_1.Tag = drv("Year_1")

            If drv("Year_1") = "" Then
                dtpYear_1.CustomFormat = ""
            Else
                dtpYear_1.CustomFormat = "     yyyy"
                dtpYear_1.Value = drv("Year_1")
                dtpYear_1.Tag = drv("Year_1")
            End If

            txtWhomAcquired_1.Text = drv("WhomAcquired_1")
            txtWhomAcquired_1.Tag = drv("WhomAcquired_1")

            txtVehicleRemarks_1.Text = drv("VehicleRemarks_1")
            txtVehicleRemarks_1.Tag = drv("VehicleRemarks_1")

            txtVehicle_2.Text = drv("Vehicle_2")
            txtVehicle_2.Tag = drv("Vehicle_2")

            dtpYear_2.Text = drv("Year_2")
            dtpYear_2.Tag = drv("Year_2")

            If drv("Year_2") = "" Then
                dtpYear_2.CustomFormat = ""
            Else
                dtpYear_2.CustomFormat = "     yyyy"
                dtpYear_2.Value = drv("Year_2")
                dtpYear_2.Tag = drv("Year_2")
            End If

            txtWhomAcquired_2.Text = drv("WhomAcquired_2")
            txtWhomAcquired_2.Tag = drv("WhomAcquired_2")

            txtVehicleRemarks_2.Text = drv("VehicleRemarks_2")
            txtVehicleRemarks_2.Tag = drv("VehicleRemarks_2")

            Mortgage = DataObject(String.Format("SELECT mortgage FROM mortgage_setup WHERE ID = '{0}'", drv("mortgage_id")))
            Product = drv("product")
            ProductID = drv("product_ID")
            ApplicationDate = drv("Trans_Date")
            AmountApplied = drv("AmountApplied")
            Terms = drv("Terms")
            Interest = drv("interest_rate")
            rPurposeLoan.Text = drv("purpose")
            lblNote.Text = drv("RejectReason")

            If drv("mortgage_id") = 1 Then
                btnVehicleAppraisal.Enabled = True
                btnRealEstate.Enabled = False
            ElseIf drv("mortgage_id") = 2 Then
                btnRealEstate.Enabled = True
                btnVehicleAppraisal.Enabled = False
            Else
                btnRealEstate.Enabled = False
                btnVehicleAppraisal.Enabled = False
            End If
        End If
        Cursor = Cursors.Default
    End Sub

    Private Sub GetCreditInvestigation()
        txtCINumber.Text = DataObject(String.Format("SELECT CONCAT('CI', LPAD({0},3,'0'), {1}, '-', LPAD(COUNT(ID) + 1,4,'0')) FROM credit_investigation WHERE branch_id = '{0}' AND YEAR(trans_date) = YEAR('{2}') AND MONTH(trans_date) = MONTH('{2}');", Branch_ID, Format(dtpDate.Value, "yyyyMM"), Format(dtpDate.Value, "yyyy-MM-dd")))
    End Sub

    Public Sub Clear()
        btnEmailCrecom.Location = New Point(948, 4)
        AssetNumber_1 = ""
        AssetNumber_2 = ""
        AssetNumber_3 = ""
        AssetNumber_4 = ""
        AssetNumber_5 = ""
        CollateralFromROPOA = False
        PreparedBy = ""
        CheckedBy = ""
        ApprovedBy = ""
        ChangeCollateral = 0
        ApplicationStatus_V2 = ""
        btnCalculator.Enabled = False
        btnVehicleReappraise.Visible = False
        btnRealEstateReappraise.Visible = False
        btnModifyVehicle.Enabled = False
        btnPrintVehicle.Enabled = False
        btnModifyRealEstate.Enabled = False
        btnPrintRealEstate.Enabled = False
        CoMakerShift = False
        ChangeSketch = False
        ChangeSketchC1 = False
        ChangeSketchC2 = False
        ChangeSketchC3 = False
        ChangeSketchC4 = False
        TotalImageC1 = 0
        TotalImageC2 = 0
        TotalImageC3 = 0
        TotalImageC4 = 0
        TotalImageS = 0
        TotalImage = 0
        TotalImage_Approval = 0
        Loan_Type = ""
        GMA = 0
        cbxSpouse_B.Checked = False
        cbxCoMaker1_B.Checked = False
        cbxCoMaker2_B.Checked = False
        cbxCoMaker3_B.Checked = False
        cbxCoMaker4_B.Checked = False
        cbxIncludeSpouseBusiness.Checked = True
        cbxIncludeC1.Checked = False
        cbxIncludeC2.Checked = False
        cbxIncludeC3.Checked = False
        cbxIncludeC4.Checked = False

        dCapitalP.Enabled = False
        dFuelMaintenanceP.Enabled = False
        dUtilitiesP.Enabled = False
        dSalariesWagesP.Enabled = False
        dBMiscellaneousP.Enabled = False
        dBOthersP.Enabled = False

        dCapital.Enabled = False
        dFuelMaintenance.Enabled = False
        dUtilities.Enabled = False
        dSalariesWages.Enabled = False
        dBMiscellaneous.Enabled = False
        dBOthers.Enabled = False

        Borrower_Branch = Branch_Code
        BorrowerID = ""
        SpouseID = ""
        CoMakerID = ""
        CreditNumber = ""
        Draft_Status = "DRAFT"
        Status = "PENDING"

        PanelEx10.Enabled = True
        PanelEx2.Enabled = True
        PanelEx4.Enabled = True
        PanelEx5.Enabled = True
        PanelEx6.Enabled = True
        PanelEx7.Enabled = True
        GridControl1.DataSource = DataSource("SELECT '' AS 'ID', '' AS 'Col_ID', 0 AS 'No', 'Collateral', 0 AS 'Market Value', 0 AS 'AppraisedValue', 0 AS 'LoanableValue', 0 AS 'LoanPercent', '' AS 'Coordinates', '' AS 'AssetNumber', 0 AS 'SellingPrice' LIMIT 0")
        GridControl2.DataSource = GridControl1.DataSource
        btnAttach.Enabled = False
        btnApproveCI.Enabled = False
        btnCheckBM.Enabled = False
        btnEmailCrecom.Enabled = False
        btnEmailCrecom.Text = "Send &Email"
        btnVehicleAppraisal.Enabled = False
        btnModifyVehicle.Enabled = False
        btnPrintVehicle.Enabled = False
        btnRealEstate.Enabled = False
        btnModifyRealEstate.Enabled = False
        btnPrintRealEstate.Enabled = False
        btnDelete.Enabled = False

        Mortgage = ""
        Collateral = ""
        Product = ""
        ProductID = 0
        ApplicationDate = Date.Now
        TotalAppraised = 0
        RecommendedLoan = 0
        AmountApplied = 0
        Interest = 0
        Terms = 0
        BM_AmountApplied = 0
        BM_Interest = 0
        BM_Terms = 0

        dCapitalP.Value = 0
        dFuelMaintenanceP.Value = 0
        dUtilitiesP.Value = 0
        dSalariesWagesP.Value = 0
        dBMiscellaneousP.Value = 0
        dBOthersP.Value = 0

        CbxPrefix_B.Enabled = False
        TxtFirstN_B.Enabled = False
        TxtMiddleN_B.Enabled = False
        TxtLastN_B.Enabled = False
        cbxSuffix_B.Enabled = False
        btnSN.Enabled = False
        btnCM_1.Enabled = False
        btnCM_2.Enabled = False
        btnCM_3.Enabled = False
        btnCM_4.Enabled = False
        btnCM_1.BackColor = Color.Transparent
        btnCM_2.BackColor = Color.Transparent
        btnCM_3.BackColor = Color.Transparent
        btnCM_4.BackColor = Color.Transparent

        btnSave.Enabled = True
        btnSave_F.Enabled = True
        btnSave.Text = "D&raft"
        btnSave_F.Text = "&Save"

        dtpDate.Value = Date.Now
        cbxApplication.Enabled = True
        dtpDate.Enabled = True
        cbxApplication.SelectedIndex = -1
        GetCreditInvestigation()
        CbxPrefix_B.Text = ""
        TxtFirstN_B.Text = ""
        TxtMiddleN_B.Text = ""
        TxtLastN_B.Text = ""
        cbxSuffix_B.Text = ""
        CbxPrefix_S.Text = ""
        TxtFirstN_S.Text = ""
        TxtMiddleN_S.Text = ""
        TxtLastN_S.Text = ""
        cbxSuffix_S.Text = ""
        CbxPrefix_C1.Text = ""
        TxtFirstN_C1.Text = ""
        TxtMiddleN_C1.Text = ""
        TxtLastN_C1.Text = ""
        cbxSuffix_C1.Text = ""
        CbxPrefix_C2.Text = ""
        TxtFirstN_C2.Text = ""
        TxtMiddleN_C2.Text = ""
        TxtLastN_C2.Text = ""
        cbxSuffix_C2.Text = ""
        CbxPrefix_C3.Text = ""
        TxtFirstN_C3.Text = ""
        TxtMiddleN_C3.Text = ""
        TxtLastN_C3.Text = ""
        cbxSuffix_C3.Text = ""
        CbxPrefix_C4.Text = ""
        TxtFirstN_C4.Text = ""
        TxtMiddleN_C4.Text = ""
        TxtLastN_C4.Text = ""
        cbxSuffix_C4.Text = ""

        txtNoC_B.Text = ""
        txtStreetC_B.Text = ""
        txtBarangayC_B.Text = ""
        cbxAddressC_B.Text = ""
        cbxSingle_B.Checked = False
        cbxMarried_B.Checked = False
        cbxSeparated_B.Checked = False
        cbxWidowed_B.Checked = False
        cbxOwned_B.Checked = False
        cbxFree_B.Checked = False
        cbxRented_B.Checked = False

        cbxResidence.Text = ""
        txtConfirmed.Text = ""
        txtLengthStay.Text = ""
        cbxNeighborhood.Text = ""

        '1st Row
        TxtFirstN_1.Text = ""
        TxtMiddleN_1.Text = ""
        TxtLastN_1.Text = ""
        cbxSuffix_1.Text = ""
        txtGrade_1.Text = ""
        txtSchool_1.Text = ""
        txtSchoolAddress_1.Text = ""
        '2nd Row
        TxtFirstN_2.Text = ""
        TxtMiddleN_2.Text = ""
        TxtLastN_2.Text = ""
        cbxSuffix_2.Text = ""
        txtGrade_2.Text = ""
        txtSchool_2.Text = ""
        txtSchoolAddress_2.Text = ""
        '3rd Row
        TxtFirstN_3.Text = ""
        TxtMiddleN_3.Text = ""
        TxtLastN_3.Text = ""
        cbxSuffix_3.Text = ""
        txtGrade_3.Text = ""
        txtSchool_3.Text = ""
        txtSchoolAddress_3.Text = ""
        '4th Row
        TxtFirstN_4.Text = ""
        TxtMiddleN_4.Text = ""
        TxtLastN_4.Text = ""
        cbxSuffix_4.Text = ""
        txtGrade_4.Text = ""
        txtSchool_4.Text = ""
        txtSchoolAddress_4.Text = ""

        lblNote.Text = ""

        Try
            pb_B.Image = DefaultImage.Image.Clone
        Catch ex As Exception
            pb_B.Image = Nothing
        End Try
        Try
            pbSketch.Image = DefaultMap.Image.Clone
        Catch ex As Exception
            pbSketch.Image = Nothing
        End Try
        txtPath_B.Text = ""
        txtPath_S.Text = ""
        cbxEmployer_B.Text = ""
        txtBusinessName_B.Text = ""
        dSalary_S.Value = 0
        dSalary_C1.Value = 0
        dSalary_C2.Value = 0
        dSalary_C3.Value = 0
        dSalary_C4.Value = 0
        txtCreditor_1.Text = ""
        txtBank_1.Text = ""
        txtLocation_1.Text = ""
        txtVehicle_1.Text = ""
        txtOtherProperties.Text = ""
        rNarrative.Text = ""

        cbxGood.Checked = False
        cbxFair.Checked = False
        cbxPoor.Checked = False

        cbxApproval.Checked = False
        dApprovedAmount.Value = 0
        iApprovedTerms.Value = 0
        dApprovedRate.Value = 0
        cbxPDC.Checked = False
        cbxNoPDC.Checked = False
        cbxDisapproval.Checked = False

        rRecommendation.Text = ""
        txtC1.Text = ""
        txtTitle.Text = ""

        dTotalDisposable.Value = 0
        dLiving.Value = 0
        dClothing.Value = 0
        dEducation.Value = 0
        dTransportation.Value = 0
        dLighths.Value = 0
        dInsurance.Value = 0
        dAmortization.Value = 0
        dMiscellaneous.Value = 0
        dTotalExpenses.Value = 0
        dNetDisposable.Value = 0
        dTMFI.Value = 0
        dTMDI.Value = 0

        rPurposeLoan.Text = ""
        rOthers.Text = ""

        '*** COMAKER
        ChangePic1 = False
        CoMaker1.Image = DefaultImage.Image.Clone
        vPrefix_C1 = ""
        vFirstN_C1 = ""
        vMiddleN_C1 = ""
        vLastN_C1 = ""
        vSuffix_C1 = ""
        vNoC_C1 = ""
        vStreetC_C1 = ""
        vBarangayC_C1 = ""
        vAddressC_C1 = ""
        vAddressC_C1_ID = 0
        vNoP_C1 = ""
        vStreetP_C1 = ""
        vBarangayP_C1 = ""
        vAddressP_C1 = ""
        vAddressP_C1_ID = 0
        vBirth_C1 = ""
        vPlaceBirth_C1 = ""
        vPlaceBirth_C1_ID = 0
        vMale_C1 = False
        vFemale_C1 = False
        vSingle_C1 = False
        vMarried_C1 = False
        vSeparated_C1 = False
        vWidowed_C1 = False
        vCitizenship_C1 = ""
        vTelephone_C1 = ""
        vMobile_C1 = ""
        vTIN_C1 = ""
        vSSS_C1 = ""
        vEmail_C1 = ""
        vOwned_C1 = False
        vFree_C1 = False
        vRented_C1 = False
        vRent_C1 = 0
        vRelationship_C1 = ""
        vRelationship_C1_ID = 0
        vEmployer_C1 = ""
        vEmpAddress_C1 = ""
        vEmpTelephone_C1 = ""
        vPosition_C1 = ""
        vCasual_C1 = False
        vTemporary_C1 = False
        vPermanent_C1 = False
        vHired_C1 = ""
        vYearHired_C1 = 0
        vSupervisor_C1 = ""
        vSalary_C1 = 0
        vBusinessName_C1 = ""
        vBusinessAddress_C1 = ""
        vBusinessTelephone_C1 = ""
        vNatureBusiness_C1 = ""
        vYrsOperation_C1 = 0
        vBusinessIncome_C1 = 0
        vNoEmployees_C1 = 0
        vCapital_C1 = 0
        vArea_C1 = ""
        vExpiry_C1 = ""
        vOutlet_C1 = 0
        vOtherIncome_C1 = ""
        vOtherIncomeD_C1 = 0
        'COMAKER CREDIT INVESTIGATION REPORT ******************************************************************
        vCreditor_1_C1 = ""
        vCreditAddress_1_C1 = ""
        vCreditGranted_1_C1 = ""
        vTerm_1_C1 = 0
        vAmountGranted_1_C1 = 0
        vBalance_1_C1 = 0
        vCreditPayment_1_C1 = 0
        vCreditRemarks_1_C1 = ""
        vCreditor_2_C1 = ""
        vCreditAddress_2_C1 = ""
        vCreditGranted_2_C1 = ""
        vTerm_2_C1 = 0
        vAmountGranted_2_C1 = 0
        vBalance_2_C1 = 0
        vCreditPayment_2_C1 = 0
        vCreditRemarks_2_C1 = ""
        vBank_1_C1 = ""
        vBranch_1_C1 = ""
        vAccountT_1_C1 = ""
        vSA_1_C1 = ""
        vAverageBalance_1_C1 = 0
        vOpened_1_C1 = ""
        vBank_2_C1 = ""
        vBranch_2_C1 = ""
        vAccountT_2_C1 = ""
        vSA_2_C1 = ""
        vAverageBalance_2_C1 = 0
        vCreditRating_C1 = ""
        vRec_Remarks_C1 = ""
        vTitle_C1 = ""
        vCaseNum_C1 = ""
        vDateFilled_C1 = ""
        vCourt_C1 = ""
        vCaseNature_C1 = ""
        vAmountInvolved_C1 = 0
        vCaseStatus_C1 = ""
        vFindings_C1 = ""
        vFindingsStat_C1 = ""
        vCACPI_C1 = ""
        vLocation_1_C1 = ""
        vTCT_1_C1 = ""
        vArea_1_C1 = 0
        vPropertiesRemarks_1_C1 = ""
        vLocation_2_C1 = ""
        vTCT_2_C1 = ""
        vArea_2_C1 = 0
        vPropertiesRemarks_2_C1 = ""
        vVehicle_1_C1 = ""
        vYear_1_C1 = ""
        vWhomAcquired_1_C1 = ""
        vVehicleRemarks_1_C1 = ""
        vVehicle_2_C1 = ""
        vYear_2_C1 = ""
        vWhomAcquired_2_C1 = ""
        vVehicleRemarks_2_C1 = ""
        vOtherProperties_C1 = ""
        vNarrative_C1 = ""
        vEx_TotalDisposable_C1 = 0
        vEx_Living_C1 = 0
        vEx_Clothing_C1 = 0
        vEx_Education_C1 = 0
        vEx_Transportation_C1 = 0
        vEx_Lights_C1 = 0
        vEx_Insurance_C1 = 0
        vEx_Amortization_C1 = 0
        vEx_Miscellaneous_C1 = 0
        vEx_TotalExpenses_C1 = 0
        vEx_NetDisposable_C1 = 0
        vEx_TMFI_C1 = 0
        vEx_TMDI_C1 = 0
        vEx_Remarks_C1 = ""
        vPurposeLoan_C1 = ""
        vOthers_C1 = ""
        vC1_C1 = ""
        vC2_C1 = ""
        vC3_C1 = ""
        vC4_C1 = ""
        vC5_C1 = ""
        vC6_C1 = ""
        vC7_C1 = ""
        vC8_C1 = ""
        vC9_C1 = ""
        'COMAKER CREDIT INVESTIGATION REPORT ******************************************************************

        ChangePic2 = False
        CoMaker2.Image = DefaultImage.Image.Clone
        vPrefix_C2 = ""
        vFirstN_C2 = ""
        vMiddleN_C2 = ""
        vLastN_C2 = ""
        vSuffix_C2 = ""
        vNoC_C2 = ""
        vStreetC_C2 = ""
        vBarangayC_C2 = ""
        vAddressC_C2 = ""
        vAddressC_C2_ID = 0
        vNoP_C2 = ""
        vStreetP_C2 = ""
        vBarangayP_C2 = ""
        vAddressP_C2 = ""
        vAddressP_C2_ID = 0
        vBirth_C2 = ""
        vPlaceBirth_C2 = ""
        vPlaceBirth_C2_ID = 0
        vMale_C2 = False
        vFemale_C2 = False
        vSingle_C2 = False
        vMarried_C2 = False
        vSeparated_C2 = False
        vWidowed_C2 = False
        vCitizenship_C2 = ""
        vTelephone_C2 = ""
        vMobile_C2 = ""
        vTIN_C2 = ""
        vSSS_C2 = ""
        vEmail_C2 = ""
        vOwned_C2 = False
        vFree_C2 = False
        vRented_C2 = False
        vRent_C2 = 0
        vRelationship_C2 = ""
        vRelationship_C2_ID = 0
        vEmployer_C2 = ""
        vEmpAddress_C2 = ""
        vEmpTelephone_C2 = ""
        vPosition_C2 = ""
        vCasual_C2 = False
        vTemporary_C2 = False
        vPermanent_C2 = False
        vHired_C2 = ""
        vYearHired_C2 = 0
        vSupervisor_C2 = ""
        vSalary_C2 = 0
        vBusinessName_C2 = ""
        vBusinessAddress_C2 = ""
        vBusinessTelephone_C2 = ""
        vNatureBusiness_C2 = ""
        vYrsOperation_C2 = 0
        vBusinessIncome_C2 = 0
        vNoEmployees_C2 = 0
        vCapital_C2 = 0
        vArea_C2 = ""
        vExpiry_C2 = ""
        vOutlet_C2 = 0
        vOtherIncome_C2 = ""
        vOtherIncomeD_C2 = 0
        'COMAKER CREDIT INVESTIGATION REPORT ******************************************************************
        vCreditor_1_C2 = ""
        vCreditAddress_1_C2 = ""
        vCreditGranted_1_C2 = ""
        vTerm_1_C2 = 0
        vAmountGranted_1_C2 = 0
        vBalance_1_C2 = 0
        vCreditPayment_1_C2 = 0
        vCreditRemarks_1_C2 = ""
        vCreditor_2_C2 = ""
        vCreditAddress_2_C2 = ""
        vCreditGranted_2_C2 = ""
        vTerm_2_C2 = 0
        vAmountGranted_2_C2 = 0
        vBalance_2_C2 = 0
        vCreditPayment_2_C2 = 0
        vCreditRemarks_2_C2 = ""
        vBank_1_C2 = ""
        vBranch_1_C2 = ""
        vAccountT_1_C2 = ""
        vSA_1_C2 = ""
        vAverageBalance_1_C2 = 0
        vOpened_1_C2 = ""
        vBank_2_C2 = ""
        vBranch_2_C2 = ""
        vAccountT_2_C2 = ""
        vSA_2_C2 = ""
        vAverageBalance_2_C2 = 0
        vCreditRating_C2 = ""
        vRec_Remarks_C2 = ""
        vTitle_C2 = ""
        vCaseNum_C2 = ""
        vDateFilled_C2 = ""
        vCourt_C2 = ""
        vCaseNature_C2 = ""
        vAmountInvolved_C2 = 0
        vCaseStatus_C2 = ""
        vFindings_C2 = ""
        vFindingsStat_C2 = ""
        vCACPI_C2 = ""
        vLocation_1_C2 = ""
        vTCT_1_C2 = ""
        vArea_1_C2 = 0
        vPropertiesRemarks_1_C2 = ""
        vLocation_2_C2 = ""
        vTCT_2_C2 = ""
        vArea_2_C2 = 0
        vPropertiesRemarks_2_C2 = ""
        vVehicle_1_C2 = ""
        vYear_1_C2 = ""
        vWhomAcquired_1_C2 = ""
        vVehicleRemarks_1_C2 = ""
        vVehicle_2_C2 = ""
        vYear_2_C2 = ""
        vWhomAcquired_2_C2 = ""
        vVehicleRemarks_2_C2 = ""
        vOtherProperties_C2 = ""
        vNarrative_C2 = ""
        vEx_TotalDisposable_C2 = 0
        vEx_Living_C2 = 0
        vEx_Clothing_C2 = 0
        vEx_Education_C2 = 0
        vEx_Transportation_C2 = 0
        vEx_Lights_C2 = 0
        vEx_Insurance_C2 = 0
        vEx_Amortization_C2 = 0
        vEx_Miscellaneous_C2 = 0
        vEx_TotalExpenses_C2 = 0
        vEx_NetDisposable_C2 = 0
        vEx_TMFI_C2 = 0
        vEx_TMDI_C2 = 0
        vEx_Remarks_C2 = ""
        vPurposeLoan_C2 = ""
        vOthers_C2 = ""
        vC1_C2 = ""
        vC2_C2 = ""
        vC3_C2 = ""
        vC4_C2 = ""
        vC5_C2 = ""
        vC6_C2 = ""
        vC7_C2 = ""
        vC8_C2 = ""
        vC9_C2 = ""
        'COMAKER CREDIT INVESTIGATION REPORT ******************************************************************

        ChangePic3 = False
        CoMaker3.Image = DefaultImage.Image.Clone
        vPrefix_C3 = ""
        vFirstN_C3 = ""
        vMiddleN_C3 = ""
        vLastN_C3 = ""
        vSuffix_C3 = ""
        vNoC_C3 = ""
        vStreetC_C3 = ""
        vBarangayC_C3 = ""
        vAddressC_C3 = ""
        vAddressC_C3_ID = 0
        vNoP_C3 = ""
        vStreetP_C3 = ""
        vBarangayP_C3 = ""
        vAddressP_C3 = ""
        vAddressP_C3_ID = 0
        vBirth_C3 = ""
        vPlaceBirth_C3 = ""
        vPlaceBirth_C3_ID = 0
        vMale_C3 = False
        vFemale_C3 = False
        vSingle_C3 = False
        vMarried_C3 = False
        vSeparated_C3 = False
        vWidowed_C3 = False
        vCitizenship_C3 = ""
        vTelephone_C3 = ""
        vMobile_C3 = ""
        vTIN_C3 = ""
        vSSS_C3 = ""
        vEmail_C3 = ""
        vOwned_C3 = False
        vFree_C3 = False
        vRented_C3 = False
        vRent_C3 = 0
        vRelationship_C3 = ""
        vRelationship_C3_ID = 0
        vEmployer_C3 = ""
        vEmpAddress_C3 = ""
        vEmpTelephone_C3 = ""
        vPosition_C3 = ""
        vCasual_C3 = False
        vTemporary_C3 = False
        vPermanent_C3 = False
        vHired_C3 = ""
        vYearHired_C3 = 0
        vSupervisor_C3 = ""
        vSalary_C3 = 0
        vBusinessName_C3 = ""
        vBusinessAddress_C3 = ""
        vBusinessTelephone_C3 = ""
        vNatureBusiness_C3 = ""
        vYrsOperation_C3 = 0
        vBusinessIncome_C3 = 0
        vNoEmployees_C3 = 0
        vCapital_C3 = 0
        vArea_C3 = ""
        vExpiry_C3 = ""
        vOutlet_C3 = 0
        vOtherIncome_C3 = ""
        vOtherIncomeD_C3 = 0
        'COMAKER CREDIT INVESTIGATION REPORT ******************************************************************
        vCreditor_1_C3 = ""
        vCreditAddress_1_C3 = ""
        vCreditGranted_1_C3 = ""
        vTerm_1_C3 = 0
        vAmountGranted_1_C3 = 0
        vBalance_1_C3 = 0
        vCreditPayment_1_C3 = 0
        vCreditRemarks_1_C3 = ""
        vCreditor_2_C3 = ""
        vCreditAddress_2_C3 = ""
        vCreditGranted_2_C3 = ""
        vTerm_2_C3 = 0
        vAmountGranted_2_C3 = 0
        vBalance_2_C3 = 0
        vCreditPayment_2_C3 = 0
        vCreditRemarks_2_C3 = ""
        vBank_1_C3 = ""
        vBranch_1_C3 = ""
        vAccountT_1_C3 = ""
        vSA_1_C3 = ""
        vAverageBalance_1_C3 = 0
        vOpened_1_C3 = ""
        vBank_2_C3 = ""
        vBranch_2_C3 = ""
        vAccountT_2_C3 = ""
        vSA_2_C3 = ""
        vAverageBalance_2_C3 = 0
        vCreditRating_C3 = ""
        vRec_Remarks_C3 = ""
        vTitle_C3 = ""
        vCaseNum_C3 = ""
        vDateFilled_C3 = ""
        vCourt_C3 = ""
        vCaseNature_C3 = ""
        vAmountInvolved_C3 = 0
        vCaseStatus_C3 = ""
        vFindings_C3 = ""
        vFindingsStat_C3 = ""
        vCACPI_C3 = ""
        vLocation_1_C3 = ""
        vTCT_1_C3 = ""
        vArea_1_C3 = 0
        vPropertiesRemarks_1_C3 = ""
        vLocation_2_C3 = ""
        vTCT_2_C3 = ""
        vArea_2_C3 = 0
        vPropertiesRemarks_2_C3 = ""
        vVehicle_1_C3 = ""
        vYear_1_C3 = ""
        vWhomAcquired_1_C3 = ""
        vVehicleRemarks_1_C3 = ""
        vVehicle_2_C3 = ""
        vYear_2_C3 = ""
        vWhomAcquired_2_C3 = ""
        vVehicleRemarks_2_C3 = ""
        vOtherProperties_C3 = ""
        vNarrative_C3 = ""
        vEx_TotalDisposable_C3 = 0
        vEx_Living_C3 = 0
        vEx_Clothing_C3 = 0
        vEx_Education_C3 = 0
        vEx_Transportation_C3 = 0
        vEx_Lights_C3 = 0
        vEx_Insurance_C3 = 0
        vEx_Amortization_C3 = 0
        vEx_Miscellaneous_C3 = 0
        vEx_TotalExpenses_C3 = 0
        vEx_NetDisposable_C3 = 0
        vEx_TMFI_C3 = 0
        vEx_TMDI_C3 = 0
        vEx_Remarks_C3 = ""
        vPurposeLoan_C3 = ""
        vOthers_C3 = ""
        vC1_C3 = ""
        vC2_C3 = ""
        vC3_C3 = ""
        vC4_C3 = ""
        vC5_C3 = ""
        vC6_C3 = ""
        vC7_C3 = ""
        vC8_C3 = ""
        vC9_C3 = ""
        'COMAKER CREDIT INVESTIGATION REPORT ******************************************************************

        ChangePic4 = False
        CoMaker4.Image = DefaultImage.Image.Clone
        vPrefix_C4 = ""
        vFirstN_C4 = ""
        vMiddleN_C4 = ""
        vLastN_C4 = ""
        vSuffix_C4 = ""
        vNoC_C4 = ""
        vStreetC_C4 = ""
        vBarangayC_C4 = ""
        vAddressC_C4 = ""
        vAddressC_C4_ID = 0
        vNoP_C4 = ""
        vStreetP_C4 = ""
        vBarangayP_C4 = ""
        vAddressP_C4 = ""
        vAddressP_C4_ID = 0
        vBirth_C4 = ""
        vPlaceBirth_C4 = ""
        vPlaceBirth_C4_ID = 0
        vMale_C4 = False
        vFemale_C4 = False
        vSingle_C4 = False
        vMarried_C4 = False
        vSeparated_C4 = False
        vWidowed_C4 = False
        vCitizenship_C4 = ""
        vTelephone_C4 = ""
        vMobile_C4 = ""
        vTIN_C4 = ""
        vSSS_C4 = ""
        vEmail_C4 = ""
        vOwned_C4 = False
        vFree_C4 = False
        vRented_C4 = False
        vRent_C4 = 0
        vRelationship_C4 = ""
        vRelationship_C4_ID = 0
        vEmployer_C4 = ""
        vEmpAddress_C4 = ""
        vEmpTelephone_C4 = ""
        vPosition_C4 = ""
        vCasual_C4 = False
        vTemporary_C4 = False
        vPermanent_C4 = False
        vHired_C4 = ""
        vYearHired_C4 = 0
        vSupervisor_C4 = ""
        vSalary_C4 = 0
        vBusinessName_C4 = ""
        vBusinessAddress_C4 = ""
        vBusinessTelephone_C4 = ""
        vNatureBusiness_C4 = ""
        vYrsOperation_C4 = 0
        vBusinessIncome_C4 = 0
        vNoEmployees_C4 = 0
        vCapital_C4 = 0
        vArea_C4 = ""
        vExpiry_C4 = ""
        vOutlet_C4 = 0
        vOtherIncome_C4 = ""
        vOtherIncomeD_C4 = 0
        'COMAKER CREDIT INVESTIGATION REPORT ******************************************************************
        vCreditor_1_C4 = ""
        vCreditAddress_1_C4 = ""
        vCreditGranted_1_C4 = ""
        vTerm_1_C4 = 0
        vAmountGranted_1_C4 = 0
        vBalance_1_C4 = 0
        vCreditPayment_1_C4 = 0
        vCreditRemarks_1_C4 = ""
        vCreditor_2_C4 = ""
        vCreditAddress_2_C4 = ""
        vCreditGranted_2_C4 = ""
        vTerm_2_C4 = 0
        vAmountGranted_2_C4 = 0
        vBalance_2_C4 = 0
        vCreditPayment_2_C4 = 0
        vCreditRemarks_2_C4 = ""
        vBank_1_C4 = ""
        vBranch_1_C4 = ""
        vAccountT_1_C4 = ""
        vSA_1_C4 = ""
        vAverageBalance_1_C4 = 0
        vOpened_1_C4 = ""
        vBank_2_C4 = ""
        vBranch_2_C4 = ""
        vAccountT_2_C4 = ""
        vSA_2_C4 = ""
        vAverageBalance_2_C4 = 0
        vCreditRating_C4 = ""
        vRec_Remarks_C4 = ""
        vTitle_C4 = ""
        vCaseNum_C4 = ""
        vDateFilled_C4 = ""
        vCourt_C4 = ""
        vCaseNature_C4 = ""
        vAmountInvolved_C4 = 0
        vCaseStatus_C4 = ""
        vFindings_C4 = ""
        vFindingsStat_C4 = ""
        vCACPI_C4 = ""
        vLocation_1_C4 = ""
        vTCT_1_C4 = ""
        vArea_1_C4 = 0
        vPropertiesRemarks_1_C4 = ""
        vLocation_2_C4 = ""
        vTCT_2_C4 = ""
        vArea_2_C4 = 0
        vPropertiesRemarks_2_C4 = ""
        vVehicle_1_C4 = ""
        vYear_1_C4 = ""
        vWhomAcquired_1_C4 = ""
        vVehicleRemarks_1_C4 = ""
        vVehicle_2_C4 = ""
        vYear_2_C4 = ""
        vWhomAcquired_2_C4 = ""
        vVehicleRemarks_2_C4 = ""
        vOtherProperties_C4 = ""
        vNarrative_C4 = ""
        vEx_TotalDisposable_C4 = 0
        vEx_Living_C4 = 0
        vEx_Clothing_C4 = 0
        vEx_Education_C4 = 0
        vEx_Transportation_C4 = 0
        vEx_Lights_C4 = 0
        vEx_Insurance_C4 = 0
        vEx_Amortization_C4 = 0
        vEx_Miscellaneous_C4 = 0
        vEx_TotalExpenses_C4 = 0
        vEx_NetDisposable_C4 = 0
        vEx_TMFI_C4 = 0
        vEx_TMDI_C4 = 0
        vEx_Remarks_C4 = ""
        vPurposeLoan_C4 = ""
        vOthers_C4 = ""
        vC1_C4 = ""
        vC2_C4 = ""
        vC3_C4 = ""
        vC4_C4 = ""
        vC5_C4 = ""
        vC6_C4 = ""
        vC7_C4 = ""
        vC8_C4 = ""
        vC9_C4 = ""
        'COMAKER CREDIT INVESTIGATION REPORT ******************************************************************
        '*** COMAKER

        '*** SPOUSE
        ChangePicS = False
        pb_Spouse.Image = DefaultImage.Image.Clone
        vPrefix_S = ""
        vFirstN_S = ""
        vMiddleN_S = ""
        vLastN_S = ""
        vSuffix_S = ""
        vNoC_S = ""
        vStreetC_S = ""
        vBarangayC_S = ""
        vAddressC_S = ""
        vAddressC_S_ID = 0
        vNoP_S = ""
        vStreetP_S = ""
        vBarangayP_S = ""
        vAddressP_S = ""
        vAddressP_S_ID = 0
        vBirth_S = ""
        vPlaceBirth_S = ""
        vPlaceBirth_S_ID = 0
        vMale_S = False
        vFemale_S = False
        vCitizenship_S = ""
        vTelephone_S = ""
        vMobile_S = ""
        vTIN_S = ""
        vSSS_S = ""
        vEmail_S = ""
        vOwned_S = False
        vFree_S = False
        vRented_S = False
        vRent_S = 0
        vEmployer_S = ""
        vEmpAddress_S = ""
        vEmpTelephone_S = ""
        vPosition_S = ""
        vCasual_S = False
        vTemporary_S = False
        vPermanent_S = False
        vHired_S = ""
        vYearHired_S = 0
        vSupervisor_S = ""
        vSalary_S = 0
        vBusinessName_S = ""
        vBusinessAddress_S = ""
        vBusinessTelephone_S = ""
        vNatureBusiness_S = ""
        vYrsOperation_S = 0
        vBusinessIncome_S = 0
        vNoEmployees_S = 0
        vCapital_S = 0
        vArea_S = ""
        vExpiry_S = ""
        vOutlet_S = 0
        vOtherIncome_S = ""
        vOtherIncomeD_S = 0
        '*** SPOUSE

        '*** I D E N T I F I C A T I O N ***
        GSIS = ""
        PhilHealth = ""
        Senior = ""
        UMID = ""
        SEC = ""
        DTI = ""
        CDA = ""
        Cooperative = ""
        Drivers = ""
        dDrivers = ""
        VIN = ""
        dVIN = ""
        Passport = ""
        dPassport = ""
        PRC = ""
        dPRC = ""
        NBI = ""
        dNBI = ""
        Police = ""
        dPolice = ""
        Postal = ""
        dPostal = ""
        Barangay = ""
        dBarangay = ""
        OWWA = ""
        dOWWA = ""
        OFW = ""
        dOFW = ""
        Seaman = ""
        dSeaman = ""
        PNP = ""
        dPNP = ""
        AFP = ""
        dAFP = ""
        HDMF = ""
        dHDMF = ""
        PWD = ""
        dPWD = ""
        DSWD = ""
        dDSWD = ""
        ACR = ""
        dACR = ""
        DTI_Business = ""
        dDTI_Business = ""
        IBP = ""
        dIBP = ""
        FireArms = ""
        dFireArms = ""
        Government = ""
        dGovernment = ""
        Diplomat = ""
        dDiplomat = ""
        National = ""
        dNational = ""
        Work = ""
        dWork = ""
        GOCC = ""
        dGOCC = ""
        PLRA = ""
        dPLRA = ""
        Major = ""
        dMajor = ""
        Media = ""
        dMedia = ""
        Student = ""
        dStudent = ""
        SIRV = ""
        dSIRV = ""

        TIN_S = ""
        SSS_S = ""
        GSIS_S = ""
        PhilHealth_S = ""
        Senior_S = ""
        UMID_S = ""
        SEC_S = ""
        DTI_S = ""
        CDA_S = ""
        Cooperative_S = ""
        Drivers_S = ""
        dDrivers_S = ""
        VIN_S = ""
        dVIN_S = ""
        Passport_S = ""
        dPassport_S = ""
        PRC_S = ""
        dPRC_S = ""
        NBI_S = ""
        dNBI_S = ""
        Police_S = ""
        dPolice_S = ""
        Postal_S = ""
        dPostal_S = ""
        Barangay_S = ""
        dBarangay_S = ""
        OWWA_S = ""
        dOWWA_S = ""
        OFW_S = ""
        dOFW_S = ""
        Seaman_S = ""
        dSeaman_S = ""
        PNP_S = ""
        dPNP_S = ""
        AFP_S = ""
        dAFP_S = ""
        HDMF_S = ""
        dHDMF_S = ""
        PWD_S = ""
        dPWD_S = ""
        DSWD_S = ""
        dDSWD_S = ""
        ACR_S = ""
        dACR_S = ""
        DTI_Business_S = ""
        dDTI_Business_S = ""
        IBP_S = ""
        dIBP_S = ""
        FireArms_S = ""
        dFireArms_S = ""
        Government_S = ""
        dGovernment_S = ""
        Diplomat_S = ""
        dDiplomat_S = ""
        National_S = ""
        dNational_S = ""
        Work_S = ""
        dWork_S = ""
        GOCC_S = ""
        dGOCC_S = ""
        PLRA_S = ""
        dPLRA_S = ""
        Major_S = ""
        dMajor_S = ""
        Media_S = ""
        dMedia_S = ""
        Student_S = ""
        dStudent_S = ""
        SIRV_S = ""
        dSIRV_S = ""
        '*** I D E N T I F I C A T I O N ***

        For x As Integer = 0 To cbxNatureBusiness_B2.Properties.Items.Count - 1
            cbxNatureBusiness_B2.Properties.Items.Item(x).CheckState = CheckState.Unchecked
        Next
        For x As Integer = 0 To Industry_C1.Properties.Items.Count - 1
            Industry_C1.Properties.Items.Item(x).CheckState = CheckState.Unchecked
        Next
        For x As Integer = 0 To Industry_C2.Properties.Items.Count - 1
            Industry_C2.Properties.Items.Item(x).CheckState = CheckState.Unchecked
        Next
        For x As Integer = 0 To Industry_C3.Properties.Items.Count - 1
            Industry_C3.Properties.Items.Item(x).CheckState = CheckState.Unchecked
        Next
        For x As Integer = 0 To Industry_C4.Properties.Items.Count - 1
            Industry_C4.Properties.Items.Item(x).CheckState = CheckState.Unchecked
        Next
        For x As Integer = 0 To Industry_S.Properties.Items.Count - 1
            Industry_S.Properties.Items.Item(x).CheckState = CheckState.Unchecked
        Next
        LoadApplication()
    End Sub

    Private Sub DtpDate_ValueChanged(sender As Object, e As EventArgs) Handles dtpDate.ValueChanged
        GetCreditInvestigation()
    End Sub

    Private Sub BtnSN_Click(sender As Object, e As EventArgs) Handles btnSN.Click
        If TxtFirstN_B.Enabled = False And cbxApplication.Enabled = True Then
            MsgBox("Please select an application first.", MsgBoxStyle.Information, "Info")
            cbxApplication.DroppedDown = True
            cbxApplication.Focus()
            Exit Sub
        End If

        Dim Spouse As New FrmSpouse
        With Spouse
            .FromCreditApplication = False
            .BorrowerID = BorrowerID
            .BorrowerName = If(CbxPrefix_B.Text = "", "", CbxPrefix_B.Text & " ") & If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & If(cbxSuffix_B.Text = "", "", cbxSuffix_B.Text)
            .CreditNumber = CreditNumber
            .SpouseID = SpouseID
            .Borrower_Branch = Borrower_Branch
            .vSave = vSave
            .vUpdate = vUpdate
            .vDelete = vDelete
            .vPrint = vPrint
            .TotalImage = TotalImageS
            If TxtFirstN_S.Text = "" Then
                .btnSave.Enabled = True
                .btnDelete.Enabled = False
                .btnModify.Enabled = False

                .txtNoC_S.Text = txtNoC_B.Text
                .txtStreetC_S.Text = txtStreetC_B.Text
                .txtBarangayC_S.Text = txtBarangayC_B.Text

                .txtBusinessName_S.Text = txtBusinessName_B.Text
                .txtBusinessAddress_S.Text = txtBusinessAddress_B.Text
                .dBusinessIncome_S.Value = dBusinessIncome_B.Value
                .iNoEmployees_S.Value = iNoEmployees_B.Value
                .dCapital_S.Value = dCapital_B.Value
                .txtOtherIncome_S.Text = txtOtherIncome_B.Text
                .dOtherIncome_S.Value = dOtherIncome_B.Value
                If cbxApplication.SelectedIndex = -1 Or cbxApplication.Text = "" Then
                Else
                    Dim drv_A As DataRowView = DirectCast(cbxApplication.SelectedItem, DataRowView)
                    If drv_A("Gender_B") = "Male" Then
                        .cbxFemale_S.Checked = True
                    ElseIf drv_A("Gender_B") = "Female" Then
                        .cbxMale_S.Checked = True
                    End If
                End If
            Else
                .PanelEx5.Enabled = False
                .PanelEx8.Enabled = False
                '.btnModify.Enabled = True
                .btnSave.Enabled = False
                .btnDelete.Enabled = False
                If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
                Else
                    .btnAttach.Enabled = True
                End If

                .CbxPrefix_S.Text = vPrefix_S
                .TxtFirstN_S.Text = vFirstN_S
                .TxtMiddleN_S.Text = vMiddleN_S
                .TxtLastN_S.Text = vLastN_S
                .cbxSuffix_S.Text = vSuffix_S
                .CbxPrefix_M.Text = vPrefix_M
                .TxtFirstN_M.Text = vFirstN_M
                .TxtMiddleN_M.Text = vMiddleN_M
                .TxtLastN_M.Text = vLastN_M
                .cbxSuffix_M.Text = vSuffix_M
                If vNoC_S = "" And vStreetC_S = "" And vBarangayC_S = "" Then
                    .txtNoC_S.Text = txtNoC_B.Text
                    .txtStreetC_S.Text = txtStreetC_B.Text
                    .txtBarangayC_S.Text = txtBarangayC_B.Text
                Else
                    .txtNoC_S.Text = vNoC_S
                    .txtStreetC_S.Text = vStreetC_S
                    .txtBarangayC_S.Text = vBarangayC_S
                End If
                .txtNoP_S.Text = vNoP_S
                .txtStreetP_S.Text = vStreetP_S
                .txtBarangayP_S.Text = vBarangayP_S
                If vBirth_S = "" Then
                    .DtpBirth_S.CustomFormat = ""
                Else
                    .DtpBirth_S.CustomFormat = "MMMM dd, yyyy"
                    .DtpBirth_S.Text = vBirth_S
                End If
                .cbxPlaceBirth_S.Text = vPlaceBirth_S
                .cbxMale_S.Checked = vMale_S
                .cbxFemale_S.Checked = vFemale_S
                .txtCitizenship_S.Text = vCitizenship_S
                .txtTIN_S.Text = vTIN_S
                .txtTelephone_S.Text = vTelephone_S
                .txtSSS_S.Text = vSSS_S
                .txtMobile_S.Text = vMobile_S
                .txtEmail_S.Text = vEmail_S
                .cbxOwned_S.Checked = vOwned_S
                .cbxFree_S.Checked = vFree_S
                .cbxRented_S.Checked = vRented_S
                .dRent_S.Value = vRent_S
                .pb_S.Image = pb_Spouse.Image.Clone
                .txtPath_S.Text = txtPath_S.Text
                .cbxEmployer_S.Text = vEmployer_S
                .txtEmployerAddress_S.Text = vEmpAddress_S
                .txtEmployerTelephone_S.Text = vEmpTelephone_S
                .cbxPosition_S.Text = vPosition_S
                .cbxCasual_S.Checked = vCasual_S
                .cbxTemporary_S.Checked = vTemporary_S
                .cbxPermanent_S.Checked = vPermanent_S
                If vHired_S = "" Then
                    .dtpHired_S.CustomFormat = ""
                Else
                    .dtpHired_S.CustomFormat = "MMMM dd, yyyy"
                    .dtpHired_S.Text = vHired_S
                End If
                .cbxYearHired_S.Checked = vYearHired_S
                .txtSupervisor_S.Text = vSupervisor_S
                .dMonthly_S.Value = vSalary_S
                If vBusinessName_S = "" Then
                    .txtBusinessName_S.Text = txtBusinessName_B.Text
                    .txtBusinessAddress_S.Text = txtBusinessAddress_B.Text
                    .dBusinessIncome_S.Value = dBusinessIncome_B.Value
                    .iNoEmployees_S.Value = iNoEmployees_B.Value
                    .dCapital_S.Value = dCapital_B.Value
                    .txtOtherIncome_S.Text = txtOtherIncome_B.Text
                    .dOtherIncome_S.Value = dOtherIncome_B.Value
                Else
                    .txtBusinessName_S.Text = vBusinessName_S
                    .txtBusinessAddress_S.Text = vBusinessAddress_S
                    .txtBusinessTelephone_S.Text = vBusinessTelephone_S
                    .cbxNatureBusiness_S.Text = vNatureBusiness_S
                    .iYrsOperation_S.Value = vYrsOperation_S
                    .dBusinessIncome_S.Value = vBusinessIncome_S
                    .iNoEmployees_S.Value = vNoEmployees_S
                    .dCapital_S.Value = vCapital_S
                    .txtArea_S.Text = vArea_S
                    If vExpiry_S = "" Then
                        .dtpExpiry_S.CustomFormat = ""
                    Else
                        .dtpExpiry_S.CustomFormat = "MMMM dd, yyyy"
                        .dtpExpiry_S.Text = vExpiry_S
                    End If
                    .iOutlet_S.Value = vOutlet_S
                    .txtOtherIncome_S.Text = vOtherIncome_S
                    .dOtherIncome_S.Value = vOtherIncomeD_S
                End If
                .TotalImage = TotalImageS

                '*********** T A G S **************
                .CbxPrefix_S.Tag = vPrefix_S
                .TxtFirstN_S.Tag = vFirstN_S
                .TxtMiddleN_S.Tag = vMiddleN_S
                .TxtLastN_S.Tag = vLastN_S
                .cbxSuffix_S.Tag = vSuffix_S
                .CbxPrefix_M.Tag = vPrefix_M
                .TxtFirstN_M.Tag = vFirstN_M
                .TxtMiddleN_M.Tag = vMiddleN_M
                .TxtLastN_M.Tag = vLastN_M
                .cbxSuffix_M.Tag = vSuffix_M
                .txtNoC_S.Tag = vNoC_S
                .txtStreetC_S.Tag = vStreetC_S
                .txtBarangayC_S.Tag = vBarangayC_S
                .cbxAddressC_S.Tag = vAddressC_S
                .txtNoP_S.Tag = vNoP_S
                .txtStreetP_S.Tag = vStreetP_S
                .txtBarangayP_S.Tag = vBarangayP_S
                .cbxAddressP_S.Tag = vAddressP_S
                .DtpBirth_S.Tag = If(vBirth_S = "", "", Format(CDate(vBirth_S), "yyyy-MM-dd"))
                .cbxPlaceBirth_S.Tag = vPlaceBirth_S
                .cbxMale_S.Tag = If(vMale_S, "Male", If(vFemale_S, "Female", ""))
                .cbxFemale_S.Tag = If(vMale_S, "Male", If(vFemale_S, "Female", ""))
                .txtCitizenship_S.Tag = vCitizenship_S
                .txtTIN_S.Tag = vTIN_S
                .txtTelephone_S.Tag = vTelephone_S
                .txtSSS_S.Tag = vSSS_S
                .txtMobile_S.Tag = vMobile_S
                .txtEmail_S.Tag = vEmail_S
                .cbxOwned_S.Tag = If(vOwned_S, "Owned", If(vFree_S, "Free", If(vRented_S, "Rented", "")))
                .cbxFree_S.Tag = If(vOwned_S, "Owned", If(vFree_S, "Free", If(vRented_S, "Rented", "")))
                .cbxRented_S.Tag = If(vOwned_S, "Owned", If(vFree_S, "Free", If(vRented_S, "Rented", "")))
                .dRent_S.Tag = vRent_S
                .cbxEmployer_S.Tag = vEmployer_S
                .txtEmployerAddress_S.Tag = vEmpAddress_S
                .txtEmployerTelephone_S.Tag = vEmpTelephone_S
                .cbxPosition_S.Tag = vPosition_S
                .cbxCasual_S.Tag = If(vCasual_S, "Casual", If(vTemporary_S, "Temporary", If(vPermanent_S, "Permanent", "")))
                .cbxTemporary_S.Tag = If(vCasual_S, "Casual", If(vTemporary_S, "Temporary", If(vPermanent_S, "Permanent", "")))
                .cbxPermanent_S.Tag = If(vCasual_S, "Casual", If(vTemporary_S, "Temporary", If(vPermanent_S, "Permanent", "")))
                .dtpHired_S.Tag = If(vHired_S = "", "", Format(CDate(vHired_S), "yyyy-MM-dd"))
                .txtSupervisor_S.Tag = vSupervisor_S
                .dMonthly_S.Tag = vSalary_S
                .txtBusinessName_S.Tag = vBusinessName_S
                .txtBusinessAddress_S.Tag = vBusinessAddress_S
                .txtBusinessTelephone_S.Tag = vBusinessTelephone_S
                .cbxNatureBusiness_S.Tag = vNatureBusiness_S
                .iYrsOperation_S.Tag = vYrsOperation_S
                .dBusinessIncome_S.Tag = vBusinessIncome_S
                .iNoEmployees_S.Tag = vNoEmployees_S
                .dCapital_S.Tag = vCapital_S
                .txtArea_S.Tag = vArea_S
                .dtpExpiry_S.Tag = If(vExpiry_S = "", "", Format(CDate(vExpiry_S), "yyyy-MM-dd"))
                .iOutlet_S.Tag = vOutlet_S
                .txtOtherIncome_S.Tag = vOtherIncome_S
                .dOtherIncome_S.Tag = vOtherIncomeD_S
            End If
            Dim Result = .ShowDialog
            If Result = DialogResult.OK Then
                'Delete File Spouse
                Try
                    Dim xPath As String = String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, txtCINumber.Text, "Spouse.jpg")
                    If IO.File.Exists(xPath) Then
                        IO.File.Delete(xPath)
                    End If
                    txtPath_S.Text = ""
                Catch ex As Exception
                End Try
            ElseIf Result = DialogResult.Yes And SpouseID <> "" Then
                Dim SQL As String = "UPDATE credit_investigation SET "
                SQL &= String.Format(" Ex_TotalDisposable = '{0}', ", dTotalDisposable.Value)
                SQL &= String.Format(" Ex_Living = '{0}', ", dLiving.Value)
                SQL &= String.Format(" Ex_Clothing = '{0}', ", dClothing.Value)
                SQL &= String.Format(" Ex_Education = '{0}', ", dEducation.Value)
                SQL &= String.Format(" Ex_Transportation = '{0}', ", dTransportation.Value)
                SQL &= String.Format(" Ex_Lights = '{0}', ", dLighths.Value)
                SQL &= String.Format(" Ex_Insurance = '{0}', ", dInsurance.Value)
                SQL &= String.Format(" Ex_Amortization = '{0}', ", dAmortization.Value)
                SQL &= String.Format(" Ex_Miscellaneous = '{0}', ", dMiscellaneous.Value)
                SQL &= String.Format(" Ex_TotalExpenses = '{0}', ", dTotalExpenses.Value)
                SQL &= String.Format(" Ex_NetDisposable = '{0}', ", dNetDisposable.Value)
                SQL &= String.Format(" Ex_TMFI = '{0}', ", dTMFI.Value)
                SQL &= String.Format(" Ex_TMDI = '{0}' ", dTMDI.Value)
                SQL &= String.Format(" WHERE CINumber = '{0}';", txtCINumber.Text)
                DataObject(SQL)
                LoadData()
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnCM_1_Click(sender As Object, e As EventArgs) Handles btnCM_1.Click
        If TxtFirstN_B.Enabled = False And cbxApplication.Enabled = True Then
            MsgBox("Please select an application first.", MsgBoxStyle.Information, "Info")
            cbxApplication.DroppedDown = True
            cbxApplication.Focus()
            Exit Sub
        End If

        Dim CoMaker As New FrmCoMaker
        With CoMaker
            .tabCI.Visible = True
            .FromCreditApplication = False
            .BorrowerID = BorrowerID
            .BorrowerName = If(CbxPrefix_B.Text = "", "", CbxPrefix_B.Text & " ") & If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & If(cbxSuffix_B.Text = "", "", cbxSuffix_B.Text)
            .CreditNumber = CreditNumber
            .AmountApplied = AmountApplied
            .CINumber = txtCINumber.Text
            .Rank = 1
            .CoMakerID_1 = CoMakerID
            .Borrower_Branch = Borrower_Branch
            .vSave = vSave
            .vUpdate = vUpdate
            .vDelete = vDelete
            .vPrint = vPrint
            If TxtFirstN_C1.Text = "" Then
                .btnDelete.Enabled = False
                .btnModify.Enabled = False
            Else
                .PanelEx6.Enabled = False
                .PanelEx9.Enabled = False
                .PanelEx7.Enabled = False
                .PanelEx11.Enabled = False
                .PanelEx12.Enabled = False
                .btnSave.Enabled = False
                If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
                Else
                    .btnAttach.Enabled = True
                End If

                .CbxPrefix_C1.Text = vPrefix_C1
                .TxtFirstN_C1.Text = vFirstN_C1
                .TxtMiddleN_C1.Text = vMiddleN_C1
                .TxtLastN_C1.Text = vLastN_C1
                .cbxSuffix_C1.Text = vSuffix_C1
                .txtNoC_C1.Text = vNoC_C1
                .txtStreetC_C1.Text = vStreetC_C1
                .txtBarangayC_C1.Text = vBarangayC_C1
                .cbxAddressC_C1.Text = vAddressC_C1
                .txtNoP_C1.Text = vNoP_C1
                .txtStreetP_C1.Text = vStreetP_C1
                .txtBarangayP_C1.Text = vBarangayP_C1
                .cbxAddressP_C1.Text = vAddressP_C1
                If vBirth_C1 = "" Then
                    .DtpBirth_C1.CustomFormat = ""
                Else
                    .DtpBirth_C1.CustomFormat = "MMMM dd, yyyy"
                    .DtpBirth_C1.Text = vBirth_C1
                End If
                .cbxPlaceBirth_C1.Text = vPlaceBirth_C1
                .cbxMale_C1.Checked = vMale_C1
                .cbxFemale_C1.Checked = vFemale_C1
                .cbxSingle_C1.Checked = vSingle_C1
                .cbxMarried_C1.Checked = vMarried_C1
                .cbxSeparated_C1.Checked = vSeparated_C1
                .cbxWidowed_C1.Checked = vWidowed_C1
                .txtCitizenship_C1.Text = vCitizenship_C1
                .txtTIN_C1.Text = vTIN_C1
                .txtTelephone_C1.Text = vTelephone_C1
                .txtSSS_C1.Text = vSSS_C1
                .txtMobile_C1.Text = vMobile_C1
                .txtEmail_C1.Text = vEmail_C1
                .cbxOwned_C1.Checked = vOwned_C1
                .cbxFree_C1.Checked = vFree_C1
                .cbxRented_C1.Checked = vRented_C1
                .dRent_C1.Value = vRent_C1
                .cbxRelationship_C1.Text = vRelationship_C1
                .pb_C1.Image = CoMaker1.Image.Clone
                .txtPath_C1.Text = "CoMaker1.jpg"
                .cbxEmployer_C1.Text = vEmployer_C1
                .txtEmployerAddress_C1.Text = vEmpAddress_C1
                .txtEmployerTelephone_C1.Text = vEmpTelephone_C1
                .cbxPosition_C1.Text = vPosition_C1
                .cbxCasual_C1.Checked = vCasual_C1
                .cbxTemporary_C1.Checked = vTemporary_C1
                .cbxPermanent_C1.Checked = vPermanent_C1
                If vHired_C1 = "" Then
                    .dtpHired_C1.CustomFormat = ""
                Else
                    .dtpHired_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpHired_C1.Text = vHired_C1
                End If
                .cbxYearHired_C1.Checked = vYearHired_C1
                .txtSupervisor_C1.Text = vSupervisor_C1
                .dMonthly_C1.Value = vSalary_C1
                .txtBusinessName_C1.Text = vBusinessName_C1
                .txtBusinessAddress_C1.Text = vBusinessAddress_C1
                .txtBusinessTelephone_C1.Text = vBusinessTelephone_C1
                .cbxNatureBusiness_C1.Text = vNatureBusiness_C1
                .iYrsOperation_C1.Value = vYrsOperation_C1
                .dBusinessIncome_C1.Value = vBusinessIncome_C1
                .iNoEmployees_C1.Value = vNoEmployees_C1
                .dCapital_C1.Value = vCapital_C1
                .txtArea_C1.Text = vArea_C1
                If vExpiry_C1 = "" Then
                    .dtpExpiry_C1.CustomFormat = ""
                Else
                    .dtpExpiry_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpExpiry_C1.Text = vExpiry_C1
                End If
                .iOutlet_C1.Value = vOutlet_C1
                .txtOtherIncome_C1.Text = vOtherIncome_C1
                .dOtherIncome_C1.Value = vOtherIncomeD_C1
                .TotalImage = TotalImageC1
                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************
                .txtCreditor_1.Text = vCreditor_1_C1
                .txtCreditAddress_1.Text = vCreditAddress_1_C1
                If vCreditGranted_1_C1 = "" Then
                    .dtpCreditGranted_1.CustomFormat = ""
                Else
                    .dtpCreditGranted_1.CustomFormat = "MMM. dd, yyyy"
                    .dtpCreditGranted_1.Value = vCreditGranted_1_C1
                End If
                .iTerm_1.Value = vTerm_1_C1
                .dAmountGranted_1.Value = vAmountGranted_1_C1
                .dBalance_1.Value = vBalance_1_C1
                .dCreditPayment_1.Value = vCreditPayment_1_C1
                .txtCreditRemarks_1.Text = vCreditRemarks_1_C1
                .txtCreditor_2.Text = vCreditor_2_C1
                .txtCreditAddress_2.Text = vCreditAddress_2_C1
                If vCreditGranted_2_C1 = "" Then
                    .dtpCreditGranted_2.CustomFormat = ""
                Else
                    .dtpCreditGranted_2.CustomFormat = "MMM. dd, yyyy"
                    .dtpCreditGranted_2.Value = vCreditGranted_2_C1
                End If
                .iTerm_2.Value = vTerm_2_C1
                .dAmountGranted_2.Value = vAmountGranted_2_C1
                .dBalance_2.Value = vBalance_2_C1
                .dCreditPayment_2.Value = vCreditPayment_2_C1
                .txtCreditRemarks_2.Text = vCreditRemarks_2_C1
                .txtBank_1.Text = vBank_1_C1
                .txtBranch_1.Text = vBranch_1_C1
                If vAccountT_1_C1 = "SA" Then
                    .cbxSA_1.Checked = True
                ElseIf vAccountT_1_C1 = "CA" Then
                    .cbxCA_1.Checked = True
                End If
                .txtSA_1.Text = vSA_1_C1
                .dAverageBalance_1.Value = vAverageBalance_1_C1
                .txtOpened_1.Text = vOpened_1_C1
                .txtBank_2.Text = vBank_2_C1
                .txtBranch_2.Text = vBranch_2_C1
                If vAccountT_2_C1 = "SA" Then
                    .cbxSA_2.Checked = True
                ElseIf vAccountT_2_C1 = "CA" Then
                    .cbxCA_2.Checked = True
                End If
                .txtSA_2.Text = vSA_2_C1
                .dAverageBalance_2.Value = vAverageBalance_2_C1
                .txtOpened_2.Text = vOpened_2_C1
                If vCreditRating_C1 = "GOOD" Then
                    .cbxGood.Checked = True
                ElseIf vCreditRating_C1 = "FAIR" Then
                    .cbxFair.Checked = True
                ElseIf vCreditRating_C1 = "POOR" Then
                    .cbxPoor.Checked = True
                End If
                .rRecommendation.Text = vRec_Remarks_C1
                .txtTitle.Text = vTitle_C1
                .txtCaseNum.Text = vCaseNum_C1
                If vDateFilled_C1 = "" Then
                    .dtpDateFilled.CustomFormat = ""
                Else
                    .dtpDateFilled.CustomFormat = "MMM. dd, yyyy"
                    .dtpDateFilled.Value = vDateFilled_C1
                End If
                .cbxCourt.Text = vCourt_C1
                .cbxCaseNature.Text = vCaseNature_C1
                .dAmountInvolved.Value = vAmountInvolved_C1
                .cbxCaseStatus.Text = vCaseStatus_C1
                .txtFindings.Text = vFindings_C1
                If vFindingsStat_C1 = "Positive" Then
                    .cbxPositive.Checked = True
                ElseIf vFindingsStat_C1 = "Negative" Then
                    .cbxNegative.Checked = True
                ElseIf vFindingsStat_C1 = "Unestablished" Then
                    .cbxUnestablished.Checked = True
                End If
                .txtCACPI.Text = vCACPI_C1
                .txtLocation_1.Text = vLocation_1_C1
                .txtTCT_1.Text = vTCT_1_C1
                .dArea_1.Value = vArea_1_C1
                .txtPropertiesRemarks_1.Text = vPropertiesRemarks_1_C1
                .txtLocation_2.Text = vLocation_2_C1
                .txtTCT_2.Text = vTCT_2_C1
                .dArea_2.Value = vArea_2_C1
                .txtPropertiesRemarks_2.Text = vPropertiesRemarks_2_C1
                .txtVehicle_1.Text = vVehicle_1_C1
                .dtpYear_1.Text = vYear_1_C1
                .txtWhomAcquired_1.Text = vWhomAcquired_1_C1
                .txtVehicleRemarks_1.Text = vVehicleRemarks_1_C1
                .txtVehicle_2.Text = vVehicle_2_C1
                .dtpYear_2.Text = vYear_2_C1
                .txtWhomAcquired_2.Text = vWhomAcquired_2_C1
                .txtVehicleRemarks_2.Text = vVehicleRemarks_2_C1
                .txtOtherProperties.Text = vOtherProperties_C1
                .rNarrative.Text = vNarrative_C1
                .txtC1.Text = vC1_C1
                .txtC2.Text = vC2_C1
                .txtC3.Text = vC3_C1
                .txtC4.Text = vC4_C1
                .txtC5.Text = vC5_C1
                .txtC6.Text = vC6_C1
                .txtC7.Text = vC7_C1
                .txtC8.Text = vC8_C1
                .txtC9.Text = vC9_C1
                .dTotalDisposable.Value = vEx_TotalDisposable_C1
                .dLiving.Value = vEx_Living_C1
                .dClothing.Value = vEx_Clothing_C1
                .dEducation.Value = vEx_Education_C1
                .dTransportation.Value = vEx_Transportation_C1
                .dLighths.Value = vEx_Lights_C1
                .dInsurance.Value = vEx_Insurance_C1
                .dAmortization.Value = vEx_Amortization_C1
                .dMiscellaneous.Value = vEx_Miscellaneous_C1
                .dTotalExpenses.Value = vEx_TotalExpenses_C1
                .dNetDisposable.Value = vEx_NetDisposable_C1
                .dTMFI.Value = vEx_TMFI_C1
                .dTMDI.Value = vEx_TMDI_C1
                .txtExpenseRemarks.Text = vEx_Remarks_C1
                .rPurposeLoan.Text = vPurposeLoan_C1
                .rOthers.Text = vOthers_C1

                Try
                    Using TempPB As New DevExpress.XtraEditors.PictureEdit
                        TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Branch_Code, CreditNumber, "Sketch C1.jpg"))
                        ResizeImages(TempPB.Image.Clone, .pbSketch, 850, 700)
                    End Using
                Catch ex As Exception
                    .pbSketch.Image = DefaultMap.Image.Clone
                End Try
                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************

                '*********** T A G S **************
                .CbxPrefix_C1.Tag = vPrefix_C1
                .TxtFirstN_C1.Tag = vFirstN_C1
                .TxtMiddleN_C1.Tag = vMiddleN_C1
                .TxtLastN_C1.Tag = vLastN_C1
                .cbxSuffix_C1.Tag = vSuffix_C1
                .txtNoC_C1.Tag = vNoC_C1
                .txtStreetC_C1.Tag = vStreetC_C1
                .txtBarangayC_C1.Tag = vBarangayC_C1
                .cbxAddressC_C1.Tag = vAddressC_C1
                .txtNoP_C1.Tag = vNoP_C1
                .txtStreetP_C1.Tag = vStreetP_C1
                .txtBarangayP_C1.Tag = vBarangayP_C1
                .cbxAddressP_C1.Tag = vAddressP_C1
                .DtpBirth_C1.Tag = If(vBirth_C1 = "", "", Format(CDate(vBirth_C1), "yyyy-MM-dd"))
                .cbxPlaceBirth_C1.Tag = vPlaceBirth_C1
                .cbxMale_C1.Tag = If(vMale_C1, "Male", If(vFemale_C1, "Female", ""))
                .cbxFemale_C1.Tag = If(vMale_C1, "Male", If(vFemale_C1, "Female", ""))
                .cbxSingle_C1.Tag = If(vSingle_C1, "Single", If(vMarried_C1, "Married", If(vSeparated_C1, "Separated", If(vWidowed_C1, "Widowed", ""))))
                .cbxMarried_C1.Tag = If(vSingle_C1, "Single", If(vMarried_C1, "Married", If(vSeparated_C1, "Separated", If(vWidowed_C1, "Widowed", ""))))
                .cbxSeparated_C1.Tag = If(vSingle_C1, "Single", If(vMarried_C1, "Married", If(vSeparated_C1, "Separated", If(vWidowed_C1, "Widowed", ""))))
                .cbxWidowed_C1.Tag = If(vSingle_C1, "Single", If(vMarried_C1, "Married", If(vSeparated_C1, "Separated", If(vWidowed_C1, "Widowed", ""))))
                .txtCitizenship_C1.Tag = vCitizenship_C1
                .txtTIN_C1.Tag = vTIN_C1
                .txtTelephone_C1.Tag = vTelephone_C1
                .txtSSS_C1.Tag = vSSS_C1
                .txtMobile_C1.Tag = vMobile_C1
                .txtEmail_C1.Tag = vEmail_C1
                .cbxOwned_C1.Tag = If(vOwned_C1, "Owned", If(vFree_C1, "Free", If(vRented_C1, "Rented", "")))
                .cbxFree_C1.Tag = If(vOwned_C1, "Owned", If(vFree_C1, "Free", If(vRented_C1, "Rented", "")))
                .cbxRented_C1.Tag = If(vOwned_C1, "Owned", If(vFree_C1, "Free", If(vRented_C1, "Rented", "")))
                .dRent_C1.Tag = vRent_C1
                .cbxRelationship_C1.Tag = vRelationship_C1
                .cbxEmployer_C1.Tag = vEmployer_C1
                .txtEmployerAddress_C1.Tag = vEmpAddress_C1
                .txtEmployerTelephone_C1.Tag = vEmpTelephone_C1
                .cbxPosition_C1.Tag = vPosition_C1
                .cbxCasual_C1.Tag = If(vCasual_C1, "Casual", If(vTemporary_C1, "Temporary", If(vPermanent_C1, "Permanent", "")))
                .cbxTemporary_C1.Tag = If(vCasual_C1, "Casual", If(vTemporary_C1, "Temporary", If(vPermanent_C1, "Permanent", "")))
                .cbxPermanent_C1.Tag = If(vCasual_C1, "Casual", If(vTemporary_C1, "Temporary", If(vPermanent_C1, "Permanent", "")))
                .dtpHired_C1.Tag = If(vHired_C1 = "", "", Format(CDate(vHired_C1), "yyyy-MM-dd"))
                .txtSupervisor_C1.Tag = vSupervisor_C1
                .dMonthly_C1.Tag = vSalary_C1
                .txtBusinessName_C1.Tag = vBusinessName_C1
                .txtBusinessAddress_C1.Tag = vBusinessAddress_C1
                .txtBusinessTelephone_C1.Tag = vBusinessTelephone_C1
                .cbxNatureBusiness_C1.Tag = vNatureBusiness_C1
                .iYrsOperation_C1.Tag = vYrsOperation_C1
                .dBusinessIncome_C1.Tag = vBusinessIncome_C1
                .iNoEmployees_C1.Tag = vNoEmployees_C1
                .dCapital_C1.Tag = vCapital_C1
                .txtArea_C1.Tag = vArea_C1
                .dtpExpiry_C1.Tag = If(vExpiry_C1 = "", "", Format(CDate(vExpiry_C1), "yyyy-MM-dd"))
                .iOutlet_C1.Tag = vOutlet_C1
                .txtOtherIncome_C1.Tag = vOtherIncome_C1
                .dOtherIncome_C1.Tag = vOtherIncomeD_C1

                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************
                .txtCreditor_1.Tag = vCreditor_1_C1
                .txtCreditAddress_1.Tag = vCreditAddress_1_C1
                .dtpCreditGranted_1.Tag = vCreditGranted_1_C1
                .iTerm_1.Tag = vTerm_1_C1
                .dAmountGranted_1.Tag = vAmountGranted_1_C1
                .dBalance_1.Tag = vBalance_1_C1
                .dCreditPayment_1.Tag = vCreditPayment_1_C1
                .txtCreditRemarks_1.Tag = vCreditRemarks_1_C1
                .txtCreditor_2.Tag = vCreditor_2_C1
                .txtCreditAddress_2.Tag = vCreditAddress_2_C1
                .dtpCreditGranted_2.Tag = vCreditGranted_2_C1
                .iTerm_2.Tag = vTerm_2_C1
                .dAmountGranted_2.Tag = vAmountGranted_2_C1
                .dBalance_2.Tag = vBalance_2_C1
                .dCreditPayment_2.Tag = vCreditPayment_2_C1
                .txtCreditRemarks_2.Tag = vCreditRemarks_2_C1
                .txtBank_1.Tag = vBank_1_C1
                .txtBranch_1.Tag = vBranch_1_C1
                .cbxSA_1.Tag = vAccountT_1_C1
                .cbxCA_1.Tag = vAccountT_1_C1
                .txtSA_1.Tag = vSA_1_C1
                .dAverageBalance_1.Tag = vAverageBalance_1_C1
                .txtOpened_1.Tag = vOpened_1_C1
                .txtBank_2.Tag = vBank_2_C1
                .txtBranch_2.Tag = vBranch_2_C1
                .cbxSA_2.Tag = vAccountT_2_C1
                .cbxCA_2.Tag = vAccountT_2_C1
                .txtSA_2.Tag = vSA_2_C1
                .dAverageBalance_2.Tag = vAverageBalance_2_C1
                .txtOpened_2.Tag = vOpened_2_C1
                .cbxGood.Tag = vCreditRating_C1
                .cbxFair.Tag = vCreditRating_C1
                .cbxPoor.Tag = vCreditRating_C1
                .rRecommendation.Tag = vRec_Remarks_C1
                .txtTitle.Tag = vTitle_C1
                .txtCaseNum.Tag = vCaseNum_C1
                .dtpDateFilled.Tag = vDateFilled_C1
                .cbxCourt.Tag = vCourt_C1
                .cbxCaseNature.Tag = vCaseNature_C1
                .dAmountInvolved.Tag = vAmountInvolved_C1
                .cbxCaseStatus.Tag = vCaseStatus_C1
                .txtFindings.Tag = vFindings_C1
                .cbxPositive.Tag = vFindingsStat_C1
                .cbxNegative.Tag = vFindingsStat_C1
                .cbxUnestablished.Tag = vFindingsStat_C1
                .txtCACPI.Tag = vCACPI_C1
                .txtLocation_1.Tag = vLocation_1_C1
                .txtTCT_1.Tag = vTCT_1_C1
                .dArea_1.Tag = vArea_1_C1
                .txtPropertiesRemarks_1.Tag = vPropertiesRemarks_1_C1
                .txtLocation_2.Tag = vLocation_2_C1
                .txtTCT_2.Tag = vTCT_2_C1
                .dArea_2.Tag = vArea_2_C1
                .txtPropertiesRemarks_2.Tag = vPropertiesRemarks_2_C1
                .txtVehicle_1.Tag = vVehicle_1_C1
                .dtpYear_1.Tag = vYear_1_C1
                .txtWhomAcquired_1.Tag = vWhomAcquired_1_C1
                .txtVehicleRemarks_1.Tag = vVehicleRemarks_1_C1
                .txtVehicle_2.Tag = vVehicle_2_C1
                .dtpYear_2.Tag = vYear_2_C1
                .txtWhomAcquired_2.Tag = vWhomAcquired_2_C1
                .txtVehicleRemarks_2.Tag = vVehicleRemarks_2_C1
                .txtOtherProperties.Tag = vOtherProperties_C1
                .rNarrative.Tag = vNarrative_C1
                .txtC1.Tag = vC1_C1
                .txtC2.Tag = vC2_C1
                .txtC3.Tag = vC3_C1
                .txtC4.Tag = vC4_C1
                .txtC5.Tag = vC5_C1
                .txtC6.Tag = vC6_C1
                .txtC7.Tag = vC7_C1
                .txtC8.Tag = vC8_C1
                .txtC9.Tag = vC9_C1
                .dTotalDisposable.Tag = vEx_TotalDisposable_C1
                .dLiving.Tag = vEx_TotalDisposable_C1
                .dClothing.Tag = vEx_Clothing_C1
                .dEducation.Tag = vEx_Education_C1
                .dTransportation.Tag = vEx_Transportation_C1
                .dLighths.Tag = vEx_Lights_C1
                .dInsurance.Tag = vEx_Insurance_C1
                .dAmortization.Tag = vEx_Amortization_C1
                .dMiscellaneous.Tag = vEx_Miscellaneous_C1
                .dTotalExpenses.Tag = vEx_TotalExpenses_C1
                .dNetDisposable.Tag = vEx_NetDisposable_C1
                .dTMFI.Tag = vEx_TMFI_C1
                .dTMDI.Tag = vEx_TMDI_C1
                .txtExpenseRemarks.Tag = vEx_Remarks_C1
                .rPurposeLoan.Tag = vPurposeLoan_C1
                .rOthers.Tag = vOthers_C1
                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************
            End If
            Dim Result = .ShowDialog
            If Result = DialogResult.OK Then
                'Delete File CoMaker
                Try
                    Dim xPath As String = String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, CreditNumber, "CoMaker1.jpg")
                    If IO.File.Exists(xPath) Then
                        IO.File.Delete(xPath)
                        If CoMakerShift Then
                            If IO.File.Exists(xPath.Replace("CoMaker1", "CoMaker2")) Then
                                Rename(xPath.Replace("CoMaker1.jpg", "CoMaker2.jpg"), xPath)
                            End If
                            CoMaker1.Image = CoMaker2.Image.Clone
                            xPath = xPath.Replace("CoMaker1", "CoMaker2")

                            If IO.File.Exists(xPath.Replace("CoMaker2", "CoMaker3")) Then
                                Rename(xPath.Replace("CoMaker2.jpg", "CoMaker3.jpg"), xPath)
                            End If
                            CoMaker2.Image = CoMaker3.Image.Clone
                            xPath = xPath.Replace("CoMaker2", "CoMaker3")

                            If IO.File.Exists(xPath.Replace("CoMaker3", "CoMaker4")) Then
                                Rename(xPath.Replace("CoMaker3.jpg", "CoMaker4.jpg"), xPath)
                            End If
                            CoMaker3.Image = CoMaker4.Image.Clone
                        End If
                    End If
                Catch ex As Exception
                    TriggerBugReport("Credit Investigation - CM1 Click", ex.Message.ToString)
                End Try
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnCM_2_Click(sender As Object, e As EventArgs) Handles btnCM_2.Click
        If TxtFirstN_B.Enabled = False And cbxApplication.Enabled = True Then
            MsgBox("Please select an application first.", MsgBoxStyle.Information, "Info")
            cbxApplication.DroppedDown = True
            cbxApplication.Focus()
            Exit Sub
        End If
        If TxtFirstN_C1.Text = "" Then
            MsgBox("Please add CoMaker 1 first before adding CoMaker 2.", MsgBoxStyle.Information, "Info")
            btnCM_1.Focus()
            Exit Sub
        End If

        Dim CoMaker As New FrmCoMaker
        With CoMaker
            .tabCI.Visible = True
            .FromCreditApplication = False
            .BorrowerID = BorrowerID
            .BorrowerName = If(CbxPrefix_B.Text = "", "", CbxPrefix_B.Text & " ") & If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & If(cbxSuffix_B.Text = "", "", cbxSuffix_B.Text)
            .CreditNumber = CreditNumber
            .AmountApplied = AmountApplied
            .CINumber = txtCINumber.Text
            .Rank = 2
            .CoMakerID_1 = CoMakerID
            .vSave = vSave
            .vUpdate = vUpdate
            .vDelete = vDelete
            .vPrint = vPrint
            If TxtFirstN_C2.Text = "" Then
                .btnDelete.Enabled = False
                .btnModify.Enabled = False
            Else
                .PanelEx6.Enabled = False
                .PanelEx9.Enabled = False
                .PanelEx7.Enabled = False
                .PanelEx11.Enabled = False
                .PanelEx12.Enabled = False
                If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
                Else
                    .btnAttach.Enabled = True
                End If

                .CbxPrefix_C1.Text = vPrefix_C2
                .TxtFirstN_C1.Text = vFirstN_C2
                .TxtMiddleN_C1.Text = vMiddleN_C2
                .TxtLastN_C1.Text = vLastN_C2
                .cbxSuffix_C1.Text = vSuffix_C2
                .txtNoC_C1.Text = vNoC_C2
                .txtStreetC_C1.Text = vStreetC_C2
                .txtBarangayC_C1.Text = vBarangayC_C2
                .cbxAddressC_C1.Text = vAddressC_C2
                .txtNoP_C1.Text = vNoP_C2
                .txtStreetP_C1.Text = vStreetP_C2
                .txtBarangayP_C1.Text = vBarangayP_C2
                .cbxAddressP_C1.Text = vAddressP_C2
                If vBirth_C2 = "" Then
                    .DtpBirth_C1.CustomFormat = ""
                Else
                    .DtpBirth_C1.CustomFormat = "MMMM dd, yyyy"
                    .DtpBirth_C1.Text = vBirth_C2
                End If
                .cbxPlaceBirth_C1.Text = vPlaceBirth_C2
                .cbxMale_C1.Checked = vMale_C2
                .cbxFemale_C1.Checked = vFemale_C2
                .cbxSingle_C1.Checked = vSingle_C2
                .cbxMarried_C1.Checked = vMarried_C2
                .cbxSeparated_C1.Checked = vSeparated_C2
                .cbxWidowed_C1.Checked = vWidowed_C2
                .txtCitizenship_C1.Text = vCitizenship_C2
                .txtTIN_C1.Text = vTIN_C2
                .txtTelephone_C1.Text = vTelephone_C2
                .txtSSS_C1.Text = vSSS_C2
                .txtMobile_C1.Text = vMobile_C2
                .txtEmail_C1.Text = vEmail_C2
                .cbxOwned_C1.Checked = vOwned_C2
                .cbxFree_C1.Checked = vFree_C2
                .cbxRented_C1.Checked = vRented_C2
                .dRent_C1.Value = vRent_C2
                .cbxRelationship_C1.Text = vRelationship_C2
                .pb_C1.Image = CoMaker2.Image.Clone
                .txtPath_C1.Text = "CoMaker2.jpg"
                .cbxEmployer_C1.Text = vEmployer_C2
                .txtEmployerAddress_C1.Text = vEmpAddress_C2
                .txtEmployerTelephone_C1.Text = vEmpTelephone_C2
                .cbxPosition_C1.Text = vPosition_C2
                .cbxCasual_C1.Checked = vCasual_C2
                .cbxTemporary_C1.Checked = vTemporary_C2
                .cbxPermanent_C1.Checked = vPermanent_C2
                If vHired_C2 = "" Then
                    .dtpHired_C1.CustomFormat = ""
                Else
                    .dtpHired_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpHired_C1.Text = vHired_C2
                End If
                .cbxYearHired_C1.Checked = vYearHired_C2
                .txtSupervisor_C1.Text = vSupervisor_C2
                .dMonthly_C1.Value = vSalary_C2
                .txtBusinessName_C1.Text = vBusinessName_C2
                .txtBusinessAddress_C1.Text = vBusinessAddress_C2
                .txtBusinessTelephone_C1.Text = vBusinessTelephone_C2
                .cbxNatureBusiness_C1.Text = vNatureBusiness_C2
                .iYrsOperation_C1.Value = vYrsOperation_C2
                .dBusinessIncome_C1.Value = vBusinessIncome_C2
                .iNoEmployees_C1.Value = vNoEmployees_C2
                .dCapital_C1.Value = vCapital_C2
                .txtArea_C1.Text = vArea_C2
                If vExpiry_C2 = "" Then
                    .dtpExpiry_C1.CustomFormat = ""
                Else
                    .dtpExpiry_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpExpiry_C1.Text = vExpiry_C2
                End If
                .iOutlet_C1.Value = vOutlet_C2
                .txtOtherIncome_C1.Text = vOtherIncome_C2
                .dOtherIncome_C1.Value = vOtherIncomeD_C2
                .TotalImage = TotalImageC2

                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************
                .txtCreditor_1.Text = vCreditor_1_C2
                .txtCreditAddress_1.Text = vCreditAddress_1_C2
                If vCreditGranted_1_C2 = "" Then
                    .dtpCreditGranted_1.CustomFormat = ""
                Else
                    .dtpCreditGranted_1.CustomFormat = "MMM. dd, yyyy"
                    .dtpCreditGranted_1.Value = vCreditGranted_1_C2
                End If
                .iTerm_1.Value = vTerm_1_C2
                .dAmountGranted_1.Value = vAmountGranted_1_C2
                .dBalance_1.Value = vBalance_1_C2
                .dCreditPayment_1.Value = vCreditPayment_1_C2
                .txtCreditRemarks_1.Text = vCreditRemarks_1_C2
                .txtCreditor_2.Text = vCreditor_2_C2
                .txtCreditAddress_2.Text = vCreditAddress_2_C2
                If vCreditGranted_2_C2 = "" Then
                    .dtpCreditGranted_2.CustomFormat = ""
                Else
                    .dtpCreditGranted_2.CustomFormat = "MMM. dd, yyyy"
                    .dtpCreditGranted_2.Value = vCreditGranted_2_C2
                End If
                .iTerm_2.Value = vTerm_2_C2
                .dAmountGranted_2.Value = vAmountGranted_2_C2
                .dBalance_2.Value = vBalance_2_C2
                .dCreditPayment_2.Value = vCreditPayment_2_C2
                .txtCreditRemarks_2.Text = vCreditRemarks_2_C2
                .txtBank_1.Text = vBank_1_C2
                .txtBranch_1.Text = vBranch_1_C2
                If vAccountT_1_C2 = "SA" Then
                    .cbxSA_1.Checked = True
                ElseIf vAccountT_1_C2 = "CA" Then
                    .cbxCA_1.Checked = True
                End If
                .txtSA_1.Text = vSA_1_C2
                .dAverageBalance_1.Value = vAverageBalance_1_C2
                .txtOpened_1.Text = vOpened_1_C2
                .txtBank_2.Text = vBank_2_C2
                .txtBranch_2.Text = vBranch_2_C2
                If vAccountT_2_C2 = "SA" Then
                    .cbxSA_2.Checked = True
                ElseIf vAccountT_2_C2 = "CA" Then
                    .cbxCA_2.Checked = True
                End If
                .txtSA_2.Text = vSA_2_C2
                .dAverageBalance_2.Value = vAverageBalance_2_C2
                .txtOpened_2.Text = vOpened_2_C2
                If vCreditRating_C2 = "GOOD" Then
                    .cbxGood.Checked = True
                ElseIf vCreditRating_C2 = "FAIR" Then
                    .cbxFair.Checked = True
                ElseIf vCreditRating_C2 = "POOR" Then
                    .cbxPoor.Checked = True
                End If
                .rRecommendation.Text = vRec_Remarks_C2
                .txtTitle.Text = vTitle_C2
                .txtCaseNum.Text = vCaseNum_C2
                If vDateFilled_C2 = "" Then
                    .dtpDateFilled.CustomFormat = ""
                Else
                    .dtpDateFilled.CustomFormat = "MMM. dd, yyyy"
                    .dtpDateFilled.Value = vDateFilled_C2
                End If
                .cbxCourt.Text = vCourt_C2
                .cbxCaseNature.Text = vCaseNature_C2
                .dAmountInvolved.Value = vAmountInvolved_C2
                .cbxCaseStatus.Text = vCaseStatus_C2
                .txtFindings.Text = vFindings_C2
                If vFindingsStat_C2 = "Positive" Then
                    .cbxPositive.Checked = True
                ElseIf vFindingsStat_C2 = "Negative" Then
                    .cbxNegative.Checked = True
                ElseIf vFindingsStat_C2 = "Unestablished" Then
                    .cbxUnestablished.Checked = True
                End If
                .txtCACPI.Text = vCACPI_C2
                .txtLocation_1.Text = vLocation_1_C2
                .txtTCT_1.Text = vTCT_1_C2
                .dArea_1.Value = vArea_1_C2
                .txtPropertiesRemarks_1.Text = vPropertiesRemarks_1_C2
                .txtLocation_2.Text = vLocation_2_C2
                .txtTCT_2.Text = vTCT_2_C2
                .dArea_2.Value = vArea_2_C2
                .txtPropertiesRemarks_2.Text = vPropertiesRemarks_2_C2
                .txtVehicle_1.Text = vVehicle_1_C2
                .dtpYear_1.Text = vYear_1_C2
                .txtWhomAcquired_1.Text = vWhomAcquired_1_C2
                .txtVehicleRemarks_1.Text = vVehicleRemarks_1_C2
                .txtVehicle_2.Text = vVehicle_2_C2
                .dtpYear_2.Text = vYear_2_C2
                .txtWhomAcquired_2.Text = vWhomAcquired_2_C2
                .txtVehicleRemarks_2.Text = vVehicleRemarks_2_C2
                .txtOtherProperties.Text = vOtherProperties_C2
                .rNarrative.Text = vNarrative_C2
                .txtC1.Text = vC1_C2
                .txtC2.Text = vC2_C2
                .txtC3.Text = vC3_C2
                .txtC4.Text = vC4_C2
                .txtC5.Text = vC5_C2
                .txtC6.Text = vC6_C2
                .txtC7.Text = vC7_C2
                .txtC8.Text = vC8_C2
                .txtC9.Text = vC9_C2
                .dTotalDisposable.Value = vEx_TotalDisposable_C2
                .dLiving.Value = vEx_Living_C2
                .dClothing.Value = vEx_Clothing_C2
                .dEducation.Value = vEx_Education_C2
                .dTransportation.Value = vEx_Transportation_C2
                .dLighths.Value = vEx_Lights_C2
                .dInsurance.Value = vEx_Insurance_C2
                .dAmortization.Value = vEx_Amortization_C2
                .dMiscellaneous.Value = vEx_Miscellaneous_C2
                .dTotalExpenses.Value = vEx_TotalExpenses_C2
                .dNetDisposable.Value = vEx_NetDisposable_C2
                .dTMFI.Value = vEx_TMFI_C2
                .dTMDI.Value = vEx_TMDI_C2
                .txtExpenseRemarks.Text = vEx_Remarks_C2
                .rPurposeLoan.Text = vPurposeLoan_C2
                .rOthers.Text = vOthers_C2

                Try
                    Using TempPB As New DevExpress.XtraEditors.PictureEdit
                        TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Branch_Code, CreditNumber, "Sketch C2.jpg"))
                        ResizeImages(TempPB.Image.Clone, .pbSketch, 850, 700)
                    End Using
                Catch ex As Exception
                    .pbSketch.Image = DefaultMap.Image.Clone
                End Try
                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************

                '*********** T A G S **************
                .CbxPrefix_C1.Tag = vPrefix_C2
                .TxtFirstN_C1.Tag = vFirstN_C2
                .TxtMiddleN_C1.Tag = vMiddleN_C2
                .TxtLastN_C1.Tag = vLastN_C2
                .cbxSuffix_C1.Tag = vSuffix_C2
                .txtNoC_C1.Tag = vNoC_C2
                .txtStreetC_C1.Tag = vStreetC_C2
                .txtBarangayC_C1.Tag = vBarangayC_C2
                .cbxAddressC_C1.Tag = vAddressC_C2
                .txtNoP_C1.Tag = vNoP_C2
                .txtStreetP_C1.Tag = vStreetP_C2
                .txtBarangayP_C1.Tag = vBarangayP_C2
                .cbxAddressP_C1.Tag = vAddressP_C2
                .DtpBirth_C1.Tag = If(vBirth_C2 = "", "", Format(CDate(vBirth_C2), "yyyy-MM-dd"))
                .cbxPlaceBirth_C1.Tag = vPlaceBirth_C2
                .cbxMale_C1.Tag = If(vMale_C2, "Male", If(vFemale_C2, "Female", ""))
                .cbxFemale_C1.Tag = If(vMale_C2, "Male", If(vFemale_C2, "Female", ""))
                .cbxSingle_C1.Tag = If(vSingle_C2, "Single", If(vMarried_C2, "Married", If(vSeparated_C2, "Separated", If(vWidowed_C2, "Widowed", ""))))
                .cbxMarried_C1.Tag = If(vSingle_C2, "Single", If(vMarried_C2, "Married", If(vSeparated_C2, "Separated", If(vWidowed_C2, "Widowed", ""))))
                .cbxSeparated_C1.Tag = If(vSingle_C2, "Single", If(vMarried_C2, "Married", If(vSeparated_C2, "Separated", If(vWidowed_C2, "Widowed", ""))))
                .cbxWidowed_C1.Tag = If(vSingle_C2, "Single", If(vMarried_C2, "Married", If(vSeparated_C2, "Separated", If(vWidowed_C2, "Widowed", ""))))
                .txtCitizenship_C1.Tag = vCitizenship_C2
                .txtTIN_C1.Tag = vTIN_C2
                .txtTelephone_C1.Tag = vTelephone_C2
                .txtSSS_C1.Tag = vSSS_C2
                .txtMobile_C1.Tag = vMobile_C2
                .txtEmail_C1.Tag = vEmail_C2
                .cbxOwned_C1.Tag = If(vOwned_C2, "Owned", If(vFree_C2, "Free", If(vRented_C2, "Rented", "")))
                .cbxFree_C1.Tag = If(vOwned_C2, "Owned", If(vFree_C2, "Free", If(vRented_C2, "Rented", "")))
                .cbxRented_C1.Tag = If(vOwned_C2, "Owned", If(vFree_C2, "Free", If(vRented_C2, "Rented", "")))
                .dRent_C1.Tag = vRent_C2
                .cbxRelationship_C1.Tag = vRelationship_C2
                .cbxEmployer_C1.Tag = vEmployer_C2
                .txtEmployerAddress_C1.Tag = vEmpAddress_C2
                .txtEmployerTelephone_C1.Tag = vEmpTelephone_C2
                .cbxPosition_C1.Tag = vPosition_C2
                .cbxCasual_C1.Tag = If(vCasual_C2, "Casual", If(vTemporary_C2, "Temporary", If(vPermanent_C2, "Permanent", "")))
                .cbxTemporary_C1.Tag = If(vCasual_C2, "Casual", If(vTemporary_C2, "Temporary", If(vPermanent_C2, "Permanent", "")))
                .cbxPermanent_C1.Tag = If(vCasual_C2, "Casual", If(vTemporary_C2, "Temporary", If(vPermanent_C2, "Permanent", "")))
                .dtpHired_C1.Tag = If(vHired_C2 = "", "", Format(CDate(vHired_C2), "yyyy-MM-dd"))
                .txtSupervisor_C1.Tag = vSupervisor_C2
                .dMonthly_C1.Tag = vSalary_C2
                .txtBusinessName_C1.Tag = vBusinessName_C2
                .txtBusinessAddress_C1.Tag = vBusinessAddress_C2
                .txtBusinessTelephone_C1.Tag = vBusinessTelephone_C2
                .cbxNatureBusiness_C1.Tag = vNatureBusiness_C2
                .iYrsOperation_C1.Tag = vYrsOperation_C2
                .dBusinessIncome_C1.Tag = vBusinessIncome_C2
                .iNoEmployees_C1.Tag = vNoEmployees_C2
                .dCapital_C1.Tag = vCapital_C2
                .txtArea_C1.Tag = vArea_C2
                .dtpExpiry_C1.Tag = If(vExpiry_C2 = "", "", Format(CDate(vExpiry_C2), "yyyy-MM-dd"))
                .iOutlet_C1.Tag = vOutlet_C2
                .txtOtherIncome_C1.Tag = vOtherIncome_C2
                .dOtherIncome_C1.Tag = vOtherIncomeD_C2

                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************
                .txtCreditor_1.Tag = vCreditor_1_C2
                .txtCreditAddress_1.Tag = vCreditAddress_1_C2
                .dtpCreditGranted_1.Tag = vCreditGranted_1_C2
                .iTerm_1.Tag = vTerm_1_C2
                .dAmountGranted_1.Tag = vAmountGranted_1_C2
                .dBalance_1.Tag = vBalance_1_C2
                .dCreditPayment_1.Tag = vCreditPayment_1_C2
                .txtCreditRemarks_1.Tag = vCreditRemarks_1_C2
                .txtCreditor_2.Tag = vCreditor_2_C2
                .txtCreditAddress_2.Tag = vCreditAddress_2_C2
                .dtpCreditGranted_2.Tag = vCreditGranted_2_C2
                .iTerm_2.Tag = vTerm_2_C2
                .dAmountGranted_2.Tag = vAmountGranted_2_C2
                .dBalance_2.Tag = vBalance_2_C2
                .dCreditPayment_2.Tag = vCreditPayment_2_C2
                .txtCreditRemarks_2.Tag = vCreditRemarks_2_C2
                .txtBank_1.Tag = vBank_1_C2
                .txtBranch_1.Tag = vBranch_1_C2
                .cbxSA_1.Tag = vAccountT_1_C2
                .cbxCA_1.Tag = vAccountT_1_C2
                .txtSA_1.Tag = vSA_1_C2
                .dAverageBalance_1.Tag = vAverageBalance_1_C2
                .txtOpened_1.Tag = vOpened_1_C2
                .txtBank_2.Tag = vBank_2_C2
                .txtBranch_2.Tag = vBranch_2_C2
                .cbxSA_2.Tag = vAccountT_2_C2
                .cbxCA_2.Tag = vAccountT_2_C2
                .txtSA_2.Tag = vSA_2_C2
                .dAverageBalance_2.Tag = vAverageBalance_2_C2
                .txtOpened_2.Tag = vOpened_2_C2
                .cbxGood.Tag = vCreditRating_C2
                .cbxFair.Tag = vCreditRating_C2
                .cbxPoor.Tag = vCreditRating_C2
                .rRecommendation.Tag = vRec_Remarks_C2
                .txtTitle.Tag = vTitle_C2
                .txtCaseNum.Tag = vCaseNum_C2
                .dtpDateFilled.Tag = vDateFilled_C2
                .cbxCourt.Tag = vCourt_C2
                .cbxCaseNature.Tag = vCaseNature_C2
                .dAmountInvolved.Tag = vAmountInvolved_C2
                .cbxCaseStatus.Tag = vCaseStatus_C2
                .txtFindings.Tag = vFindings_C2
                .cbxPositive.Tag = vFindingsStat_C2
                .cbxNegative.Tag = vFindingsStat_C2
                .cbxUnestablished.Tag = vFindingsStat_C2
                .txtCACPI.Tag = vCACPI_C2
                .txtLocation_1.Tag = vLocation_1_C2
                .txtTCT_1.Tag = vTCT_1_C2
                .dArea_1.Tag = vArea_1_C2
                .txtPropertiesRemarks_1.Tag = vPropertiesRemarks_1_C2
                .txtLocation_2.Tag = vLocation_2_C2
                .txtTCT_2.Tag = vTCT_2_C2
                .dArea_2.Tag = vArea_2_C2
                .txtPropertiesRemarks_2.Tag = vPropertiesRemarks_2_C2
                .txtVehicle_1.Tag = vVehicle_1_C2
                .dtpYear_1.Tag = vYear_1_C2
                .txtWhomAcquired_1.Tag = vWhomAcquired_1_C2
                .txtVehicleRemarks_1.Tag = vVehicleRemarks_1_C2
                .txtVehicle_2.Tag = vVehicle_2_C2
                .dtpYear_2.Tag = vYear_2_C2
                .txtWhomAcquired_2.Tag = vWhomAcquired_2_C2
                .txtVehicleRemarks_2.Tag = vVehicleRemarks_2_C2
                .txtOtherProperties.Tag = vOtherProperties_C2
                .rNarrative.Tag = vNarrative_C2
                .txtC1.Tag = vC1_C2
                .txtC2.Tag = vC2_C2
                .txtC3.Tag = vC3_C2
                .txtC4.Tag = vC4_C2
                .txtC5.Tag = vC5_C2
                .txtC6.Tag = vC6_C2
                .txtC7.Tag = vC7_C2
                .txtC8.Tag = vC8_C2
                .txtC9.Tag = vC9_C2
                .dTotalDisposable.Tag = vEx_TotalDisposable_C2
                .dLiving.Tag = vEx_TotalDisposable_C2
                .dClothing.Tag = vEx_Clothing_C2
                .dEducation.Tag = vEx_Education_C2
                .dTransportation.Tag = vEx_Transportation_C2
                .dLighths.Tag = vEx_Lights_C2
                .dInsurance.Tag = vEx_Insurance_C2
                .dAmortization.Tag = vEx_Amortization_C2
                .dMiscellaneous.Tag = vEx_Miscellaneous_C2
                .dTotalExpenses.Tag = vEx_TotalExpenses_C2
                .dNetDisposable.Tag = vEx_NetDisposable_C2
                .dTMFI.Tag = vEx_TMFI_C2
                .dTMDI.Tag = vEx_TMDI_C2
                .txtExpenseRemarks.Tag = vEx_Remarks_C2
                .rPurposeLoan.Tag = vPurposeLoan_C2
                .rOthers.Tag = vOthers_C2
                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************
            End If
            Dim Result = .ShowDialog
            If Result = DialogResult.OK Then
                'Delete File CoMaker
                Try
                    Dim xPath As String = String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, CreditNumber, "CoMaker2.jpg")
                    If IO.File.Exists(xPath) Then
                        IO.File.Delete(xPath)
                        If CoMakerShift Then
                            If IO.File.Exists(xPath.Replace("CoMaker2", "CoMaker3")) Then
                                Rename(xPath.Replace("CoMaker2.jpg", "CoMaker3.jpg"), xPath)
                            End If
                            CoMaker2.Image = CoMaker3.Image.Clone
                            xPath = xPath.Replace("CoMaker2", "CoMaker3")

                            If IO.File.Exists(xPath.Replace("CoMaker3", "CoMaker4")) Then
                                Rename(xPath.Replace("CoMaker3.jpg", "CoMaker4.jpg"), xPath)
                            End If
                            CoMaker3.Image = CoMaker4.Image.Clone
                        End If
                    End If
                Catch ex As Exception
                    TriggerBugReport("Credit Investigation - CM Click", ex.Message.ToString)
                End Try
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnCM_3_Click(sender As Object, e As EventArgs) Handles btnCM_3.Click
        If TxtFirstN_B.Enabled = False And cbxApplication.Enabled = True Then
            MsgBox("Please select an application first.", MsgBoxStyle.Information, "Info")
            cbxApplication.DroppedDown = True
            cbxApplication.Focus()
            Exit Sub
        End If
        If TxtFirstN_C2.Text = "" Then
            MsgBox("Please add CoMaker 2 first before adding CoMaker 3.", MsgBoxStyle.Information, "Info")
            btnCM_2.Focus()
            Exit Sub
        End If

        Dim CoMaker As New FrmCoMaker
        With CoMaker
            .tabCI.Visible = True
            .FromCreditApplication = False
            .BorrowerID = BorrowerID
            .BorrowerName = If(CbxPrefix_B.Text = "", "", CbxPrefix_B.Text & " ") & If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & If(cbxSuffix_B.Text = "", "", cbxSuffix_B.Text)
            .CreditNumber = CreditNumber
            .AmountApplied = AmountApplied
            .CINumber = txtCINumber.Text
            .Rank = 3
            .CoMakerID_1 = CoMakerID
            .vSave = vSave
            .vUpdate = vUpdate
            .vDelete = vDelete
            .vPrint = vPrint
            If TxtFirstN_C3.Text = "" Then
                .btnDelete.Enabled = False
                .btnModify.Enabled = False
            Else
                .PanelEx6.Enabled = False
                .PanelEx9.Enabled = False
                .PanelEx7.Enabled = False
                .PanelEx11.Enabled = False
                .PanelEx12.Enabled = False
                If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
                Else
                    .btnAttach.Enabled = True
                End If

                .CbxPrefix_C1.Text = vPrefix_C3
                .TxtFirstN_C1.Text = vFirstN_C3
                .TxtMiddleN_C1.Text = vMiddleN_C3
                .TxtLastN_C1.Text = vLastN_C3
                .cbxSuffix_C1.Text = vSuffix_C3
                .txtNoC_C1.Text = vNoC_C3
                .txtStreetC_C1.Text = vStreetC_C3
                .txtBarangayC_C1.Text = vBarangayC_C3
                .cbxAddressC_C1.Text = vAddressC_C3
                .txtNoP_C1.Text = vNoP_C3
                .txtStreetP_C1.Text = vStreetP_C3
                .txtBarangayP_C1.Text = vBarangayP_C3
                .cbxAddressP_C1.Text = vAddressP_C3
                If vBirth_C3 = "" Then
                    .DtpBirth_C1.CustomFormat = ""
                Else
                    .DtpBirth_C1.CustomFormat = "MMMM dd, yyyy"
                    .DtpBirth_C1.Text = vBirth_C3
                End If
                .cbxPlaceBirth_C1.Text = vPlaceBirth_C3
                .cbxMale_C1.Checked = vMale_C3
                .cbxFemale_C1.Checked = vFemale_C3
                .cbxSingle_C1.Checked = vSingle_C3
                .cbxMarried_C1.Checked = vMarried_C3
                .cbxSeparated_C1.Checked = vSeparated_C3
                .cbxWidowed_C1.Checked = vWidowed_C3
                .txtCitizenship_C1.Text = vCitizenship_C3
                .txtTIN_C1.Text = vTIN_C3
                .txtTelephone_C1.Text = vTelephone_C3
                .txtSSS_C1.Text = vSSS_C3
                .txtMobile_C1.Text = vMobile_C3
                .txtEmail_C1.Text = vEmail_C3
                .cbxOwned_C1.Checked = vOwned_C3
                .cbxFree_C1.Checked = vFree_C3
                .cbxRented_C1.Checked = vRented_C3
                .dRent_C1.Value = vRent_C3
                .cbxRelationship_C1.Text = vRelationship_C3
                .pb_C1.Image = CoMaker3.Image.Clone
                .txtPath_C1.Text = "CoMaker3.jpg"
                .cbxEmployer_C1.Text = vEmployer_C3
                .txtEmployerAddress_C1.Text = vEmpAddress_C3
                .txtEmployerTelephone_C1.Text = vEmpTelephone_C3
                .cbxPosition_C1.Text = vPosition_C3
                .cbxCasual_C1.Checked = vCasual_C3
                .cbxTemporary_C1.Checked = vTemporary_C3
                .cbxPermanent_C1.Checked = vPermanent_C3
                If vHired_C3 = "" Then
                    .dtpHired_C1.CustomFormat = ""
                Else
                    .dtpHired_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpHired_C1.Text = vHired_C3
                End If
                .cbxYearHired_C1.Checked = vYearHired_C3
                .txtSupervisor_C1.Text = vSupervisor_C3
                .dMonthly_C1.Value = vSalary_C3
                .txtBusinessName_C1.Text = vBusinessName_C3
                .txtBusinessAddress_C1.Text = vBusinessAddress_C3
                .txtBusinessTelephone_C1.Text = vBusinessTelephone_C3
                .cbxNatureBusiness_C1.Text = vNatureBusiness_C3
                .iYrsOperation_C1.Value = vYrsOperation_C3
                .dBusinessIncome_C1.Value = vBusinessIncome_C3
                .iNoEmployees_C1.Value = vNoEmployees_C3
                .dCapital_C1.Value = vCapital_C3
                .txtArea_C1.Text = vArea_C3
                If vExpiry_C3 = "" Then
                    .dtpExpiry_C1.CustomFormat = ""
                Else
                    .dtpExpiry_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpExpiry_C1.Text = vExpiry_C3
                End If
                .iOutlet_C1.Value = vOutlet_C3
                .txtOtherIncome_C1.Text = vOtherIncome_C3
                .dOtherIncome_C1.Value = vOtherIncomeD_C3
                .TotalImage = TotalImageC3

                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************
                .txtCreditor_1.Text = vCreditor_1_C3
                .txtCreditAddress_1.Text = vCreditAddress_1_C3
                If vCreditGranted_1_C3 = "" Then
                    .dtpCreditGranted_1.CustomFormat = ""
                Else
                    .dtpCreditGranted_1.CustomFormat = "MMM. dd, yyyy"
                    .dtpCreditGranted_1.Value = vCreditGranted_1_C3
                End If
                .iTerm_1.Value = vTerm_1_C3
                .dAmountGranted_1.Value = vAmountGranted_1_C3
                .dBalance_1.Value = vBalance_1_C3
                .dCreditPayment_1.Value = vCreditPayment_1_C3
                .txtCreditRemarks_1.Text = vCreditRemarks_1_C3
                .txtCreditor_2.Text = vCreditor_2_C3
                .txtCreditAddress_2.Text = vCreditAddress_2_C3
                If vCreditGranted_2_C3 = "" Then
                    .dtpCreditGranted_2.CustomFormat = ""
                Else
                    .dtpCreditGranted_2.CustomFormat = "MMM. dd, yyyy"
                    .dtpCreditGranted_2.Value = vCreditGranted_2_C3
                End If
                .iTerm_2.Value = vTerm_2_C3
                .dAmountGranted_2.Value = vAmountGranted_2_C3
                .dBalance_2.Value = vBalance_2_C3
                .dCreditPayment_2.Value = vCreditPayment_2_C3
                .txtCreditRemarks_2.Text = vCreditRemarks_2_C3
                .txtBank_1.Text = vBank_1_C3
                .txtBranch_1.Text = vBranch_1_C3
                If vAccountT_1_C3 = "SA" Then
                    .cbxSA_1.Checked = True
                ElseIf vAccountT_1_C3 = "CA" Then
                    .cbxCA_1.Checked = True
                End If
                .txtSA_1.Text = vSA_1_C3
                .dAverageBalance_1.Value = vAverageBalance_1_C3
                .txtOpened_1.Text = vOpened_1_C3
                .txtBank_2.Text = vBank_2_C3
                .txtBranch_2.Text = vBranch_2_C3
                If vAccountT_2_C3 = "SA" Then
                    .cbxSA_2.Checked = True
                ElseIf vAccountT_2_C3 = "CA" Then
                    .cbxCA_2.Checked = True
                End If
                .txtSA_2.Text = vSA_2_C3
                .dAverageBalance_2.Value = vAverageBalance_2_C3
                .txtOpened_2.Text = vOpened_2_C3
                If vCreditRating_C3 = "GOOD" Then
                    .cbxGood.Checked = True
                ElseIf vCreditRating_C3 = "FAIR" Then
                    .cbxFair.Checked = True
                ElseIf vCreditRating_C3 = "POOR" Then
                    .cbxPoor.Checked = True
                End If
                .rRecommendation.Text = vRec_Remarks_C3
                .txtTitle.Text = vTitle_C3
                .txtCaseNum.Text = vCaseNum_C3
                If vDateFilled_C3 = "" Then
                    .dtpDateFilled.CustomFormat = ""
                Else
                    .dtpDateFilled.CustomFormat = "MMM. dd, yyyy"
                    .dtpDateFilled.Value = vDateFilled_C3
                End If
                .cbxCourt.Text = vCourt_C3
                .cbxCaseNature.Text = vCaseNature_C3
                .dAmountInvolved.Value = vAmountInvolved_C3
                .cbxCaseStatus.Text = vCaseStatus_C3
                .txtFindings.Text = vFindings_C3
                If vFindingsStat_C3 = "Positive" Then
                    .cbxPositive.Checked = True
                ElseIf vFindingsStat_C3 = "Negative" Then
                    .cbxNegative.Checked = True
                ElseIf vFindingsStat_C3 = "Unestablished" Then
                    .cbxUnestablished.Checked = True
                End If
                .txtCACPI.Text = vCACPI_C3
                .txtLocation_1.Text = vLocation_1_C3
                .txtTCT_1.Text = vTCT_1_C3
                .dArea_1.Value = vArea_1_C3
                .txtPropertiesRemarks_1.Text = vPropertiesRemarks_1_C3
                .txtLocation_2.Text = vLocation_2_C3
                .txtTCT_2.Text = vTCT_2_C3
                .dArea_2.Value = vArea_2_C3
                .txtPropertiesRemarks_2.Text = vPropertiesRemarks_2_C3
                .txtVehicle_1.Text = vVehicle_1_C3
                .dtpYear_1.Text = vYear_1_C3
                .txtWhomAcquired_1.Text = vWhomAcquired_1_C3
                .txtVehicleRemarks_1.Text = vVehicleRemarks_1_C3
                .txtVehicle_2.Text = vVehicle_2_C3
                .dtpYear_2.Text = vYear_2_C3
                .txtWhomAcquired_2.Text = vWhomAcquired_2_C3
                .txtVehicleRemarks_2.Text = vVehicleRemarks_2_C3
                .txtOtherProperties.Text = vOtherProperties_C3
                .rNarrative.Text = vNarrative_C3
                .txtC1.Text = vC1_C3
                .txtC2.Text = vC2_C3
                .txtC3.Text = vC3_C3
                .txtC4.Text = vC4_C3
                .txtC5.Text = vC5_C3
                .txtC6.Text = vC6_C3
                .txtC7.Text = vC7_C3
                .txtC8.Text = vC8_C3
                .txtC9.Text = vC9_C3
                .dTotalDisposable.Value = vEx_TotalDisposable_C3
                .dLiving.Value = vEx_Living_C3
                .dClothing.Value = vEx_Clothing_C3
                .dEducation.Value = vEx_Education_C3
                .dTransportation.Value = vEx_Transportation_C3
                .dLighths.Value = vEx_Lights_C3
                .dInsurance.Value = vEx_Insurance_C3
                .dAmortization.Value = vEx_Amortization_C3
                .dMiscellaneous.Value = vEx_Miscellaneous_C3
                .dTotalExpenses.Value = vEx_TotalExpenses_C3
                .dNetDisposable.Value = vEx_NetDisposable_C3
                .dTMFI.Value = vEx_TMFI_C3
                .dTMDI.Value = vEx_TMDI_C3
                .txtExpenseRemarks.Text = vEx_Remarks_C3
                .rPurposeLoan.Text = vPurposeLoan_C3
                .rOthers.Text = vOthers_C3

                Try
                    Using TempPB As New DevExpress.XtraEditors.PictureEdit
                        TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Branch_Code, CreditNumber, "Sketch C3.jpg"))
                        ResizeImages(TempPB.Image.Clone, .pbSketch, 850, 700)
                    End Using
                Catch ex As Exception
                    .pbSketch.Image = DefaultMap.Image.Clone
                End Try
                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************

                '*********** T A G S **************
                .CbxPrefix_C1.Tag = vPrefix_C3
                .TxtFirstN_C1.Tag = vFirstN_C3
                .TxtMiddleN_C1.Tag = vMiddleN_C3
                .TxtLastN_C1.Tag = vLastN_C3
                .cbxSuffix_C1.Tag = vSuffix_C3
                .txtNoC_C1.Tag = vNoC_C3
                .txtStreetC_C1.Tag = vStreetC_C3
                .txtBarangayC_C1.Tag = vBarangayC_C3
                .cbxAddressC_C1.Tag = vAddressC_C3
                .txtNoP_C1.Tag = vNoP_C3
                .txtStreetP_C1.Tag = vStreetP_C3
                .txtBarangayP_C1.Tag = vBarangayP_C3
                .cbxAddressP_C1.Tag = vAddressP_C3
                .DtpBirth_C1.Tag = If(vBirth_C3 = "", "", Format(CDate(vBirth_C3), "yyyy-MM-dd"))
                .cbxPlaceBirth_C1.Tag = vPlaceBirth_C3
                .cbxMale_C1.Tag = If(vMale_C3, "Male", If(vFemale_C3, "Female", ""))
                .cbxFemale_C1.Tag = If(vMale_C3, "Male", If(vFemale_C3, "Female", ""))
                .cbxSingle_C1.Tag = If(vSingle_C3, "Single", If(vMarried_C3, "Married", If(vSeparated_C3, "Separated", If(vWidowed_C3, "Widowed", ""))))
                .cbxMarried_C1.Tag = If(vSingle_C3, "Single", If(vMarried_C3, "Married", If(vSeparated_C3, "Separated", If(vWidowed_C3, "Widowed", ""))))
                .cbxSeparated_C1.Tag = If(vSingle_C3, "Single", If(vMarried_C3, "Married", If(vSeparated_C3, "Separated", If(vWidowed_C3, "Widowed", ""))))
                .cbxWidowed_C1.Tag = If(vSingle_C3, "Single", If(vMarried_C3, "Married", If(vSeparated_C3, "Separated", If(vWidowed_C3, "Widowed", ""))))
                .txtCitizenship_C1.Tag = vCitizenship_C3
                .txtTIN_C1.Tag = vTIN_C3
                .txtTelephone_C1.Tag = vTelephone_C3
                .txtSSS_C1.Tag = vSSS_C3
                .txtMobile_C1.Tag = vMobile_C3
                .txtEmail_C1.Tag = vEmail_C3
                .cbxOwned_C1.Tag = If(vOwned_C3, "Owned", If(vFree_C3, "Free", If(vRented_C3, "Rented", "")))
                .cbxFree_C1.Tag = If(vOwned_C3, "Owned", If(vFree_C3, "Free", If(vRented_C3, "Rented", "")))
                .cbxRented_C1.Tag = If(vOwned_C3, "Owned", If(vFree_C3, "Free", If(vRented_C3, "Rented", "")))
                .dRent_C1.Tag = vRent_C3
                .cbxRelationship_C1.Tag = vRelationship_C3
                .cbxEmployer_C1.Tag = vEmployer_C3
                .txtEmployerAddress_C1.Tag = vEmpAddress_C3
                .txtEmployerTelephone_C1.Tag = vEmpTelephone_C3
                .cbxPosition_C1.Tag = vPosition_C3
                .cbxCasual_C1.Tag = If(vCasual_C3, "Casual", If(vTemporary_C3, "Temporary", If(vPermanent_C3, "Permanent", "")))
                .cbxTemporary_C1.Tag = If(vCasual_C3, "Casual", If(vTemporary_C3, "Temporary", If(vPermanent_C3, "Permanent", "")))
                .cbxPermanent_C1.Tag = If(vCasual_C3, "Casual", If(vTemporary_C3, "Temporary", If(vPermanent_C3, "Permanent", "")))
                .dtpHired_C1.Tag = If(vHired_C3 = "", "", Format(CDate(vHired_C3), "yyyy-MM-dd"))
                .txtSupervisor_C1.Tag = vSupervisor_C3
                .dMonthly_C1.Tag = vSalary_C3
                .txtBusinessName_C1.Tag = vBusinessName_C3
                .txtBusinessAddress_C1.Tag = vBusinessAddress_C3
                .txtBusinessTelephone_C1.Tag = vBusinessTelephone_C3
                .cbxNatureBusiness_C1.Tag = vNatureBusiness_C3
                .iYrsOperation_C1.Tag = vYrsOperation_C3
                .dBusinessIncome_C1.Tag = vBusinessIncome_C3
                .iNoEmployees_C1.Tag = vNoEmployees_C3
                .dCapital_C1.Tag = vCapital_C3
                .txtArea_C1.Tag = vArea_C3
                .dtpExpiry_C1.Tag = If(vExpiry_C3 = "", "", Format(CDate(vExpiry_C3), "yyyy-MM-dd"))
                .iOutlet_C1.Tag = vOutlet_C3
                .txtOtherIncome_C1.Tag = vOtherIncome_C3
                .dOtherIncome_C1.Tag = vOtherIncomeD_C3

                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************
                .txtCreditor_1.Tag = vCreditor_1_C3
                .txtCreditAddress_1.Tag = vCreditAddress_1_C3
                .dtpCreditGranted_1.Tag = vCreditGranted_1_C3
                .iTerm_1.Tag = vTerm_1_C3
                .dAmountGranted_1.Tag = vAmountGranted_1_C3
                .dBalance_1.Tag = vBalance_1_C3
                .dCreditPayment_1.Tag = vCreditPayment_1_C3
                .txtCreditRemarks_1.Tag = vCreditRemarks_1_C3
                .txtCreditor_2.Tag = vCreditor_2_C3
                .txtCreditAddress_2.Tag = vCreditAddress_2_C3
                .dtpCreditGranted_2.Tag = vCreditGranted_2_C3
                .iTerm_2.Tag = vTerm_2_C3
                .dAmountGranted_2.Tag = vAmountGranted_2_C3
                .dBalance_2.Tag = vBalance_2_C3
                .dCreditPayment_2.Tag = vCreditPayment_2_C3
                .txtCreditRemarks_2.Tag = vCreditRemarks_2_C3
                .txtBank_1.Tag = vBank_1_C3
                .txtBranch_1.Tag = vBranch_1_C3
                .cbxSA_1.Tag = vAccountT_1_C3
                .cbxCA_1.Tag = vAccountT_1_C3
                .txtSA_1.Tag = vSA_1_C3
                .dAverageBalance_1.Tag = vAverageBalance_1_C3
                .txtOpened_1.Tag = vOpened_1_C3
                .txtBank_2.Tag = vBank_2_C3
                .txtBranch_2.Tag = vBranch_2_C3
                .cbxSA_2.Tag = vAccountT_2_C3
                .cbxCA_2.Tag = vAccountT_2_C3
                .txtSA_2.Tag = vSA_2_C3
                .dAverageBalance_2.Tag = vAverageBalance_2_C3
                .txtOpened_2.Tag = vOpened_2_C3
                .cbxGood.Tag = vCreditRating_C3
                .cbxFair.Tag = vCreditRating_C3
                .cbxPoor.Tag = vCreditRating_C3
                .rRecommendation.Tag = vRec_Remarks_C3
                .txtTitle.Tag = vTitle_C3
                .txtCaseNum.Tag = vCaseNum_C3
                .dtpDateFilled.Tag = vDateFilled_C3
                .cbxCourt.Tag = vCourt_C3
                .cbxCaseNature.Tag = vCaseNature_C3
                .dAmountInvolved.Tag = vAmountInvolved_C3
                .cbxCaseStatus.Tag = vCaseStatus_C3
                .txtFindings.Tag = vFindings_C3
                .cbxPositive.Tag = vFindingsStat_C3
                .cbxNegative.Tag = vFindingsStat_C3
                .cbxUnestablished.Tag = vFindingsStat_C3
                .txtCACPI.Tag = vCACPI_C3
                .txtLocation_1.Tag = vLocation_1_C3
                .txtTCT_1.Tag = vTCT_1_C3
                .dArea_1.Tag = vArea_1_C3
                .txtPropertiesRemarks_1.Tag = vPropertiesRemarks_1_C3
                .txtLocation_2.Tag = vLocation_2_C3
                .txtTCT_2.Tag = vTCT_2_C3
                .dArea_2.Tag = vArea_2_C3
                .txtPropertiesRemarks_2.Tag = vPropertiesRemarks_2_C3
                .txtVehicle_1.Tag = vVehicle_1_C3
                .dtpYear_1.Tag = vYear_1_C3
                .txtWhomAcquired_1.Tag = vWhomAcquired_1_C3
                .txtVehicleRemarks_1.Tag = vVehicleRemarks_1_C3
                .txtVehicle_2.Tag = vVehicle_2_C3
                .dtpYear_2.Tag = vYear_2_C3
                .txtWhomAcquired_2.Tag = vWhomAcquired_2_C3
                .txtVehicleRemarks_2.Tag = vVehicleRemarks_2_C3
                .txtOtherProperties.Tag = vOtherProperties_C3
                .rNarrative.Tag = vNarrative_C3
                .txtC1.Tag = vC1_C3
                .txtC2.Tag = vC2_C3
                .txtC3.Tag = vC3_C3
                .txtC4.Tag = vC4_C3
                .txtC5.Tag = vC5_C3
                .txtC6.Tag = vC6_C3
                .txtC7.Tag = vC7_C3
                .txtC8.Tag = vC8_C3
                .txtC9.Tag = vC9_C3
                .dTotalDisposable.Tag = vEx_TotalDisposable_C3
                .dLiving.Tag = vEx_TotalDisposable_C3
                .dClothing.Tag = vEx_Clothing_C3
                .dEducation.Tag = vEx_Education_C3
                .dTransportation.Tag = vEx_Transportation_C3
                .dLighths.Tag = vEx_Lights_C3
                .dInsurance.Tag = vEx_Insurance_C3
                .dAmortization.Tag = vEx_Amortization_C3
                .dMiscellaneous.Tag = vEx_Miscellaneous_C3
                .dTotalExpenses.Tag = vEx_TotalExpenses_C3
                .dNetDisposable.Tag = vEx_NetDisposable_C3
                .dTMFI.Tag = vEx_TMFI_C3
                .dTMDI.Tag = vEx_TMDI_C3
                .txtExpenseRemarks.Tag = vEx_Remarks_C3
                .rPurposeLoan.Tag = vPurposeLoan_C3
                .rOthers.Tag = vOthers_C3
                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************
            End If
            Dim Result = .ShowDialog
            If Result = DialogResult.OK Then
                'Delete File CoMaker
                Try
                    Dim xPath As String = String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, CreditNumber, "CoMaker3.jpg")
                    If IO.File.Exists(xPath) Then
                        IO.File.Delete(xPath)
                        If CoMakerShift Then
                            If IO.File.Exists(xPath.Replace("CoMaker3", "CoMaker4")) Then
                                Rename(xPath.Replace("CoMaker3.jpg", "CoMaker4.jpg"), xPath)
                            End If
                            CoMaker3.Image = CoMaker4.Image.Clone
                        End If
                    End If
                Catch ex As Exception
                    TriggerBugReport("Credit Investigation - CM3 Click", ex.Message.ToString)
                End Try
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnCM_4_Click(sender As Object, e As EventArgs) Handles btnCM_4.Click
        If TxtFirstN_B.Enabled = False And cbxApplication.Enabled = True Then
            MsgBox("Please select an application first.", MsgBoxStyle.Information, "Info")
            cbxApplication.DroppedDown = True
            cbxApplication.Focus()
            Exit Sub
        End If
        If TxtFirstN_C3.Text = "" Then
            MsgBox("Please add CoMaker 3 first before adding CoMaker 3.", MsgBoxStyle.Information, "Info")
            btnCM_3.Focus()
            Exit Sub
        End If

        Dim CoMaker As New FrmCoMaker
        With CoMaker
            .tabCI.Visible = True
            .FromCreditApplication = False
            .BorrowerID = BorrowerID
            .BorrowerName = If(CbxPrefix_B.Text = "", "", CbxPrefix_B.Text & " ") & If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & If(cbxSuffix_B.Text = "", "", cbxSuffix_B.Text)
            .CreditNumber = CreditNumber
            .AmountApplied = AmountApplied
            .CINumber = txtCINumber.Text
            .Rank = 4
            .CoMakerID_1 = CoMakerID
            .vSave = vSave
            .vUpdate = vUpdate
            .vDelete = vDelete
            .vPrint = vPrint
            If TxtFirstN_C4.Text = "" Then
                .btnDelete.Enabled = False
                .btnModify.Enabled = False
            Else
                .PanelEx6.Enabled = False
                .PanelEx9.Enabled = False
                .PanelEx7.Enabled = False
                .PanelEx11.Enabled = False
                .PanelEx12.Enabled = False
                If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
                Else
                    .btnAttach.Enabled = True
                End If

                .CbxPrefix_C1.Text = vPrefix_C4
                .TxtFirstN_C1.Text = vFirstN_C4
                .TxtMiddleN_C1.Text = vMiddleN_C4
                .TxtLastN_C1.Text = vLastN_C4
                .cbxSuffix_C1.Text = vSuffix_C4
                .txtNoC_C1.Text = vNoC_C4
                .txtStreetC_C1.Text = vStreetC_C4
                .txtBarangayC_C1.Text = vBarangayC_C4
                .cbxAddressC_C1.Text = vAddressC_C4
                .txtNoP_C1.Text = vNoP_C4
                .txtStreetP_C1.Text = vStreetP_C4
                .txtBarangayP_C1.Text = vBarangayP_C4
                .cbxAddressP_C1.Text = vAddressP_C4
                If vBirth_C4 = "" Then
                    .DtpBirth_C1.CustomFormat = ""
                Else
                    .DtpBirth_C1.CustomFormat = "MMMM dd, yyyy"
                    .DtpBirth_C1.Text = vBirth_C4
                End If
                .cbxPlaceBirth_C1.Text = vPlaceBirth_C4
                .cbxMale_C1.Checked = vMale_C4
                .cbxFemale_C1.Checked = vFemale_C4
                .cbxSingle_C1.Checked = vSingle_C4
                .cbxMarried_C1.Checked = vMarried_C4
                .cbxSeparated_C1.Checked = vSeparated_C4
                .cbxWidowed_C1.Checked = vWidowed_C4
                .txtCitizenship_C1.Text = vCitizenship_C4
                .txtTIN_C1.Text = vTIN_C4
                .txtTelephone_C1.Text = vTelephone_C4
                .txtSSS_C1.Text = vSSS_C4
                .txtMobile_C1.Text = vMobile_C4
                .txtEmail_C1.Text = vEmail_C4
                .cbxOwned_C1.Checked = vOwned_C4
                .cbxFree_C1.Checked = vFree_C4
                .cbxRented_C1.Checked = vRented_C4
                .dRent_C1.Value = vRent_C4
                .cbxRelationship_C1.Text = vRelationship_C4
                .pb_C1.Image = CoMaker4.Image.Clone
                .txtPath_C1.Text = "CoMaker4.jpg"
                .cbxEmployer_C1.Text = vEmployer_C4
                .txtEmployerAddress_C1.Text = vEmpAddress_C4
                .txtEmployerTelephone_C1.Text = vEmpTelephone_C4
                .cbxPosition_C1.Text = vPosition_C4
                .cbxCasual_C1.Checked = vCasual_C4
                .cbxTemporary_C1.Checked = vTemporary_C4
                .cbxPermanent_C1.Checked = vPermanent_C4
                If vHired_C4 = "" Then
                    .dtpHired_C1.CustomFormat = ""
                Else
                    .dtpHired_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpHired_C1.Text = vHired_C4
                End If
                .cbxYearHired_C1.Checked = vYearHired_C4
                .txtSupervisor_C1.Text = vSupervisor_C4
                .dMonthly_C1.Value = vSalary_C4
                .txtBusinessName_C1.Text = vBusinessName_C4
                .txtBusinessAddress_C1.Text = vBusinessAddress_C4
                .txtBusinessTelephone_C1.Text = vBusinessTelephone_C4
                .cbxNatureBusiness_C1.Text = vNatureBusiness_C4
                .iYrsOperation_C1.Value = vYrsOperation_C4
                .dBusinessIncome_C1.Value = vBusinessIncome_C4
                .iNoEmployees_C1.Value = vNoEmployees_C4
                .dCapital_C1.Value = vCapital_C4
                .txtArea_C1.Text = vArea_C4
                If vExpiry_C4 = "" Then
                    .dtpExpiry_C1.CustomFormat = ""
                Else
                    .dtpExpiry_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpExpiry_C1.Text = vExpiry_C4
                End If
                .iOutlet_C1.Value = vOutlet_C4
                .txtOtherIncome_C1.Text = vOtherIncome_C4
                .dOtherIncome_C1.Value = vOtherIncomeD_C4
                .TotalImage = TotalImageC4

                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************
                .txtCreditor_1.Text = vCreditor_1_C4
                .txtCreditAddress_1.Text = vCreditAddress_1_C4
                If vCreditGranted_1_C4 = "" Then
                    .dtpCreditGranted_1.CustomFormat = ""
                Else
                    .dtpCreditGranted_1.CustomFormat = "MMM. dd, yyyy"
                    .dtpCreditGranted_1.Value = vCreditGranted_1_C4
                End If
                .iTerm_1.Value = vTerm_1_C4
                .dAmountGranted_1.Value = vAmountGranted_1_C4
                .dBalance_1.Value = vBalance_1_C4
                .dCreditPayment_1.Value = vCreditPayment_1_C4
                .txtCreditRemarks_1.Text = vCreditRemarks_1_C4
                .txtCreditor_2.Text = vCreditor_2_C4
                .txtCreditAddress_2.Text = vCreditAddress_2_C4
                If vCreditGranted_2_C4 = "" Then
                    .dtpCreditGranted_2.CustomFormat = ""
                Else
                    .dtpCreditGranted_2.CustomFormat = "MMM. dd, yyyy"
                    .dtpCreditGranted_2.Value = vCreditGranted_2_C4
                End If
                .iTerm_2.Value = vTerm_2_C4
                .dAmountGranted_2.Value = vAmountGranted_2_C4
                .dBalance_2.Value = vBalance_2_C4
                .dCreditPayment_2.Value = vCreditPayment_2_C4
                .txtCreditRemarks_2.Text = vCreditRemarks_2_C4
                .txtBank_1.Text = vBank_1_C4
                .txtBranch_1.Text = vBranch_1_C4
                If vAccountT_1_C4 = "SA" Then
                    .cbxSA_1.Checked = True
                ElseIf vAccountT_1_C4 = "CA" Then
                    .cbxCA_1.Checked = True
                End If
                .txtSA_1.Text = vSA_1_C4
                .dAverageBalance_1.Value = vAverageBalance_1_C4
                .txtOpened_1.Text = vOpened_1_C4
                .txtBank_2.Text = vBank_2_C4
                .txtBranch_2.Text = vBranch_2_C4
                If vAccountT_2_C4 = "SA" Then
                    .cbxSA_2.Checked = True
                ElseIf vAccountT_2_C4 = "CA" Then
                    .cbxCA_2.Checked = True
                End If
                .txtSA_2.Text = vSA_2_C4
                .dAverageBalance_2.Value = vAverageBalance_2_C4
                .txtOpened_2.Text = vOpened_2_C4
                If vCreditRating_C4 = "GOOD" Then
                    .cbxGood.Checked = True
                ElseIf vCreditRating_C4 = "FAIR" Then
                    .cbxFair.Checked = True
                ElseIf vCreditRating_C4 = "POOR" Then
                    .cbxPoor.Checked = True
                End If
                .rRecommendation.Text = vRec_Remarks_C4
                .txtTitle.Text = vTitle_C4
                .txtCaseNum.Text = vCaseNum_C4
                If vDateFilled_C4 = "" Then
                    .dtpDateFilled.CustomFormat = ""
                Else
                    .dtpDateFilled.CustomFormat = "MMM. dd, yyyy"
                    .dtpDateFilled.Value = vDateFilled_C4
                End If
                .cbxCourt.Text = vCourt_C4
                .cbxCaseNature.Text = vCaseNature_C4
                .dAmountInvolved.Value = vAmountInvolved_C4
                .cbxCaseStatus.Text = vCaseStatus_C4
                .txtFindings.Text = vFindings_C4
                If vFindingsStat_C4 = "Positive" Then
                    .cbxPositive.Checked = True
                ElseIf vFindingsStat_C4 = "Negative" Then
                    .cbxNegative.Checked = True
                ElseIf vFindingsStat_C4 = "Unestablished" Then
                    .cbxUnestablished.Checked = True
                End If
                .txtCACPI.Text = vCACPI_C4
                .txtLocation_1.Text = vLocation_1_C4
                .txtTCT_1.Text = vTCT_1_C4
                .dArea_1.Value = vArea_1_C4
                .txtPropertiesRemarks_1.Text = vPropertiesRemarks_1_C4
                .txtLocation_2.Text = vLocation_2_C4
                .txtTCT_2.Text = vTCT_2_C4
                .dArea_2.Value = vArea_2_C4
                .txtPropertiesRemarks_2.Text = vPropertiesRemarks_2_C4
                .txtVehicle_1.Text = vVehicle_1_C4
                .dtpYear_1.Text = vYear_1_C4
                .txtWhomAcquired_1.Text = vWhomAcquired_1_C4
                .txtVehicleRemarks_1.Text = vVehicleRemarks_1_C4
                .txtVehicle_2.Text = vVehicle_2_C4
                .dtpYear_2.Text = vYear_2_C4
                .txtWhomAcquired_2.Text = vWhomAcquired_2_C4
                .txtVehicleRemarks_2.Text = vVehicleRemarks_2_C4
                .txtOtherProperties.Text = vOtherProperties_C4
                .rNarrative.Text = vNarrative_C4
                .txtC1.Text = vC1_C4
                .txtC2.Text = vC2_C4
                .txtC3.Text = vC3_C4
                .txtC4.Text = vC4_C4
                .txtC5.Text = vC5_C4
                .txtC6.Text = vC6_C4
                .txtC7.Text = vC7_C4
                .txtC8.Text = vC8_C4
                .txtC9.Text = vC9_C4
                .dTotalDisposable.Value = vEx_TotalDisposable_C4
                .dLiving.Value = vEx_Living_C4
                .dClothing.Value = vEx_Clothing_C4
                .dEducation.Value = vEx_Education_C4
                .dTransportation.Value = vEx_Transportation_C4
                .dLighths.Value = vEx_Lights_C4
                .dInsurance.Value = vEx_Insurance_C4
                .dAmortization.Value = vEx_Amortization_C4
                .dMiscellaneous.Value = vEx_Miscellaneous_C4
                .dTotalExpenses.Value = vEx_TotalExpenses_C4
                .dNetDisposable.Value = vEx_NetDisposable_C4
                .dTMFI.Value = vEx_TMFI_C4
                .dTMDI.Value = vEx_TMDI_C4
                .txtExpenseRemarks.Text = vEx_Remarks_C4
                .rPurposeLoan.Text = vPurposeLoan_C4
                .rOthers.Text = vOthers_C4

                Try
                    Using TempPB As New DevExpress.XtraEditors.PictureEdit
                        TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Branch_Code, CreditNumber, "Sketch C4.jpg"))
                        ResizeImages(TempPB.Image.Clone, .pbSketch, 850, 700)
                    End Using
                Catch ex As Exception
                    .pbSketch.Image = DefaultMap.Image.Clone
                End Try
                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************

                '*********** T A G S **************
                .CbxPrefix_C1.Tag = vPrefix_C4
                .TxtFirstN_C1.Tag = vFirstN_C4
                .TxtMiddleN_C1.Tag = vMiddleN_C4
                .TxtLastN_C1.Tag = vLastN_C4
                .cbxSuffix_C1.Tag = vSuffix_C4
                .txtNoC_C1.Tag = vNoC_C4
                .txtStreetC_C1.Tag = vStreetC_C4
                .txtBarangayC_C1.Tag = vBarangayC_C4
                .cbxAddressC_C1.Tag = vAddressC_C4
                .txtNoP_C1.Tag = vNoP_C4
                .txtStreetP_C1.Tag = vStreetP_C4
                .txtBarangayP_C1.Tag = vBarangayP_C4
                .cbxAddressP_C1.Tag = vAddressP_C4
                .DtpBirth_C1.Tag = If(vBirth_C4 = "", "", Format(CDate(vBirth_C4), "yyyy-MM-dd"))
                .cbxPlaceBirth_C1.Tag = vPlaceBirth_C4
                .cbxMale_C1.Tag = If(vMale_C4, "Male", If(vFemale_C4, "Female", ""))
                .cbxFemale_C1.Tag = If(vMale_C4, "Male", If(vFemale_C4, "Female", ""))
                .cbxSingle_C1.Tag = If(vSingle_C4, "Single", If(vMarried_C4, "Married", If(vSeparated_C4, "Separated", If(vWidowed_C4, "Widowed", ""))))
                .cbxMarried_C1.Tag = If(vSingle_C4, "Single", If(vMarried_C4, "Married", If(vSeparated_C4, "Separated", If(vWidowed_C4, "Widowed", ""))))
                .cbxSeparated_C1.Tag = If(vSingle_C4, "Single", If(vMarried_C4, "Married", If(vSeparated_C4, "Separated", If(vWidowed_C4, "Widowed", ""))))
                .cbxWidowed_C1.Tag = If(vSingle_C4, "Single", If(vMarried_C4, "Married", If(vSeparated_C4, "Separated", If(vWidowed_C4, "Widowed", ""))))
                .txtCitizenship_C1.Tag = vCitizenship_C4
                .txtTIN_C1.Tag = vTIN_C4
                .txtTelephone_C1.Tag = vTelephone_C4
                .txtSSS_C1.Tag = vSSS_C4
                .txtMobile_C1.Tag = vMobile_C4
                .txtEmail_C1.Tag = vEmail_C4
                .cbxOwned_C1.Tag = If(vOwned_C4, "Owned", If(vFree_C4, "Free", If(vRented_C4, "Rented", "")))
                .cbxFree_C1.Tag = If(vOwned_C4, "Owned", If(vFree_C4, "Free", If(vRented_C4, "Rented", "")))
                .cbxRented_C1.Tag = If(vOwned_C4, "Owned", If(vFree_C4, "Free", If(vRented_C4, "Rented", "")))
                .dRent_C1.Tag = vRent_C4
                .cbxRelationship_C1.Tag = vRelationship_C4
                .cbxEmployer_C1.Tag = vEmployer_C4
                .txtEmployerAddress_C1.Tag = vEmpAddress_C4
                .txtEmployerTelephone_C1.Tag = vEmpTelephone_C4
                .cbxPosition_C1.Tag = vPosition_C4
                .cbxCasual_C1.Tag = If(vCasual_C4, "Casual", If(vTemporary_C4, "Temporary", If(vPermanent_C4, "Permanent", "")))
                .cbxTemporary_C1.Tag = If(vCasual_C4, "Casual", If(vTemporary_C4, "Temporary", If(vPermanent_C4, "Permanent", "")))
                .cbxPermanent_C1.Tag = If(vCasual_C4, "Casual", If(vTemporary_C4, "Temporary", If(vPermanent_C4, "Permanent", "")))
                .dtpHired_C1.Tag = If(vHired_C4 = "", "", Format(CDate(vHired_C4), "yyyy-MM-dd"))
                .txtSupervisor_C1.Tag = vSupervisor_C4
                .dMonthly_C1.Tag = vSalary_C4
                .txtBusinessName_C1.Tag = vBusinessName_C4
                .txtBusinessAddress_C1.Tag = vBusinessAddress_C4
                .txtBusinessTelephone_C1.Tag = vBusinessTelephone_C4
                .cbxNatureBusiness_C1.Tag = vNatureBusiness_C4
                .iYrsOperation_C1.Tag = vYrsOperation_C4
                .dBusinessIncome_C1.Tag = vBusinessIncome_C4
                .iNoEmployees_C1.Tag = vNoEmployees_C4
                .dCapital_C1.Tag = vCapital_C4
                .txtArea_C1.Tag = vArea_C4
                .dtpExpiry_C1.Tag = If(vExpiry_C4 = "", "", Format(CDate(vExpiry_C4), "yyyy-MM-dd"))
                .iOutlet_C1.Tag = vOutlet_C4
                .txtOtherIncome_C1.Tag = vOtherIncome_C4
                .dOtherIncome_C1.Tag = vOtherIncomeD_C4

                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************
                .txtCreditor_1.Tag = vCreditor_1_C4
                .txtCreditAddress_1.Tag = vCreditAddress_1_C4
                .dtpCreditGranted_1.Tag = vCreditGranted_1_C4
                .iTerm_1.Tag = vTerm_1_C4
                .dAmountGranted_1.Tag = vAmountGranted_1_C4
                .dBalance_1.Tag = vBalance_1_C4
                .dCreditPayment_1.Tag = vCreditPayment_1_C4
                .txtCreditRemarks_1.Tag = vCreditRemarks_1_C4
                .txtCreditor_2.Tag = vCreditor_2_C4
                .txtCreditAddress_2.Tag = vCreditAddress_2_C4
                .dtpCreditGranted_2.Tag = vCreditGranted_2_C4
                .iTerm_2.Tag = vTerm_2_C4
                .dAmountGranted_2.Tag = vAmountGranted_2_C4
                .dBalance_2.Tag = vBalance_2_C4
                .dCreditPayment_2.Tag = vCreditPayment_2_C4
                .txtCreditRemarks_2.Tag = vCreditRemarks_2_C4
                .txtBank_1.Tag = vBank_1_C4
                .txtBranch_1.Tag = vBranch_1_C4
                .cbxSA_1.Tag = vAccountT_1_C4
                .cbxCA_1.Tag = vAccountT_1_C4
                .txtSA_1.Tag = vSA_1_C4
                .dAverageBalance_1.Tag = vAverageBalance_1_C4
                .txtOpened_1.Tag = vOpened_1_C4
                .txtBank_2.Tag = vBank_2_C4
                .txtBranch_2.Tag = vBranch_2_C4
                .cbxSA_2.Tag = vAccountT_2_C4
                .cbxCA_2.Tag = vAccountT_2_C4
                .txtSA_2.Tag = vSA_2_C4
                .dAverageBalance_2.Tag = vAverageBalance_2_C4
                .txtOpened_2.Tag = vOpened_2_C4
                .cbxGood.Tag = vCreditRating_C4
                .cbxFair.Tag = vCreditRating_C4
                .cbxPoor.Tag = vCreditRating_C4
                .rRecommendation.Tag = vRec_Remarks_C4
                .txtTitle.Tag = vTitle_C4
                .txtCaseNum.Tag = vCaseNum_C4
                .dtpDateFilled.Tag = vDateFilled_C4
                .cbxCourt.Tag = vCourt_C4
                .cbxCaseNature.Tag = vCaseNature_C4
                .dAmountInvolved.Tag = vAmountInvolved_C4
                .cbxCaseStatus.Tag = vCaseStatus_C4
                .txtFindings.Tag = vFindings_C4
                .cbxPositive.Tag = vFindingsStat_C4
                .cbxNegative.Tag = vFindingsStat_C4
                .cbxUnestablished.Tag = vFindingsStat_C4
                .txtCACPI.Tag = vCACPI_C4
                .txtLocation_1.Tag = vLocation_1_C4
                .txtTCT_1.Tag = vTCT_1_C4
                .dArea_1.Tag = vArea_1_C4
                .txtPropertiesRemarks_1.Tag = vPropertiesRemarks_1_C4
                .txtLocation_2.Tag = vLocation_2_C4
                .txtTCT_2.Tag = vTCT_2_C4
                .dArea_2.Tag = vArea_2_C4
                .txtPropertiesRemarks_2.Tag = vPropertiesRemarks_2_C4
                .txtVehicle_1.Tag = vVehicle_1_C4
                .dtpYear_1.Tag = vYear_1_C4
                .txtWhomAcquired_1.Tag = vWhomAcquired_1_C4
                .txtVehicleRemarks_1.Tag = vVehicleRemarks_1_C4
                .txtVehicle_2.Tag = vVehicle_2_C4
                .dtpYear_2.Tag = vYear_2_C4
                .txtWhomAcquired_2.Tag = vWhomAcquired_2_C4
                .txtVehicleRemarks_2.Tag = vVehicleRemarks_2_C4
                .txtOtherProperties.Tag = vOtherProperties_C4
                .rNarrative.Tag = vNarrative_C4
                .txtC1.Tag = vC1_C4
                .txtC2.Tag = vC2_C4
                .txtC3.Tag = vC3_C4
                .txtC4.Tag = vC4_C4
                .txtC5.Tag = vC5_C4
                .txtC6.Tag = vC6_C4
                .txtC7.Tag = vC7_C4
                .txtC8.Tag = vC8_C4
                .txtC9.Tag = vC9_C4
                .dTotalDisposable.Tag = vEx_TotalDisposable_C4
                .dLiving.Tag = vEx_TotalDisposable_C4
                .dClothing.Tag = vEx_Clothing_C4
                .dEducation.Tag = vEx_Education_C4
                .dTransportation.Tag = vEx_Transportation_C4
                .dLighths.Tag = vEx_Lights_C4
                .dInsurance.Tag = vEx_Insurance_C4
                .dAmortization.Tag = vEx_Amortization_C4
                .dMiscellaneous.Tag = vEx_Miscellaneous_C4
                .dTotalExpenses.Tag = vEx_TotalExpenses_C4
                .dNetDisposable.Tag = vEx_NetDisposable_C4
                .dTMFI.Tag = vEx_TMFI_C4
                .dTMDI.Tag = vEx_TMDI_C4
                .txtExpenseRemarks.Tag = vEx_Remarks_C4
                .rPurposeLoan.Tag = vPurposeLoan_C4
                .rOthers.Tag = vOthers_C4
                'COMAKER CREDIT INVESTIGATION REPORT *****************************************************************************
            End If
            Dim Result = .ShowDialog
            If Result = DialogResult.OK Then
                'Delete File CoMaker
                Try
                    Dim xPath As String = String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, CreditNumber, "CoMaker4.jpg")
                    If IO.File.Exists(xPath) Then
                        IO.File.Delete(xPath)
                    End If
                Catch ex As Exception
                    TriggerBugReport("Credit Investigation - CM4 Click", ex.Message.ToString)
                End Try
            End If
            .Dispose()
        End With
    End Sub

    Private Sub CbxIncludeC1_CheckedChanged(sender As Object, e As EventArgs) Handles cbxIncludeC1.CheckedChanged
        dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + (dBusinessNet.Value - (dCapital.Value + dFuelMaintenance.Value + dUtilities.Value + dSalariesWages.Value + dBMiscellaneous.Value + dBOthers.Value)) + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
        'dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + dBusinessNet.Value + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
    End Sub

    Private Sub CbxIncludeC2_CheckedChanged(sender As Object, e As EventArgs) Handles cbxIncludeC2.CheckedChanged
        dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + (dBusinessNet.Value - (dCapital.Value + dFuelMaintenance.Value + dUtilities.Value + dSalariesWages.Value + dBMiscellaneous.Value + dBOthers.Value)) + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
        'dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + dBusinessNet.Value + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
    End Sub

    Private Sub BtnBrowse_B_Click(sender As Object, e As EventArgs) Handles btnBrowse_B.Click
        Using OFD As New OpenFileDialog
            OFD.Filter = "Image File|*.jpg;*.jpeg;*.png"
            If (OFD.ShowDialog() = DialogResult.OK) Then
                Try
                    pb_B.Image.Dispose()
                    txtPath_B.Text = OFD.FileName
                    Using TempPB As New DevExpress.XtraEditors.PictureEdit
                        TempPB.Image = Image.FromFile(txtPath_B.Text)
                        ResizeImages(TempPB.Image.Clone, pb_B, 650, 500)
                    End Using
                    ChangeBorrowerPic = True
                Catch ex As Exception
                    MsgBox("File type not supported. Please select JPG, JPEG and PNG files only.", MsgBoxStyle.Information, "Info")
                End Try
            End If
        End Using
    End Sub

    Private Sub Pb_B_Click(sender As Object, e As MouseEventArgs) Handles pb_B.Click
        Dim Camera As New FrmCamera
        With Camera
            If .ShowDialog = DialogResult.OK Then
                pb_B.Image = .pb_Picture.Image.Clone
                txtPath_B.Text = "From Camera"
            End If
        End With
    End Sub

    Private Sub FrmCreditInvestigation_KeyDown(sender As Object, e As KeyEventArgs) Handles MyBase.KeyDown
        With FrmMain
            .Keyboard_Press = True
            .Keyboard_Session = .Timer_Session.Interval
        End With
        If e.Control And e.KeyCode = Keys.S Then
            btnSave_F.Focus()
            btnSave_F.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.M Then
            btnModify.Focus()
            btnModify.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.D Then
            btnDelete.Focus()
            btnDelete.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.P Then
            btnPrint.Focus()
            btnPrint.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.F Then
            btnRefresh.Focus()
            btnRefresh.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.X Then
            btnCancel.Focus()
            btnCancel.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.R Then
            btnSave.Focus()
            btnSave.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.E Then
            btnEmailCrecom.Focus()
            btnEmailCrecom.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.N Then
            btnNext.Focus()
            btnNext.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.B Then
            btnBack.Focus()
            btnBack.PerformClick()
        ElseIf (e.Control And e.KeyCode = Keys.Left) Or (e.Control And e.KeyCode = Keys.Down) Then
            btnBack.Focus()
            btnBack.PerformClick()
        ElseIf (e.Control And e.KeyCode = Keys.Right) Or (e.Control And e.KeyCode = Keys.Up) Then
            btnNext.Focus()
            btnNext.PerformClick()
        ElseIf e.KeyCode = Keys.F12 Then
            FrmMain.BtnReport_Click(sender, e)
        End If
    End Sub

    Private Sub GridView5_KeyDown(sender As Object, e As KeyEventArgs) Handles GridView5.KeyDown
        If e.KeyCode = Keys.Enter Then
            GridView5_DoubleClick(sender, e)
        End If
    End Sub

    Private Sub DtpCreditGranted_1_Click(sender As Object, e As EventArgs) Handles dtpCreditGranted_1.Click
        dtpCreditGranted_1.CustomFormat = "MMM. dd, yyyy"
    End Sub

    Private Sub DtpCreditGranted_2_Click(sender As Object, e As EventArgs) Handles dtpCreditGranted_2.Click
        dtpCreditGranted_2.CustomFormat = "MMM. dd, yyyy"
    End Sub

    Private Sub DtpYear_1_Click(sender As Object, e As EventArgs) Handles dtpYear_1.Click
        dtpYear_1.CustomFormat = "     yyyy"
    End Sub

    Private Sub DtpYear_2_Click(sender As Object, e As EventArgs) Handles dtpYear_2.Click
        dtpYear_2.CustomFormat = "     yyyy"
    End Sub

    Private Sub DtpDateFilled_Click(sender As Object, e As EventArgs) Handles dtpDateFilled.Click
        dtpDateFilled.CustomFormat = "MMM. dd, yyyy"
    End Sub

    Private Sub BtnPrintVehicle_Click(sender As Object, e As EventArgs) Handles btnPrintVehicle.Click
        If vPrint Then
        Else
            MsgBox(mBox_Print, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Try
            If GridView1.GetFocusedRowCellValue("Collateral") = "" Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim Report As New RptAppraisalVE
        With Report
            Dim DT As DataTable = DataSource(String.Format("SELECT C.Make, C.`Type`, C.Model, C.Series, C.PlateNum, C.Transmission, C.Fuel, C.BodyColor, C.`Year`, C.EngineNum, C.ChassisNum, C.RegistryCert, C.ORNum, C.GrossWeight, C.RimHoles, C.MileAge, C.MileAgeType, A.appraise_num AS 'Appraise Number', DATE_FORMAT(A.appraise_date,'%b %d, %Y') AS 'Date', A.`Engine`, A.Engine_R AS 'Engine Remarks', A.Steering, A.Steering_R AS 'Steering Remarks', A.Clutch, A.Clutch_R AS 'Clutch Remarks', A.HeadLight AS 'Head Light', A.HeadLight_R AS 'Head Light Remarks', A.SignalLight AS 'Signal Light', A.SignalLight_R AS 'Signal Light Remarks', A.Shock, A.Shock_R AS 'Shock Remarks', A.Underchassis, A.Underchassis_R AS 'Underchassis Remarks', A.Upholstery, A.Upholstery_R AS 'Upholstery Remarks', A.TempGauge AS 'Temp Gauge', A.TempGauge_R AS 'Temp Gauge Remarks', A.Odometer AS 'Odometer', A.Odometer_R AS 'Odometer Remarks', A.Transmission AS 'Transmission', A.Transmission_R AS 'Transmission Remarks', A.Tires, A.Tires_R AS 'Tires Remarks', A.Acceleration, A.Acceleration_R AS 'Acceleration Remarks', A.ParkLight AS 'Park Light', A.ParkLight_R AS 'Park Light Remarks', A.Horn, A.Horn_R AS 'Horn Remarks', A.Chassis,A.Chassis_R AS 'Chassis Remarks', A.FrontBumper AS 'Front Bumper', A.FrontBumper_R AS 'Front Bumper Remarks', A.Ampheres, A.Ampheres_R AS 'Ampheres Remarks', A.Fuel, A.Fuel_R AS 'Fuel Remarks', A.Starter, A.Starter_R AS 'Starter Remarks', A.Differential, A.Differential_R AS 'Differential Remarks', A.Brakes, A.Brakes_R AS 'Brakes Remarks', A.Wiper, A.Wiper_R AS 'Wiper Remarks', A.`BackUp` AS 'Back Up', A.BackUp_R AS 'Back Up Remarks', A.SideMirror AS 'Side Mirror', A.SideMirror_R AS 'Side Mirror Remarks', A.BodyFlooring AS 'Body Flooring', A.BodyFlooring_R AS 'Body Flooring Remarks', A.RearBumper AS 'Rear Bumper', A.RearBumper_R AS 'Rear Bumper Remarks', A.OilPressure AS 'Oil Pressure', A.OilPressure_R AS 'Oil Pressure Remarks', A.Speedometer, A.Speedometer_R AS 'Speedometer Remarks', A.BodyPaint AS 'Body Paint', A.BodyPaint_R AS 'Body Paint Remarks', A.Remarks AS 'Appraiser Remarks', A.Source, A.telephone_num AS 'Telephone Num', FORMAT(A.selling_price,2) AS 'Selling Price', FORMAT(A.market_value,2) AS 'Market Value', FORMAT(A.appraised_value,2) AS 'Appraised Value', Employee(A.appraise_by) AS 'Appraised By', FORMAT(A.loanable_value,2) AS 'Loanable Value', FORMAT(A.loanable_percent,2) AS 'Loanable Percent', A.Attach FROM collateral_ve C LEFT JOIN appraise_ve A ON C.CollateralNumber = A.CollateralNumber WHERE C.CollateralNumber = '{0}' AND A.appraise = 'Credit Investigation' AND A.appraise_num = '{1}';", GridView1.GetFocusedRowCellValue("Col_ID"), GridView1.GetFocusedRowCellValue("ID")))
            If DT.Rows.Count > 0 Then
                .Name = DT(0)("Appraise Number")
                .lblDate.Text = DT(0)("Date")
                .lblAppaiseNum.Text = DT(0)("Appraise Number")
                .lblAppraisedBy.Text = DT(0)("Appraised By")
                .lblAppraiseFor.Text = "Credit Investigation"
                .lblMake.Text = DT(0)("Make")
                .lblType.Text = DT(0)("Type")
                .lblEngine.Text = DT(0)("Model") & " " & DT(0)("Series")
                .lblPlateNumber.Text = DT(0)("PlateNum")
                .lblTransmission.Text = DT(0)("Transmission")
                .lblGasoline.Text = DT(0)("Fuel")
                .lblBodyColor.Text = DT(0)("BodyColor")
                .lblYear.Text = DT(0)("Year").ToString.Trim
                .lblMotorNumber.Text = DT(0)("EngineNum")
                .lblSerialNumber.Text = DT(0)("ChassisNum")
                .lblRegCertNumber.Text = DT(0)("RegistryCert")
                .lblORNumber.Text = DT(0)("ORNum")
                .lblGrossWeight.Text = DT(0)("GrossWeight") & " kgs"
                .lblRim.Text = DT(0)("RimHoles")
                .lblMileAge.Text = DT(0)("MileAge") & " " & DT(0)("MileAgeType")
                .cbxEngine_G.Checked = If(DT(0)("Engine") = "G", True, False)
                .cbxEngine_F.Checked = If(DT(0)("Engine") = "F", True, False)
                .cbxEngine_P.Checked = If(DT(0)("Engine") = "P", True, False)
                .txtEngine.Text = DT(0)("Engine Remarks")

                .cbxSteering_G.Checked = If(DT(0)("Steering") = "G", True, False)
                .cbxSteering_F.Checked = If(DT(0)("Steering") = "F", True, False)
                .cbxSteering_P.Checked = If(DT(0)("Steering") = "P", True, False)
                .txtSteering.Text = DT(0)("Steering Remarks")

                .cbxClutch_G.Checked = If(DT(0)("Clutch") = "G", True, False)
                .cbxClutch_F.Checked = If(DT(0)("Clutch") = "F", True, False)
                .cbxClutch_P.Checked = If(DT(0)("Clutch") = "P", True, False)
                .txtClutch.Text = DT(0)("Clutch Remarks")

                .cbxHeadLight_G.Checked = If(DT(0)("Head Light") = "G", True, False)
                .cbxHeadLight_F.Checked = If(DT(0)("Head Light") = "F", True, False)
                .cbxHeadLight_P.Checked = If(DT(0)("Head Light") = "P", True, False)
                .txtHeadLight.Text = DT(0)("Head Light Remarks")

                .cbxSignalLight_G.Checked = If(DT(0)("Signal Light") = "G", True, False)
                .cbxSignalLight_F.Checked = If(DT(0)("Signal Light") = "F", True, False)
                .cbxSignalLight_P.Checked = If(DT(0)("Signal Light") = "P", True, False)
                .txtSignalLight.Text = DT(0)("Signal Light Remarks")

                .cbxShock_G.Checked = If(DT(0)("Shock") = "G", True, False)
                .cbxShock_F.Checked = If(DT(0)("Shock") = "F", True, False)
                .cbxShock_P.Checked = If(DT(0)("Shock") = "P", True, False)
                .txtShock.Text = DT(0)("Shock Remarks")

                .cbxUnderchassis_G.Checked = If(DT(0)("Underchassis") = "G", True, False)
                .cbxUnderchassis_F.Checked = If(DT(0)("Underchassis") = "F", True, False)
                .cbxUnderchassis_P.Checked = If(DT(0)("Underchassis") = "P", True, False)
                .txtUnderchassis.Text = DT(0)("Underchassis Remarks")

                .cbxUpholstery_G.Checked = If(DT(0)("Upholstery") = "G", True, False)
                .cbxUpholstery_F.Checked = If(DT(0)("Upholstery") = "F", True, False)
                .cbxUpholstery_P.Checked = If(DT(0)("Upholstery") = "P", True, False)
                .txtUpholstery.Text = DT(0)("Upholstery Remarks")

                .cbxTempGauge_G.Checked = If(DT(0)("Temp Gauge") = "G", True, False)
                .cbxTempGauge_F.Checked = If(DT(0)("Temp Gauge") = "F", True, False)
                .cbxTempGauge_P.Checked = If(DT(0)("Temp Gauge") = "P", True, False)
                .txtTempGauge.Text = DT(0)("Temp Gauge Remarks")

                .cbxOdometer_G.Checked = If(DT(0)("Odometer") = "G", True, False)
                .cbxOdometer_F.Checked = If(DT(0)("Odometer") = "F", True, False)
                .cbxOdometer_P.Checked = If(DT(0)("Odometer") = "P", True, False)
                .txtOdometer.Text = DT(0)("Odometer Remarks")

                .cbxTransmission_G.Checked = If(DT(0)("Transmission") = "G", True, False)
                .cbxTransmission_F.Checked = If(DT(0)("Transmission") = "F", True, False)
                .cbxTransmission_P.Checked = If(DT(0)("Transmission") = "P", True, False)
                .txtTransmission.Text = DT(0)("Transmission Remarks")

                .dTires.Text = DT(0)("Tires") & "%"
                .txtTires.Text = DT(0)("Tires Remarks")

                .cbxAcceleration_G.Checked = If(DT(0)("Acceleration") = "G", True, False)
                .cbxAcceleration_F.Checked = If(DT(0)("Acceleration") = "F", True, False)
                .cbxAcceleration_P.Checked = If(DT(0)("Acceleration") = "P", True, False)
                .txtAcceleration.Text = DT(0)("Acceleration Remarks")

                .cbxParkLight_G.Checked = If(DT(0)("Park Light") = "G", True, False)
                .cbxParkLight_F.Checked = If(DT(0)("Park Light") = "F", True, False)
                .cbxParkLight_P.Checked = If(DT(0)("Park Light") = "P", True, False)
                .txtParkLight.Text = DT(0)("Park Light Remarks")

                .cbxHorn_G.Checked = If(DT(0)("Horn") = "G", True, False)
                .cbxHorn_F.Checked = If(DT(0)("Horn") = "F", True, False)
                .cbxHorn_P.Checked = If(DT(0)("Horn") = "P", True, False)
                .txtHorn.Text = DT(0)("Horn Remarks")

                .cbxChassis_G.Checked = If(DT(0)("Chassis") = "G", True, False)
                .cbxChassis_F.Checked = If(DT(0)("Chassis") = "F", True, False)
                .cbxChassis_P.Checked = If(DT(0)("Chassis") = "P", True, False)
                .txtChassis.Text = DT(0)("Chassis Remarks")

                .cbxFrontBumper_G.Checked = If(DT(0)("Front Bumper") = "G", True, False)
                .cbxFrontBumper_F.Checked = If(DT(0)("Front Bumper") = "F", True, False)
                .cbxFrontBumper_P.Checked = If(DT(0)("Front Bumper") = "P", True, False)
                .txtFrontBumper.Text = DT(0)("Front Bumper Remarks")

                .cbxAmpheres_G.Checked = If(DT(0)("Ampheres") = "G", True, False)
                .cbxAmpheres_F.Checked = If(DT(0)("Ampheres") = "F", True, False)
                .cbxAmpheres_P.Checked = If(DT(0)("Ampheres") = "P", True, False)
                .txtAmpheres.Text = DT(0)("Ampheres Remarks")

                .cbxFuel_G.Checked = If(DT(0)("Fuel") = "G", True, False)
                .cbxFuel_F.Checked = If(DT(0)("Fuel") = "F", True, False)
                .cbxFuel_P.Checked = If(DT(0)("Fuel") = "P", True, False)
                .txtFuel.Text = DT(0)("Fuel Remarks")

                .cbxStarter_G.Checked = If(DT(0)("Starter") = "G", True, False)
                .cbxStarter_F.Checked = If(DT(0)("Starter") = "F", True, False)
                .cbxStarter_P.Checked = If(DT(0)("Starter") = "P", True, False)
                .txtStarter.Text = DT(0)("Starter Remarks")

                .cbxDifferential_G.Checked = If(DT(0)("Differential") = "G", True, False)
                .cbxDifferential_F.Checked = If(DT(0)("Differential") = "F", True, False)
                .cbxDifferential_P.Checked = If(DT(0)("Differential") = "P", True, False)
                .txtDifferential.Text = DT(0)("Differential Remarks")

                .cbxBrakes_G.Checked = If(DT(0)("Brakes") = "G", True, False)
                .cbxBrakes_F.Checked = If(DT(0)("Brakes") = "F", True, False)
                .cbxBrakes_P.Checked = If(DT(0)("Brakes") = "P", True, False)
                .txtBrakes.Text = DT(0)("Brakes Remarks")

                .cbxWiper_G.Checked = If(DT(0)("Wiper") = "G", True, False)
                .cbxWiper_F.Checked = If(DT(0)("Wiper") = "F", True, False)
                .cbxWiper_P.Checked = If(DT(0)("Wiper") = "P", True, False)
                .txtWiper.Text = DT(0)("Wiper Remarks")

                .cbxBackUp_G.Checked = If(DT(0)("Back Up") = "G", True, False)
                .cbxBackUp_F.Checked = If(DT(0)("Back Up") = "F", True, False)
                .cbxBackUp_P.Checked = If(DT(0)("Back Up") = "P", True, False)
                .txtBackUp.Text = DT(0)("Back Up Remarks")

                .cbxSideMirror_G.Checked = If(DT(0)("Side Mirror") = "G", True, False)
                .cbxSideMirror_F.Checked = If(DT(0)("Side Mirror") = "F", True, False)
                .cbxSideMirror_P.Checked = If(DT(0)("Side Mirror") = "P", True, False)
                .txtSideMirror.Text = DT(0)("Side Mirror Remarks")

                .cbxBodyFlooring_G.Checked = If(DT(0)("Body Flooring") = "G", True, False)
                .cbxBodyFlooring_F.Checked = If(DT(0)("Body Flooring") = "F", True, False)
                .cbxBodyFlooring_P.Checked = If(DT(0)("Body Flooring") = "P", True, False)
                .txtBodyFlooring.Text = DT(0)("Body Flooring Remarks")

                .cbxRearBumper_G.Checked = If(DT(0)("Rear Bumper") = "G", True, False)
                .cbxRearBumper_F.Checked = If(DT(0)("Rear Bumper") = "F", True, False)
                .cbxRearBumper_P.Checked = If(DT(0)("Rear Bumper") = "P", True, False)
                .txtRearBumper.Text = DT(0)("Rear Bumper Remarks")

                .cbxOilPressure_G.Checked = If(DT(0)("Oil Pressure") = "G", True, False)
                .cbxOilPressure_F.Checked = If(DT(0)("Oil Pressure") = "F", True, False)
                .cbxOilPressure_P.Checked = If(DT(0)("Oil Pressure") = "P", True, False)
                .txtOilPressure.Text = DT(0)("Oil Pressure Remarks")

                .cbxSpeedometer_G.Checked = If(DT(0)("Speedometer") = "G", True, False)
                .cbxSpeedometer_F.Checked = If(DT(0)("Speedometer") = "F", True, False)
                .cbxSpeedometer_P.Checked = If(DT(0)("Speedometer") = "P", True, False)
                .txtSpeedometer.Text = DT(0)("Speedometer Remarks")

                .cbxBodyPaint_G.Checked = If(DT(0)("Body Paint") = "G", True, False)
                .cbxBodyPaint_F.Checked = If(DT(0)("Body Paint") = "F", True, False)
                .cbxBodyPaint_P.Checked = If(DT(0)("Body Paint") = "P", True, False)
                .txtBodyPaint.Text = DT(0)("Body Paint Remarks")

                .txtAppraisersRemarks.Text = DT(0)("Appraiser Remarks")
                .txtSource.Text = DT(0)("Source")
                .txtTelNo.Text = DT(0)("Telephone Num")
                .txtSellingPrice.Text = "Php " & DT(0)("Selling Price")
                .txtMarketValue.Text = "Php " & DT(0)("Market Value")
                .txtAppraisedValue.Text = "Php " & DT(0)("Appraised Value")

                .txtLoanble.Text = "Php " & DT(0)("Loanable Value")
                .txtLoanableP.Text = DT(0)("Loanable Percent") & "%"
                .lblLoanable.Visible = True
                .txtLoanble.Visible = True
                .txtLoanableP.Visible = True

                Dim xPos As Integer = 1
                If CInt(DT(0)("Attach")) > 0 Then
                    For x As Integer = 1 To DT(0)("Attach")
                        Dim pB_Dev As New DevExpress.XtraEditors.PictureEdit
                        If x Mod 5 = 1 Then
                            pB_Dev.Properties.NullText = "Front"
                        ElseIf x Mod 5 = 2 Then
                            pB_Dev.Properties.NullText = "Back"
                        ElseIf x Mod 5 = 3 Then
                            pB_Dev.Properties.NullText = "Interior"
                        ElseIf x Mod 5 = 4 Then
                            pB_Dev.Properties.NullText = "Engine"
                        ElseIf x Mod 5 = 0 Then
                            pB_Dev.Properties.NullText = "Odometer"
                        End If

                        Dim pB As New XRPictureBox With {
                            .Size = New Size(375, 250),
                            .Sizing = DevExpress.XtraPrinting.ImageSizeMode.StretchImage,
                            .Borders = DevExpress.XtraPrinting.BorderSide.All
                        }
                        '***ADD LABEL***'
                        Dim lblImage As New XRLabel With {
                            .Text = pB_Dev.Properties.NullText.ToString,
                            .SizeF = New Size(375, 15),
                            .Font = New Font(OfficialFont, 8, FontStyle.Bold),
                            .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter
                        }
                        '***ADD LABEL***'
                        If xPos Mod 2 = 0 Then
                            pB.Location = New Point(412.5, 770 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 265), 0))
                            lblImage.Location = New Point(412.5, (770 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 265), 0)) - 15)
                        Else
                            pB.Location = New Point(12.5, 770 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 265), 0))
                            lblImage.Location = New Point(12.5, (770 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 265), 0)) - 15)
                        End If
                        Dim Path As String = String.Format("{0}\{1}\{2}\Application\{3}\{4}\{5}", RootFolder, MainFolder, Branch_Code, CreditNumber, DT(0)("Appraise Number"), pB_Dev.Properties.NullText & x & ".jpg")
                        If IO.File.Exists(Path) Then
                            Dim TempPB As New DevExpress.XtraEditors.PictureEdit
                            Try
                                TempPB.Image = Image.FromFile(Path)
                            Catch ex As Exception
                                TriggerBugReport("Credit Investigation - PrintVehicle", ex.Message.ToString)
                            End Try
                            pB.Image = TempPB.Image
                            .Detail.Controls.Add(pB)
                            .Detail.Controls.Add(lblImage)
                            TempPB.Dispose()
                            xPos += 1
                        End If
                    Next
                Else
                End If
            End If
            .ShowPreview()
        End With
    End Sub

    Private Sub BtnPrintRealEstate_Click(sender As Object, e As EventArgs) Handles btnPrintRealEstate.Click
        If vPrint Then
        Else
            MsgBox(mBox_Print, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Try
            If GridView2.GetFocusedRowCellValue("Collateral") = "" Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim Report As New RptAppraisalRE
        With Report
            Dim SQL As String = "SELECT"
            SQL &= "   A.appraise_num      AS 'Appraise Number',"
            SQL &= "   DATE_FORMAT(A.appraise_date,'%b %d, %Y') AS 'Date',"
            SQL &= "   A.asset_number      AS 'Credit Number',"
            SQL &= "   Land,"
            SQL &= "   FORMAT(A.land_area,2) AS 'Land Area',"
            SQL &= "   FORMAT(A.land_price,2) AS 'Land Price',"
            SQL &= "   FORMAT(A.land_price * land_area,2) AS 'Land Total',"
            SQL &= "   land_remarks_1 AS 'Land Remarks',"
            SQL &= "   FORMAT(A.land_area_2,2) AS 'Land Area 2',"
            SQL &= "   FORMAT(A.land_price_2,2) AS 'Land Price 2',"
            SQL &= "   FORMAT(A.land_price_2 * land_area_2,2) AS 'Land Total 2',"
            SQL &= "   land_remarks_2 AS 'Land Remarks 2',"
            SQL &= "   FORMAT(A.land_area_3,2) AS 'Land Area 3',"
            SQL &= "   FORMAT(A.land_price_3,2) AS 'Land Price 3',"
            SQL &= "   FORMAT(A.land_price_3 * land_area_3,2) AS 'Land Total 3',"
            SQL &= "   land_remarks_3 AS 'Land Remarks 3',"
            SQL &= "   FORMAT(A.land_area_4,2) AS 'Land Area 4',"
            SQL &= "   FORMAT(A.land_price_4,2) AS 'Land Price 4',"
            SQL &= "   FORMAT(A.land_price_4 * land_area_4,2) AS 'Land Total 4',"
            SQL &= "   land_remarks_4 AS 'Land Remarks 4',"
            SQL &= "   FORMAT(A.land_area_5,2) AS 'Land Area 5',"
            SQL &= "   FORMAT(A.land_price_5,2) AS 'Land Price 5',"
            SQL &= "   FORMAT(A.land_price_5 * land_area_5,2) AS 'Land Total 5',"
            SQL &= "   land_remarks_5 AS 'Land Remarks 5',"
            SQL &= "   Machine,"
            SQL &= "   FORMAT(A.Machine_area,2) AS 'Machine Area',"
            SQL &= "   FORMAT(A.Machine_price,2) AS 'Machine Price',"
            SQL &= "   FORMAT(A.Machine_price * Machine_area,2) AS 'Machine Total',"
            SQL &= "   Machine_remarks_1 AS 'Machine Remarks',"
            SQL &= "   FORMAT(A.Machine_area_2,2) AS 'Machine Area 2',"
            SQL &= "   FORMAT(A.Machine_price_2,2) AS 'Machine Price 2',"
            SQL &= "   FORMAT(A.Machine_price_2 * Machine_area_2,2) AS 'Machine Total 2',"
            SQL &= "   Machine_remarks_2 AS 'Machine Remarks 2',"
            SQL &= "   FORMAT(A.Machine_area_3,2) AS 'Machine Area 3',"
            SQL &= "   FORMAT(A.Machine_price_3,2) AS 'Machine Price 3',"
            SQL &= "   FORMAT(A.Machine_price_3 * Machine_area_3,2) AS 'Machine Total 3',"
            SQL &= "   Machine_remarks_3 AS 'Machine Remarks 3',"
            SQL &= "   FORMAT(A.Machine_area_4,2) AS 'Machine Area 4',"
            SQL &= "   FORMAT(A.Machine_price_4,2) AS 'Machine Price 4',"
            SQL &= "   FORMAT(A.Machine_price_4 * Machine_area_4,2) AS 'Machine Total 4',"
            SQL &= "   Machine_remarks_4 AS 'Machine Remarks 4',"
            SQL &= "   FORMAT(A.Machine_area_5,2) AS 'Machine Area 5',"
            SQL &= "   FORMAT(A.Machine_price_5,2) AS 'Machine Price 5',"
            SQL &= "   FORMAT(A.Machine_price_5 * Machine_area_5,2) AS 'Machine Total 5',"
            SQL &= "   Machine_remarks_5 AS 'Machine Remarks 5',"
            SQL &= "   Improvement,"
            SQL &= "   FORMAT(A.Improvement_area,2) AS 'Improvement Area',"
            SQL &= "   FORMAT(A.Improvement_price,2) AS 'Improvement Price',"
            SQL &= "   FORMAT(A.Improvement_price * Improvement_area,2) AS 'Improvement Total',"
            SQL &= "   Improvement_remarks_1 AS 'Improvement Remarks',"
            SQL &= "   FORMAT(A.Improvement_area_2,2) AS 'Improvement Area 2',"
            SQL &= "   FORMAT(A.Improvement_price_2,2) AS 'Improvement Price 2',"
            SQL &= "   FORMAT(A.Improvement_price_2 * Improvement_area_2,2) AS 'Improvement Total 2',"
            SQL &= "   Improvement_remarks_2 AS 'Improvement Remarks 2',"
            SQL &= "   FORMAT(A.Improvement_area_3,2) AS 'Improvement Area 3',"
            SQL &= "   FORMAT(A.Improvement_price_3,2) AS 'Improvement Price 3',"
            SQL &= "   FORMAT(A.Improvement_price_3 * Improvement_area_3,2) AS 'Improvement Total 3',"
            SQL &= "   Improvement_remarks_3 AS 'Improvement Remarks 3',"
            SQL &= "   FORMAT(A.Improvement_area_4,2) AS 'Improvement Area 4',"
            SQL &= "   FORMAT(A.Improvement_price_4,2) AS 'Improvement Price 4',"
            SQL &= "   FORMAT(A.Improvement_price_4 * Improvement_area_4,2) AS 'Improvement Total 4',"
            SQL &= "   Improvement_remarks_4 AS 'Improvement Remarks 4',"
            SQL &= "   FORMAT(A.Improvement_area_5,2) AS 'Improvement Area 5',"
            SQL &= "   FORMAT(A.Improvement_price_5,2) AS 'Improvement Price 5',"
            SQL &= "   FORMAT(A.Improvement_price_5 * Improvement_area_5,2) AS 'Improvement Total 5',"
            SQL &= "   Improvement_remarks_5 AS 'Improvement Remarks 5',"
            SQL &= "   FORMAT((A.land_price * A.land_area) + (A.land_price_2 * land_area_2) + (A.land_price_3 * land_area_3) + (A.land_price_4 * land_area_4) + (A.land_price_5 * land_area_5) + (A.machine_price * A.machine_area) + (A.machine_price_2 * machine_area_2) + (A.machine_price_3 * machine_area_3) + (A.machine_price_4 * machine_area_4) + (A.machine_price_5 * machine_area_5) + (A.improvement_price * A.improvement_area) + (A.improvement_price_2 * improvement_area_2) + (A.improvement_price_3 * improvement_area_3) + (A.improvement_price_4 * improvement_area_4) + (A.improvement_price_5 * improvement_area_5),2) AS 'Total',"
            SQL &= "   FORMAT(A.prevailing_selling,2) AS 'Prevailing Selling Price',"
            SQL &= "   FORMAT(A.rounded_to,2) AS 'Zonal Valuation',"
            SQL &= "   A.TCT               AS 'TCT No.',"
            SQL &= "   A.lot_block         AS 'Lot / Block No.',"
            SQL &= "   FORMAT(A.area_sqm,2) AS 'Area SQ.M.',"
            SQL &= "   A.registered_owner  AS 'Registered Owner',"
            SQL &= "   A.registry_deeds    AS 'Registry of Deeds',"
            SQL &= "   A.Location,"
            SQL &= "   A.vacant_lot        AS 'Vacant Lot',"
            SQL &= "   A.Classification,"
            SQL &= "   A.Storey_R          AS 'Storey',"
            SQL &= "   A.Roofing_R         AS 'Roofing',"
            SQL &= "   A.FLooring_R        AS 'Flooring',"
            SQL &= "   A.TandB_R           AS 'T and B',"
            SQL &= "   A.Frame_R           AS 'Frame',"
            SQL &= "   A.Beams_R           AS 'Beams',"
            SQL &= "   A.Doors_R           AS 'Door',"
            SQL &= "   A.YearConstructed_R AS 'Year Constructed',"
            SQL &= "   A.Walling_R         AS 'Walling',"
            SQL &= "   A.Ceiling_R         AS 'Ceiling',"
            SQL &= "   A.Windows_R         AS 'Windows',"
            SQL &= "   A.FloorArea_R       AS 'Floor Area',"
            SQL &= "   A.Partitions_R      AS 'Partitions',"
            SQL &= "   A.Remarks           AS 'Remarks',"
            SQL &= "   FORMAT(A.appraised_value,2) AS 'Appraised Value',"
            SQL &= "   Employee(A.Appraise_By) AS 'Appraised By',"
            SQL &= "   A.as_of             AS 'As of',"
            SQL &= "   FORMAT(A.loanable_value,2) AS 'Loanable Value',"
            SQL &= "   FORMAT(A.loanable_percent,2) AS 'Loanable Percent', Attach"
            SQL &= " FROM appraise_re A"
            SQL &= String.Format("   WHERE A.appraise = 'Credit Investigation' AND A.appraise_num = '{1}' AND CollateralNumber = '{0}'", GridView2.GetFocusedRowCellValue("Col_ID"), GridView2.GetFocusedRowCellValue("ID"))
            Dim DT As DataTable = DataSource(SQL)
            If DT.Rows.Count > 0 Then
                .Name = DT(0)("Appraise Number")
                .lblDate.Text = DT(0)("Date")
                .lblAppaiseNum.Text = DT(0)("Appraise Number")
                .lblAppraiseFor.Text = "Credit Investigation"
                .lblAppraisedBy.Text = DT(0)("Appraised By")

                .lblLand.Text = DT(0)("Land")

                .dLandArea.Text = DT(0)("Land Area")
                .dPrice_1.Text = DT(0)("Land Price")
                .dTotal_1.Text = "PHP " & DT(0)("Land Total")
                .lblRemarks_1.Text = DT(0)("Land Remarks")

                .dLandArea_2.Text = DT(0)("Land Area 2")
                .dPrice_2.Text = DT(0)("Land Price 2")
                .dTotal_2.Text = "PHP " & DT(0)("Land Total 2")
                .lblRemarks_2.Text = DT(0)("Land Remarks 2")

                .dLandArea_3.Text = DT(0)("Land Area 3")
                .dPrice_3.Text = DT(0)("Land Price 3")
                .dTotal_3.Text = "PHP " & DT(0)("Land Total 3")
                .lblRemarks_3.Text = DT(0)("Land Remarks 3")

                .dLandArea_4.Text = DT(0)("Land Area 4")
                .dPrice_4.Text = DT(0)("Land Price 4")
                .dTotal_4.Text = "PHP " & DT(0)("Land Total 4")
                .lblRemarks_4.Text = DT(0)("Land Remarks 4")

                .dLandArea_5.Text = DT(0)("Land Area 5")
                .dPrice_5.Text = DT(0)("Land Price 5")
                .dTotal_5.Text = "PHP " & DT(0)("Land Total 5")
                .lblRemarks_5.Text = DT(0)("Land Remarks 5")
                .dLandTotal_T.Text = "PHP " & FormatNumber(CDbl(DT(0)("Land Total")) + CDbl(DT(0)("Land Total 2")) + CDbl(DT(0)("Land Total 3")) + CDbl(DT(0)("Land Total 4")) + CDbl(DT(0)("Land Total 5")), 2)

                .lblImprovements.Text = DT(0)("Improvement")

                .dImprovementArea_1.Text = DT(0)("Improvement Area")
                .dImprovementPrice_1.Text = DT(0)("Improvement Price")
                .dImprovementTotal_1.Text = "PHP " & DT(0)("Improvement Total")
                .lblImprovementRemarks_1.Text = DT(0)("Improvement Remarks")

                .dImprovementArea_2.Text = DT(0)("Improvement Area 2")
                .dImprovementPrice_2.Text = DT(0)("Improvement Price 2")
                .dImprovementTotal_2.Text = "PHP " & DT(0)("Improvement Total 2")
                .lblImprovementRemarks_2.Text = DT(0)("Improvement Remarks 2")

                .dImprovementArea_3.Text = DT(0)("Improvement Area 3")
                .dImprovementPrice_3.Text = DT(0)("Improvement Price 3")
                .dImprovementTotal_3.Text = "PHP " & DT(0)("Improvement Total 3")
                .lblImprovementRemarks_3.Text = DT(0)("Improvement Remarks 3")

                .dImprovementArea_4.Text = DT(0)("Improvement Area 4")
                .dImprovementPrice_4.Text = DT(0)("Improvement Price 4")
                .dImprovementTotal_4.Text = "PHP " & DT(0)("Improvement Total 4")
                .lblImprovementRemarks_4.Text = DT(0)("Improvement Remarks 4")

                .dImprovementArea_5.Text = DT(0)("Improvement Area 5")
                .dImprovementPrice_5.Text = DT(0)("Improvement Price 5")
                .dImprovementTotal_5.Text = "PHP " & DT(0)("Improvement Total 5")
                .lblImprovementRemarks_5.Text = DT(0)("Improvement Remarks 5")
                .dImprovementTotal_T.Text = "PHP " & FormatNumber(CDbl(DT(0)("Improvement Total")) + CDbl(DT(0)("Improvement Total 2")) + CDbl(DT(0)("Improvement Total 3")) + CDbl(DT(0)("Improvement Total 4")) + CDbl(DT(0)("Improvement Total 5")), 2)

                .lblMachine.Text = DT(0)("Machine")

                .dMachineArea_1.Text = DT(0)("Machine Area")
                .dMachinePrice_1.Text = DT(0)("Machine Price")
                .dMachineTotal_1.Text = "PHP " & DT(0)("Machine Total")
                .lblMachineRemarks_1.Text = DT(0)("Machine Remarks")

                .dMachineArea_2.Text = DT(0)("Machine Area 2")
                .dMachinePrice_2.Text = DT(0)("Machine Price 2")
                .dMachineTotal_2.Text = "PHP " & DT(0)("Machine Total 2")
                .lblMachineRemarks_2.Text = DT(0)("Machine Remarks 2")

                .dMachineArea_3.Text = DT(0)("Machine Area 3")
                .dMachinePrice_3.Text = DT(0)("Machine Price 3")
                .dMachineTotal_3.Text = "PHP " & DT(0)("Machine Total 3")
                .lblMachineRemarks_3.Text = DT(0)("Machine Remarks 3")

                .dMachineArea_4.Text = DT(0)("Machine Area 4")
                .dMachinePrice_4.Text = DT(0)("Machine Price 4")
                .dMachineTotal_4.Text = "PHP " & DT(0)("Machine Total 4")
                .lblMachineRemarks_4.Text = DT(0)("Machine Remarks 4")

                .dMachineArea_5.Text = DT(0)("Machine Area 5")
                .dMachinePrice_5.Text = DT(0)("Machine Price 5")
                .dMachineTotal_5.Text = "PHP " & DT(0)("Machine Total 5")
                .lblMachineRemarks_5.Text = DT(0)("Machine Remarks 5")
                .dMachineTotal_T.Text = "PHP " & FormatNumber(CDbl(DT(0)("Machine Total")) + CDbl(DT(0)("Machine Total 2")) + CDbl(DT(0)("Machine Total 3")) + CDbl(DT(0)("Machine Total 4")) + CDbl(DT(0)("Machine Total 5")), 2)

                .dTotalAmount.Text = "PHP " & DT(0)("Total")
                .dPrevailingSellingPrice.Text = "PHP " & DT(0)("Prevailing Selling Price")
                .dZonalValuation.Text = "PHP " & DT(0)("Zonal Valuation")

                .txtTCT.Text = DT(0)("TCT No.")
                .txtLot.Text = DT(0)("Lot / Block No.")
                .dArea.Text = DT(0)("Area SQ.M.")
                .txtRegisteredOwner.Text = DT(0)("Registered Owner")
                .txtRegistryOfDeeds.Text = DT(0)("Registry of Deeds")
                .txtLocation.Text = DT(0)("Location")
                If DT(0)("Vacant Lot") = "YES" Then
                    .cbxVacantLot.Checked = True
                Else
                    .cbxVacantLot.Checked = False
                End If
                If DT(0)("Classification") = "Residential" Then
                    .cbxResidential.Checked = True
                ElseIf DT(0)("Classification") = "Commercial" Then
                    .cbxCommercial.Checked = True
                ElseIf DT(0)("Classification") = "Agricultural" Then
                    .cbxAgricultural.Checked = True
                ElseIf DT(0)("Classification") = "Tourism" Then
                    .cbxTourism.Checked = True
                ElseIf DT(0)("Classification") = "Industrial" Then
                    .cbxIndustrial.Checked = True
                ElseIf DT(0)("Classification") = "Others" Then
                    .cbxOthers.Checked = True
                End If
                .lblStorey_R.Text = DT(0)("Storey")
                .lblRoofings_R.Text = DT(0)("Roofing")
                .lblFloorings_R.Text = DT(0)("Flooring")
                .lblTandB_R.Text = DT(0)("T and B")
                .lblFrames_R.Text = DT(0)("Frame")
                .lblBeams_R.Text = DT(0)("Beams")
                .lblDoors_R.Text = DT(0)("Door")
                .lblYear_R.Text = DT(0)("Year Constructed")
                .lblWalling_R.Text = DT(0)("Walling")
                .lblCeiling_R.Text = DT(0)("Ceiling")
                .lblWindows_R.Text = DT(0)("Windows")
                .lblFloorArea_R.Text = DT(0)("Floor Area")
                .lblPartitions_R.Text = DT(0)("Partitions")
                .lblRemarks.Text = DT(0)("Remarks")
                .dAppraisedValue.Text = DT(0)("Appraised Value")
                .txtValueWords.Text = ConvertNumberToWords(DT(0)("Appraised Value"), False, False)
                .lblAsOf.Text = DT(0)("As of")

                .dRecommendedAmount.Text = DT(0)("Loanable Value")
                .dRecommendedPercent.Text = DT(0)("Loanable Percent") & "%"
                .lblRecommended.Visible = True
                .lblRecommendedPHP.Visible = True
                .dRecommendedAmount.Visible = True
                .dRecommendedPercent.Visible = True

                Dim xPos As Integer = 1
                If CInt(DT(0)("Attach")) > 0 Then
                    Dim DT_Pictures As DataTable = DataSource(String.Format("SELECT Picture FROM re_classification WHERE IF('{0}' NOT IN ('Residential','Commercial','Agricultural','Tourism','Industrial','Condominium'),Classification = 'Others',Classification = '{0}') AND `status` = 'ACTIVE';", DT(0)("Classification")))
                    Dim PathX As String = String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Branch_Code, CreditNumber, "RE Appraise")
                    If IO.Directory.Exists(PathX) Then
                        Dim files() As String = IO.Directory.GetFiles(PathX)
                        For Each file As String In files
                            Dim pB As New XRPictureBox With {
                                .Size = New Size(375, 235),
                                .Sizing = DevExpress.XtraPrinting.ImageSizeMode.StretchImage,
                                .Borders = DevExpress.XtraPrinting.BorderSide.All
                            }
                            '***ADD LABEL***'
                            Dim lblImage As New XRLabel With {
                                .SizeF = New Size(375, 10),
                                .Font = New Font(OfficialFont, 8, FontStyle.Bold),
                                .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter
                            }
                            '***ADD LABEL***'
                            If xPos Mod 2 = 0 Then
                                pB.Location = New Point(412.5, 1000 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 245), 0))
                                lblImage.Location = New Point(412.5, (1000 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 245), 0)) - 10)
                            Else
                                pB.Location = New Point(12.5, 1000 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 245), 0))
                                lblImage.Location = New Point(12.5, (1000 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 245), 0)) - 10)
                            End If
                            Dim Path As String = file.ToString
                            If IO.File.Exists(Path) Then
                                Dim TempPB As New DevExpress.XtraEditors.PictureEdit
                                Try
                                    TempPB.Image = Image.FromFile(Path)
                                Catch ex As Exception
                                    TriggerBugReport("Credit Investigation - PrintRealEstate", ex.Message.ToString)
                                End Try
                                pB.Image = TempPB.Image.Clone
                                TempPB.Dispose()
                                .Detail.Controls.Add(pB)
                                .Detail.Controls.Add(lblImage)
                                xPos += 1
                            End If
                        Next
                    End If
                End If
            End If
            .ShowPreview()
        End With
    End Sub

    Private Sub BtnSave_F_Click(sender As Object, e As EventArgs) Handles btnSave_F.Click
        If Multiple_ID.Contains(",") Then
            MsgBox("Saving transaction is not allowed because multi branch are selected.", MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        If vSave Then
        Else
            MsgBox(mBox_Save, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Draft_Save(btnSave_F.Text)
    End Sub

    Private Sub BtnSave_Click(sender As Object, e As EventArgs) Handles btnSave.Click
        Draft_Save(btnSave.Text)
    End Sub

    Private Sub Draft_Save(Trigger As String)
        If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
            If cbxApplication.SelectedIndex = -1 Or cbxApplication.Text = "" Then
                MsgBox("Please select a borrower or credit application.", MsgBoxStyle.Information, "Info")
                cbxApplication.Focus()
                cbxApplication.DroppedDown = True
                Exit Sub
            End If
        End If
        If TxtFirstN_B.Text = "" Then
            If btnSN.Visible Then
                MsgBox("Please fill the borrower's first name.", MsgBoxStyle.Information, "Info")
            Else
                MsgBox("Please fill the corporate trade name.", MsgBoxStyle.Information, "Info")
            End If
            TxtFirstN_B.Focus()
            Exit Sub
        End If
        If TxtLastN_B.Text = "" And btnSN.Visible Then
            MsgBox("Please fill the borrower's last name.", MsgBoxStyle.Information, "Info")
            TxtLastN_B.Focus()
            Exit Sub
        End If

        If Trigger = "D&raft" Or Trigger = "Update Draft" Then
        Else
            If dNetDisposable.Value < GMA Then
                If MsgBox("Insufficient Income! would you like to proceed?", MsgBoxStyle.YesNo, "Info") = MsgBoxResult.No Then
                    Exit Sub
                End If
            End If
            If cbxAddressC_B.Text = "" Then
                MsgBox("Please fill/select address.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabBorrower
                cbxAddressC_B.Focus()
                cbxAddressC_B.DroppedDown = True
                Exit Sub
            End If
            If cbxResidence.Text = "" And btnSN.Visible Then
                MsgBox("Please fill residence.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabBorrower
                cbxResidence.Focus()
                Exit Sub
            End If
            If txtConfirmed.Text = "" And btnSN.Visible Then
                MsgBox("Please fill as confirmed by.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabBorrower
                txtConfirmed.Focus()
                Exit Sub
            End If
            If txtLengthStay.Text = "" And btnSN.Visible Then
                MsgBox("Please fill length of stay.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabBorrower
                txtLengthStay.Focus()
                Exit Sub
            End If
            If DateValue(DtpBirth_B.Value.AddYears(18)) > DateValue(Date.Now) And btnSN.Visible Then
                SuperTabControl1.SelectedTab = tabBorrower
                If MsgBoxYes("Borrower's age is below 18 years old, are you sure you would like to proceed?") = MsgBoxResult.No Then
                    Exit Sub
                End If
            ElseIf DateValue(DtpBirth_B.Value.AddYears(61)) <= datevalue(Date.Now) And btnSN.Visible Then
                SuperTabControl1.SelectedTab = tabBorrower
                If MsgBoxYes("Borrower's age is 61 or above, are you sure you would like to proceed?") = MsgBoxResult.No Then
                    Exit Sub
                End If
            End If
            If dMonthly_B.Value = 0 And dBusinessIncome_B.Value = 0 Then
                MsgBox("Please fill monthly income of the borrower.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabIncome
                dMonthly_B.Focus()
                Exit Sub
            End If
            If btnVehicleAppraisal.Enabled Then
                If GridView1.RowCount = 0 Then
                    MsgBox("Please add a collateral to proceed.", MsgBoxStyle.Information, "Info")
                    SuperTabControl1.SelectedTab = tabAppraisal
                    btnVehicleAppraisal.Focus()
                    Exit Sub
                End If
            End If
            If btnRealEstate.Enabled Then
                If GridView2.RowCount = 0 Then
                    MsgBox("Please add a collateral to proceed.", MsgBoxStyle.Information, "Info")
                    SuperTabControl1.SelectedTab = tabAppraisal
                    btnRealEstate.Focus()
                    Exit Sub
                End If
            End If
            If cbxGood.Checked = False And cbxFair.Checked = False And cbxPoor.Checked = False And txtCreditor_1.Text.Trim <> "" Then
                MsgBox("Please select credit rating.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabCI
                SuperTabControl2.SelectedTab = tabCredit
                Exit Sub
            End If
            If rNarrative.Text = "" Then
                MsgBox("Please fill your narrative remarks.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabCI
                SuperTabControl2.SelectedTab = tabProperty
                Exit Sub
            End If
        End If

        Dim Civil_B As String = ""
        If cbxSingle_B.Checked Then
            Civil_B = "Single"
        ElseIf cbxMarried_B.Checked Then
            Civil_B = "Married"
        ElseIf cbxSeparated_B.Checked Then
            Civil_B = "Separated"
        ElseIf cbxWidowed_B.Checked Then
            Civil_B = "Widowed"
        End If

        Dim House_B As String = ""
        If cbxOwned_B.Checked Then
            House_B = "Owned"
        ElseIf cbxFree_B.Checked Then
            House_B = "Free"
        ElseIf cbxRented_B.Checked Then
            House_B = "Rented"
        End If

        Dim EmplStatus_B As String = ""
        If cbxCasual_B.Checked Then
            EmplStatus_B = "Casual"
        ElseIf cbxTemporary_B.Checked Then
            EmplStatus_B = "Temporary"
        ElseIf cbxPermanent_B.Checked Then
            EmplStatus_B = "Permanent"
        End If

        Dim AccountT_1 As String = ""
        If cbxSA_1.Checked Then
            AccountT_1 = "SA"
        ElseIf cbxCA_1.Checked Then
            AccountT_1 = "CA"
        End If
        Dim AccountT_2 As String = ""
        If cbxSA_2.Checked Then
            AccountT_2 = "SA"
        ElseIf cbxCA_2.Checked Then
            AccountT_2 = "CA"
        End If

        Dim CreditRating As String = ""
        If cbxGood.Checked Then
            CreditRating = "GOOD"
        ElseIf cbxFair.Checked Then
            CreditRating = "FAIR"
        ElseIf cbxPoor.Checked Then
            CreditRating = "POOR"
        End If

        Dim RecommendedFor As String = ""
        If cbxApproval.Checked Then
            RecommendedFor = "APPROVAL"
        ElseIf cbxDisapproval.Checked Then
            RecommendedFor = "DISAPPROVAL"
        End If

        Dim Findings As String = ""
        If cbxPositive.Checked Then
            Findings = "Positive"
        ElseIf cbxNegative.Checked Then
            Findings = "Negative"
        ElseIf cbxUnestablished.Checked Then
            Findings = "Unestablished"
        End If

        Collateral = ""
        RecommendedLoan = 0
        TotalAppraised = 0
        For x As Integer = 0 To GridView1.RowCount - 1
            Collateral = If(Collateral = "", "", Collateral & ", ") & GridView1.GetRowCellValue(x, "Collateral")
            RecommendedLoan += GridView1.GetRowCellValue(x, "LoanableValue")
            TotalAppraised += GridView1.GetRowCellValue(x, "AppraisedValue")
        Next
        For x As Integer = 0 To GridView2.RowCount - 1
            Collateral = If(Collateral = "", "", Collateral & ", ") & GridView2.GetRowCellValue(x, "Collateral")
            RecommendedLoan += GridView2.GetRowCellValue(x, "LoanableValue")
            TotalAppraised += GridView2.GetRowCellValue(x, "AppraisedValue")
        Next
        If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
            If MsgBoxYes(String.Format("Are you sure you want to {0} of this data?", If(Trigger = "D&raft", "save a draft", "save"))) = MsgBoxResult.Yes Then

                Cursor = Cursors.WaitCursor
                GetCreditInvestigation()

                Dim SQL As String = "INSERT INTO credit_investigation SET"
                SQL &= String.Format(" CINumber = '{0}', ", txtCINumber.Text)
                SQL &= String.Format(" trans_date = '{0}', ", FormatDatePicker(dtpDate))
                SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                SQL &= String.Format(" Prefix_B = '{0}', ", CbxPrefix_B.Text)
                SQL &= String.Format(" FirstN_B = '{0}', ", TxtFirstN_B.Text)
                SQL &= String.Format(" MiddleN_B = '{0}', ", TxtMiddleN_B.Text)
                SQL &= String.Format(" LastN_B = '{0}', ", TxtLastN_B.Text)
                SQL &= String.Format(" Suffix_B = '{0}', ", cbxSuffix_B.Text)
                SQL &= String.Format(" NoC_B = '{0}', ", txtNoC_B.Text)
                SQL &= String.Format(" StreetC_B = '{0}', ", txtStreetC_B.Text)
                SQL &= String.Format(" BarangayC_B = '{0}', ", txtBarangayC_B.Text)
                SQL &= String.Format(" `AddressC_B-ID` = '{0}', ", ValidateComboBox(cbxAddressC_B))
                SQL &= String.Format(" AddressC_B = '{0}', ", cbxAddressC_B.Text)

                SQL &= String.Format(" Residence_B = '{0}', ", cbxResidence.Text)
                SQL &= String.Format(" House_B = '{0}', ", House_B)
                SQL &= String.Format(" Rent_B = '{0}', ", dRent_B.Value)
                SQL &= String.Format(" AsConfirmed = '{0}', ", txtConfirmed.Text)
                SQL &= String.Format(" LenghtOfStay = '{0}', ", txtLengthStay.Text)
                SQL &= String.Format(" Neighborhood = '{0}', ", cbxNeighborhood.Text)
                SQL &= String.Format(" Birth_B = '{0}', ", FormatDatePicker(DtpBirth_B))
                SQL &= String.Format(" Civil_B = '{0}', ", Civil_B)

                SQL &= String.Format(" Prefix_D1 = '{0}', ", CbxPrefix_1.Text)
                SQL &= String.Format(" FirstN_D1 = '{0}', ", TxtFirstN_1.Text)
                SQL &= String.Format(" MiddleN_D1 = '{0}', ", TxtMiddleN_1.Text)
                SQL &= String.Format(" LastN_D1 = '{0}', ", TxtLastN_1.Text)
                SQL &= String.Format(" Suffix_D1 = '{0}', ", cbxSuffix_1.Text)
                SQL &= String.Format(" Age_D1 = '{0}', ", iAge_D1.Value)
                SQL &= String.Format(" Grade_D1 = '{0}', ", txtGrade_1.Text)
                SQL &= String.Format(" School_D1 = '{0}', ", txtSchool_1.Text)
                SQL &= String.Format(" SchoolAddress_D1 = '{0}', ", txtSchoolAddress_1.Text)
                SQL &= String.Format(" Prefix_D2 = '{0}', ", CbxPrefix_2.Text)
                SQL &= String.Format(" FirstN_D2 = '{0}', ", TxtFirstN_2.Text)
                SQL &= String.Format(" MiddleN_D2 = '{0}', ", TxtMiddleN_2.Text)
                SQL &= String.Format(" LastN_D2 = '{0}', ", TxtLastN_2.Text)
                SQL &= String.Format(" Suffix_D2 = '{0}', ", cbxSuffix_2.Text)
                SQL &= String.Format(" Age_D2 = '{0}', ", iAge_D2.Value)
                SQL &= String.Format(" Grade_D2 = '{0}', ", txtGrade_2.Text)
                SQL &= String.Format(" School_D2 = '{0}', ", txtSchool_2.Text)
                SQL &= String.Format(" SchoolAddress_D2 = '{0}', ", txtSchoolAddress_2.Text)
                SQL &= String.Format(" Prefix_D3 = '{0}', ", CbxPrefix_3.Text)
                SQL &= String.Format(" FirstN_D3 = '{0}', ", TxtFirstN_3.Text)
                SQL &= String.Format(" MiddleN_D3 = '{0}', ", TxtMiddleN_3.Text)
                SQL &= String.Format(" LastN_D3 = '{0}', ", TxtLastN_3.Text)
                SQL &= String.Format(" Suffix_D3 = '{0}', ", cbxSuffix_3.Text)
                SQL &= String.Format(" Age_D3 = '{0}', ", iAge_D3.Value)
                SQL &= String.Format(" Grade_D3 = '{0}', ", txtGrade_3.Text)
                SQL &= String.Format(" School_D3 = '{0}', ", txtSchool_3.Text)
                SQL &= String.Format(" SchoolAddress_D3 = '{0}', ", txtSchoolAddress_3.Text)
                SQL &= String.Format(" Prefix_D4 = '{0}', ", CbxPrefix_4.Text)
                SQL &= String.Format(" FirstN_D4 = '{0}', ", TxtFirstN_4.Text)
                SQL &= String.Format(" MiddleN_D4 = '{0}', ", TxtMiddleN_4.Text)
                SQL &= String.Format(" LastN_D4 = '{0}', ", TxtLastN_4.Text)
                SQL &= String.Format(" Suffix_D4 = '{0}', ", cbxSuffix_4.Text)
                SQL &= String.Format(" Age_D4 = '{0}', ", iAge_D4.Value)
                SQL &= String.Format(" Grade_D4 = '{0}', ", txtGrade_4.Text)
                SQL &= String.Format(" School_D4 = '{0}', ", txtSchool_4.Text)
                SQL &= String.Format(" SchoolAddress_D4 = '{0}', ", txtSchoolAddress_4.Text)

                SQL &= String.Format(" Employer_B = '{0}', ", cbxEmployer_B.Text)
                SQL &= String.Format(" EmployerAddress_B = '{0}', ", txtEmployerAddress_B.Text)
                SQL &= String.Format(" Hired_B = '{0}', ", FormatDatePicker(dtpHired_B))
                SQL &= String.Format(" YearHired = '{0}', ", If(cbxYearHired.Checked, 1, 0))
                SQL &= String.Format(" EmploymentStat_B = '{0}', ", EmplStatus_B)
                SQL &= String.Format(" Position_B = '{0}', ", cbxPosition_B.Text)
                SQL &= String.Format(" Monthly_B = '{0}', ", dMonthly_B.Value)
                SQL &= String.Format(" BusinessName_B = '{0}', ", txtBusinessName_B.Text)
                SQL &= String.Format(" BusinessAddress_B = '{0}', ", txtBusinessAddress_B.Text)
                SQL &= String.Format(" BusinessStarted = '{0}', ", FormatDatePicker(dtpBusinessStarted))
                SQL &= String.Format(" NatureBusiness_B = '{0}', ", cbxBusinessNature.Text)
                SQL &= String.Format(" Capital_B = '{0}', ", dCapital_B.Value)
                SQL &= String.Format(" NoEmployees_B = '{0}', ", iNoEmployees_B.Value)
                SQL &= String.Format(" BusinessStock = '{0}', ", dBusinessStock.Value)
                SQL &= String.Format(" BusinessVehicle = '{0}', ", txtBusinessVehicle.Text)
                SQL &= String.Format(" BusinessIncome_B = '{0}', ", dBusinessIncome_B.Value)
                SQL &= String.Format(" BusinessPermit = '{0}', ", txtBusinessPermit.Text)
                SQL &= String.Format(" OtherIncome_B = '{0}', ", txtOtherIncome_B.Text)
                SQL &= String.Format(" OtherIncome_B_Amount = '{0}', ", dOtherIncome_B.Value)
                SQL &= String.Format(" Creditor_1 = '{0}', ", txtCreditor_1.Text)
                SQL &= String.Format(" CreditAddress_1 = '{0}', ", txtCreditAddress_1.Text)
                SQL &= String.Format(" CreditGranted_1 = '{0}', ", FormatDatePicker(dtpCreditGranted_1))
                SQL &= String.Format(" Term_1 = '{0}', ", iTerm_1.Value)
                SQL &= String.Format(" AmountGranted_1 = '{0}', ", dAmountGranted_1.Value)
                SQL &= String.Format(" Balance_1 = '{0}', ", dBalance_1.Value)
                SQL &= String.Format(" CreditPayment_1 = '{0}', ", dCreditPayment_1.Value)
                SQL &= String.Format(" CreditRemarks_1 = '{0}', ", txtCreditRemarks_1.Text)
                SQL &= String.Format(" Creditor_2 = '{0}', ", txtCreditor_2.Text)
                SQL &= String.Format(" CreditAddress_2 = '{0}', ", txtCreditAddress_2.Text)
                SQL &= String.Format(" CreditGranted_2 = '{0}', ", FormatDatePicker(dtpCreditGranted_2))
                SQL &= String.Format(" Term_2 = '{0}', ", iTerm_2.Value)
                SQL &= String.Format(" AmountGranted_2 = '{0}', ", dAmountGranted_2.Value)
                SQL &= String.Format(" Balance_2 = '{0}', ", dBalance_2.Value)
                SQL &= String.Format(" CreditPayment_2 = '{0}', ", dCreditPayment_2.Value)
                SQL &= String.Format(" CreditRemarks_2 = '{0}', ", txtCreditRemarks_2.Text)

                SQL &= String.Format(" Bank_1 = '{0}', ", txtBank_1.Text)
                SQL &= String.Format(" Branch_1 = '{0}', ", txtBranch_1.Text)
                SQL &= String.Format(" AccountT_1 = '{0}', ", AccountT_1)
                SQL &= String.Format(" SA_1 = '{0}', ", txtSA_1.Text)
                SQL &= String.Format(" AverageBalance_1 = '{0}', ", dAverageBalance_1.Value)
                SQL &= String.Format(" Opened_1 = '{0}', ", txtOpened_1.Text)
                SQL &= String.Format(" Bank_2 = '{0}', ", txtBank_2.Text)
                SQL &= String.Format(" Branch_2 = '{0}', ", txtBranch_2.Text)
                SQL &= String.Format(" AccountT_2 = '{0}', ", AccountT_2)
                SQL &= String.Format(" SA_2 = '{0}', ", txtSA_2.Text)
                SQL &= String.Format(" AverageBalance_2 = '{0}', ", dAverageBalance_2.Value)
                SQL &= String.Format(" Opened_2 = '{0}', ", txtOpened_2.Text)

                SQL &= String.Format(" CreditRating = '{0}', ", CreditRating)
                SQL &= String.Format(" RecommendationFor = '{0}', ", RecommendedFor)
                SQL &= String.Format(" Rec_ApprovedAmount = '{0}', ", dApprovedAmount.Value)
                SQL &= String.Format(" Rec_ApprovedTerms = '{0}', ", iApprovedTerms.Value)
                SQL &= String.Format(" Rec_ApprovedRate = '{0}', ", dApprovedRate.Value)
                SQL &= String.Format(" Rec_PDC = '{0}', ", If(cbxPDC.Checked, 1, 0))
                SQL &= String.Format(" Rec_NoPDC = '{0}', ", If(cbxNoPDC.Checked, 1, 0))
                SQL &= String.Format(" Rec_Remarks = '{0}', ", rRecommendation.Text)
                SQL &= String.Format(" Title = '{0}', ", txtTitle.Text)
                SQL &= String.Format(" CaseNum = '{0}', ", txtCaseNum.Text)
                SQL &= String.Format(" DateFilled = '{0}', ", FormatDatePicker(dtpDateFilled))
                SQL &= String.Format(" Court = '{0}', ", cbxCourt.Text)
                SQL &= String.Format(" CaseNature = '{0}', ", cbxCaseNature.Text)
                SQL &= String.Format(" AmountInvolved = '{0}', ", dAmountInvolved.Value)
                SQL &= String.Format(" CaseStatus = '{0}', ", cbxCaseStatus.Text)
                SQL &= String.Format(" Findings = '{0}', ", txtFindings.Text)
                SQL &= String.Format(" FindingsStat = '{0}', ", Findings)
                SQL &= String.Format(" CACPI = '{0}', ", txtCACPI.Text)

                SQL &= String.Format(" Location_1 = '{0}', ", txtLocation_1.Text)
                SQL &= String.Format(" TCT_1 = '{0}', ", txtTCT_1.Text)
                SQL &= String.Format(" Area_1 = '{0}', ", dArea_1.Value)
                SQL &= String.Format(" PropertiesRemarks_1 = '{0}', ", txtPropertiesRemarks_1.Text)
                SQL &= String.Format(" Location_2 = '{0}', ", txtLocation_2.Text)
                SQL &= String.Format(" TCT_2 = '{0}', ", txtTCT_2.Text)
                SQL &= String.Format(" Area_2 = '{0}', ", dArea_2.Value)
                SQL &= String.Format(" PropertiesRemarks_2 = '{0}', ", txtPropertiesRemarks_2.Text)

                SQL &= String.Format(" Vehicle_1 = '{0}', ", txtVehicle_1.Text)
                SQL &= String.Format(" Year_1 = '{0}', ", FormatDatePicker(dtpYear_1))
                SQL &= String.Format(" WhomAcquired_1 = '{0}', ", txtWhomAcquired_1.Text)
                SQL &= String.Format(" VehicleRemarks_1 = '{0}', ", txtVehicleRemarks_1.Text)
                SQL &= String.Format(" Vehicle_2 = '{0}', ", txtVehicle_2.Text)
                SQL &= String.Format(" Year_2 = '{0}', ", FormatDatePicker(dtpYear_2))
                SQL &= String.Format(" WhomAcquired_2 = '{0}', ", txtWhomAcquired_2.Text)
                SQL &= String.Format(" VehicleRemarks_2 = '{0}', ", txtVehicleRemarks_2.Text)

                SQL &= String.Format(" OtherProperties = '{0}', ", txtOtherProperties.Text)
                SQL &= String.Format(" Narrative = '{0}', ", rNarrative.Text.InsertQuote)
                SQL &= String.Format(" Ex_TotalDisposable = '{0}', ", dTotalDisposable.Value)
                SQL &= String.Format(" Ex_Living = '{0}', ", dLiving.Value)
                SQL &= String.Format(" Ex_Clothing = '{0}', ", dClothing.Value)
                SQL &= String.Format(" Ex_Education = '{0}', ", dEducation.Value)
                SQL &= String.Format(" Ex_Transportation = '{0}', ", dTransportation.Value)
                SQL &= String.Format(" Ex_Lights = '{0}', ", dLighths.Value)
                SQL &= String.Format(" Ex_Insurance = '{0}', ", dInsurance.Value)
                SQL &= String.Format(" Ex_Amortization = '{0}', ", dAmortization.Value)
                SQL &= String.Format(" Ex_Miscellaneous = '{0}', ", dMiscellaneous.Value)
                SQL &= String.Format(" Ex_TotalExpenses = '{0}', ", dTotalExpenses.Value)
                SQL &= String.Format(" Ex_NetDisposable = '{0}', ", dNetDisposable.Value)
                SQL &= String.Format(" Ex_TMFI = '{0}', ", dTMFI.Value)
                SQL &= String.Format(" Ex_TMDI = '{0}', ", dTMDI.Value)
                SQL &= String.Format(" Ex_Remarks = '{0}', ", txtExpenseRemarks.Text.InsertQuote)
                SQL &= String.Format(" PurposeLoan = '{0}', ", rPurposeLoan.Text.InsertQuote)
                SQL &= String.Format(" Others = '{0}', ", rOthers.Text.InsertQuote)
                SQL &= String.Format(" AmountApplied = '{0}', ", AmountApplied)
                SQL &= String.Format(" LoanType = '{0}', ", Mortgage)
                SQL &= String.Format(" Product = '{0}', ", Product)
                SQL &= String.Format(" Collateral = '{0}', ", Collateral)
                SQL &= String.Format(" TotalAppraised = '{0}', ", TotalAppraised)
                SQL &= String.Format(" Loanable = '{0}', ", RecommendedLoan)

                SQL &= String.Format(" CapitalP = '{0}', ", dCapitalP.Value)
                SQL &= String.Format(" FuelMaintenanceP = '{0}', ", dFuelMaintenanceP.Value)
                SQL &= String.Format(" UtilitiesP = '{0}', ", dUtilitiesP.Value)
                SQL &= String.Format(" SalariesWagesP = '{0}', ", dSalariesWagesP.Value)
                SQL &= String.Format(" BMiscellaneousP = '{0}', ", dBMiscellaneousP.Value)
                SQL &= String.Format(" BOthersP = '{0}', ", dBOthersP.Value)
                If Trigger = "D&raft" Then
                    SQL &= " `status` = 'DRAFT', "
                End If
                SQL &= String.Format(" Branch_ID = '{0}', ", Branch_ID)
                SQL &= String.Format(" User_Code = '{0}', ", User_Code)
                SQL &= String.Format(" C1 = '{0}',", txtC1.Text.InsertQuote)
                SQL &= String.Format(" C2 = '{0}',", txtC2.Text.InsertQuote)
                SQL &= String.Format(" C3 = '{0}',", txtC3.Text.InsertQuote)
                SQL &= String.Format(" C4 = '{0}',", txtC4.Text.InsertQuote)
                SQL &= String.Format(" C5 = '{0}',", txtC5.Text.InsertQuote)
                SQL &= String.Format(" C6 = '{0}',", txtC6.Text.InsertQuote)
                SQL &= String.Format(" C7 = '{0}',", txtC7.Text.InsertQuote)
                SQL &= String.Format(" C8 = '{0}',", txtC8.Text.InsertQuote)
                SQL &= String.Format(" C9 = '{0}',", txtC9.Text.InsertQuote)
                SQL &= String.Format(" IncludeSpouseBusiness = '{0}', ", If(cbxIncludeSpouseBusiness.Checked, 1, 0))
                SQL &= String.Format(" IncludeC1 = '{0}', ", If(cbxIncludeC1.Checked, 1, 0))
                SQL &= String.Format(" IncludeC2 = '{0}', ", If(cbxIncludeC2.Checked, 1, 0))
                SQL &= String.Format(" IncludeC3 = '{0}', ", If(cbxIncludeC3.Checked, 1, 0))
                SQL &= String.Format(" IncludeC4 = '{0}', ", If(cbxIncludeC4.Checked, 1, 0))
                SQL &= String.Format(" PreparedID = '{0}',", Empl_ID)
                SQL &= String.Format(" Branch_Code = '{0}';", Branch_Code)

                SQL &= String.Format(" UPDATE credit_application SET CI_status = 'ONGOING', Borrower_S = '{1}', Borrower_C1 = '{2}', Borrower_C2 = '{3}', Borrower_C3 = '{4}', Borrower_C4 = '{5}' WHERE CreditNumber = '{0}';", CreditNumber, If(cbxSpouse_B.Checked, 1, 0), If(cbxCoMaker1_B.Checked, 1, 0), If(cbxCoMaker2_B.Checked, 1, 0), If(cbxCoMaker3_B.Checked, 1, 0), If(cbxCoMaker4_B.Checked, 1, 0))
                For x As Integer = 0 To GridView1.RowCount - 1
                    SQL &= String.Format("UPDATE appraise_ve SET `status` = 'ACTIVE' WHERE CollateralNumber = '{0}' AND `status` = 'PENDING';", GridView1.GetRowCellValue(x, "Col_ID"))
                    SQL &= String.Format("UPDATE collateral_ve SET `status` = 'ACTIVE', CINumber = '{1}' WHERE CollateralNumber = '{0}' AND `status` = 'PENDING';", GridView1.GetRowCellValue(x, "Col_ID"), txtCINumber.Text)
                Next
                For x As Integer = 0 To GridView2.RowCount - 1
                    SQL &= String.Format("UPDATE appraise_re SET `status` = 'ACTIVE' WHERE CollateralNumber = '{0}' AND `status` = 'PENDING';", GridView2.GetRowCellValue(x, "Col_ID"))
                    SQL &= String.Format("UPDATE collateral_re SET `status` = 'ACTIVE', CINumber = '{1}' WHERE CollateralNumber = '{0}' AND `status` = 'PENDING';", GridView2.GetRowCellValue(x, "Col_ID"), txtCINumber.Text)
                Next

                If txtPath_B.Text <> "" Then
                    SaveImage(pb_B, "Borrower", False)
                End If
                If txtPath_S.Text <> "" Then
                    SaveImage(pb_Spouse, "Spouse", False)
                End If
                If ChangeSketch Then
                    SaveImage(pbSketch, "Sketch", False)
                End If

                SpouseID = DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 1,7,'0')) FROM profile_spouse WHERE branch_id = '{0}';", Branch_ID))
                If TxtFirstN_S.Text <> "" And TxtFirstN_S.Tag = "" Then
                    Dim Gender_S As String = ""
                    If vMale_S Then
                        Gender_S = "Male"
                    ElseIf vFemale_S Then
                        Gender_S = "Female"
                    End If
                    Dim House_S As String = ""
                    If vOwned_S Then
                        House_S = "Owned"
                    ElseIf vFree_S Then
                        House_S = "Free"
                    ElseIf vRented_S Then
                        House_S = "Rented"
                    End If
                    Dim EmplStatus_S As String = ""
                    If vCasual_S Then
                        EmplStatus_S = "Casual"
                    ElseIf vTemporary_S Then
                        EmplStatus_S = "Temporary"
                    ElseIf vPermanent_S Then
                        EmplStatus_S = "Permanent"
                    End If

                    SQL &= "INSERT INTO profile_spouse SET"
                    SQL &= String.Format(" SpouseID = '{0}', ", SpouseID)
                    SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                    SQL &= String.Format(" Prefix_S = '{0}', ", CbxPrefix_S.Text)
                    SQL &= String.Format(" FirstN_S = '{0}', ", TxtFirstN_S.Text)
                    SQL &= String.Format(" MiddleN_S = '{0}', ", TxtMiddleN_S.Text)
                    SQL &= String.Format(" LastN_S = '{0}', ", TxtLastN_S.Text)
                    SQL &= String.Format(" Suffix_S = '{0}', ", cbxSuffix_S.Text)
                    SQL &= String.Format(" Prefix_M = '{0}', ", vPrefix_M)
                    SQL &= String.Format(" FirstN_M = '{0}', ", vFirstN_M)
                    SQL &= String.Format(" MiddleN_M = '{0}', ", vMiddleN_M)
                    SQL &= String.Format(" LastN_M = '{0}', ", vLastN_M)
                    SQL &= String.Format(" Suffix_M = '{0}', ", vSuffix_M)
                    SQL &= String.Format(" NoC_S = '{0}', ", vNoC_S)
                    SQL &= String.Format(" StreetC_S = '{0}', ", vStreetC_S)
                    SQL &= String.Format(" BarangayC_S = '{0}', ", vBarangayC_S)
                    SQL &= String.Format(" `AddressC_S-ID` = '{0}', ", vAddressC_S_ID)
                    SQL &= String.Format(" AddressC_S = '{0}', ", vAddressC_S)
                    SQL &= String.Format(" NoP_S = '{0}', ", vNoP_S)
                    SQL &= String.Format(" StreetP_S = '{0}', ", vStreetP_S)
                    SQL &= String.Format(" BarangayP_S = '{0}', ", vBarangayP_S)
                    SQL &= String.Format(" `AddressP_S-ID` = '{0}', ", vAddressP_S_ID)
                    SQL &= String.Format(" AddressP_S = '{0}', ", vAddressP_S)
                    SQL &= String.Format(" Birth_S = '{0}', ", If(vBirth_S = "", "", Format(CDate(vBirth_S), "yyyy-MM-dd")))
                    SQL &= String.Format(" `PlaceBirth_S-ID` = '{0}', ", vPlaceBirth_S_ID)
                    SQL &= String.Format(" PlaceBirth_S = '{0}', ", vPlaceBirth_S)
                    SQL &= String.Format(" Gender_S = '{0}', ", Gender_S)
                    SQL &= String.Format(" Citizenship_S = '{0}', ", vCitizenship_S)
                    SQL &= String.Format(" TIN_S = '{0}', ", vTIN_S)
                    SQL &= String.Format(" Telephone_S = '{0}', ", vTelephone_S)
                    SQL &= String.Format(" SSS_S = '{0}', ", vSSS_S)
                    SQL &= String.Format(" Mobile_S = '{0}', ", vMobile_S)
                    SQL &= String.Format(" Email_S = '{0}', ", vEmail_S)
                    SQL &= String.Format(" House_S = '{0}', ", House_S)
                    SQL &= String.Format(" Rent_S = '{0}', ", vRent_S)
                    SQL &= String.Format(" Employer_S = '{0}', ", vEmployer_S)
                    SQL &= String.Format(" EmployerAddress_S = '{0}', ", vEmpAddress_S)
                    SQL &= String.Format(" EmployerTelephone_S = '{0}', ", vEmpTelephone_S)
                    SQL &= String.Format(" Position_S = '{0}', ", vPosition_S)
                    SQL &= String.Format(" EmploymentStat_S = '{0}', ", EmplStatus_S)
                    SQL &= String.Format(" Hired_S = '{0}', ", If(vHired_S = "", "", Format(CDate(vHired_S), "yyyy-MM-dd")))
                    SQL &= String.Format(" YearHired_S = {0}, ", vYearHired_S)
                    SQL &= String.Format(" Supervisor_S = '{0}', ", vSupervisor_S)
                    SQL &= String.Format(" Monthly_S = '{0}', ", vSalary_S)
                    SQL &= String.Format(" BusinessName_S = '{0}', ", vBusinessName_S)
                    SQL &= String.Format(" BusinessAddress_S = '{0}', ", vBusinessAddress_S)
                    SQL &= String.Format(" BusinessTelephone_S = '{0}', ", vBusinessTelephone_S)
                    SQL &= String.Format(" NatureBusiness_S = '{0}', ", vNatureBusiness_S)
                    SQL &= String.Format(" YrsOperation_S = '{0}', ", vYrsOperation_S)
                    SQL &= String.Format(" BusinessIncome_S = '{0}', ", vBusinessIncome_S)
                    SQL &= String.Format(" NoEmployees_S = '{0}', ", vNoEmployees_S)
                    SQL &= String.Format(" Capital_S = '{0}', ", vCapital_S)
                    SQL &= String.Format(" Area_S = '{0}', ", vArea_S)
                    SQL &= String.Format(" Expiry_S = '{0}', ", If(vExpiry_S = "", "", Format(CDate(vExpiry_S), "yyyy-MM-dd")))
                    SQL &= String.Format(" Outlet_S = '{0}', ", vOutlet_S)
                    SQL &= String.Format(" OtherIncome_S = '{0}', ", vOtherIncome_S)
                    SQL &= String.Format(" `OtherIncome_S-Amount` = '{0}', ", vOtherIncomeD_S)
                    SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                    If ChangePicS Then
                        SaveImage(pb_Spouse, "Spouse", False)
                    End If

                    SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'Spouse' AND CreditNumber = '{0}';", CreditNumber)
                    For x As Integer = 0 To Industry_S.Properties.Items.Count - 1
                        If Industry_S.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                            SQL &= "INSERT INTO credit_application_industry SET"
                            SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                            SQL &= String.Format(" Industry_ID = '{0}', ", Industry_S.Properties.Items.Item(x).Value)
                            SQL &= String.Format(" Industry = '{0}', ", Industry_S.Properties.Items.Item(x).Description)
                            SQL &= " `Type` = 'Spouse';"
                        End If
                    Next
                    SQL &= String.Format("UPDATE profile_borrower_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'Spouse' AND BorrowerID = '{0}';", BorrowerID)
                    For x As Integer = 0 To Industry_S.Properties.Items.Count - 1
                        If Industry_S.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                            SQL &= "INSERT INTO profile_borrower_industry SET"
                            SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                            SQL &= String.Format(" Industry_ID = '{0}', ", Industry_S.Properties.Items.Item(x).Value)
                            SQL &= String.Format(" Industry = '{0}', ", Industry_S.Properties.Items.Item(x).Description)
                            SQL &= " `Type` = 'Spouse';"
                        End If
                    Next
                End If

                CoMakerID = DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 1,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))
                SQL &= String.Format("UPDATE credit_application_comaker SET `status` = 'CANCELLED' WHERE CreditNumber = '{0}';", CreditNumber)
                If TxtFirstN_C1.Text = "" Then
                Else
                    Dim Gender_C1 As String = ""
                    If vMale_C1 Then
                        Gender_C1 = "Male"
                    ElseIf vFemale_C1 Then
                        Gender_C1 = "Female"
                    End If
                    Dim Civil_C1 As String = ""
                    If vSingle_C1 Then
                        Civil_C1 = "Single"
                    ElseIf vMarried_C1 Then
                        Civil_C1 = "Married"
                    ElseIf vSeparated_C1 Then
                        Civil_C1 = "Separated"
                    ElseIf vWidowed_C1 Then
                        Civil_C1 = "Widowed"
                    End If
                    Dim House_C1 As String = ""
                    If vOwned_C1 Then
                        House_C1 = "Owned"
                    ElseIf vFree_C1 Then
                        House_C1 = "Free"
                    ElseIf vRented_C1 Then
                        House_C1 = "Rented"
                    End If
                    Dim EmplStatus_C1 As String = ""
                    If vCasual_C1 Then
                        EmplStatus_C1 = "Casual"
                    ElseIf vTemporary_C1 Then
                        EmplStatus_C1 = "Temporary"
                    ElseIf vPermanent_C1 Then
                        EmplStatus_C1 = "Permanent"
                    End If

                    Dim RelationID As Integer = 0
                    If vRelationship_C1 = "" Then
                    Else
                        RelationID = vRelationship_C1_ID
                    End If

                    SQL &= "INSERT INTO credit_application_comaker SET"
                    SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                    SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                    SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                    SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_1 <> "", ReferenceID_1, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 1,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                    SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C1.Text)
                    SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C1.Text)
                    SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C1.Text)
                    SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C1.Text)
                    SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C1.Text)
                    SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C1)
                    SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C1)
                    SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C1)
                    SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C1_ID)
                    SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C1)
                    SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C1)
                    SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C1)
                    SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C1)
                    SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C1_ID)
                    SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C1)
                    SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C1 = "", "", Format(CDate(vBirth_C1), "yyyy-MM-dd")))
                    SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C1_ID)
                    SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C1)
                    SQL &= String.Format(" Gender_C = '{0}', ", Gender_C1)
                    SQL &= String.Format(" Civil_C = '{0}', ", Civil_C1)
                    SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C1)
                    SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C1)
                    SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C1)
                    SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C1)
                    SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C1)
                    SQL &= String.Format(" Email_C = '{0}', ", vEmail_C1)
                    SQL &= String.Format(" House_C = '{0}', ", House_C1)
                    SQL &= String.Format(" Rent_C = '{0}', ", vRent_C1)
                    SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                    SQL &= String.Format(" Relation = '{0}',", vRelationship_C1)
                    SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C1)
                    SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C1)
                    SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C1)
                    SQL &= String.Format(" Position_C = '{0}', ", vPosition_C1)
                    SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C1)
                    SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C1 = "", "", Format(CDate(vHired_C1), "yyyy-MM-dd")))
                    SQL &= String.Format(" YearHired_C = {0}, ", vYearHired_C1)
                    SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C1)
                    SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C1)
                    SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C1)
                    SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C1)
                    SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C1)
                    SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C1)
                    SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C1)
                    SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C1)
                    SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C1)
                    SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C1)
                    SQL &= String.Format(" Area_C = '{0}', ", vArea_C1)
                    SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C1 = "", "", Format(CDate(vExpiry_C1), "yyyy-MM-dd")))
                    SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C1)
                    SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C1)
                    SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C1)
                    'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                    SQL &= String.Format(" Creditor_1 = '{0}', ", vCreditor_1_C1)
                    SQL &= String.Format(" CreditAddress_1 = '{0}', ", vCreditAddress_1_C1)
                    SQL &= String.Format(" CreditGranted_1 = '{0}', ", vCreditGranted_1_C1)
                    SQL &= String.Format(" Term_1 = '{0}', ", vTerm_1_C1)
                    SQL &= String.Format(" AmountGranted_1 = '{0}', ", vAmountGranted_1_C1)
                    SQL &= String.Format(" Balance_1 = '{0}', ", vBalance_1_C1)
                    SQL &= String.Format(" CreditPayment_1 = '{0}', ", vCreditPayment_1_C1)
                    SQL &= String.Format(" CreditRemarks_1 = '{0}', ", vCreditRemarks_1_C1)
                    SQL &= String.Format(" Creditor_2 = '{0}', ", vCreditor_2_C1)
                    SQL &= String.Format(" CreditAddress_2 = '{0}', ", vCreditAddress_2_C1)
                    SQL &= String.Format(" CreditGranted_2 = '{0}', ", vCreditGranted_2_C1)
                    SQL &= String.Format(" Term_2 = '{0}', ", vTerm_2_C1)
                    SQL &= String.Format(" AmountGranted_2 = '{0}', ", vAmountGranted_2_C1)
                    SQL &= String.Format(" Balance_2 = '{0}', ", vBalance_2_C1)
                    SQL &= String.Format(" CreditPayment_2 = '{0}', ", vCreditPayment_2_C1)
                    SQL &= String.Format(" CreditRemarks_2 = '{0}', ", vCreditRemarks_2_C1)
                    SQL &= String.Format(" Bank_1 = '{0}', ", vBank_1_C1)
                    SQL &= String.Format(" Branch_1 = '{0}', ", vBranch_1_C1)
                    SQL &= String.Format(" AccountT_1 = '{0}', ", vAccountT_1_C1)
                    SQL &= String.Format(" SA_1 = '{0}', ", vSA_1_C1)
                    SQL &= String.Format(" AverageBalance_1 = '{0}', ", vAverageBalance_1_C1)
                    SQL &= String.Format(" Opened_1 = '{0}', ", vOpened_1_C1)
                    SQL &= String.Format(" Bank_2 = '{0}', ", vBank_2_C1)
                    SQL &= String.Format(" Branch_2 = '{0}', ", vBranch_2_C1)
                    SQL &= String.Format(" AccountT_2 = '{0}', ", vAccountT_2_C1)
                    SQL &= String.Format(" SA_2 = '{0}', ", vSA_2_C1)
                    SQL &= String.Format(" AverageBalance_2 = '{0}', ", vAverageBalance_2_C1)
                    SQL &= String.Format(" Opened_2 = '{0}', ", vOpened_2_C1)
                    SQL &= String.Format(" CreditRating = '{0}', ", vCreditRating_C1)
                    SQL &= String.Format(" Rec_Remarks = '{0}', ", vRec_Remarks_C1)
                    SQL &= String.Format(" Title = '{0}', ", vTitle_C1)
                    SQL &= String.Format(" CaseNum = '{0}', ", vCaseNum_C1)
                    SQL &= String.Format(" DateFilled = '{0}', ", vDateFilled_C1)
                    SQL &= String.Format(" Court = '{0}', ", vCourt_C1)
                    SQL &= String.Format(" CaseNature = '{0}', ", vCaseNature_C1)
                    SQL &= String.Format(" AmountInvolved = '{0}', ", vAmountInvolved_C1)
                    SQL &= String.Format(" CaseStatus = '{0}', ", vCaseStatus_C1)
                    SQL &= String.Format(" Findings = '{0}', ", vFindings_C1)
                    SQL &= String.Format(" FindingsStat = '{0}', ", vFindingsStat_C1)
                    SQL &= String.Format(" CACPI = '{0}', ", vCACPI_C1)
                    SQL &= String.Format(" Location_1 = '{0}', ", vLocation_1_C1)
                    SQL &= String.Format(" TCT_1 = '{0}', ", vTCT_1_C1)
                    SQL &= String.Format(" Area_1 = '{0}', ", vArea_1_C1)
                    SQL &= String.Format(" PropertiesRemarks_1 = '{0}', ", vPropertiesRemarks_1_C1)
                    SQL &= String.Format(" Location_2 = '{0}', ", vLocation_2_C1)
                    SQL &= String.Format(" TCT_2 = '{0}', ", vTCT_2_C1)
                    SQL &= String.Format(" Area_2 = '{0}', ", vArea_2_C1)
                    SQL &= String.Format(" PropertiesRemarks_2 = '{0}', ", vPropertiesRemarks_2_C1)
                    SQL &= String.Format(" Vehicle_1 = '{0}', ", vVehicle_1_C1)
                    SQL &= String.Format(" Year_1 = '{0}', ", vYear_1_C1)
                    SQL &= String.Format(" WhomAcquired_1 = '{0}', ", vWhomAcquired_1_C1)
                    SQL &= String.Format(" VehicleRemarks_1 = '{0}', ", vVehicleRemarks_1_C1)
                    SQL &= String.Format(" Vehicle_2 = '{0}', ", vVehicle_2_C1)
                    SQL &= String.Format(" Year_2 = '{0}', ", vYear_2_C1)
                    SQL &= String.Format(" WhomAcquired_2 = '{0}', ", vWhomAcquired_2_C1)
                    SQL &= String.Format(" VehicleRemarks_2 = '{0}', ", vVehicleRemarks_2_C1)
                    SQL &= String.Format(" OtherProperties = '{0}', ", vOtherProperties_C1)
                    SQL &= String.Format(" Narrative = '{0}', ", vNarrative_C1.InsertQuote)
                    SQL &= String.Format(" Ex_TotalDisposable = '{0}', ", vEx_TotalDisposable_C1)
                    SQL &= String.Format(" Ex_Living = '{0}', ", vEx_Living_C1)
                    SQL &= String.Format(" Ex_Clothing = '{0}', ", vEx_Clothing_C1)
                    SQL &= String.Format(" Ex_Education = '{0}', ", vEx_Education_C1)
                    SQL &= String.Format(" Ex_Transportation = '{0}', ", vEx_Transportation_C1)
                    SQL &= String.Format(" Ex_Lights = '{0}', ", vEx_Lights_C1)
                    SQL &= String.Format(" Ex_Insurance = '{0}', ", vEx_Insurance_C1)
                    SQL &= String.Format(" Ex_Amortization = '{0}', ", vEx_Amortization_C1)
                    SQL &= String.Format(" Ex_Miscellaneous = '{0}', ", vEx_Miscellaneous_C1)
                    SQL &= String.Format(" Ex_TotalExpenses = '{0}', ", vEx_TotalExpenses_C1)
                    SQL &= String.Format(" Ex_NetDisposable = '{0}', ", vEx_NetDisposable_C1)
                    SQL &= String.Format(" Ex_TMFI = '{0}', ", vEx_TMFI_C1)
                    SQL &= String.Format(" Ex_TMDI = '{0}', ", vEx_TMDI_C1)
                    SQL &= String.Format(" Ex_Remarks = '{0}', ", vEx_Remarks_C1.InsertQuote)
                    SQL &= String.Format(" PurposeLoan = '{0}', ", vPurposeLoan_C1.InsertQuote)
                    SQL &= String.Format(" Others = '{0}', ", vOthers_C1.InsertQuote)
                    SQL &= String.Format(" C1 = '{0}',", vC1_C1.InsertQuote)
                    SQL &= String.Format(" C2 = '{0}',", vC2_C1.InsertQuote)
                    SQL &= String.Format(" C3 = '{0}',", vC3_C1.InsertQuote)
                    SQL &= String.Format(" C4 = '{0}',", vC4_C1.InsertQuote)
                    SQL &= String.Format(" C5 = '{0}',", vC5_C1.InsertQuote)
                    SQL &= String.Format(" C6 = '{0}',", vC6_C1.InsertQuote)
                    SQL &= String.Format(" C7 = '{0}',", vC7_C1.InsertQuote)
                    SQL &= String.Format(" C8 = '{0}',", vC8_C1.InsertQuote)
                    SQL &= String.Format(" C9 = '{0}',", vC9_C1.InsertQuote)
                    'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                    SQL &= String.Format(" `Rank` = {0}, ", 1)
                    SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                    If ChangePic1 Then
                        SaveImage(CoMaker1, "CoMaker1", True)
                    End If
                    If ChangeSketchC1 Then
                        SaveImage(SketchC1, "Sketch C1", True)
                    End If

                    SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker1' AND CreditNumber = '{0}';", CreditNumber)
                    For x As Integer = 0 To Industry_C1.Properties.Items.Count - 1
                        If Industry_C1.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                            SQL &= "INSERT INTO credit_application_industry SET"
                            SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                            SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C1.Properties.Items.Item(x).Value)
                            SQL &= String.Format(" Industry = '{0}', ", Industry_C1.Properties.Items.Item(x).Description)
                            SQL &= " `Type` = 'CoMaker1';"
                        End If
                    Next

                    'IDENTIFICATION DUMMY
                    SQL &= "INSERT INTO profile_borrowerid SET"
                    SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                    SQL &= " TIN = '', "
                    SQL &= " SSS = '', "
                    SQL &= " GSIS = '', "
                    SQL &= " PhilHealth = '', "
                    SQL &= " Senior = '', "
                    SQL &= " UMID = '', "
                    SQL &= " SEC = '', "
                    SQL &= " DTI = '', "
                    SQL &= " CDA = '', "
                    SQL &= " Cooperative = '', "
                    SQL &= " Drivers = '', "
                    SQL &= " dDrivers = '', "
                    SQL &= " VIN = '', "
                    SQL &= " dVIN = '', "
                    SQL &= " Passport = '', "
                    SQL &= " dPassport = '', "
                    SQL &= " PRC = '', "
                    SQL &= " dPRC = '', "
                    SQL &= " NBI = '', "
                    SQL &= " dNBI = '', "
                    SQL &= " Police = '', "
                    SQL &= " dPolice = '', "
                    SQL &= " Postal = '', "
                    SQL &= " dPostal = '', "
                    SQL &= " Barangay = '', "
                    SQL &= " dBarangay = '', "
                    SQL &= " OWWA = '', "
                    SQL &= " dOWWA = '', "
                    SQL &= " OFW = '', "
                    SQL &= " dOFW = '', "
                    SQL &= " Seaman = '', "
                    SQL &= " dSeaman = '', "
                    SQL &= " PNP = '', "
                    SQL &= " dPNP = '', "
                    SQL &= " AFP = '', "
                    SQL &= " dAFP = '', "
                    SQL &= " HDMF = '', "
                    SQL &= " dHDMF = '', "
                    SQL &= " PWD = '', "
                    SQL &= " dPWD = '', "
                    SQL &= " DSWD = '', "
                    SQL &= " dDSWD = '', "
                    SQL &= " ACR = '', "
                    SQL &= " dACR = '', "
                    SQL &= " DTI_Business = '', "
                    SQL &= " dDTI_Business = '', "
                    SQL &= " IBP = '', "
                    SQL &= " dIBP = '', "
                    SQL &= " FireArms = '', "
                    SQL &= " dFireArms = '', "
                    SQL &= " Government = '', "
                    SQL &= " dGovernment = '', "
                    SQL &= " Diplomat = '', "
                    SQL &= " dDiplomat = '', "
                    SQL &= " `National` = '', "
                    SQL &= " dNational = '', "
                    SQL &= " `Work` = '', "
                    SQL &= " dWork = '', "
                    SQL &= " GOCC = '', "
                    SQL &= " dGOCC = '', "
                    SQL &= " PLRA = '', "
                    SQL &= " dPLRA = '', "
                    SQL &= " Major = '', "
                    SQL &= " dMajor = '', "
                    SQL &= " Media = '', "
                    SQL &= " dMedia = '', "
                    SQL &= " Student = '', "
                    SQL &= " dStudent = '', "
                    SQL &= " SIRV = '', "
                    SQL &= " dSIRV = '',"
                    SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                    SQL &= " ID_Type = 'C1';"
                End If

                If TxtFirstN_C2.Text = "" Then
                Else
                    Dim Gender_C2 As String = ""
                    If vMale_C2 Then
                        Gender_C2 = "Male"
                    ElseIf vFemale_C2 Then
                        Gender_C2 = "Female"
                    End If
                    Dim Civil_C2 As String = ""
                    If vSingle_C2 Then
                        Civil_C2 = "Single"
                    ElseIf vMarried_C2 Then
                        Civil_C2 = "Married"
                    ElseIf vSeparated_C2 Then
                        Civil_C2 = "Separated"
                    ElseIf vWidowed_C2 Then
                        Civil_C2 = "Widowed"
                    End If
                    Dim House_C2 As String = ""
                    If vOwned_C2 Then
                        House_C2 = "Owned"
                    ElseIf vFree_C2 Then
                        House_C2 = "Free"
                    ElseIf vRented_C2 Then
                        House_C2 = "Rented"
                    End If
                    Dim EmplStatus_C2 As String = ""
                    If vCasual_C2 Then
                        EmplStatus_C2 = "Casual"
                    ElseIf vTemporary_C2 Then
                        EmplStatus_C2 = "Temporary"
                    ElseIf vPermanent_C2 Then
                        EmplStatus_C2 = "Permanent"
                    End If

                    Dim RelationID As Integer = 0
                    If vRelationship_C2 = "" Then
                    Else
                        RelationID = vRelationship_C1_ID
                    End If

                    SQL &= "INSERT INTO credit_application_comaker SET"
                    SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                    SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                    SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                    SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_2 <> "", ReferenceID_2, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 2,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                    SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C2.Text)
                    SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C2.Text)
                    SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C2.Text)
                    SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C2.Text)
                    SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C2.Text)
                    SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C2)
                    SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C2)
                    SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C2)
                    SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C2_ID)
                    SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C2)
                    SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C2)
                    SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C2)
                    SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C2)
                    SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C2_ID)
                    SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C2)
                    SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C2 = "", "", Format(CDate(vBirth_C2), "yyyy-MM-dd")))
                    SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C2_ID)
                    SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C2)
                    SQL &= String.Format(" Gender_C = '{0}', ", Gender_C2)
                    SQL &= String.Format(" Civil_C = '{0}', ", Civil_C2)
                    SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C2)
                    SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C2)
                    SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C2)
                    SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C2)
                    SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C2)
                    SQL &= String.Format(" Email_C = '{0}', ", vEmail_C2)
                    SQL &= String.Format(" House_C = '{0}', ", House_C2)
                    SQL &= String.Format(" Rent_C = '{0}', ", vRent_C2)
                    SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                    SQL &= String.Format(" Relation = '{0}',", vRelationship_C2)
                    SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C2)
                    SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C2)
                    SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C2)
                    SQL &= String.Format(" Position_C = '{0}', ", vPosition_C2)
                    SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C2)
                    SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C2 = "", "", Format(CDate(vHired_C2), "yyyy-MM-dd")))
                    SQL &= String.Format(" YearHired_C = {0}, ", vYearHired_C2)
                    SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C1)
                    SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C2)
                    SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C2)
                    SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C2)
                    SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C2)
                    SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C2)
                    SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C2)
                    SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C2)
                    SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C2)
                    SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C2)
                    SQL &= String.Format(" Area_C = '{0}', ", vArea_C2)
                    SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C2 = "", "", Format(CDate(vExpiry_C2), "yyyy-MM-dd")))
                    SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C2)
                    SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C2)
                    SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C2)
                    'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                    SQL &= String.Format(" Creditor_1 = '{0}', ", vCreditor_1_C2)
                    SQL &= String.Format(" CreditAddress_1 = '{0}', ", vCreditAddress_1_C2)
                    SQL &= String.Format(" CreditGranted_1 = '{0}', ", vCreditGranted_1_C2)
                    SQL &= String.Format(" Term_1 = '{0}', ", vTerm_1_C2)
                    SQL &= String.Format(" AmountGranted_1 = '{0}', ", vAmountGranted_1_C2)
                    SQL &= String.Format(" Balance_1 = '{0}', ", vBalance_1_C2)
                    SQL &= String.Format(" CreditPayment_1 = '{0}', ", vCreditPayment_1_C2)
                    SQL &= String.Format(" CreditRemarks_1 = '{0}', ", vCreditRemarks_1_C2)
                    SQL &= String.Format(" Creditor_2 = '{0}', ", vCreditor_2_C2)
                    SQL &= String.Format(" CreditAddress_2 = '{0}', ", vCreditAddress_2_C2)
                    SQL &= String.Format(" CreditGranted_2 = '{0}', ", vCreditGranted_2_C2)
                    SQL &= String.Format(" Term_2 = '{0}', ", vTerm_2_C2)
                    SQL &= String.Format(" AmountGranted_2 = '{0}', ", vAmountGranted_2_C2)
                    SQL &= String.Format(" Balance_2 = '{0}', ", vBalance_2_C2)
                    SQL &= String.Format(" CreditPayment_2 = '{0}', ", vCreditPayment_2_C2)
                    SQL &= String.Format(" CreditRemarks_2 = '{0}', ", vCreditRemarks_2_C2)
                    SQL &= String.Format(" Bank_1 = '{0}', ", vBank_1_C2)
                    SQL &= String.Format(" Branch_1 = '{0}', ", vBranch_1_C2)
                    SQL &= String.Format(" AccountT_1 = '{0}', ", vAccountT_1_C2)
                    SQL &= String.Format(" SA_1 = '{0}', ", vSA_1_C2)
                    SQL &= String.Format(" AverageBalance_1 = '{0}', ", vAverageBalance_1_C2)
                    SQL &= String.Format(" Opened_1 = '{0}', ", vOpened_1_C2)
                    SQL &= String.Format(" Bank_2 = '{0}', ", vBank_2_C2)
                    SQL &= String.Format(" Branch_2 = '{0}', ", vBranch_2_C2)
                    SQL &= String.Format(" AccountT_2 = '{0}', ", vAccountT_2_C2)
                    SQL &= String.Format(" SA_2 = '{0}', ", vSA_2_C2)
                    SQL &= String.Format(" AverageBalance_2 = '{0}', ", vAverageBalance_2_C2)
                    SQL &= String.Format(" Opened_2 = '{0}', ", vOpened_2_C2)
                    SQL &= String.Format(" CreditRating = '{0}', ", vCreditRating_C2)
                    SQL &= String.Format(" Rec_Remarks = '{0}', ", vRec_Remarks_C2)
                    SQL &= String.Format(" Title = '{0}', ", vTitle_C2)
                    SQL &= String.Format(" CaseNum = '{0}', ", vCaseNum_C2)
                    SQL &= String.Format(" DateFilled = '{0}', ", vDateFilled_C2)
                    SQL &= String.Format(" Court = '{0}', ", vCourt_C2)
                    SQL &= String.Format(" CaseNature = '{0}', ", vCaseNature_C2)
                    SQL &= String.Format(" AmountInvolved = '{0}', ", vAmountInvolved_C2)
                    SQL &= String.Format(" CaseStatus = '{0}', ", vCaseStatus_C2)
                    SQL &= String.Format(" Findings = '{0}', ", vFindings_C2)
                    SQL &= String.Format(" FindingsStat = '{0}', ", vFindingsStat_C2)
                    SQL &= String.Format(" CACPI = '{0}', ", vCACPI_C2)
                    SQL &= String.Format(" Location_1 = '{0}', ", vLocation_1_C2)
                    SQL &= String.Format(" TCT_1 = '{0}', ", vTCT_1_C2)
                    SQL &= String.Format(" Area_1 = '{0}', ", vArea_1_C2)
                    SQL &= String.Format(" PropertiesRemarks_1 = '{0}', ", vPropertiesRemarks_1_C2)
                    SQL &= String.Format(" Location_2 = '{0}', ", vLocation_2_C2)
                    SQL &= String.Format(" TCT_2 = '{0}', ", vTCT_2_C2)
                    SQL &= String.Format(" Area_2 = '{0}', ", vArea_2_C2)
                    SQL &= String.Format(" PropertiesRemarks_2 = '{0}', ", vPropertiesRemarks_2_C2)
                    SQL &= String.Format(" Vehicle_1 = '{0}', ", vVehicle_1_C2)
                    SQL &= String.Format(" Year_1 = '{0}', ", vYear_1_C2)
                    SQL &= String.Format(" WhomAcquired_1 = '{0}', ", vWhomAcquired_1_C2)
                    SQL &= String.Format(" VehicleRemarks_1 = '{0}', ", vVehicleRemarks_1_C2)
                    SQL &= String.Format(" Vehicle_2 = '{0}', ", vVehicle_2_C2)
                    SQL &= String.Format(" Year_2 = '{0}', ", vYear_2_C2)
                    SQL &= String.Format(" WhomAcquired_2 = '{0}', ", vWhomAcquired_2_C2)
                    SQL &= String.Format(" VehicleRemarks_2 = '{0}', ", vVehicleRemarks_2_C2)
                    SQL &= String.Format(" OtherProperties = '{0}', ", vOtherProperties_C2)
                    SQL &= String.Format(" Narrative = '{0}', ", vNarrative_C2.InsertQuote)
                    SQL &= String.Format(" Ex_TotalDisposable = '{0}', ", vEx_TotalDisposable_C2)
                    SQL &= String.Format(" Ex_Living = '{0}', ", vEx_Living_C2)
                    SQL &= String.Format(" Ex_Clothing = '{0}', ", vEx_Clothing_C2)
                    SQL &= String.Format(" Ex_Education = '{0}', ", vEx_Education_C2)
                    SQL &= String.Format(" Ex_Transportation = '{0}', ", vEx_Transportation_C2)
                    SQL &= String.Format(" Ex_Lights = '{0}', ", vEx_Lights_C2)
                    SQL &= String.Format(" Ex_Insurance = '{0}', ", vEx_Insurance_C2)
                    SQL &= String.Format(" Ex_Amortization = '{0}', ", vEx_Amortization_C2)
                    SQL &= String.Format(" Ex_Miscellaneous = '{0}', ", vEx_Miscellaneous_C2)
                    SQL &= String.Format(" Ex_TotalExpenses = '{0}', ", vEx_TotalExpenses_C2)
                    SQL &= String.Format(" Ex_NetDisposable = '{0}', ", vEx_NetDisposable_C2)
                    SQL &= String.Format(" Ex_TMFI = '{0}', ", vEx_TMFI_C2)
                    SQL &= String.Format(" Ex_TMDI = '{0}', ", vEx_TMDI_C2)
                    SQL &= String.Format(" Ex_Remarks = '{0}', ", vEx_Remarks_C2.InsertQuote)
                    SQL &= String.Format(" PurposeLoan = '{0}', ", vPurposeLoan_C2.InsertQuote)
                    SQL &= String.Format(" Others = '{0}', ", vOthers_C2.InsertQuote)
                    SQL &= String.Format(" C1 = '{0}',", vC1_C2.InsertQuote)
                    SQL &= String.Format(" C2 = '{0}',", vC2_C2.InsertQuote)
                    SQL &= String.Format(" C3 = '{0}',", vC3_C2.InsertQuote)
                    SQL &= String.Format(" C4 = '{0}',", vC4_C2.InsertQuote)
                    SQL &= String.Format(" C5 = '{0}',", vC5_C2.InsertQuote)
                    SQL &= String.Format(" C6 = '{0}',", vC6_C2.InsertQuote)
                    SQL &= String.Format(" C7 = '{0}',", vC7_C2.InsertQuote)
                    SQL &= String.Format(" C8 = '{0}',", vC8_C2.InsertQuote)
                    SQL &= String.Format(" C9 = '{0}',", vC9_C2.InsertQuote)
                    'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                    SQL &= String.Format(" `Rank` = {0}, ", 2)
                    SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                    If ChangePic2 Then
                        SaveImage(CoMaker2, "CoMaker2", True)
                    End If
                    If ChangeSketchC2 Then
                        SaveImage(SketchC2, "Sketch C2", True)
                    End If

                    SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker2' AND CreditNumber = '{0}';", CreditNumber)
                    For x As Integer = 0 To Industry_C2.Properties.Items.Count - 1
                        If Industry_C2.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                            SQL &= "INSERT INTO credit_application_industry SET"
                            SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                            SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C2.Properties.Items.Item(x).Value)
                            SQL &= String.Format(" Industry = '{0}', ", Industry_C2.Properties.Items.Item(x).Description)
                            SQL &= " `Type` = 'CoMaker2';"
                        End If
                    Next

                    'IDENTIFICATION DUMMY
                    SQL &= "INSERT INTO profile_borrowerid SET"
                    SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                    SQL &= " TIN = '', "
                    SQL &= " SSS = '', "
                    SQL &= " GSIS = '', "
                    SQL &= " PhilHealth = '', "
                    SQL &= " Senior = '', "
                    SQL &= " UMID = '', "
                    SQL &= " SEC = '', "
                    SQL &= " DTI = '', "
                    SQL &= " CDA = '', "
                    SQL &= " Cooperative = '', "
                    SQL &= " Drivers = '', "
                    SQL &= " dDrivers = '', "
                    SQL &= " VIN = '', "
                    SQL &= " dVIN = '', "
                    SQL &= " Passport = '', "
                    SQL &= " dPassport = '', "
                    SQL &= " PRC = '', "
                    SQL &= " dPRC = '', "
                    SQL &= " NBI = '', "
                    SQL &= " dNBI = '', "
                    SQL &= " Police = '', "
                    SQL &= " dPolice = '', "
                    SQL &= " Postal = '', "
                    SQL &= " dPostal = '', "
                    SQL &= " Barangay = '', "
                    SQL &= " dBarangay = '', "
                    SQL &= " OWWA = '', "
                    SQL &= " dOWWA = '', "
                    SQL &= " OFW = '', "
                    SQL &= " dOFW = '', "
                    SQL &= " Seaman = '', "
                    SQL &= " dSeaman = '', "
                    SQL &= " PNP = '', "
                    SQL &= " dPNP = '', "
                    SQL &= " AFP = '', "
                    SQL &= " dAFP = '', "
                    SQL &= " HDMF = '', "
                    SQL &= " dHDMF = '', "
                    SQL &= " PWD = '', "
                    SQL &= " dPWD = '', "
                    SQL &= " DSWD = '', "
                    SQL &= " dDSWD = '', "
                    SQL &= " ACR = '', "
                    SQL &= " dACR = '', "
                    SQL &= " DTI_Business = '', "
                    SQL &= " dDTI_Business = '', "
                    SQL &= " IBP = '', "
                    SQL &= " dIBP = '', "
                    SQL &= " FireArms = '', "
                    SQL &= " dFireArms = '', "
                    SQL &= " Government = '', "
                    SQL &= " dGovernment = '', "
                    SQL &= " Diplomat = '', "
                    SQL &= " dDiplomat = '', "
                    SQL &= " `National` = '', "
                    SQL &= " dNational = '', "
                    SQL &= " `Work` = '', "
                    SQL &= " dWork = '', "
                    SQL &= " GOCC = '', "
                    SQL &= " dGOCC = '', "
                    SQL &= " PLRA = '', "
                    SQL &= " dPLRA = '', "
                    SQL &= " Major = '', "
                    SQL &= " dMajor = '', "
                    SQL &= " Media = '', "
                    SQL &= " dMedia = '', "
                    SQL &= " Student = '', "
                    SQL &= " dStudent = '', "
                    SQL &= " SIRV = '', "
                    SQL &= " dSIRV = '',"
                    SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                    SQL &= " ID_Type = 'C2';"
                End If

                If TxtFirstN_C3.Text = "" Then
                Else
                    Dim Gender_C3 As String = ""
                    If vMale_C3 Then
                        Gender_C3 = "Male"
                    ElseIf vFemale_C3 Then
                        Gender_C3 = "Female"
                    End If
                    Dim Civil_C3 As String = ""
                    If vSingle_C3 Then
                        Civil_C3 = "Single"
                    ElseIf vMarried_C3 Then
                        Civil_C3 = "Married"
                    ElseIf vSeparated_C3 Then
                        Civil_C3 = "Separated"
                    ElseIf vWidowed_C3 Then
                        Civil_C3 = "Widowed"
                    End If
                    Dim House_C3 As String = ""
                    If vOwned_C3 Then
                        House_C3 = "Owned"
                    ElseIf vFree_C3 Then
                        House_C3 = "Free"
                    ElseIf vRented_C3 Then
                        House_C3 = "Rented"
                    End If
                    Dim EmplStatus_C3 As String = ""
                    If vCasual_C3 Then
                        EmplStatus_C3 = "Casual"
                    ElseIf vTemporary_C3 Then
                        EmplStatus_C3 = "Temporary"
                    ElseIf vPermanent_C3 Then
                        EmplStatus_C3 = "Permanent"
                    End If

                    Dim RelationID As Integer = 0
                    If vRelationship_C3 = "" Then
                    Else
                        RelationID = vRelationship_C3_ID
                    End If

                    SQL &= "INSERT INTO credit_application_comaker SET"
                    SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                    SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                    SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                    SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_3 <> "", ReferenceID_3, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 3,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                    SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C3.Text)
                    SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C3.Text)
                    SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C3.Text)
                    SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C3.Text)
                    SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C3.Text)
                    SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C3)
                    SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C3)
                    SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C3)
                    SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C3_ID)
                    SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C3)
                    SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C3)
                    SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C3)
                    SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C3)
                    SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C3_ID)
                    SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C3)
                    SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C3 = "", "", Format(CDate(vBirth_C3), "yyyy-MM-dd")))
                    SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C3_ID)
                    SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C3)
                    SQL &= String.Format(" Gender_C = '{0}', ", Gender_C3)
                    SQL &= String.Format(" Civil_C = '{0}', ", Civil_C3)
                    SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C3)
                    SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C3)
                    SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C3)
                    SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C3)
                    SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C3)
                    SQL &= String.Format(" Email_C = '{0}', ", vEmail_C3)
                    SQL &= String.Format(" House_C = '{0}', ", House_C3)
                    SQL &= String.Format(" Rent_C = '{0}', ", vRent_C3)
                    SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                    SQL &= String.Format(" Relation = '{0}',", vRelationship_C3)
                    SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C3)
                    SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C3)
                    SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C3)
                    SQL &= String.Format(" Position_C = '{0}', ", vPosition_C3)
                    SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C3)
                    SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C3 = "", "", Format(CDate(vHired_C3), "yyyy-MM-dd")))
                    SQL &= String.Format(" YearHired_C = {0}, ", vYearHired_C3)
                    SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C3)
                    SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C3)
                    SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C3)
                    SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C3)
                    SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C3)
                    SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C3)
                    SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C3)
                    SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C3)
                    SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C3)
                    SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C3)
                    SQL &= String.Format(" Area_C = '{0}', ", vArea_C3)
                    SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C3 = "", "", Format(CDate(vExpiry_C3), "yyyy-MM-dd")))
                    SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C3)
                    SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C3)
                    SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C3)
                    'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                    SQL &= String.Format(" Creditor_1 = '{0}', ", vCreditor_1_C3)
                    SQL &= String.Format(" CreditAddress_1 = '{0}', ", vCreditAddress_1_C3)
                    SQL &= String.Format(" CreditGranted_1 = '{0}', ", vCreditGranted_1_C3)
                    SQL &= String.Format(" Term_1 = '{0}', ", vTerm_1_C3)
                    SQL &= String.Format(" AmountGranted_1 = '{0}', ", vAmountGranted_1_C3)
                    SQL &= String.Format(" Balance_1 = '{0}', ", vBalance_1_C3)
                    SQL &= String.Format(" CreditPayment_1 = '{0}', ", vCreditPayment_1_C3)
                    SQL &= String.Format(" CreditRemarks_1 = '{0}', ", vCreditRemarks_1_C3)
                    SQL &= String.Format(" Creditor_2 = '{0}', ", vCreditor_2_C3)
                    SQL &= String.Format(" CreditAddress_2 = '{0}', ", vCreditAddress_2_C3)
                    SQL &= String.Format(" CreditGranted_2 = '{0}', ", vCreditGranted_2_C3)
                    SQL &= String.Format(" Term_2 = '{0}', ", vTerm_2_C3)
                    SQL &= String.Format(" AmountGranted_2 = '{0}', ", vAmountGranted_2_C3)
                    SQL &= String.Format(" Balance_2 = '{0}', ", vBalance_2_C3)
                    SQL &= String.Format(" CreditPayment_2 = '{0}', ", vCreditPayment_2_C3)
                    SQL &= String.Format(" CreditRemarks_2 = '{0}', ", vCreditRemarks_2_C3)
                    SQL &= String.Format(" Bank_1 = '{0}', ", vBank_1_C3)
                    SQL &= String.Format(" Branch_1 = '{0}', ", vBranch_1_C3)
                    SQL &= String.Format(" AccountT_1 = '{0}', ", vAccountT_1_C3)
                    SQL &= String.Format(" SA_1 = '{0}', ", vSA_1_C3)
                    SQL &= String.Format(" AverageBalance_1 = '{0}', ", vAverageBalance_1_C3)
                    SQL &= String.Format(" Opened_1 = '{0}', ", vOpened_1_C3)
                    SQL &= String.Format(" Bank_2 = '{0}', ", vBank_2_C3)
                    SQL &= String.Format(" Branch_2 = '{0}', ", vBranch_2_C3)
                    SQL &= String.Format(" AccountT_2 = '{0}', ", vAccountT_2_C3)
                    SQL &= String.Format(" SA_2 = '{0}', ", vSA_2_C3)
                    SQL &= String.Format(" AverageBalance_2 = '{0}', ", vAverageBalance_2_C3)
                    SQL &= String.Format(" Opened_2 = '{0}', ", vOpened_2_C3)
                    SQL &= String.Format(" CreditRating = '{0}', ", vCreditRating_C3)
                    SQL &= String.Format(" Rec_Remarks = '{0}', ", vRec_Remarks_C3)
                    SQL &= String.Format(" Title = '{0}', ", vTitle_C3)
                    SQL &= String.Format(" CaseNum = '{0}', ", vCaseNum_C3)
                    SQL &= String.Format(" DateFilled = '{0}', ", vDateFilled_C3)
                    SQL &= String.Format(" Court = '{0}', ", vCourt_C3)
                    SQL &= String.Format(" CaseNature = '{0}', ", vCaseNature_C3)
                    SQL &= String.Format(" AmountInvolved = '{0}', ", vAmountInvolved_C3)
                    SQL &= String.Format(" CaseStatus = '{0}', ", vCaseStatus_C3)
                    SQL &= String.Format(" Findings = '{0}', ", vFindings_C3)
                    SQL &= String.Format(" FindingsStat = '{0}', ", vFindingsStat_C3)
                    SQL &= String.Format(" CACPI = '{0}', ", vCACPI_C3)
                    SQL &= String.Format(" Location_1 = '{0}', ", vLocation_1_C3)
                    SQL &= String.Format(" TCT_1 = '{0}', ", vTCT_1_C3)
                    SQL &= String.Format(" Area_1 = '{0}', ", vArea_1_C3)
                    SQL &= String.Format(" PropertiesRemarks_1 = '{0}', ", vPropertiesRemarks_1_C3)
                    SQL &= String.Format(" Location_2 = '{0}', ", vLocation_2_C3)
                    SQL &= String.Format(" TCT_2 = '{0}', ", vTCT_2_C3)
                    SQL &= String.Format(" Area_2 = '{0}', ", vArea_2_C3)
                    SQL &= String.Format(" PropertiesRemarks_2 = '{0}', ", vPropertiesRemarks_2_C3)
                    SQL &= String.Format(" Vehicle_1 = '{0}', ", vVehicle_1_C3)
                    SQL &= String.Format(" Year_1 = '{0}', ", vYear_1_C3)
                    SQL &= String.Format(" WhomAcquired_1 = '{0}', ", vWhomAcquired_1_C3)
                    SQL &= String.Format(" VehicleRemarks_1 = '{0}', ", vVehicleRemarks_1_C3)
                    SQL &= String.Format(" Vehicle_2 = '{0}', ", vVehicle_2_C3)
                    SQL &= String.Format(" Year_2 = '{0}', ", vYear_2_C3)
                    SQL &= String.Format(" WhomAcquired_2 = '{0}', ", vWhomAcquired_2_C3)
                    SQL &= String.Format(" VehicleRemarks_2 = '{0}', ", vVehicleRemarks_2_C3)
                    SQL &= String.Format(" OtherProperties = '{0}', ", vOtherProperties_C3)
                    SQL &= String.Format(" Narrative = '{0}', ", vNarrative_C3.InsertQuote)
                    SQL &= String.Format(" Ex_TotalDisposable = '{0}', ", vEx_TotalDisposable_C3)
                    SQL &= String.Format(" Ex_Living = '{0}', ", vEx_Living_C3)
                    SQL &= String.Format(" Ex_Clothing = '{0}', ", vEx_Clothing_C3)
                    SQL &= String.Format(" Ex_Education = '{0}', ", vEx_Education_C3)
                    SQL &= String.Format(" Ex_Transportation = '{0}', ", vEx_Transportation_C3)
                    SQL &= String.Format(" Ex_Lights = '{0}', ", vEx_Lights_C3)
                    SQL &= String.Format(" Ex_Insurance = '{0}', ", vEx_Insurance_C3)
                    SQL &= String.Format(" Ex_Amortization = '{0}', ", vEx_Amortization_C3)
                    SQL &= String.Format(" Ex_Miscellaneous = '{0}', ", vEx_Miscellaneous_C3)
                    SQL &= String.Format(" Ex_TotalExpenses = '{0}', ", vEx_TotalExpenses_C3)
                    SQL &= String.Format(" Ex_NetDisposable = '{0}', ", vEx_NetDisposable_C3)
                    SQL &= String.Format(" Ex_TMFI = '{0}', ", vEx_TMFI_C3)
                    SQL &= String.Format(" Ex_TMDI = '{0}', ", vEx_TMDI_C3)
                    SQL &= String.Format(" Ex_Remarks = '{0}', ", vEx_Remarks_C3.InsertQuote)
                    SQL &= String.Format(" PurposeLoan = '{0}', ", vPurposeLoan_C3.InsertQuote)
                    SQL &= String.Format(" Others = '{0}', ", vOthers_C3.InsertQuote)
                    SQL &= String.Format(" C1 = '{0}',", vC1_C3.InsertQuote)
                    SQL &= String.Format(" C2 = '{0}',", vC2_C3.InsertQuote)
                    SQL &= String.Format(" C3 = '{0}',", vC3_C3.InsertQuote)
                    SQL &= String.Format(" C4 = '{0}',", vC4_C3.InsertQuote)
                    SQL &= String.Format(" C5 = '{0}',", vC5_C3.InsertQuote)
                    SQL &= String.Format(" C6 = '{0}',", vC6_C3.InsertQuote)
                    SQL &= String.Format(" C7 = '{0}',", vC7_C3.InsertQuote)
                    SQL &= String.Format(" C8 = '{0}',", vC8_C3.InsertQuote)
                    SQL &= String.Format(" C9 = '{0}',", vC9_C3.InsertQuote)
                    'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                    SQL &= String.Format(" `Rank` = {0}, ", 3)
                    SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                    If ChangePic3 Then
                        SaveImage(CoMaker3, "CoMaker3", True)
                    End If
                    If ChangeSketchC3 Then
                        SaveImage(SketchC3, "Sketch C3", True)
                    End If

                    SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker3' AND CreditNumber = '{0}';", CreditNumber)
                    For x As Integer = 0 To Industry_C3.Properties.Items.Count - 1
                        If Industry_C3.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                            SQL &= "INSERT INTO credit_application_industry SET"
                            SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                            SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C3.Properties.Items.Item(x).Value)
                            SQL &= String.Format(" Industry = '{0}', ", Industry_C3.Properties.Items.Item(x).Description)
                            SQL &= " `Type` = 'CoMaker3';"
                        End If
                    Next

                    'IDENTIFICATION DUMMY
                    SQL &= "INSERT INTO profile_borrowerid SET"
                    SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                    SQL &= " TIN = '', "
                    SQL &= " SSS = '', "
                    SQL &= " GSIS = '', "
                    SQL &= " PhilHealth = '', "
                    SQL &= " Senior = '', "
                    SQL &= " UMID = '', "
                    SQL &= " SEC = '', "
                    SQL &= " DTI = '', "
                    SQL &= " CDA = '', "
                    SQL &= " Cooperative = '', "
                    SQL &= " Drivers = '', "
                    SQL &= " dDrivers = '', "
                    SQL &= " VIN = '', "
                    SQL &= " dVIN = '', "
                    SQL &= " Passport = '', "
                    SQL &= " dPassport = '', "
                    SQL &= " PRC = '', "
                    SQL &= " dPRC = '', "
                    SQL &= " NBI = '', "
                    SQL &= " dNBI = '', "
                    SQL &= " Police = '', "
                    SQL &= " dPolice = '', "
                    SQL &= " Postal = '', "
                    SQL &= " dPostal = '', "
                    SQL &= " Barangay = '', "
                    SQL &= " dBarangay = '', "
                    SQL &= " OWWA = '', "
                    SQL &= " dOWWA = '', "
                    SQL &= " OFW = '', "
                    SQL &= " dOFW = '', "
                    SQL &= " Seaman = '', "
                    SQL &= " dSeaman = '', "
                    SQL &= " PNP = '', "
                    SQL &= " dPNP = '', "
                    SQL &= " AFP = '', "
                    SQL &= " dAFP = '', "
                    SQL &= " HDMF = '', "
                    SQL &= " dHDMF = '', "
                    SQL &= " PWD = '', "
                    SQL &= " dPWD = '', "
                    SQL &= " DSWD = '', "
                    SQL &= " dDSWD = '', "
                    SQL &= " ACR = '', "
                    SQL &= " dACR = '', "
                    SQL &= " DTI_Business = '', "
                    SQL &= " dDTI_Business = '', "
                    SQL &= " IBP = '', "
                    SQL &= " dIBP = '', "
                    SQL &= " FireArms = '', "
                    SQL &= " dFireArms = '', "
                    SQL &= " Government = '', "
                    SQL &= " dGovernment = '', "
                    SQL &= " Diplomat = '', "
                    SQL &= " dDiplomat = '', "
                    SQL &= " `National` = '', "
                    SQL &= " dNational = '', "
                    SQL &= " `Work` = '', "
                    SQL &= " dWork = '', "
                    SQL &= " GOCC = '', "
                    SQL &= " dGOCC = '', "
                    SQL &= " PLRA = '', "
                    SQL &= " dPLRA = '', "
                    SQL &= " Major = '', "
                    SQL &= " dMajor = '', "
                    SQL &= " Media = '', "
                    SQL &= " dMedia = '', "
                    SQL &= " Student = '', "
                    SQL &= " dStudent = '', "
                    SQL &= " SIRV = '', "
                    SQL &= " dSIRV = '',"
                    SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                    SQL &= " ID_Type = 'C3';"
                End If

                If TxtFirstN_C4.Text = "" Then
                Else
                    Dim Gender_C4 As String = ""
                    If vMale_C4 Then
                        Gender_C4 = "Male"
                    ElseIf vFemale_C4 Then
                        Gender_C4 = "Female"
                    End If
                    Dim Civil_C4 As String = ""
                    If vSingle_C4 Then
                        Civil_C4 = "Single"
                    ElseIf vMarried_C4 Then
                        Civil_C4 = "Married"
                    ElseIf vSeparated_C4 Then
                        Civil_C4 = "Separated"
                    ElseIf vWidowed_C4 Then
                        Civil_C4 = "Widowed"
                    End If
                    Dim House_C4 As String = ""
                    If vOwned_C4 Then
                        House_C4 = "Owned"
                    ElseIf vFree_C4 Then
                        House_C4 = "Free"
                    ElseIf vRented_C4 Then
                        House_C4 = "Rented"
                    End If
                    Dim EmplStatus_C4 As String = ""
                    If vCasual_C4 Then
                        EmplStatus_C4 = "Casual"
                    ElseIf vTemporary_C4 Then
                        EmplStatus_C4 = "Temporary"
                    ElseIf vPermanent_C4 Then
                        EmplStatus_C4 = "Permanent"
                    End If

                    Dim RelationID As Integer = 0
                    If vRelationship_C4 = "" Then
                    Else
                        RelationID = vRelationship_C4_ID
                    End If

                    SQL &= "INSERT INTO credit_application_comaker SET"
                    SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                    SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                    SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                    SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_4 <> "", ReferenceID_4, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 4,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                    SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C4.Text)
                    SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C4.Text)
                    SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C4.Text)
                    SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C4.Text)
                    SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C4.Text)
                    SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C4)
                    SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C4)
                    SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C4)
                    SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C4_ID)
                    SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C4)
                    SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C4)
                    SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C4)
                    SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C4)
                    SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C4_ID)
                    SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C4)
                    SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C4 = "", "", Format(CDate(vBirth_C4), "yyyy-MM-dd")))
                    SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C4_ID)
                    SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C4)
                    SQL &= String.Format(" Gender_C = '{0}', ", Gender_C4)
                    SQL &= String.Format(" Civil_C = '{0}', ", Civil_C4)
                    SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C4)
                    SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C4)
                    SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C4)
                    SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C4)
                    SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C4)
                    SQL &= String.Format(" Email_C = '{0}', ", vEmail_C4)
                    SQL &= String.Format(" House_C = '{0}', ", House_C4)
                    SQL &= String.Format(" Rent_C = '{0}', ", vRent_C4)
                    SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                    SQL &= String.Format(" Relation = '{0}',", vRelationship_C4)
                    SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C4)
                    SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C4)
                    SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C4)
                    SQL &= String.Format(" Position_C = '{0}', ", vPosition_C4)
                    SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C4)
                    SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C4 = "", "", Format(CDate(vHired_C4), "yyyy-MM-dd")))
                    SQL &= String.Format(" YearHired_C = {0}, ", vYearHired_C4)
                    SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C4)
                    SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C4)
                    SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C4)
                    SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C4)
                    SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C4)
                    SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C4)
                    SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C4)
                    SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C4)
                    SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C4)
                    SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C4)
                    SQL &= String.Format(" Area_C = '{0}', ", vArea_C4)
                    SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C4 = "", "", Format(CDate(vExpiry_C4), "yyyy-MM-dd")))
                    SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C4)
                    SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C4)
                    SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C4)
                    'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                    SQL &= String.Format(" Creditor_1 = '{0}', ", vCreditor_1_C4)
                    SQL &= String.Format(" CreditAddress_1 = '{0}', ", vCreditAddress_1_C4)
                    SQL &= String.Format(" CreditGranted_1 = '{0}', ", vCreditGranted_1_C4)
                    SQL &= String.Format(" Term_1 = '{0}', ", vTerm_1_C4)
                    SQL &= String.Format(" AmountGranted_1 = '{0}', ", vAmountGranted_1_C4)
                    SQL &= String.Format(" Balance_1 = '{0}', ", vBalance_1_C4)
                    SQL &= String.Format(" CreditPayment_1 = '{0}', ", vCreditPayment_1_C4)
                    SQL &= String.Format(" CreditRemarks_1 = '{0}', ", vCreditRemarks_1_C4)
                    SQL &= String.Format(" Creditor_2 = '{0}', ", vCreditor_2_C4)
                    SQL &= String.Format(" CreditAddress_2 = '{0}', ", vCreditAddress_2_C4)
                    SQL &= String.Format(" CreditGranted_2 = '{0}', ", vCreditGranted_2_C4)
                    SQL &= String.Format(" Term_2 = '{0}', ", vTerm_2_C4)
                    SQL &= String.Format(" AmountGranted_2 = '{0}', ", vAmountGranted_2_C4)
                    SQL &= String.Format(" Balance_2 = '{0}', ", vBalance_2_C4)
                    SQL &= String.Format(" CreditPayment_2 = '{0}', ", vCreditPayment_2_C4)
                    SQL &= String.Format(" CreditRemarks_2 = '{0}', ", vCreditRemarks_2_C4)
                    SQL &= String.Format(" Bank_1 = '{0}', ", vBank_1_C4)
                    SQL &= String.Format(" Branch_1 = '{0}', ", vBranch_1_C4)
                    SQL &= String.Format(" AccountT_1 = '{0}', ", vAccountT_1_C4)
                    SQL &= String.Format(" SA_1 = '{0}', ", vSA_1_C4)
                    SQL &= String.Format(" AverageBalance_1 = '{0}', ", vAverageBalance_1_C4)
                    SQL &= String.Format(" Opened_1 = '{0}', ", vOpened_1_C4)
                    SQL &= String.Format(" Bank_2 = '{0}', ", vBank_2_C4)
                    SQL &= String.Format(" Branch_2 = '{0}', ", vBranch_2_C4)
                    SQL &= String.Format(" AccountT_2 = '{0}', ", vAccountT_2_C4)
                    SQL &= String.Format(" SA_2 = '{0}', ", vSA_2_C4)
                    SQL &= String.Format(" AverageBalance_2 = '{0}', ", vAverageBalance_2_C4)
                    SQL &= String.Format(" Opened_2 = '{0}', ", vOpened_2_C4)
                    SQL &= String.Format(" CreditRating = '{0}', ", vCreditRating_C4)
                    SQL &= String.Format(" Rec_Remarks = '{0}', ", vRec_Remarks_C4)
                    SQL &= String.Format(" Title = '{0}', ", vTitle_C4)
                    SQL &= String.Format(" CaseNum = '{0}', ", vCaseNum_C4)
                    SQL &= String.Format(" DateFilled = '{0}', ", vDateFilled_C4)
                    SQL &= String.Format(" Court = '{0}', ", vCourt_C4)
                    SQL &= String.Format(" CaseNature = '{0}', ", vCaseNature_C4)
                    SQL &= String.Format(" AmountInvolved = '{0}', ", vAmountInvolved_C4)
                    SQL &= String.Format(" CaseStatus = '{0}', ", vCaseStatus_C4)
                    SQL &= String.Format(" Findings = '{0}', ", vFindings_C4)
                    SQL &= String.Format(" FindingsStat = '{0}', ", vFindingsStat_C4)
                    SQL &= String.Format(" CACPI = '{0}', ", vCACPI_C4)
                    SQL &= String.Format(" Location_1 = '{0}', ", vLocation_1_C4)
                    SQL &= String.Format(" TCT_1 = '{0}', ", vTCT_1_C4)
                    SQL &= String.Format(" Area_1 = '{0}', ", vArea_1_C4)
                    SQL &= String.Format(" PropertiesRemarks_1 = '{0}', ", vPropertiesRemarks_1_C4)
                    SQL &= String.Format(" Location_2 = '{0}', ", vLocation_2_C4)
                    SQL &= String.Format(" TCT_2 = '{0}', ", vTCT_2_C4)
                    SQL &= String.Format(" Area_2 = '{0}', ", vArea_2_C4)
                    SQL &= String.Format(" PropertiesRemarks_2 = '{0}', ", vPropertiesRemarks_2_C4)
                    SQL &= String.Format(" Vehicle_1 = '{0}', ", vVehicle_1_C4)
                    SQL &= String.Format(" Year_1 = '{0}', ", vYear_1_C4)
                    SQL &= String.Format(" WhomAcquired_1 = '{0}', ", vWhomAcquired_1_C4)
                    SQL &= String.Format(" VehicleRemarks_1 = '{0}', ", vVehicleRemarks_1_C4)
                    SQL &= String.Format(" Vehicle_2 = '{0}', ", vVehicle_2_C4)
                    SQL &= String.Format(" Year_2 = '{0}', ", vYear_2_C4)
                    SQL &= String.Format(" WhomAcquired_2 = '{0}', ", vWhomAcquired_2_C4)
                    SQL &= String.Format(" VehicleRemarks_2 = '{0}', ", vVehicleRemarks_2_C4)
                    SQL &= String.Format(" OtherProperties = '{0}', ", vOtherProperties_C4)
                    SQL &= String.Format(" Narrative = '{0}', ", vNarrative_C4.InsertQuote)
                    SQL &= String.Format(" Ex_TotalDisposable = '{0}', ", vEx_TotalDisposable_C4)
                    SQL &= String.Format(" Ex_Living = '{0}', ", vEx_Living_C4)
                    SQL &= String.Format(" Ex_Clothing = '{0}', ", vEx_Clothing_C4)
                    SQL &= String.Format(" Ex_Education = '{0}', ", vEx_Education_C4)
                    SQL &= String.Format(" Ex_Transportation = '{0}', ", vEx_Transportation_C4)
                    SQL &= String.Format(" Ex_Lights = '{0}', ", vEx_Lights_C4)
                    SQL &= String.Format(" Ex_Insurance = '{0}', ", vEx_Insurance_C4)
                    SQL &= String.Format(" Ex_Amortization = '{0}', ", vEx_Amortization_C4)
                    SQL &= String.Format(" Ex_Miscellaneous = '{0}', ", vEx_Miscellaneous_C4)
                    SQL &= String.Format(" Ex_TotalExpenses = '{0}', ", vEx_TotalExpenses_C4)
                    SQL &= String.Format(" Ex_NetDisposable = '{0}', ", vEx_NetDisposable_C4)
                    SQL &= String.Format(" Ex_TMFI = '{0}', ", vEx_TMFI_C4)
                    SQL &= String.Format(" Ex_TMDI = '{0}', ", vEx_TMDI_C4)
                    SQL &= String.Format(" Ex_Remarks = '{0}', ", vEx_Remarks_C4.InsertQuote)
                    SQL &= String.Format(" PurposeLoan = '{0}', ", vPurposeLoan_C4.InsertQuote)
                    SQL &= String.Format(" Others = '{0}', ", vOthers_C4.InsertQuote)
                    SQL &= String.Format(" C1 = '{0}',", vC1_C4.InsertQuote)
                    SQL &= String.Format(" C2 = '{0}',", vC2_C4.InsertQuote)
                    SQL &= String.Format(" C3 = '{0}',", vC3_C4.InsertQuote)
                    SQL &= String.Format(" C4 = '{0}',", vC4_C4.InsertQuote)
                    SQL &= String.Format(" C5 = '{0}',", vC5_C4.InsertQuote)
                    SQL &= String.Format(" C6 = '{0}',", vC6_C4.InsertQuote)
                    SQL &= String.Format(" C7 = '{0}',", vC7_C4.InsertQuote)
                    SQL &= String.Format(" C8 = '{0}',", vC8_C4.InsertQuote)
                    SQL &= String.Format(" C9 = '{0}',", vC9_C4.InsertQuote)
                    'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                    SQL &= String.Format(" `Rank` = {0}, ", 4)
                    SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                    If ChangePic4 Then
                        SaveImage(CoMaker4, "CoMaker4", True)
                    End If
                    If ChangeSketchC4 Then
                        SaveImage(SketchC4, "Sketch C4", True)
                    End If

                    SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker4' AND CreditNumber = '{0}';", CreditNumber)
                    For x As Integer = 0 To Industry_C4.Properties.Items.Count - 1
                        If Industry_C4.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                            SQL &= "INSERT INTO credit_application_industry SET"
                            SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                            SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C4.Properties.Items.Item(x).Value)
                            SQL &= String.Format(" Industry = '{0}', ", Industry_C4.Properties.Items.Item(x).Description)
                            SQL &= " `Type` = 'CoMaker4';"
                        End If
                    Next

                    'IDENTIFICATION DUMMY
                    SQL &= "INSERT INTO profile_borrowerid SET"
                    SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                    SQL &= " TIN = '', "
                    SQL &= " SSS = '', "
                    SQL &= " GSIS = '', "
                    SQL &= " PhilHealth = '', "
                    SQL &= " Senior = '', "
                    SQL &= " UMID = '', "
                    SQL &= " SEC = '', "
                    SQL &= " DTI = '', "
                    SQL &= " CDA = '', "
                    SQL &= " Cooperative = '', "
                    SQL &= " Drivers = '', "
                    SQL &= " dDrivers = '', "
                    SQL &= " VIN = '', "
                    SQL &= " dVIN = '', "
                    SQL &= " Passport = '', "
                    SQL &= " dPassport = '', "
                    SQL &= " PRC = '', "
                    SQL &= " dPRC = '', "
                    SQL &= " NBI = '', "
                    SQL &= " dNBI = '', "
                    SQL &= " Police = '', "
                    SQL &= " dPolice = '', "
                    SQL &= " Postal = '', "
                    SQL &= " dPostal = '', "
                    SQL &= " Barangay = '', "
                    SQL &= " dBarangay = '', "
                    SQL &= " OWWA = '', "
                    SQL &= " dOWWA = '', "
                    SQL &= " OFW = '', "
                    SQL &= " dOFW = '', "
                    SQL &= " Seaman = '', "
                    SQL &= " dSeaman = '', "
                    SQL &= " PNP = '', "
                    SQL &= " dPNP = '', "
                    SQL &= " AFP = '', "
                    SQL &= " dAFP = '', "
                    SQL &= " HDMF = '', "
                    SQL &= " dHDMF = '', "
                    SQL &= " PWD = '', "
                    SQL &= " dPWD = '', "
                    SQL &= " DSWD = '', "
                    SQL &= " dDSWD = '', "
                    SQL &= " ACR = '', "
                    SQL &= " dACR = '', "
                    SQL &= " DTI_Business = '', "
                    SQL &= " dDTI_Business = '', "
                    SQL &= " IBP = '', "
                    SQL &= " dIBP = '', "
                    SQL &= " FireArms = '', "
                    SQL &= " dFireArms = '', "
                    SQL &= " Government = '', "
                    SQL &= " dGovernment = '', "
                    SQL &= " Diplomat = '', "
                    SQL &= " dDiplomat = '', "
                    SQL &= " `National` = '', "
                    SQL &= " dNational = '', "
                    SQL &= " `Work` = '', "
                    SQL &= " dWork = '', "
                    SQL &= " GOCC = '', "
                    SQL &= " dGOCC = '', "
                    SQL &= " PLRA = '', "
                    SQL &= " dPLRA = '', "
                    SQL &= " Major = '', "
                    SQL &= " dMajor = '', "
                    SQL &= " Media = '', "
                    SQL &= " dMedia = '', "
                    SQL &= " Student = '', "
                    SQL &= " dStudent = '', "
                    SQL &= " SIRV = '', "
                    SQL &= " dSIRV = '',"
                    SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                    SQL &= " ID_Type = 'C4';"
                End If

                DataObject(SQL)
                If Trigger = "D&raft" Then
                    Logs("Credit Investigation", "Draft", String.Format("Add new draft CI with CI Number {0}", txtCINumber.Text), "", "", "", CreditNumber)
                Else
                    Logs("Credit Investigation", "Save", String.Format("Add new CI with CI Number {0}", txtCINumber.Text), "", "", "", CreditNumber)
                End If
                Clear()
                Cursor = Cursors.Default
                LoadData()
                MsgBox(String.Format("Successfully {0}!", If(Trigger = "D&raft", "saved a draft", "Saved")), MsgBoxStyle.Information, "Info")
            End If
        Else
            If MsgBoxYes("Are you sure you want to update this data?") = MsgBoxResult.Yes Then
                Cursor = Cursors.WaitCursor
                Dim SQL As String = "UPDATE credit_investigation SET"
                SQL &= String.Format(" Prefix_B = '{0}', ", CbxPrefix_B.Text)
                SQL &= String.Format(" FirstN_B = '{0}', ", TxtFirstN_B.Text)
                SQL &= String.Format(" MiddleN_B = '{0}', ", TxtMiddleN_B.Text)
                SQL &= String.Format(" LastN_B = '{0}', ", TxtLastN_B.Text)
                SQL &= String.Format(" Suffix_B = '{0}', ", cbxSuffix_B.Text)
                SQL &= String.Format(" NoC_B = '{0}', ", txtNoC_B.Text)
                SQL &= String.Format(" StreetC_B = '{0}', ", txtStreetC_B.Text)
                SQL &= String.Format(" BarangayC_B = '{0}', ", txtBarangayC_B.Text)
                SQL &= String.Format(" `AddressC_B-ID` = '{0}', ", ValidateComboBox(cbxAddressC_B))
                SQL &= String.Format(" AddressC_B = '{0}', ", cbxAddressC_B.Text)

                SQL &= String.Format(" Residence_B = '{0}', ", cbxResidence.Text)
                SQL &= String.Format(" House_B = '{0}', ", House_B)
                SQL &= String.Format(" Rent_B = '{0}', ", dRent_B.Value)
                SQL &= String.Format(" AsConfirmed = '{0}', ", txtConfirmed.Text)
                SQL &= String.Format(" LenghtOfStay = '{0}', ", txtLengthStay.Text)
                SQL &= String.Format(" Neighborhood = '{0}', ", cbxNeighborhood.Text)
                SQL &= String.Format(" Birth_B = '{0}', ", FormatDatePicker(DtpBirth_B))
                SQL &= String.Format(" Civil_B = '{0}', ", Civil_B)

                SQL &= String.Format(" Prefix_D1 = '{0}', ", CbxPrefix_1.Text)
                SQL &= String.Format(" FirstN_D1 = '{0}', ", TxtFirstN_1.Text)
                SQL &= String.Format(" MiddleN_D1 = '{0}', ", TxtMiddleN_1.Text)
                SQL &= String.Format(" LastN_D1 = '{0}', ", TxtLastN_1.Text)
                SQL &= String.Format(" Suffix_D1 = '{0}', ", cbxSuffix_1.Text)
                SQL &= String.Format(" Age_D1 = '{0}', ", iAge_D1.Value)
                SQL &= String.Format(" Grade_D1 = '{0}', ", txtGrade_1.Text)
                SQL &= String.Format(" School_D1 = '{0}', ", txtSchool_1.Text)
                SQL &= String.Format(" SchoolAddress_D1 = '{0}', ", txtSchoolAddress_1.Text)
                SQL &= String.Format(" Prefix_D2 = '{0}', ", CbxPrefix_2.Text)
                SQL &= String.Format(" FirstN_D2 = '{0}', ", TxtFirstN_2.Text)
                SQL &= String.Format(" MiddleN_D2 = '{0}', ", TxtMiddleN_2.Text)
                SQL &= String.Format(" LastN_D2 = '{0}', ", TxtLastN_2.Text)
                SQL &= String.Format(" Suffix_D2 = '{0}', ", cbxSuffix_2.Text)
                SQL &= String.Format(" Age_D2 = '{0}', ", iAge_D2.Value)
                SQL &= String.Format(" Grade_D2 = '{0}', ", txtGrade_2.Text)
                SQL &= String.Format(" School_D2 = '{0}', ", txtSchool_2.Text)
                SQL &= String.Format(" SchoolAddress_D2 = '{0}', ", txtSchoolAddress_2.Text)
                SQL &= String.Format(" Prefix_D3 = '{0}', ", CbxPrefix_3.Text)
                SQL &= String.Format(" FirstN_D3 = '{0}', ", TxtFirstN_3.Text)
                SQL &= String.Format(" MiddleN_D3 = '{0}', ", TxtMiddleN_3.Text)
                SQL &= String.Format(" LastN_D3 = '{0}', ", TxtLastN_3.Text)
                SQL &= String.Format(" Suffix_D3 = '{0}', ", cbxSuffix_3.Text)
                SQL &= String.Format(" Age_D3 = '{0}', ", iAge_D3.Value)
                SQL &= String.Format(" Grade_D3 = '{0}', ", txtGrade_3.Text)
                SQL &= String.Format(" School_D3 = '{0}', ", txtSchool_3.Text)
                SQL &= String.Format(" SchoolAddress_D3 = '{0}', ", txtSchoolAddress_3.Text)
                SQL &= String.Format(" Prefix_D4 = '{0}', ", CbxPrefix_4.Text)
                SQL &= String.Format(" FirstN_D4 = '{0}', ", TxtFirstN_4.Text)
                SQL &= String.Format(" MiddleN_D4 = '{0}', ", TxtMiddleN_4.Text)
                SQL &= String.Format(" LastN_D4 = '{0}', ", TxtLastN_4.Text)
                SQL &= String.Format(" Suffix_D4 = '{0}', ", cbxSuffix_4.Text)
                SQL &= String.Format(" Age_D4 = '{0}', ", iAge_D4.Value)
                SQL &= String.Format(" Grade_D4 = '{0}', ", txtGrade_4.Text)
                SQL &= String.Format(" School_D4 = '{0}', ", txtSchool_4.Text)
                SQL &= String.Format(" SchoolAddress_D4 = '{0}', ", txtSchoolAddress_4.Text)

                SQL &= String.Format(" Employer_B = '{0}', ", cbxEmployer_B.Text)
                SQL &= String.Format(" EmployerAddress_B = '{0}', ", txtEmployerAddress_B.Text)
                SQL &= String.Format(" Hired_B = '{0}', ", FormatDatePicker(dtpHired_B))
                SQL &= String.Format(" YearHired = '{0}', ", If(cbxYearHired.Checked, 1, 0))
                SQL &= String.Format(" EmploymentStat_B = '{0}', ", EmplStatus_B)
                SQL &= String.Format(" Position_B = '{0}', ", cbxPosition_B.Text)
                SQL &= String.Format(" Monthly_B = '{0}', ", dMonthly_B.Value)
                SQL &= String.Format("  BusinessName_B = '{0}', ", txtBusinessName_B.Text)
                SQL &= String.Format(" BusinessAddress_B = '{0}', ", txtBusinessAddress_B.Text)
                SQL &= String.Format(" BusinessStarted = '{0}', ", FormatDatePicker(dtpBusinessStarted))
                SQL &= String.Format(" NatureBusiness_B = '{0}', ", cbxBusinessNature.Text)
                SQL &= String.Format(" Capital_B = '{0}', ", dCapital_B.Value)
                SQL &= String.Format(" NoEmployees_B = '{0}', ", iNoEmployees_B.Value)
                SQL &= String.Format(" BusinessStock = '{0}', ", dBusinessStock.Value)
                SQL &= String.Format(" BusinessVehicle = '{0}', ", txtBusinessVehicle.Text)
                SQL &= String.Format(" BusinessIncome_B = '{0}', ", dBusinessIncome_B.Value)
                SQL &= String.Format(" BusinessPermit = '{0}', ", txtBusinessPermit.Text)
                SQL &= String.Format(" OtherIncome_B = '{0}', ", txtOtherIncome_B.Text)
                SQL &= String.Format(" OtherIncome_B_Amount = '{0}', ", dOtherIncome_B.Value)
                SQL &= String.Format(" Creditor_1 = '{0}', ", txtCreditor_1.Text)
                SQL &= String.Format(" CreditAddress_1 = '{0}', ", txtCreditAddress_1.Text)
                SQL &= String.Format(" CreditGranted_1 = '{0}', ", FormatDatePicker(dtpCreditGranted_1))
                SQL &= String.Format(" Term_1 = '{0}', ", iTerm_1.Value)
                SQL &= String.Format(" AmountGranted_1 = '{0}', ", dAmountGranted_1.Value)
                SQL &= String.Format(" Balance_1 = '{0}', ", dBalance_1.Value)
                SQL &= String.Format(" CreditPayment_1 = '{0}', ", dCreditPayment_1.Value)
                SQL &= String.Format(" CreditRemarks_1 = '{0}', ", txtCreditRemarks_1.Text)
                SQL &= String.Format(" Creditor_2 = '{0}', ", txtCreditor_2.Text)
                SQL &= String.Format(" CreditAddress_2 = '{0}', ", txtCreditAddress_2.Text)
                SQL &= String.Format(" CreditGranted_2 = '{0}', ", FormatDatePicker(dtpCreditGranted_2))
                SQL &= String.Format(" Term_2 = '{0}', ", iTerm_2.Value)
                SQL &= String.Format(" AmountGranted_2 = '{0}', ", dAmountGranted_2.Value)
                SQL &= String.Format(" Balance_2 = '{0}', ", dBalance_2.Value)
                SQL &= String.Format(" CreditPayment_2 = '{0}', ", dCreditPayment_2.Value)
                SQL &= String.Format(" CreditRemarks_2 = '{0}', ", txtCreditRemarks_2.Text)

                SQL &= String.Format(" Bank_1 = '{0}', ", txtBank_1.Text)
                SQL &= String.Format(" Branch_1 = '{0}', ", txtBranch_1.Text)
                SQL &= String.Format(" AccountT_1 = '{0}', ", AccountT_1)
                SQL &= String.Format(" SA_1 = '{0}', ", txtSA_1.Text)
                SQL &= String.Format(" AverageBalance_1 = '{0}', ", dAverageBalance_1.Value)
                SQL &= String.Format(" Opened_1 = '{0}', ", txtOpened_1.Text)
                SQL &= String.Format(" Bank_2 = '{0}', ", txtBank_2.Text)
                SQL &= String.Format(" Branch_2 = '{0}', ", txtBranch_2.Text)
                SQL &= String.Format(" AccountT_2 = '{0}', ", AccountT_2)
                SQL &= String.Format(" SA_2 = '{0}', ", txtSA_2.Text)
                SQL &= String.Format(" AverageBalance_2 = '{0}', ", dAverageBalance_2.Value)
                SQL &= String.Format(" Opened_2 = '{0}', ", txtOpened_2.Text)

                SQL &= String.Format(" CreditRating = '{0}', ", CreditRating)
                SQL &= String.Format(" RecommendationFor = '{0}', ", RecommendedFor)
                SQL &= String.Format(" Rec_ApprovedAmount = '{0}', ", dApprovedAmount.Value)
                SQL &= String.Format(" Rec_ApprovedTerms = '{0}', ", iApprovedTerms.Value)
                SQL &= String.Format(" Rec_ApprovedRate = '{0}', ", dApprovedRate.Value)
                SQL &= String.Format(" Rec_PDC = '{0}', ", If(cbxPDC.Checked, 1, 0))
                SQL &= String.Format(" Rec_NoPDC = '{0}', ", If(cbxNoPDC.Checked, 1, 0))
                SQL &= String.Format(" Rec_Remarks = '{0}', ", rRecommendation.Text)
                SQL &= String.Format(" Title = '{0}', ", txtTitle.Text)
                SQL &= String.Format(" CaseNum = '{0}', ", txtCaseNum.Text)
                SQL &= String.Format(" DateFilled = '{0}', ", FormatDatePicker(dtpDateFilled))
                SQL &= String.Format(" Court = '{0}', ", cbxCourt.Text)
                SQL &= String.Format(" CaseNature = '{0}', ", cbxCaseNature.Text)
                SQL &= String.Format(" AmountInvolved = '{0}', ", dAmountInvolved.Value)
                SQL &= String.Format(" CaseStatus = '{0}', ", cbxCaseStatus.Text)
                SQL &= String.Format(" Findings = '{0}', ", txtFindings.Text)
                SQL &= String.Format(" FindingsStat = '{0}', ", Findings)
                SQL &= String.Format(" CACPI = '{0}', ", txtCACPI.Text)

                SQL &= String.Format(" Location_1 = '{0}', ", txtLocation_1.Text)
                SQL &= String.Format(" TCT_1 = '{0}', ", txtTCT_1.Text)
                SQL &= String.Format(" Area_1 = '{0}', ", dArea_1.Value)
                SQL &= String.Format(" PropertiesRemarks_1 = '{0}', ", txtPropertiesRemarks_1.Text)
                SQL &= String.Format(" Location_2 = '{0}', ", txtLocation_2.Text)
                SQL &= String.Format(" TCT_2 = '{0}', ", txtTCT_2.Text)
                SQL &= String.Format(" Area_2 = '{0}', ", dArea_2.Value)
                SQL &= String.Format(" PropertiesRemarks_2 = '{0}', ", txtPropertiesRemarks_2.Text)

                SQL &= String.Format(" Vehicle_1 = '{0}', ", txtVehicle_1.Text)
                SQL &= String.Format(" Year_1 = '{0}', ", FormatDatePicker(dtpYear_1))
                SQL &= String.Format(" WhomAcquired_1 = '{0}', ", txtWhomAcquired_1.Text)
                SQL &= String.Format(" VehicleRemarks_1 = '{0}', ", txtVehicleRemarks_1.Text)
                SQL &= String.Format(" Vehicle_2 = '{0}', ", txtVehicle_2.Text)
                SQL &= String.Format(" Year_2 = '{0}', ", FormatDatePicker(dtpYear_2))
                SQL &= String.Format(" WhomAcquired_2 = '{0}', ", txtWhomAcquired_2.Text)
                SQL &= String.Format(" VehicleRemarks_2 = '{0}', ", txtVehicleRemarks_2.Text)

                SQL &= String.Format(" OtherProperties = '{0}', ", txtOtherProperties.Text)
                SQL &= String.Format(" Narrative = '{0}', ", rNarrative.Text.InsertQuote)
                SQL &= String.Format(" Ex_TotalDisposable = '{0}', ", dTotalDisposable.Value)
                SQL &= String.Format(" Ex_Living = '{0}', ", dLiving.Value)
                SQL &= String.Format(" Ex_Clothing = '{0}', ", dClothing.Value)
                SQL &= String.Format(" Ex_Education = '{0}', ", dEducation.Value)
                SQL &= String.Format(" Ex_Transportation = '{0}', ", dTransportation.Value)
                SQL &= String.Format(" Ex_Lights = '{0}', ", dLighths.Value)
                SQL &= String.Format(" Ex_Insurance = '{0}', ", dInsurance.Value)
                SQL &= String.Format(" Ex_Amortization = '{0}', ", dAmortization.Value)
                SQL &= String.Format(" Ex_Miscellaneous = '{0}', ", dMiscellaneous.Value)
                SQL &= String.Format(" Ex_TotalExpenses = '{0}', ", dTotalExpenses.Value)
                SQL &= String.Format(" Ex_NetDisposable = '{0}', ", dNetDisposable.Value)
                SQL &= String.Format(" Ex_TMFI = '{0}', ", dTMFI.Value)
                SQL &= String.Format(" Ex_TMDI = '{0}', ", dTMDI.Value)
                SQL &= String.Format(" Ex_Remarks = '{0}', ", txtExpenseRemarks.Text.InsertQuote)
                SQL &= String.Format(" PurposeLoan = '{0}', ", rPurposeLoan.Text.InsertQuote)

                SQL &= String.Format(" CapitalP = '{0}', ", dCapitalP.Value)
                SQL &= String.Format(" FuelMaintenanceP = '{0}', ", dFuelMaintenanceP.Value)
                SQL &= String.Format(" UtilitiesP = '{0}', ", dUtilitiesP.Value)
                SQL &= String.Format(" SalariesWagesP = '{0}', ", dSalariesWagesP.Value)
                SQL &= String.Format(" BMiscellaneousP = '{0}', ", dBMiscellaneousP.Value)
                SQL &= String.Format(" BOthersP = '{0}', ", dBOthersP.Value)
                If Trigger = "&Save" Then
                    SQL &= " `status` = 'ACTIVE', "
                End If
                SQL &= String.Format(" AmountApplied = '{0}', ", AmountApplied)
                SQL &= String.Format(" LoanType = '{0}', ", Mortgage)
                SQL &= String.Format(" Product = '{0}', ", Product)
                SQL &= String.Format(" Collateral = '{0}', ", Collateral)
                SQL &= String.Format(" TotalAppraised = '{0}', ", TotalAppraised)
                SQL &= String.Format(" Loanable = '{0}', ", RecommendedLoan)
                SQL &= String.Format(" C1 = '{0}',", txtC1.Text.InsertQuote)
                SQL &= String.Format(" C2 = '{0}',", txtC2.Text.InsertQuote)
                SQL &= String.Format(" C3 = '{0}',", txtC3.Text.InsertQuote)
                SQL &= String.Format(" C4 = '{0}',", txtC4.Text.InsertQuote)
                SQL &= String.Format(" C5 = '{0}',", txtC5.Text.InsertQuote)
                SQL &= String.Format(" C6 = '{0}',", txtC6.Text.InsertQuote)
                SQL &= String.Format(" C7 = '{0}',", txtC7.Text.InsertQuote)
                SQL &= String.Format(" C8 = '{0}',", txtC8.Text.InsertQuote)
                SQL &= String.Format(" C9 = '{0}',", txtC9.Text.InsertQuote)
                SQL &= String.Format(" IncludeSpouseBusiness = '{0}', ", If(cbxIncludeSpouseBusiness.Checked, 1, 0))
                SQL &= String.Format(" IncludeC1 = '{0}', ", If(cbxIncludeC1.Checked, 1, 0))
                SQL &= String.Format(" IncludeC2 = '{0}', ", If(cbxIncludeC2.Checked, 1, 0))
                SQL &= String.Format(" IncludeC3 = '{0}', ", If(cbxIncludeC3.Checked, 1, 0))
                SQL &= String.Format(" IncludeC4 = '{0}', ", If(cbxIncludeC4.Checked, 1, 0))
                SQL &= String.Format(" Others = '{0}' ", rOthers.Text.InsertQuote)
                SQL &= String.Format(" WHERE CINumber = '{0}';", txtCINumber.Text)

                SQL &= String.Format(" UPDATE credit_application SET CI_status = 'ONGOING', Borrower_S = '{1}', Borrower_C1 = '{2}', Borrower_C2 = '{3}', Borrower_C3 = '{4}', Borrower_C4 = '{5}' WHERE CreditNumber = '{0}';", CreditNumber, If(cbxSpouse_B.Checked, 1, 0), If(cbxCoMaker1_B.Checked, 1, 0), If(cbxCoMaker2_B.Checked, 1, 0), If(cbxCoMaker3_B.Checked, 1, 0), If(cbxCoMaker4_B.Checked, 1, 0))
                For x As Integer = 0 To GridView1.RowCount - 1
                    SQL &= String.Format("UPDATE appraise_ve SET `status` = 'ACTIVE' WHERE CollateralNumber = '{0}' AND `status` = 'PENDING';", GridView1.GetRowCellValue(x, "Col_ID"))
                    SQL &= String.Format("UPDATE collateral_ve SET `status` = 'ACTIVE', CINumber = '{1}' WHERE CollateralNumber = '{0}' AND `status` = 'PENDING';", GridView1.GetRowCellValue(x, "Col_ID"), txtCINumber.Text)
                Next
                For x As Integer = 0 To GridView2.RowCount - 1
                    SQL &= String.Format("UPDATE appraise_re SET `status` = 'ACTIVE' WHERE CollateralNumber = '{0}' AND `status` = 'PENDING';", GridView2.GetRowCellValue(x, "Col_ID"))
                    SQL &= String.Format("UPDATE collateral_re SET `status` = 'ACTIVE', CINumber = '{1}' WHERE CollateralNumber = '{0}' AND `status` = 'PENDING';", GridView2.GetRowCellValue(x, "Col_ID"), txtCINumber.Text)
                Next

                SpouseID = DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 1,7,'0')) FROM profile_spouse WHERE branch_id = '{0}';", Branch_ID))
                If TxtFirstN_S.Text <> "" And TxtFirstN_S.Tag = "" Then
                    Dim Gender_S As String = ""
                    If vMale_S Then
                        Gender_S = "Male"
                    ElseIf vFemale_S Then
                        Gender_S = "Female"
                    End If
                    Dim House_S As String = ""
                    If vOwned_S Then
                        House_S = "Owned"
                    ElseIf vFree_S Then
                        House_S = "Free"
                    ElseIf vRented_S Then
                        House_S = "Rented"
                    End If
                    Dim EmplStatus_S As String = ""
                    If vCasual_S Then
                        EmplStatus_S = "Casual"
                    ElseIf vTemporary_S Then
                        EmplStatus_S = "Temporary"
                    ElseIf vPermanent_S Then
                        EmplStatus_S = "Permanent"
                    End If

                    SQL &= "INSERT INTO profile_spouse SET"
                    SQL &= String.Format(" SpouseID = '{0}', ", SpouseID)
                    SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                    SQL &= String.Format(" Prefix_S = '{0}', ", CbxPrefix_S.Text)
                    SQL &= String.Format(" FirstN_S = '{0}', ", TxtFirstN_S.Text)
                    SQL &= String.Format(" MiddleN_S = '{0}', ", TxtMiddleN_S.Text)
                    SQL &= String.Format(" LastN_S = '{0}', ", TxtLastN_S.Text)
                    SQL &= String.Format(" Suffix_S = '{0}', ", cbxSuffix_S.Text)
                    SQL &= String.Format(" Prefix_M = '{0}', ", vPrefix_M)
                    SQL &= String.Format(" FirstN_M = '{0}', ", vFirstN_M)
                    SQL &= String.Format(" MiddleN_M = '{0}', ", vMiddleN_M)
                    SQL &= String.Format(" LastN_M = '{0}', ", vLastN_M)
                    SQL &= String.Format(" Suffix_M = '{0}', ", vSuffix_M)
                    SQL &= String.Format(" NoC_S = '{0}', ", vNoC_S)
                    SQL &= String.Format(" StreetC_S = '{0}', ", vStreetC_S)
                    SQL &= String.Format(" BarangayC_S = '{0}', ", vBarangayC_S)
                    SQL &= String.Format(" `AddressC_S-ID` = '{0}', ", vAddressC_S_ID)
                    SQL &= String.Format(" AddressC_S = '{0}', ", vAddressC_S)
                    SQL &= String.Format(" NoP_S = '{0}', ", vNoP_S)
                    SQL &= String.Format(" StreetP_S = '{0}', ", vStreetP_S)
                    SQL &= String.Format(" BarangayP_S = '{0}', ", vBarangayP_S)
                    SQL &= String.Format(" `AddressP_S-ID` = '{0}', ", vAddressP_S_ID)
                    SQL &= String.Format(" AddressP_S = '{0}', ", vAddressP_S)
                    SQL &= String.Format(" Birth_S = '{0}', ", If(vBirth_S = "", "", Format(CDate(vBirth_S), "yyyy-MM-dd")))
                    SQL &= String.Format(" `PlaceBirth_S-ID` = '{0}', ", vPlaceBirth_S_ID)
                    SQL &= String.Format(" PlaceBirth_S = '{0}', ", vPlaceBirth_S)
                    SQL &= String.Format(" Gender_S = '{0}', ", Gender_S)
                    SQL &= String.Format(" Citizenship_S = '{0}', ", vCitizenship_S)
                    SQL &= String.Format(" TIN_S = '{0}', ", vTIN_S)
                    SQL &= String.Format(" Telephone_S = '{0}', ", vTelephone_S)
                    SQL &= String.Format(" SSS_S = '{0}', ", vSSS_S)
                    SQL &= String.Format(" Mobile_S = '{0}', ", vMobile_S)
                    SQL &= String.Format(" Email_S = '{0}', ", vEmail_S)
                    SQL &= String.Format(" House_S = '{0}', ", House_S)
                    SQL &= String.Format(" Rent_S = '{0}', ", vRent_S)
                    SQL &= String.Format(" Employer_S = '{0}', ", vEmployer_S)
                    SQL &= String.Format(" EmployerAddress_S = '{0}', ", vEmpAddress_S)
                    SQL &= String.Format(" EmployerTelephone_S = '{0}', ", vEmpTelephone_S)
                    SQL &= String.Format(" Position_S = '{0}', ", vPosition_S)
                    SQL &= String.Format(" EmploymentStat_S = '{0}', ", EmplStatus_S)
                    SQL &= String.Format(" Hired_S = '{0}', ", If(vHired_S = "", "", Format(CDate(vHired_S), "yyyy-MM-dd")))
                    SQL &= String.Format(" YearHired_S = {0}, ", vYearHired_S)
                    SQL &= String.Format(" Supervisor_S = '{0}', ", vSupervisor_S)
                    SQL &= String.Format(" Monthly_S = '{0}', ", vSalary_S)
                    SQL &= String.Format(" BusinessName_S = '{0}', ", vBusinessName_S)
                    SQL &= String.Format(" BusinessAddress_S = '{0}', ", vBusinessAddress_S)
                    SQL &= String.Format(" BusinessTelephone_S = '{0}', ", vBusinessTelephone_S)
                    SQL &= String.Format(" NatureBusiness_S = '{0}', ", vNatureBusiness_S)
                    SQL &= String.Format(" YrsOperation_S = '{0}', ", vYrsOperation_S)
                    SQL &= String.Format(" BusinessIncome_S = '{0}', ", vBusinessIncome_S)
                    SQL &= String.Format(" NoEmployees_S = '{0}', ", vNoEmployees_S)
                    SQL &= String.Format(" Capital_S = '{0}', ", vCapital_S)
                    SQL &= String.Format(" Area_S = '{0}', ", vArea_S)
                    SQL &= String.Format(" Expiry_S = '{0}', ", If(vExpiry_S = "", "", Format(CDate(vExpiry_S), "yyyy-MM-dd")))
                    SQL &= String.Format(" Outlet_S = '{0}', ", vOutlet_S)
                    SQL &= String.Format(" OtherIncome_S = '{0}', ", vOtherIncome_S)
                    SQL &= String.Format(" `OtherIncome_S-Amount` = '{0}', ", vOtherIncomeD_S)
                    SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                    If ChangePicS Then
                        SaveImage(pb_Spouse, "Spouse", False)
                    End If

                    SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'Spouse' AND CreditNumber = '{0}';", CreditNumber)
                    For x As Integer = 0 To Industry_S.Properties.Items.Count - 1
                        If Industry_S.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                            SQL &= "INSERT INTO credit_application_industry SET"
                            SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                            SQL &= String.Format(" Industry_ID = '{0}', ", Industry_S.Properties.Items.Item(x).Value)
                            SQL &= String.Format(" Industry = '{0}', ", Industry_S.Properties.Items.Item(x).Description)
                            SQL &= " `Type` = 'Spouse';"
                        End If
                    Next
                    SQL &= String.Format("UPDATE profile_borrower_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'Spouse' AND BorrowerID = '{0}';", BorrowerID)
                    For x As Integer = 0 To Industry_S.Properties.Items.Count - 1
                        If Industry_S.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                            SQL &= "INSERT INTO profile_borrower_industry SET"
                            SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                            SQL &= String.Format(" Industry_ID = '{0}', ", Industry_S.Properties.Items.Item(x).Value)
                            SQL &= String.Format(" Industry = '{0}', ", Industry_S.Properties.Items.Item(x).Description)
                            SQL &= " `Type` = 'Spouse';"
                        End If
                    Next
                End If

                CoMakerID = DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 1,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))
                If TxtFirstN_C1.Tag = "" And TxtFirstN_C1.Text <> "" Then
                    If TxtFirstN_C1.Text = "" Then
                    Else
                        Dim Gender_C1 As String = ""
                        If vMale_C1 Then
                            Gender_C1 = "Male"
                        ElseIf vFemale_C1 Then
                            Gender_C1 = "Female"
                        End If
                        Dim Civil_C1 As String = ""
                        If vSingle_C1 Then
                            Civil_C1 = "Single"
                        ElseIf vMarried_C1 Then
                            Civil_C1 = "Married"
                        ElseIf vSeparated_C1 Then
                            Civil_C1 = "Separated"
                        ElseIf vWidowed_C1 Then
                            Civil_C1 = "Widowed"
                        End If
                        Dim House_C1 As String = ""
                        If vOwned_C1 Then
                            House_C1 = "Owned"
                        ElseIf vFree_C1 Then
                            House_C1 = "Free"
                        ElseIf vRented_C1 Then
                            House_C1 = "Rented"
                        End If
                        Dim EmplStatus_C1 As String = ""
                        If vCasual_C1 Then
                            EmplStatus_C1 = "Casual"
                        ElseIf vTemporary_C1 Then
                            EmplStatus_C1 = "Temporary"
                        ElseIf vPermanent_C1 Then
                            EmplStatus_C1 = "Permanent"
                        End If

                        Dim RelationID As Integer = 0
                        If vRelationship_C1 = "" Then
                        Else
                            RelationID = vRelationship_C1_ID
                        End If

                        SQL &= "INSERT INTO credit_application_comaker SET"
                        SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                        SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_1 <> "", ReferenceID_1, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 1,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                        SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C1.Text)
                        SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C1.Text)
                        SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C1.Text)
                        SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C1.Text)
                        SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C1.Text)
                        SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C1)
                        SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C1)
                        SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C1)
                        SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C1_ID)
                        SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C1)
                        SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C1)
                        SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C1)
                        SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C1)
                        SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C1_ID)
                        SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C1)
                        SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C1 = "", "", Format(CDate(vBirth_C1), "yyyy-MM-dd")))
                        SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C1_ID)
                        SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C1)
                        SQL &= String.Format(" Gender_C = '{0}', ", Gender_C1)
                        SQL &= String.Format(" Civil_C = '{0}', ", Civil_C1)
                        SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C1)
                        SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C1)
                        SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C1)
                        SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C1)
                        SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C1)
                        SQL &= String.Format(" Email_C = '{0}', ", vEmail_C1)
                        SQL &= String.Format(" House_C = '{0}', ", House_C1)
                        SQL &= String.Format(" Rent_C = '{0}', ", vRent_C1)
                        SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                        SQL &= String.Format(" Relation = '{0}',", vRelationship_C1)
                        SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C1)
                        SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C1)
                        SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C1)
                        SQL &= String.Format(" Position_C = '{0}', ", vPosition_C1)
                        SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C1)
                        SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C1 = "", "", Format(CDate(vHired_C1), "yyyy-MM-dd")))
                        SQL &= String.Format(" YearHired_C = {0}, ", vYearHired_C1)
                        SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C1)
                        SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C1)
                        SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C1)
                        SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C1)
                        SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C1)
                        SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C1)
                        SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C1)
                        SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C1)
                        SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C1)
                        SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C1)
                        SQL &= String.Format(" Area_C = '{0}', ", vArea_C1)
                        SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C1 = "", "", Format(CDate(vExpiry_C1), "yyyy-MM-dd")))
                        SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C1)
                        SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C1)
                        SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C1)
                        'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                        SQL &= String.Format(" Creditor_1 = '{0}', ", vCreditor_1_C1)
                        SQL &= String.Format(" CreditAddress_1 = '{0}', ", vCreditAddress_1_C1)
                        SQL &= String.Format(" CreditGranted_1 = '{0}', ", vCreditGranted_1_C1)
                        SQL &= String.Format(" Term_1 = '{0}', ", vTerm_1_C1)
                        SQL &= String.Format(" AmountGranted_1 = '{0}', ", vAmountGranted_1_C1)
                        SQL &= String.Format(" Balance_1 = '{0}', ", vBalance_1_C1)
                        SQL &= String.Format(" CreditPayment_1 = '{0}', ", vCreditPayment_1_C1)
                        SQL &= String.Format(" CreditRemarks_1 = '{0}', ", vCreditRemarks_1_C1)
                        SQL &= String.Format(" Creditor_2 = '{0}', ", vCreditor_2_C1)
                        SQL &= String.Format(" CreditAddress_2 = '{0}', ", vCreditAddress_2_C1)
                        SQL &= String.Format(" CreditGranted_2 = '{0}', ", vCreditGranted_2_C1)
                        SQL &= String.Format(" Term_2 = '{0}', ", vTerm_2_C1)
                        SQL &= String.Format(" AmountGranted_2 = '{0}', ", vAmountGranted_2_C1)
                        SQL &= String.Format(" Balance_2 = '{0}', ", vBalance_2_C1)
                        SQL &= String.Format(" CreditPayment_2 = '{0}', ", vCreditPayment_2_C1)
                        SQL &= String.Format(" CreditRemarks_2 = '{0}', ", vCreditRemarks_2_C1)
                        SQL &= String.Format(" Bank_1 = '{0}', ", vBank_1_C1)
                        SQL &= String.Format(" Branch_1 = '{0}', ", vBranch_1_C1)
                        SQL &= String.Format(" AccountT_1 = '{0}', ", vAccountT_1_C1)
                        SQL &= String.Format(" SA_1 = '{0}', ", vSA_1_C1)
                        SQL &= String.Format(" AverageBalance_1 = '{0}', ", vAverageBalance_1_C1)
                        SQL &= String.Format(" Opened_1 = '{0}', ", vOpened_1_C1)
                        SQL &= String.Format(" Bank_2 = '{0}', ", vBank_2_C1)
                        SQL &= String.Format(" Branch_2 = '{0}', ", vBranch_2_C1)
                        SQL &= String.Format(" AccountT_2 = '{0}', ", vAccountT_2_C1)
                        SQL &= String.Format(" SA_2 = '{0}', ", vSA_2_C1)
                        SQL &= String.Format(" AverageBalance_2 = '{0}', ", vAverageBalance_2_C1)
                        SQL &= String.Format(" Opened_2 = '{0}', ", vOpened_2_C1)
                        SQL &= String.Format(" CreditRating = '{0}', ", vCreditRating_C1)
                        SQL &= String.Format(" Rec_Remarks = '{0}', ", vRec_Remarks_C1)
                        SQL &= String.Format(" Title = '{0}', ", vTitle_C1)
                        SQL &= String.Format(" CaseNum = '{0}', ", vCaseNum_C1)
                        SQL &= String.Format(" DateFilled = '{0}', ", vDateFilled_C1)
                        SQL &= String.Format(" Court = '{0}', ", vCourt_C1)
                        SQL &= String.Format(" CaseNature = '{0}', ", vCaseNature_C1)
                        SQL &= String.Format(" AmountInvolved = '{0}', ", vAmountInvolved_C1)
                        SQL &= String.Format(" CaseStatus = '{0}', ", vCaseStatus_C1)
                        SQL &= String.Format(" Findings = '{0}', ", vFindings_C1)
                        SQL &= String.Format(" FindingsStat = '{0}', ", vFindingsStat_C1)
                        SQL &= String.Format(" CACPI = '{0}', ", vCACPI_C1)
                        SQL &= String.Format(" Location_1 = '{0}', ", vLocation_1_C1)
                        SQL &= String.Format(" TCT_1 = '{0}', ", vTCT_1_C1)
                        SQL &= String.Format(" Area_1 = '{0}', ", vArea_1_C1)
                        SQL &= String.Format(" PropertiesRemarks_1 = '{0}', ", vPropertiesRemarks_1_C1)
                        SQL &= String.Format(" Location_2 = '{0}', ", vLocation_2_C1)
                        SQL &= String.Format(" TCT_2 = '{0}', ", vTCT_2_C1)
                        SQL &= String.Format(" Area_2 = '{0}', ", vArea_2_C1)
                        SQL &= String.Format(" PropertiesRemarks_2 = '{0}', ", vPropertiesRemarks_2_C1)
                        SQL &= String.Format(" Vehicle_1 = '{0}', ", vVehicle_1_C1)
                        SQL &= String.Format(" Year_1 = '{0}', ", vYear_1_C1)
                        SQL &= String.Format(" WhomAcquired_1 = '{0}', ", vWhomAcquired_1_C1)
                        SQL &= String.Format(" VehicleRemarks_1 = '{0}', ", vVehicleRemarks_1_C1)
                        SQL &= String.Format(" Vehicle_2 = '{0}', ", vVehicle_2_C1)
                        SQL &= String.Format(" Year_2 = '{0}', ", vYear_2_C1)
                        SQL &= String.Format(" WhomAcquired_2 = '{0}', ", vWhomAcquired_2_C1)
                        SQL &= String.Format(" VehicleRemarks_2 = '{0}', ", vVehicleRemarks_2_C1)
                        SQL &= String.Format(" OtherProperties = '{0}', ", vOtherProperties_C1)
                        SQL &= String.Format(" Narrative = '{0}', ", vNarrative_C1.InsertQuote)
                        SQL &= String.Format(" Ex_TotalDisposable = '{0}', ", vEx_TotalDisposable_C1)
                        SQL &= String.Format(" Ex_Living = '{0}', ", vEx_Living_C1)
                        SQL &= String.Format(" Ex_Clothing = '{0}', ", vEx_Clothing_C1)
                        SQL &= String.Format(" Ex_Education = '{0}', ", vEx_Education_C1)
                        SQL &= String.Format(" Ex_Transportation = '{0}', ", vEx_Transportation_C1)
                        SQL &= String.Format(" Ex_Lights = '{0}', ", vEx_Lights_C1)
                        SQL &= String.Format(" Ex_Insurance = '{0}', ", vEx_Insurance_C1)
                        SQL &= String.Format(" Ex_Amortization = '{0}', ", vEx_Amortization_C1)
                        SQL &= String.Format(" Ex_Miscellaneous = '{0}', ", vEx_Miscellaneous_C1)
                        SQL &= String.Format(" Ex_TotalExpenses = '{0}', ", vEx_TotalExpenses_C1)
                        SQL &= String.Format(" Ex_NetDisposable = '{0}', ", vEx_NetDisposable_C1)
                        SQL &= String.Format(" Ex_TMFI = '{0}', ", vEx_TMFI_C1)
                        SQL &= String.Format(" Ex_TMDI = '{0}', ", vEx_TMDI_C1)
                        SQL &= String.Format(" Ex_Remarks = '{0}', ", vEx_Remarks_C1.InsertQuote)
                        SQL &= String.Format(" PurposeLoan = '{0}', ", vPurposeLoan_C1.InsertQuote)
                        SQL &= String.Format(" Others = '{0}', ", vOthers_C1.InsertQuote)
                        SQL &= String.Format(" C1 = '{0}',", vC1_C1.InsertQuote)
                        SQL &= String.Format(" C2 = '{0}',", vC2_C1.InsertQuote)
                        SQL &= String.Format(" C3 = '{0}',", vC3_C1.InsertQuote)
                        SQL &= String.Format(" C4 = '{0}',", vC4_C1.InsertQuote)
                        SQL &= String.Format(" C5 = '{0}',", vC5_C1.InsertQuote)
                        SQL &= String.Format(" C6 = '{0}',", vC6_C1.InsertQuote)
                        SQL &= String.Format(" C7 = '{0}',", vC7_C1.InsertQuote)
                        SQL &= String.Format(" C8 = '{0}',", vC8_C1.InsertQuote)
                        SQL &= String.Format(" C9 = '{0}',", vC9_C1.InsertQuote)
                        'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                        SQL &= String.Format(" `Rank` = {0}, ", 1)
                        SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                        If ChangePic1 Then
                            SaveImage(CoMaker1, "CoMaker1", True)
                        End If
                        If ChangeSketchC1 Then
                            SaveImage(SketchC1, "Sketch C1", True)
                        End If

                        SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker1' AND CreditNumber = '{0}';", CreditNumber)
                        For x As Integer = 0 To Industry_C1.Properties.Items.Count - 1
                            If Industry_C1.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                SQL &= "INSERT INTO credit_application_industry SET"
                                SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                                SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C1.Properties.Items.Item(x).Value)
                                SQL &= String.Format(" Industry = '{0}', ", Industry_C1.Properties.Items.Item(x).Description)
                                SQL &= " `Type` = 'CoMaker1';"
                            End If
                        Next

                        'IDENTIFICATION DUMMY
                        SQL &= "INSERT INTO profile_borrowerid SET"
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= " TIN = '', "
                        SQL &= " SSS = '', "
                        SQL &= " GSIS = '', "
                        SQL &= " PhilHealth = '', "
                        SQL &= " Senior = '', "
                        SQL &= " UMID = '', "
                        SQL &= " SEC = '', "
                        SQL &= " DTI = '', "
                        SQL &= " CDA = '', "
                        SQL &= " Cooperative = '', "
                        SQL &= " Drivers = '', "
                        SQL &= " dDrivers = '', "
                        SQL &= " VIN = '', "
                        SQL &= " dVIN = '', "
                        SQL &= " Passport = '', "
                        SQL &= " dPassport = '', "
                        SQL &= " PRC = '', "
                        SQL &= " dPRC = '', "
                        SQL &= " NBI = '', "
                        SQL &= " dNBI = '', "
                        SQL &= " Police = '', "
                        SQL &= " dPolice = '', "
                        SQL &= " Postal = '', "
                        SQL &= " dPostal = '', "
                        SQL &= " Barangay = '', "
                        SQL &= " dBarangay = '', "
                        SQL &= " OWWA = '', "
                        SQL &= " dOWWA = '', "
                        SQL &= " OFW = '', "
                        SQL &= " dOFW = '', "
                        SQL &= " Seaman = '', "
                        SQL &= " dSeaman = '', "
                        SQL &= " PNP = '', "
                        SQL &= " dPNP = '', "
                        SQL &= " AFP = '', "
                        SQL &= " dAFP = '', "
                        SQL &= " HDMF = '', "
                        SQL &= " dHDMF = '', "
                        SQL &= " PWD = '', "
                        SQL &= " dPWD = '', "
                        SQL &= " DSWD = '', "
                        SQL &= " dDSWD = '', "
                        SQL &= " ACR = '', "
                        SQL &= " dACR = '', "
                        SQL &= " DTI_Business = '', "
                        SQL &= " dDTI_Business = '', "
                        SQL &= " IBP = '', "
                        SQL &= " dIBP = '', "
                        SQL &= " FireArms = '', "
                        SQL &= " dFireArms = '', "
                        SQL &= " Government = '', "
                        SQL &= " dGovernment = '', "
                        SQL &= " Diplomat = '', "
                        SQL &= " dDiplomat = '', "
                        SQL &= " `National` = '', "
                        SQL &= " dNational = '', "
                        SQL &= " `Work` = '', "
                        SQL &= " dWork = '', "
                        SQL &= " GOCC = '', "
                        SQL &= " dGOCC = '', "
                        SQL &= " PLRA = '', "
                        SQL &= " dPLRA = '', "
                        SQL &= " Major = '', "
                        SQL &= " dMajor = '', "
                        SQL &= " Media = '', "
                        SQL &= " dMedia = '', "
                        SQL &= " Student = '', "
                        SQL &= " dStudent = '', "
                        SQL &= " SIRV = '', "
                        SQL &= " dSIRV = '',"
                        SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                        SQL &= " ID_Type = 'C1';"
                    End If
                End If

                If TxtFirstN_C2.Tag = "" And TxtFirstN_C2.Text <> "" Then
                    If TxtFirstN_C2.Text = "" Then
                    Else
                        Dim Gender_C2 As String = ""
                        If vMale_C2 Then
                            Gender_C2 = "Male"
                        ElseIf vFemale_C2 Then
                            Gender_C2 = "Female"
                        End If
                        Dim Civil_C2 As String = ""
                        If vSingle_C2 Then
                            Civil_C2 = "Single"
                        ElseIf vMarried_C2 Then
                            Civil_C2 = "Married"
                        ElseIf vSeparated_C2 Then
                            Civil_C2 = "Separated"
                        ElseIf vWidowed_C2 Then
                            Civil_C2 = "Widowed"
                        End If
                        Dim House_C2 As String = ""
                        If vOwned_C2 Then
                            House_C2 = "Owned"
                        ElseIf vFree_C2 Then
                            House_C2 = "Free"
                        ElseIf vRented_C2 Then
                            House_C2 = "Rented"
                        End If
                        Dim EmplStatus_C2 As String = ""
                        If vCasual_C2 Then
                            EmplStatus_C2 = "Casual"
                        ElseIf vTemporary_C2 Then
                            EmplStatus_C2 = "Temporary"
                        ElseIf vPermanent_C2 Then
                            EmplStatus_C2 = "Permanent"
                        End If

                        Dim RelationID As Integer = 0
                        If vRelationship_C2 = "" Then
                        Else
                            RelationID = vRelationship_C2_ID
                        End If

                        SQL &= "INSERT INTO credit_application_comaker SET"
                        SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                        SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_2 <> "", ReferenceID_2, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 2,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                        SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C2.Text)
                        SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C2.Text)
                        SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C2.Text)
                        SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C2.Text)
                        SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C2.Text)
                        SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C2)
                        SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C2)
                        SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C2)
                        SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C2_ID)
                        SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C2)
                        SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C2)
                        SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C2)
                        SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C2)
                        SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C2_ID)
                        SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C2)
                        SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C2 = "", "", Format(CDate(vBirth_C2), "yyyy-MM-dd")))
                        SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C2_ID)
                        SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C2)
                        SQL &= String.Format(" Gender_C = '{0}', ", Gender_C2)
                        SQL &= String.Format(" Civil_C = '{0}', ", Civil_C2)
                        SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C2)
                        SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C2)
                        SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C2)
                        SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C2)
                        SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C2)
                        SQL &= String.Format(" Email_C = '{0}', ", vEmail_C2)
                        SQL &= String.Format(" House_C = '{0}', ", House_C2)
                        SQL &= String.Format(" Rent_C = '{0}', ", vRent_C2)
                        SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                        SQL &= String.Format(" Relation = '{0}',", vRelationship_C2)
                        SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C2)
                        SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C2)
                        SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C2)
                        SQL &= String.Format(" Position_C = '{0}', ", vPosition_C2)
                        SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C2)
                        SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C2 = "", "", Format(CDate(vHired_C2), "yyyy-MM-dd")))
                        SQL &= String.Format(" YearHired_C = {0}, ", vYearHired_C2)
                        SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C1)
                        SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C2)
                        SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C2)
                        SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C2)
                        SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C2)
                        SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C2)
                        SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C2)
                        SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C2)
                        SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C2)
                        SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C2)
                        SQL &= String.Format(" Area_C = '{0}', ", vArea_C2)
                        SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C2 = "", "", Format(CDate(vExpiry_C2), "yyyy-MM-dd")))
                        SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C2)
                        SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C2)
                        SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C2)
                        'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                        SQL &= String.Format(" Creditor_1 = '{0}', ", vCreditor_1_C2)
                        SQL &= String.Format(" CreditAddress_1 = '{0}', ", vCreditAddress_1_C2)
                        SQL &= String.Format(" CreditGranted_1 = '{0}', ", vCreditGranted_1_C2)
                        SQL &= String.Format(" Term_1 = '{0}', ", vTerm_1_C2)
                        SQL &= String.Format(" AmountGranted_1 = '{0}', ", vAmountGranted_1_C2)
                        SQL &= String.Format(" Balance_1 = '{0}', ", vBalance_1_C2)
                        SQL &= String.Format(" CreditPayment_1 = '{0}', ", vCreditPayment_1_C2)
                        SQL &= String.Format(" CreditRemarks_1 = '{0}', ", vCreditRemarks_1_C2)
                        SQL &= String.Format(" Creditor_2 = '{0}', ", vCreditor_2_C2)
                        SQL &= String.Format(" CreditAddress_2 = '{0}', ", vCreditAddress_2_C2)
                        SQL &= String.Format(" CreditGranted_2 = '{0}', ", vCreditGranted_2_C2)
                        SQL &= String.Format(" Term_2 = '{0}', ", vTerm_2_C2)
                        SQL &= String.Format(" AmountGranted_2 = '{0}', ", vAmountGranted_2_C2)
                        SQL &= String.Format(" Balance_2 = '{0}', ", vBalance_2_C2)
                        SQL &= String.Format(" CreditPayment_2 = '{0}', ", vCreditPayment_2_C2)
                        SQL &= String.Format(" CreditRemarks_2 = '{0}', ", vCreditRemarks_2_C2)
                        SQL &= String.Format(" Bank_1 = '{0}', ", vBank_1_C2)
                        SQL &= String.Format(" Branch_1 = '{0}', ", vBranch_1_C2)
                        SQL &= String.Format(" AccountT_1 = '{0}', ", vAccountT_1_C2)
                        SQL &= String.Format(" SA_1 = '{0}', ", vSA_1_C2)
                        SQL &= String.Format(" AverageBalance_1 = '{0}', ", vAverageBalance_1_C2)
                        SQL &= String.Format(" Opened_1 = '{0}', ", vOpened_1_C2)
                        SQL &= String.Format(" Bank_2 = '{0}', ", vBank_2_C2)
                        SQL &= String.Format(" Branch_2 = '{0}', ", vBranch_2_C2)
                        SQL &= String.Format(" AccountT_2 = '{0}', ", vAccountT_2_C2)
                        SQL &= String.Format(" SA_2 = '{0}', ", vSA_2_C2)
                        SQL &= String.Format(" AverageBalance_2 = '{0}', ", vAverageBalance_2_C2)
                        SQL &= String.Format(" Opened_2 = '{0}', ", vOpened_2_C2)
                        SQL &= String.Format(" CreditRating = '{0}', ", vCreditRating_C2)
                        SQL &= String.Format(" Rec_Remarks = '{0}', ", vRec_Remarks_C2)
                        SQL &= String.Format(" Title = '{0}', ", vTitle_C2)
                        SQL &= String.Format(" CaseNum = '{0}', ", vCaseNum_C2)
                        SQL &= String.Format(" DateFilled = '{0}', ", vDateFilled_C2)
                        SQL &= String.Format(" Court = '{0}', ", vCourt_C2)
                        SQL &= String.Format(" CaseNature = '{0}', ", vCaseNature_C2)
                        SQL &= String.Format(" AmountInvolved = '{0}', ", vAmountInvolved_C2)
                        SQL &= String.Format(" CaseStatus = '{0}', ", vCaseStatus_C2)
                        SQL &= String.Format(" Findings = '{0}', ", vFindings_C2)
                        SQL &= String.Format(" FindingsStat = '{0}', ", vFindingsStat_C2)
                        SQL &= String.Format(" CACPI = '{0}', ", vCACPI_C2)
                        SQL &= String.Format(" Location_1 = '{0}', ", vLocation_1_C2)
                        SQL &= String.Format(" TCT_1 = '{0}', ", vTCT_1_C2)
                        SQL &= String.Format(" Area_1 = '{0}', ", vArea_1_C2)
                        SQL &= String.Format(" PropertiesRemarks_1 = '{0}', ", vPropertiesRemarks_1_C2)
                        SQL &= String.Format(" Location_2 = '{0}', ", vLocation_2_C2)
                        SQL &= String.Format(" TCT_2 = '{0}', ", vTCT_2_C2)
                        SQL &= String.Format(" Area_2 = '{0}', ", vArea_2_C2)
                        SQL &= String.Format(" PropertiesRemarks_2 = '{0}', ", vPropertiesRemarks_2_C2)
                        SQL &= String.Format(" Vehicle_1 = '{0}', ", vVehicle_1_C2)
                        SQL &= String.Format(" Year_1 = '{0}', ", vYear_1_C2)
                        SQL &= String.Format(" WhomAcquired_1 = '{0}', ", vWhomAcquired_1_C2)
                        SQL &= String.Format(" VehicleRemarks_1 = '{0}', ", vVehicleRemarks_1_C2)
                        SQL &= String.Format(" Vehicle_2 = '{0}', ", vVehicle_2_C2)
                        SQL &= String.Format(" Year_2 = '{0}', ", vYear_2_C2)
                        SQL &= String.Format(" WhomAcquired_2 = '{0}', ", vWhomAcquired_2_C2)
                        SQL &= String.Format(" VehicleRemarks_2 = '{0}', ", vVehicleRemarks_2_C2)
                        SQL &= String.Format(" OtherProperties = '{0}', ", vOtherProperties_C2)
                        SQL &= String.Format(" Narrative = '{0}', ", vNarrative_C2.InsertQuote)
                        SQL &= String.Format(" Ex_TotalDisposable = '{0}', ", vEx_TotalDisposable_C2)
                        SQL &= String.Format(" Ex_Living = '{0}', ", vEx_Living_C2)
                        SQL &= String.Format(" Ex_Clothing = '{0}', ", vEx_Clothing_C2)
                        SQL &= String.Format(" Ex_Education = '{0}', ", vEx_Education_C2)
                        SQL &= String.Format(" Ex_Transportation = '{0}', ", vEx_Transportation_C2)
                        SQL &= String.Format(" Ex_Lights = '{0}', ", vEx_Lights_C2)
                        SQL &= String.Format(" Ex_Insurance = '{0}', ", vEx_Insurance_C2)
                        SQL &= String.Format(" Ex_Amortization = '{0}', ", vEx_Amortization_C2)
                        SQL &= String.Format(" Ex_Miscellaneous = '{0}', ", vEx_Miscellaneous_C2)
                        SQL &= String.Format(" Ex_TotalExpenses = '{0}', ", vEx_TotalExpenses_C2)
                        SQL &= String.Format(" Ex_NetDisposable = '{0}', ", vEx_NetDisposable_C2)
                        SQL &= String.Format(" Ex_TMFI = '{0}', ", vEx_TMFI_C2)
                        SQL &= String.Format(" Ex_TMDI = '{0}', ", vEx_TMDI_C2)
                        SQL &= String.Format(" Ex_Remarks = '{0}', ", vEx_Remarks_C2.InsertQuote)
                        SQL &= String.Format(" PurposeLoan = '{0}', ", vPurposeLoan_C2.InsertQuote)
                        SQL &= String.Format(" Others = '{0}', ", vOthers_C2.InsertQuote)
                        SQL &= String.Format(" C1 = '{0}',", vC1_C2.InsertQuote)
                        SQL &= String.Format(" C2 = '{0}',", vC2_C2.InsertQuote)
                        SQL &= String.Format(" C3 = '{0}',", vC3_C2.InsertQuote)
                        SQL &= String.Format(" C4 = '{0}',", vC4_C2.InsertQuote)
                        SQL &= String.Format(" C5 = '{0}',", vC5_C2.InsertQuote)
                        SQL &= String.Format(" C6 = '{0}',", vC6_C2.InsertQuote)
                        SQL &= String.Format(" C7 = '{0}',", vC7_C2.InsertQuote)
                        SQL &= String.Format(" C8 = '{0}',", vC8_C2.InsertQuote)
                        SQL &= String.Format(" C9 = '{0}',", vC9_C2.InsertQuote)
                        'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                        SQL &= String.Format(" `Rank` = {0}, ", 2)
                        SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                        If ChangePic2 Then
                            SaveImage(CoMaker2, "CoMaker2", True)
                        End If
                        If ChangeSketchC2 Then
                            SaveImage(SketchC2, "Sketch C2", True)
                        End If

                        SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker2' AND CreditNumber = '{0}';", CreditNumber)
                        For x As Integer = 0 To Industry_C2.Properties.Items.Count - 1
                            If Industry_C2.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                SQL &= "INSERT INTO credit_application_industry SET"
                                SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                                SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C2.Properties.Items.Item(x).Value)
                                SQL &= String.Format(" Industry = '{0}', ", Industry_C2.Properties.Items.Item(x).Description)
                                SQL &= " `Type` = 'CoMaker2';"
                            End If
                        Next

                        'IDENTIFICATION DUMMY
                        SQL &= "INSERT INTO profile_borrowerid SET"
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= " TIN = '', "
                        SQL &= " SSS = '', "
                        SQL &= " GSIS = '', "
                        SQL &= " PhilHealth = '', "
                        SQL &= " Senior = '', "
                        SQL &= " UMID = '', "
                        SQL &= " SEC = '', "
                        SQL &= " DTI = '', "
                        SQL &= " CDA = '', "
                        SQL &= " Cooperative = '', "
                        SQL &= " Drivers = '', "
                        SQL &= " dDrivers = '', "
                        SQL &= " VIN = '', "
                        SQL &= " dVIN = '', "
                        SQL &= " Passport = '', "
                        SQL &= " dPassport = '', "
                        SQL &= " PRC = '', "
                        SQL &= " dPRC = '', "
                        SQL &= " NBI = '', "
                        SQL &= " dNBI = '', "
                        SQL &= " Police = '', "
                        SQL &= " dPolice = '', "
                        SQL &= " Postal = '', "
                        SQL &= " dPostal = '', "
                        SQL &= " Barangay = '', "
                        SQL &= " dBarangay = '', "
                        SQL &= " OWWA = '', "
                        SQL &= " dOWWA = '', "
                        SQL &= " OFW = '', "
                        SQL &= " dOFW = '', "
                        SQL &= " Seaman = '', "
                        SQL &= " dSeaman = '', "
                        SQL &= " PNP = '', "
                        SQL &= " dPNP = '', "
                        SQL &= " AFP = '', "
                        SQL &= " dAFP = '', "
                        SQL &= " HDMF = '', "
                        SQL &= " dHDMF = '', "
                        SQL &= " PWD = '', "
                        SQL &= " dPWD = '', "
                        SQL &= " DSWD = '', "
                        SQL &= " dDSWD = '', "
                        SQL &= " ACR = '', "
                        SQL &= " dACR = '', "
                        SQL &= " DTI_Business = '', "
                        SQL &= " dDTI_Business = '', "
                        SQL &= " IBP = '', "
                        SQL &= " dIBP = '', "
                        SQL &= " FireArms = '', "
                        SQL &= " dFireArms = '', "
                        SQL &= " Government = '', "
                        SQL &= " dGovernment = '', "
                        SQL &= " Diplomat = '', "
                        SQL &= " dDiplomat = '', "
                        SQL &= " `National` = '', "
                        SQL &= " dNational = '', "
                        SQL &= " `Work` = '', "
                        SQL &= " dWork = '', "
                        SQL &= " GOCC = '', "
                        SQL &= " dGOCC = '', "
                        SQL &= " PLRA = '', "
                        SQL &= " dPLRA = '', "
                        SQL &= " Major = '', "
                        SQL &= " dMajor = '', "
                        SQL &= " Media = '', "
                        SQL &= " dMedia = '', "
                        SQL &= " Student = '', "
                        SQL &= " dStudent = '', "
                        SQL &= " SIRV = '', "
                        SQL &= " dSIRV = '',"
                        SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                        SQL &= " ID_Type = 'C2';"
                    End If
                End If

                If TxtFirstN_C3.Tag = "" And TxtFirstN_C3.Text <> "" Then
                    If TxtFirstN_C3.Text = "" Then
                    Else
                        Dim Gender_C3 As String = ""
                        If vMale_C3 Then
                            Gender_C3 = "Male"
                        ElseIf vFemale_C3 Then
                            Gender_C3 = "Female"
                        End If
                        Dim Civil_C3 As String = ""
                        If vSingle_C3 Then
                            Civil_C3 = "Single"
                        ElseIf vMarried_C3 Then
                            Civil_C3 = "Married"
                        ElseIf vSeparated_C3 Then
                            Civil_C3 = "Separated"
                        ElseIf vWidowed_C3 Then
                            Civil_C3 = "Widowed"
                        End If
                        Dim House_C3 As String = ""
                        If vOwned_C3 Then
                            House_C3 = "Owned"
                        ElseIf vFree_C3 Then
                            House_C3 = "Free"
                        ElseIf vRented_C3 Then
                            House_C3 = "Rented"
                        End If
                        Dim EmplStatus_C3 As String = ""
                        If vCasual_C3 Then
                            EmplStatus_C3 = "Casual"
                        ElseIf vTemporary_C3 Then
                            EmplStatus_C3 = "Temporary"
                        ElseIf vPermanent_C3 Then
                            EmplStatus_C3 = "Permanent"
                        End If

                        Dim RelationID As Integer = 0
                        If vRelationship_C3 = "" Then
                        Else
                            RelationID = vRelationship_C3_ID
                        End If

                        SQL &= "INSERT INTO credit_application_comaker SET"
                        SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                        SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_3 <> "", ReferenceID_3, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 3,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                        SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C3.Text)
                        SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C3.Text)
                        SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C3.Text)
                        SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C3.Text)
                        SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C3.Text)
                        SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C3)
                        SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C3)
                        SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C3)
                        SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C3_ID)
                        SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C3)
                        SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C3)
                        SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C3)
                        SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C3)
                        SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C3_ID)
                        SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C3)
                        SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C3 = "", "", Format(CDate(vBirth_C3), "yyyy-MM-dd")))
                        SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C3_ID)
                        SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C3)
                        SQL &= String.Format(" Gender_C = '{0}', ", Gender_C3)
                        SQL &= String.Format(" Civil_C = '{0}', ", Civil_C3)
                        SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C3)
                        SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C3)
                        SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C3)
                        SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C3)
                        SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C3)
                        SQL &= String.Format(" Email_C = '{0}', ", vEmail_C3)
                        SQL &= String.Format(" House_C = '{0}', ", House_C3)
                        SQL &= String.Format(" Rent_C = '{0}', ", vRent_C3)
                        SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                        SQL &= String.Format(" Relation = '{0}',", vRelationship_C3)
                        SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C3)
                        SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C3)
                        SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C3)
                        SQL &= String.Format(" Position_C = '{0}', ", vPosition_C3)
                        SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C3)
                        SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C3 = "", "", Format(CDate(vHired_C3), "yyyy-MM-dd")))
                        SQL &= String.Format(" YearHired_C = {0}, ", vYearHired_C3)
                        SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C3)
                        SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C3)
                        SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C3)
                        SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C3)
                        SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C3)
                        SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C3)
                        SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C3)
                        SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C3)
                        SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C3)
                        SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C3)
                        SQL &= String.Format(" Area_C = '{0}', ", vArea_C3)
                        SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C3 = "", "", Format(CDate(vExpiry_C3), "yyyy-MM-dd")))
                        SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C3)
                        SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C3)
                        SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C3)
                        'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                        SQL &= String.Format(" Creditor_1 = '{0}', ", vCreditor_1_C3)
                        SQL &= String.Format(" CreditAddress_1 = '{0}', ", vCreditAddress_1_C3)
                        SQL &= String.Format(" CreditGranted_1 = '{0}', ", vCreditGranted_1_C3)
                        SQL &= String.Format(" Term_1 = '{0}', ", vTerm_1_C3)
                        SQL &= String.Format(" AmountGranted_1 = '{0}', ", vAmountGranted_1_C3)
                        SQL &= String.Format(" Balance_1 = '{0}', ", vBalance_1_C3)
                        SQL &= String.Format(" CreditPayment_1 = '{0}', ", vCreditPayment_1_C3)
                        SQL &= String.Format(" CreditRemarks_1 = '{0}', ", vCreditRemarks_1_C3)
                        SQL &= String.Format(" Creditor_2 = '{0}', ", vCreditor_2_C3)
                        SQL &= String.Format(" CreditAddress_2 = '{0}', ", vCreditAddress_2_C3)
                        SQL &= String.Format(" CreditGranted_2 = '{0}', ", vCreditGranted_2_C3)
                        SQL &= String.Format(" Term_2 = '{0}', ", vTerm_2_C3)
                        SQL &= String.Format(" AmountGranted_2 = '{0}', ", vAmountGranted_2_C3)
                        SQL &= String.Format(" Balance_2 = '{0}', ", vBalance_2_C3)
                        SQL &= String.Format(" CreditPayment_2 = '{0}', ", vCreditPayment_2_C3)
                        SQL &= String.Format(" CreditRemarks_2 = '{0}', ", vCreditRemarks_2_C3)
                        SQL &= String.Format(" Bank_1 = '{0}', ", vBank_1_C3)
                        SQL &= String.Format(" Branch_1 = '{0}', ", vBranch_1_C3)
                        SQL &= String.Format(" AccountT_1 = '{0}', ", vAccountT_1_C3)
                        SQL &= String.Format(" SA_1 = '{0}', ", vSA_1_C3)
                        SQL &= String.Format(" AverageBalance_1 = '{0}', ", vAverageBalance_1_C3)
                        SQL &= String.Format(" Opened_1 = '{0}', ", vOpened_1_C3)
                        SQL &= String.Format(" Bank_2 = '{0}', ", vBank_2_C3)
                        SQL &= String.Format(" Branch_2 = '{0}', ", vBranch_2_C3)
                        SQL &= String.Format(" AccountT_2 = '{0}', ", vAccountT_2_C3)
                        SQL &= String.Format(" SA_2 = '{0}', ", vSA_2_C3)
                        SQL &= String.Format(" AverageBalance_2 = '{0}', ", vAverageBalance_2_C3)
                        SQL &= String.Format(" Opened_2 = '{0}', ", vOpened_2_C3)
                        SQL &= String.Format(" CreditRating = '{0}', ", vCreditRating_C3)
                        SQL &= String.Format(" Rec_Remarks = '{0}', ", vRec_Remarks_C3)
                        SQL &= String.Format(" Title = '{0}', ", vTitle_C3)
                        SQL &= String.Format(" CaseNum = '{0}', ", vCaseNum_C3)
                        SQL &= String.Format(" DateFilled = '{0}', ", vDateFilled_C3)
                        SQL &= String.Format(" Court = '{0}', ", vCourt_C3)
                        SQL &= String.Format(" CaseNature = '{0}', ", vCaseNature_C3)
                        SQL &= String.Format(" AmountInvolved = '{0}', ", vAmountInvolved_C3)
                        SQL &= String.Format(" CaseStatus = '{0}', ", vCaseStatus_C3)
                        SQL &= String.Format(" Findings = '{0}', ", vFindings_C3)
                        SQL &= String.Format(" FindingsStat = '{0}', ", vFindingsStat_C3)
                        SQL &= String.Format(" CACPI = '{0}', ", vCACPI_C3)
                        SQL &= String.Format(" Location_1 = '{0}', ", vLocation_1_C3)
                        SQL &= String.Format(" TCT_1 = '{0}', ", vTCT_1_C3)
                        SQL &= String.Format(" Area_1 = '{0}', ", vArea_1_C3)
                        SQL &= String.Format(" PropertiesRemarks_1 = '{0}', ", vPropertiesRemarks_1_C3)
                        SQL &= String.Format(" Location_2 = '{0}', ", vLocation_2_C3)
                        SQL &= String.Format(" TCT_2 = '{0}', ", vTCT_2_C3)
                        SQL &= String.Format(" Area_2 = '{0}', ", vArea_2_C3)
                        SQL &= String.Format(" PropertiesRemarks_2 = '{0}', ", vPropertiesRemarks_2_C3)
                        SQL &= String.Format(" Vehicle_1 = '{0}', ", vVehicle_1_C3)
                        SQL &= String.Format(" Year_1 = '{0}', ", vYear_1_C3)
                        SQL &= String.Format(" WhomAcquired_1 = '{0}', ", vWhomAcquired_1_C3)
                        SQL &= String.Format(" VehicleRemarks_1 = '{0}', ", vVehicleRemarks_1_C3)
                        SQL &= String.Format(" Vehicle_2 = '{0}', ", vVehicle_2_C3)
                        SQL &= String.Format(" Year_2 = '{0}', ", vYear_2_C3)
                        SQL &= String.Format(" WhomAcquired_2 = '{0}', ", vWhomAcquired_2_C3)
                        SQL &= String.Format(" VehicleRemarks_2 = '{0}', ", vVehicleRemarks_2_C3)
                        SQL &= String.Format(" OtherProperties = '{0}', ", vOtherProperties_C3)
                        SQL &= String.Format(" Narrative = '{0}', ", vNarrative_C3.InsertQuote)
                        SQL &= String.Format(" Ex_TotalDisposable = '{0}', ", vEx_TotalDisposable_C3)
                        SQL &= String.Format(" Ex_Living = '{0}', ", vEx_Living_C3)
                        SQL &= String.Format(" Ex_Clothing = '{0}', ", vEx_Clothing_C3)
                        SQL &= String.Format(" Ex_Education = '{0}', ", vEx_Education_C3)
                        SQL &= String.Format(" Ex_Transportation = '{0}', ", vEx_Transportation_C3)
                        SQL &= String.Format(" Ex_Lights = '{0}', ", vEx_Lights_C3)
                        SQL &= String.Format(" Ex_Insurance = '{0}', ", vEx_Insurance_C3)
                        SQL &= String.Format(" Ex_Amortization = '{0}', ", vEx_Amortization_C3)
                        SQL &= String.Format(" Ex_Miscellaneous = '{0}', ", vEx_Miscellaneous_C3)
                        SQL &= String.Format(" Ex_TotalExpenses = '{0}', ", vEx_TotalExpenses_C3)
                        SQL &= String.Format(" Ex_NetDisposable = '{0}', ", vEx_NetDisposable_C3)
                        SQL &= String.Format(" Ex_TMFI = '{0}', ", vEx_TMFI_C3)
                        SQL &= String.Format(" Ex_TMDI = '{0}', ", vEx_TMDI_C3)
                        SQL &= String.Format(" Ex_Remarks = '{0}', ", vEx_Remarks_C3.InsertQuote)
                        SQL &= String.Format(" PurposeLoan = '{0}', ", vPurposeLoan_C3.InsertQuote)
                        SQL &= String.Format(" Others = '{0}', ", vOthers_C3.InsertQuote)
                        SQL &= String.Format(" C1 = '{0}',", vC1_C3.InsertQuote)
                        SQL &= String.Format(" C2 = '{0}',", vC2_C3.InsertQuote)
                        SQL &= String.Format(" C3 = '{0}',", vC3_C3.InsertQuote)
                        SQL &= String.Format(" C4 = '{0}',", vC4_C3.InsertQuote)
                        SQL &= String.Format(" C5 = '{0}',", vC5_C3.InsertQuote)
                        SQL &= String.Format(" C6 = '{0}',", vC6_C3.InsertQuote)
                        SQL &= String.Format(" C7 = '{0}',", vC7_C3.InsertQuote)
                        SQL &= String.Format(" C8 = '{0}',", vC8_C3.InsertQuote)
                        SQL &= String.Format(" C9 = '{0}',", vC9_C3.InsertQuote)
                        'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                        SQL &= String.Format(" `Rank` = {0}, ", 3)
                        SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                        If ChangePic3 Then
                            SaveImage(CoMaker3, "CoMaker3", True)
                        End If
                        If ChangeSketchC3 Then
                            SaveImage(SketchC3, "Sketch C3", True)
                        End If

                        SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker3' AND CreditNumber = '{0}';", CreditNumber)
                        For x As Integer = 0 To Industry_C3.Properties.Items.Count - 1
                            If Industry_C3.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                SQL &= "INSERT INTO credit_application_industry SET"
                                SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                                SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C3.Properties.Items.Item(x).Value)
                                SQL &= String.Format(" Industry = '{0}', ", Industry_C3.Properties.Items.Item(x).Description)
                                SQL &= " `Type` = 'CoMaker3';"
                            End If
                        Next

                        'IDENTIFICATION DUMMY
                        SQL &= "INSERT INTO profile_borrowerid SET"
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= " TIN = '', "
                        SQL &= " SSS = '', "
                        SQL &= " GSIS = '', "
                        SQL &= " PhilHealth = '', "
                        SQL &= " Senior = '', "
                        SQL &= " UMID = '', "
                        SQL &= " SEC = '', "
                        SQL &= " DTI = '', "
                        SQL &= " CDA = '', "
                        SQL &= " Cooperative = '', "
                        SQL &= " Drivers = '', "
                        SQL &= " dDrivers = '', "
                        SQL &= " VIN = '', "
                        SQL &= " dVIN = '', "
                        SQL &= " Passport = '', "
                        SQL &= " dPassport = '', "
                        SQL &= " PRC = '', "
                        SQL &= " dPRC = '', "
                        SQL &= " NBI = '', "
                        SQL &= " dNBI = '', "
                        SQL &= " Police = '', "
                        SQL &= " dPolice = '', "
                        SQL &= " Postal = '', "
                        SQL &= " dPostal = '', "
                        SQL &= " Barangay = '', "
                        SQL &= " dBarangay = '', "
                        SQL &= " OWWA = '', "
                        SQL &= " dOWWA = '', "
                        SQL &= " OFW = '', "
                        SQL &= " dOFW = '', "
                        SQL &= " Seaman = '', "
                        SQL &= " dSeaman = '', "
                        SQL &= " PNP = '', "
                        SQL &= " dPNP = '', "
                        SQL &= " AFP = '', "
                        SQL &= " dAFP = '', "
                        SQL &= " HDMF = '', "
                        SQL &= " dHDMF = '', "
                        SQL &= " PWD = '', "
                        SQL &= " dPWD = '', "
                        SQL &= " DSWD = '', "
                        SQL &= " dDSWD = '', "
                        SQL &= " ACR = '', "
                        SQL &= " dACR = '', "
                        SQL &= " DTI_Business = '', "
                        SQL &= " dDTI_Business = '', "
                        SQL &= " IBP = '', "
                        SQL &= " dIBP = '', "
                        SQL &= " FireArms = '', "
                        SQL &= " dFireArms = '', "
                        SQL &= " Government = '', "
                        SQL &= " dGovernment = '', "
                        SQL &= " Diplomat = '', "
                        SQL &= " dDiplomat = '', "
                        SQL &= " `National` = '', "
                        SQL &= " dNational = '', "
                        SQL &= " `Work` = '', "
                        SQL &= " dWork = '', "
                        SQL &= " GOCC = '', "
                        SQL &= " dGOCC = '', "
                        SQL &= " PLRA = '', "
                        SQL &= " dPLRA = '', "
                        SQL &= " Major = '', "
                        SQL &= " dMajor = '', "
                        SQL &= " Media = '', "
                        SQL &= " dMedia = '', "
                        SQL &= " Student = '', "
                        SQL &= " dStudent = '', "
                        SQL &= " SIRV = '', "
                        SQL &= " dSIRV = '',"
                        SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                        SQL &= " ID_Type = 'C3';"
                    End If
                End If

                If TxtFirstN_C4.Tag = "" And TxtFirstN_C4.Text <> "" Then
                    If TxtFirstN_C4.Text = "" Then
                    Else
                        Dim Gender_C4 As String = ""
                        If vMale_C4 Then
                            Gender_C4 = "Male"
                        ElseIf vFemale_C4 Then
                            Gender_C4 = "Female"
                        End If
                        Dim Civil_C4 As String = ""
                        If vSingle_C4 Then
                            Civil_C4 = "Single"
                        ElseIf vMarried_C4 Then
                            Civil_C4 = "Married"
                        ElseIf vSeparated_C4 Then
                            Civil_C4 = "Separated"
                        ElseIf vWidowed_C4 Then
                            Civil_C4 = "Widowed"
                        End If
                        Dim House_C4 As String = ""
                        If vOwned_C4 Then
                            House_C4 = "Owned"
                        ElseIf vFree_C4 Then
                            House_C4 = "Free"
                        ElseIf vRented_C4 Then
                            House_C4 = "Rented"
                        End If
                        Dim EmplStatus_C4 As String = ""
                        If vCasual_C4 Then
                            EmplStatus_C4 = "Casual"
                        ElseIf vTemporary_C4 Then
                            EmplStatus_C4 = "Temporary"
                        ElseIf vPermanent_C4 Then
                            EmplStatus_C4 = "Permanent"
                        End If

                        Dim RelationID As Integer = 0
                        If vRelationship_C4 = "" Then
                        Else
                            RelationID = vRelationship_C4_ID
                        End If

                        SQL &= "INSERT INTO credit_application_comaker SET"
                        SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                        SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_4 <> "", ReferenceID_4, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 4,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                        SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C4.Text)
                        SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C4.Text)
                        SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C4.Text)
                        SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C4.Text)
                        SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C4.Text)
                        SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C4)
                        SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C4)
                        SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C4)
                        SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C4_ID)
                        SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C4)
                        SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C4)
                        SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C4)
                        SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C4)
                        SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C4_ID)
                        SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C4)
                        SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C4 = "", "", Format(CDate(vBirth_C4), "yyyy-MM-dd")))
                        SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C4_ID)
                        SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C4)
                        SQL &= String.Format(" Gender_C = '{0}', ", Gender_C4)
                        SQL &= String.Format(" Civil_C = '{0}', ", Civil_C4)
                        SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C4)
                        SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C4)
                        SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C4)
                        SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C4)
                        SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C4)
                        SQL &= String.Format(" Email_C = '{0}', ", vEmail_C4)
                        SQL &= String.Format(" House_C = '{0}', ", House_C4)
                        SQL &= String.Format(" Rent_C = '{0}', ", vRent_C4)
                        SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                        SQL &= String.Format(" Relation = '{0}',", vRelationship_C4)
                        SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C4)
                        SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C4)
                        SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C4)
                        SQL &= String.Format(" Position_C = '{0}', ", vPosition_C4)
                        SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C4)
                        SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C4 = "", "", Format(CDate(vHired_C4), "yyyy-MM-dd")))
                        SQL &= String.Format(" YearHired_C = {0}, ", vYearHired_C4)
                        SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C4)
                        SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C4)
                        SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C4)
                        SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C4)
                        SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C4)
                        SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C4)
                        SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C4)
                        SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C4)
                        SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C4)
                        SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C4)
                        SQL &= String.Format(" Area_C = '{0}', ", vArea_C4)
                        SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C4 = "", "", Format(CDate(vExpiry_C4), "yyyy-MM-dd")))
                        SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C4)
                        SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C4)
                        SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C4)
                        'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                        SQL &= String.Format(" Creditor_1 = '{0}', ", vCreditor_1_C4)
                        SQL &= String.Format(" CreditAddress_1 = '{0}', ", vCreditAddress_1_C4)
                        SQL &= String.Format(" CreditGranted_1 = '{0}', ", vCreditGranted_1_C4)
                        SQL &= String.Format(" Term_1 = '{0}', ", vTerm_1_C4)
                        SQL &= String.Format(" AmountGranted_1 = '{0}', ", vAmountGranted_1_C4)
                        SQL &= String.Format(" Balance_1 = '{0}', ", vBalance_1_C4)
                        SQL &= String.Format(" CreditPayment_1 = '{0}', ", vCreditPayment_1_C4)
                        SQL &= String.Format(" CreditRemarks_1 = '{0}', ", vCreditRemarks_1_C4)
                        SQL &= String.Format(" Creditor_2 = '{0}', ", vCreditor_2_C4)
                        SQL &= String.Format(" CreditAddress_2 = '{0}', ", vCreditAddress_2_C4)
                        SQL &= String.Format(" CreditGranted_2 = '{0}', ", vCreditGranted_2_C4)
                        SQL &= String.Format(" Term_2 = '{0}', ", vTerm_2_C4)
                        SQL &= String.Format(" AmountGranted_2 = '{0}', ", vAmountGranted_2_C4)
                        SQL &= String.Format(" Balance_2 = '{0}', ", vBalance_2_C4)
                        SQL &= String.Format(" CreditPayment_2 = '{0}', ", vCreditPayment_2_C4)
                        SQL &= String.Format(" CreditRemarks_2 = '{0}', ", vCreditRemarks_2_C4)
                        SQL &= String.Format(" Bank_1 = '{0}', ", vBank_1_C4)
                        SQL &= String.Format(" Branch_1 = '{0}', ", vBranch_1_C4)
                        SQL &= String.Format(" AccountT_1 = '{0}', ", vAccountT_1_C4)
                        SQL &= String.Format(" SA_1 = '{0}', ", vSA_1_C4)
                        SQL &= String.Format(" AverageBalance_1 = '{0}', ", vAverageBalance_1_C4)
                        SQL &= String.Format(" Opened_1 = '{0}', ", vOpened_1_C4)
                        SQL &= String.Format(" Bank_2 = '{0}', ", vBank_2_C4)
                        SQL &= String.Format(" Branch_2 = '{0}', ", vBranch_2_C4)
                        SQL &= String.Format(" AccountT_2 = '{0}', ", vAccountT_2_C4)
                        SQL &= String.Format(" SA_2 = '{0}', ", vSA_2_C4)
                        SQL &= String.Format(" AverageBalance_2 = '{0}', ", vAverageBalance_2_C4)
                        SQL &= String.Format(" Opened_2 = '{0}', ", vOpened_2_C4)
                        SQL &= String.Format(" CreditRating = '{0}', ", vCreditRating_C4)
                        SQL &= String.Format(" Rec_Remarks = '{0}', ", vRec_Remarks_C4)
                        SQL &= String.Format(" Title = '{0}', ", vTitle_C4)
                        SQL &= String.Format(" CaseNum = '{0}', ", vCaseNum_C4)
                        SQL &= String.Format(" DateFilled = '{0}', ", vDateFilled_C4)
                        SQL &= String.Format(" Court = '{0}', ", vCourt_C4)
                        SQL &= String.Format(" CaseNature = '{0}', ", vCaseNature_C4)
                        SQL &= String.Format(" AmountInvolved = '{0}', ", vAmountInvolved_C4)
                        SQL &= String.Format(" CaseStatus = '{0}', ", vCaseStatus_C4)
                        SQL &= String.Format(" Findings = '{0}', ", vFindings_C4)
                        SQL &= String.Format(" FindingsStat = '{0}', ", vFindingsStat_C4)
                        SQL &= String.Format(" CACPI = '{0}', ", vCACPI_C4)
                        SQL &= String.Format(" Location_1 = '{0}', ", vLocation_1_C4)
                        SQL &= String.Format(" TCT_1 = '{0}', ", vTCT_1_C4)
                        SQL &= String.Format(" Area_1 = '{0}', ", vArea_1_C4)
                        SQL &= String.Format(" PropertiesRemarks_1 = '{0}', ", vPropertiesRemarks_1_C4)
                        SQL &= String.Format(" Location_2 = '{0}', ", vLocation_2_C4)
                        SQL &= String.Format(" TCT_2 = '{0}', ", vTCT_2_C4)
                        SQL &= String.Format(" Area_2 = '{0}', ", vArea_2_C4)
                        SQL &= String.Format(" PropertiesRemarks_2 = '{0}', ", vPropertiesRemarks_2_C4)
                        SQL &= String.Format(" Vehicle_1 = '{0}', ", vVehicle_1_C4)
                        SQL &= String.Format(" Year_1 = '{0}', ", vYear_1_C4)
                        SQL &= String.Format(" WhomAcquired_1 = '{0}', ", vWhomAcquired_1_C4)
                        SQL &= String.Format(" VehicleRemarks_1 = '{0}', ", vVehicleRemarks_1_C4)
                        SQL &= String.Format(" Vehicle_2 = '{0}', ", vVehicle_2_C4)
                        SQL &= String.Format(" Year_2 = '{0}', ", vYear_2_C4)
                        SQL &= String.Format(" WhomAcquired_2 = '{0}', ", vWhomAcquired_2_C4)
                        SQL &= String.Format(" VehicleRemarks_2 = '{0}', ", vVehicleRemarks_2_C4)
                        SQL &= String.Format(" OtherProperties = '{0}', ", vOtherProperties_C4)
                        SQL &= String.Format(" Narrative = '{0}', ", vNarrative_C4.InsertQuote)
                        SQL &= String.Format(" Ex_TotalDisposable = '{0}', ", vEx_TotalDisposable_C4)
                        SQL &= String.Format(" Ex_Living = '{0}', ", vEx_Living_C4)
                        SQL &= String.Format(" Ex_Clothing = '{0}', ", vEx_Clothing_C4)
                        SQL &= String.Format(" Ex_Education = '{0}', ", vEx_Education_C4)
                        SQL &= String.Format(" Ex_Transportation = '{0}', ", vEx_Transportation_C4)
                        SQL &= String.Format(" Ex_Lights = '{0}', ", vEx_Lights_C4)
                        SQL &= String.Format(" Ex_Insurance = '{0}', ", vEx_Insurance_C4)
                        SQL &= String.Format(" Ex_Amortization = '{0}', ", vEx_Amortization_C4)
                        SQL &= String.Format(" Ex_Miscellaneous = '{0}', ", vEx_Miscellaneous_C4)
                        SQL &= String.Format(" Ex_TotalExpenses = '{0}', ", vEx_TotalExpenses_C4)
                        SQL &= String.Format(" Ex_NetDisposable = '{0}', ", vEx_NetDisposable_C4)
                        SQL &= String.Format(" Ex_TMFI = '{0}', ", vEx_TMFI_C4)
                        SQL &= String.Format(" Ex_TMDI = '{0}', ", vEx_TMDI_C4)
                        SQL &= String.Format(" Ex_Remarks = '{0}', ", vEx_Remarks_C4.InsertQuote)
                        SQL &= String.Format(" PurposeLoan = '{0}', ", vPurposeLoan_C4.InsertQuote)
                        SQL &= String.Format(" Others = '{0}', ", vOthers_C4.InsertQuote)
                        SQL &= String.Format(" C1 = '{0}',", vC1_C4.InsertQuote)
                        SQL &= String.Format(" C2 = '{0}',", vC2_C4.InsertQuote)
                        SQL &= String.Format(" C3 = '{0}',", vC3_C4.InsertQuote)
                        SQL &= String.Format(" C4 = '{0}',", vC4_C4.InsertQuote)
                        SQL &= String.Format(" C5 = '{0}',", vC5_C4.InsertQuote)
                        SQL &= String.Format(" C6 = '{0}',", vC6_C4.InsertQuote)
                        SQL &= String.Format(" C7 = '{0}',", vC7_C4.InsertQuote)
                        SQL &= String.Format(" C8 = '{0}',", vC8_C4.InsertQuote)
                        SQL &= String.Format(" C9 = '{0}',", vC9_C4.InsertQuote)
                        'COMAKER CREDIT INVESTIGATION REPORT ********************************************************************************
                        SQL &= String.Format(" `Rank` = {0}, ", 4)
                        SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                        If ChangePic4 Then
                            SaveImage(CoMaker4, "CoMaker4", True)
                        End If
                        If ChangeSketchC4 Then
                            SaveImage(SketchC4, "Sketch C4", True)
                        End If

                        SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker4' AND CreditNumber = '{0}';", CreditNumber)
                        For x As Integer = 0 To Industry_C4.Properties.Items.Count - 1
                            If Industry_C4.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                SQL &= "INSERT INTO credit_application_industry SET"
                                SQL &= String.Format(" CreditNumber = '{0}', ", CreditNumber)
                                SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C4.Properties.Items.Item(x).Value)
                                SQL &= String.Format(" Industry = '{0}', ", Industry_C4.Properties.Items.Item(x).Description)
                                SQL &= " `Type` = 'CoMaker4';"
                            End If
                        Next

                        'IDENTIFICATION DUMMY
                        SQL &= "INSERT INTO profile_borrowerid SET"
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= " TIN = '', "
                        SQL &= " SSS = '', "
                        SQL &= " GSIS = '', "
                        SQL &= " PhilHealth = '', "
                        SQL &= " Senior = '', "
                        SQL &= " UMID = '', "
                        SQL &= " SEC = '', "
                        SQL &= " DTI = '', "
                        SQL &= " CDA = '', "
                        SQL &= " Cooperative = '', "
                        SQL &= " Drivers = '', "
                        SQL &= " dDrivers = '', "
                        SQL &= " VIN = '', "
                        SQL &= " dVIN = '', "
                        SQL &= " Passport = '', "
                        SQL &= " dPassport = '', "
                        SQL &= " PRC = '', "
                        SQL &= " dPRC = '', "
                        SQL &= " NBI = '', "
                        SQL &= " dNBI = '', "
                        SQL &= " Police = '', "
                        SQL &= " dPolice = '', "
                        SQL &= " Postal = '', "
                        SQL &= " dPostal = '', "
                        SQL &= " Barangay = '', "
                        SQL &= " dBarangay = '', "
                        SQL &= " OWWA = '', "
                        SQL &= " dOWWA = '', "
                        SQL &= " OFW = '', "
                        SQL &= " dOFW = '', "
                        SQL &= " Seaman = '', "
                        SQL &= " dSeaman = '', "
                        SQL &= " PNP = '', "
                        SQL &= " dPNP = '', "
                        SQL &= " AFP = '', "
                        SQL &= " dAFP = '', "
                        SQL &= " HDMF = '', "
                        SQL &= " dHDMF = '', "
                        SQL &= " PWD = '', "
                        SQL &= " dPWD = '', "
                        SQL &= " DSWD = '', "
                        SQL &= " dDSWD = '', "
                        SQL &= " ACR = '', "
                        SQL &= " dACR = '', "
                        SQL &= " DTI_Business = '', "
                        SQL &= " dDTI_Business = '', "
                        SQL &= " IBP = '', "
                        SQL &= " dIBP = '', "
                        SQL &= " FireArms = '', "
                        SQL &= " dFireArms = '', "
                        SQL &= " Government = '', "
                        SQL &= " dGovernment = '', "
                        SQL &= " Diplomat = '', "
                        SQL &= " dDiplomat = '', "
                        SQL &= " `National` = '', "
                        SQL &= " dNational = '', "
                        SQL &= " `Work` = '', "
                        SQL &= " dWork = '', "
                        SQL &= " GOCC = '', "
                        SQL &= " dGOCC = '', "
                        SQL &= " PLRA = '', "
                        SQL &= " dPLRA = '', "
                        SQL &= " Major = '', "
                        SQL &= " dMajor = '', "
                        SQL &= " Media = '', "
                        SQL &= " dMedia = '', "
                        SQL &= " Student = '', "
                        SQL &= " dStudent = '', "
                        SQL &= " SIRV = '', "
                        SQL &= " dSIRV = '',"
                        SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                        SQL &= " ID_Type = 'C4';"
                    End If
                End If

                DataObject(SQL)
                If txtPath_B.Text <> "" Then
                    SaveImage(pb_B, "Borrower", False)
                End If
                If txtPath_S.Text <> "" Then
                    SaveImage(pb_Spouse, "Spouse", False)
                End If
                If ChangeSketch Then
                    SaveImage(pbSketch, "Sketch", False)
                End If
                If Trigger = "Update Draft" Then
                    Logs("Credit Investigation", "Update Draft", String.Format("Update draft CI with CI Number {0}", txtCINumber.Text), Changes, "", "", CreditNumber)
                Else
                    Logs("Credit Investigation", "Update", String.Format("Update CI with CI Number {0}", txtCINumber.Text), Changes, "", "", CreditNumber)
                End If
                Clear()
                Cursor = Cursors.Default
                LoadData()
                MsgBox(String.Format("Successfully {0}!", If(Trigger = "Update Draft", "Updated a Draft", "Updated")), MsgBoxStyle.Information, "Info")
            End If
        End If
    End Sub

    Private Function Changes()
        Dim Change As String = ""
        Try
            '*** B O R R O W E R ***
            If CbxPrefix_B.Text = CbxPrefix_B.Tag Then
            Else
                Change &= String.Format("Change Prefix from {0} to {1}. ", CbxPrefix_B.Tag, CbxPrefix_B.Text)
            End If
            If TxtFirstN_B.Text = TxtFirstN_B.Tag Then
            Else
                Change &= String.Format("Change First Name from {0} to {1}. ", TxtFirstN_B.Tag, TxtFirstN_B.Text)
            End If
            If TxtMiddleN_B.Text = TxtMiddleN_B.Tag Then
            Else
                Change &= String.Format("Change Middle Name from {0} to {1}. ", TxtMiddleN_B.Tag, TxtMiddleN_B.Text)
            End If
            If TxtLastN_B.Text = TxtLastN_B.Tag Then
            Else
                Change &= String.Format("Change Last Name from {0} to {1}. ", TxtLastN_B.Tag, TxtLastN_B.Text)
            End If
            If cbxSuffix_B.Text = cbxSuffix_B.Tag Then
            Else
                Change &= String.Format("Change Suffix from {0} to {1}. ", cbxSuffix_B.Tag, cbxSuffix_B.Text)
            End If
            If txtNoC_B.Text = txtNoC_B.Tag Then
            Else
                Change &= String.Format("Change Complete Address No from {0} to {1}. ", txtNoC_B.Tag, txtNoC_B.Text)
            End If
            If txtStreetC_B.Text = txtStreetC_B.Tag Then
            Else
                Change &= String.Format("Change Complete Address Street from {0} to {1}. ", txtStreetC_B.Tag, txtStreetC_B.Text)
            End If
            If txtBarangayC_B.Text = txtBarangayC_B.Tag Then
            Else
                Change &= String.Format("Change Complete Address Barangay from {0} to {1}. ", txtBarangayC_B.Tag, txtBarangayC_B.Text)
            End If
            If cbxAddressC_B.Text = cbxAddressC_B.Tag Then
            Else
                Change &= String.Format("Change Complete Address from {0} to {1}. ", cbxAddressC_B.Tag, cbxAddressC_B.Text)
            End If
            If cbxResidence.Text = cbxResidence.Tag Then
            Else
                Change &= String.Format("Change Residence from {0} to {1}. ", cbxResidence.Tag, cbxResidence.Text)
            End If
            If cbxOwned_B.Tag <> "Owned" And cbxOwned_B.Checked Then
                Change &= String.Format("Change House from {0} to {1}. ", cbxOwned_B.Tag, cbxOwned_B.Text)
            ElseIf cbxFree_B.Tag <> "Free" And cbxFree_B.Checked Then
                Change &= String.Format("Change House from {0} to {1}. ", cbxFree_B.Tag, cbxFree_B.Text)
            ElseIf cbxRented_B.Tag <> "Rented" And cbxRented_B.Checked Then
                Change &= String.Format("Change House from {0} to {1}. ", cbxRented_B.Tag, cbxRented_B.Text)
            End If
            If dRent_B.Value = dRent_B.Tag Then
            Else
                Change &= String.Format("Change Rent from {0} to {1}. ", dRent_B.Tag, dRent_B.Text)
            End If
            If cbxResidence.Text = cbxResidence.Tag Then
            Else
                Change &= String.Format("Change Residence from {0} to {1}. ", cbxResidence.Tag, cbxResidence.Text)
            End If
            If txtConfirmed.Text = txtConfirmed.Tag Then
            Else
                Change &= String.Format("Change Confirmed By from {0} to {1}. ", txtConfirmed.Tag, txtConfirmed.Text)
            End If
            If txtLengthStay.Text = txtLengthStay.Tag Then
            Else
                Change &= String.Format("Change Length of Stay from {0} to {1}. ", txtLengthStay.Tag, txtLengthStay.Text)
            End If
            If cbxNeighborhood.Text = cbxNeighborhood.Tag Then
            Else
                Change &= String.Format("Change Neighborhood from {0} to {1}. ", cbxNeighborhood.Tag, cbxNeighborhood.Text)
            End If
            If FormatDatePicker(DtpBirth_B) = DtpBirth_B.Tag Then
            Else
                Change &= String.Format("Change Birthdate from {0} to {1}. ", DtpBirth_B.Tag, FormatDatePicker(DtpBirth_B))
            End If
            If cbxSingle_B.Tag <> "Single" And cbxSingle_B.Checked Then
                Change &= String.Format("Change Civil Status from {0} to {1}. ", cbxSingle_B.Tag, cbxSingle_B.Text)
            ElseIf cbxMarried_B.Tag <> "Married" And cbxMarried_B.Checked Then
                Change &= String.Format("Change Civil Status from {0} to {1}. ", cbxMarried_B.Tag, cbxMarried_B.Text)
            ElseIf cbxSeparated_B.Tag <> "Separated" And cbxSeparated_B.Checked Then
                Change &= String.Format("Change Civil Status from {0} to {1}. ", cbxSeparated_B.Tag, cbxSeparated_B.Text)
            ElseIf cbxWidowed_B.Tag <> "Widowed" And cbxWidowed_B.Checked Then
                Change &= String.Format("Change Civil Status from {0} to {1}. ", cbxWidowed_B.Tag, cbxWidowed_B.Text)
            End If
            '*** D E P E N D E N T 1 ***
            If CbxPrefix_1.Text = CbxPrefix_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 Prefix from {0} to {1}. ", CbxPrefix_1.Tag, CbxPrefix_1.Text)
            End If
            If TxtFirstN_1.Text = TxtFirstN_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 First Name from {0} to {1}. ", TxtFirstN_1.Tag, TxtFirstN_1.Text)
            End If
            If TxtMiddleN_1.Text = TxtMiddleN_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 Middle Name from {0} to {1}. ", TxtMiddleN_1.Tag, TxtMiddleN_1.Text)
            End If
            If TxtLastN_1.Text = TxtLastN_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 Last Name from {0} to {1}. ", TxtLastN_1.Tag, TxtLastN_1.Text)
            End If
            If cbxSuffix_1.Text = cbxSuffix_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 Suffix from {0} to {1}. ", cbxSuffix_1.Tag, cbxSuffix_1.Text)
            End If
            If iAge_D1.Value = iAge_D1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 Age from {0} to {1}. ", iAge_D1.Tag, iAge_D1.Value)
            End If
            If txtGrade_1.Text = txtGrade_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 Grade from {0} to {1}. ", txtGrade_1.Tag, txtGrade_1.Text)
            End If
            If txtSchool_1.Text = txtSchool_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 School from {0} to {1}. ", txtSchool_1.Tag, txtSchool_1.Text)
            End If
            If txtSchoolAddress_1.Text = txtSchoolAddress_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 School Address from {0} to {1}. ", txtSchoolAddress_1.Tag, txtSchoolAddress_1.Text)
            End If
            '*** D E P E N D E N T 2 ***
            If CbxPrefix_2.Text = CbxPrefix_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 Prefix from {0} to {1}. ", CbxPrefix_2.Tag, CbxPrefix_2.Text)
            End If
            If TxtFirstN_2.Text = TxtFirstN_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 First Name from {0} to {1}. ", TxtFirstN_2.Tag, TxtFirstN_2.Text)
            End If
            If TxtMiddleN_2.Text = TxtMiddleN_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 Middle Name from {0} to {1}. ", TxtMiddleN_2.Tag, TxtMiddleN_2.Text)
            End If
            If TxtLastN_2.Text = TxtLastN_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 Last Name from {0} to {1}. ", TxtLastN_2.Tag, TxtLastN_2.Text)
            End If
            If cbxSuffix_2.Text = cbxSuffix_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 Suffix from {0} to {1}. ", cbxSuffix_2.Tag, cbxSuffix_2.Text)
            End If
            If iAge_D2.Value = iAge_D2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 Age from {0} to {1}. ", iAge_D2.Tag, iAge_D2.Value)
            End If
            If txtGrade_2.Text = txtGrade_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 Grade from {0} to {1}. ", txtGrade_2.Tag, txtGrade_2.Text)
            End If
            If txtSchool_2.Text = txtSchool_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 School from {0} to {1}. ", txtSchool_2.Tag, txtSchool_2.Text)
            End If
            If txtSchoolAddress_2.Text = txtSchoolAddress_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 School Address from {0} to {1}. ", txtSchoolAddress_2.Tag, txtSchoolAddress_2.Text)
            End If
            '*** D E P E N D E N T 3 ***
            If CbxPrefix_3.Text = CbxPrefix_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 Prefix from {0} to {1}. ", CbxPrefix_3.Tag, CbxPrefix_3.Text)
            End If
            If TxtFirstN_3.Text = TxtFirstN_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 First Name from {0} to {1}. ", TxtFirstN_3.Tag, TxtFirstN_3.Text)
            End If
            If TxtMiddleN_3.Text = TxtMiddleN_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 Middle Name from {0} to {1}. ", TxtMiddleN_3.Tag, TxtMiddleN_3.Text)
            End If
            If TxtLastN_3.Text = TxtLastN_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 Last Name from {0} to {1}. ", TxtLastN_3.Tag, TxtLastN_3.Text)
            End If
            If cbxSuffix_3.Text = cbxSuffix_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 Suffix from {0} to {1}. ", cbxSuffix_3.Tag, cbxSuffix_3.Text)
            End If
            If iAge_D3.Value = iAge_D3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 Age from {0} to {1}. ", iAge_D3.Tag, iAge_D3.Value)
            End If
            If txtGrade_3.Text = txtGrade_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 Grade from {0} to {1}. ", txtGrade_3.Tag, txtGrade_3.Text)
            End If
            If txtSchool_3.Text = txtSchool_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 School from {0} to {1}. ", txtSchool_3.Tag, txtSchool_3.Text)
            End If
            If txtSchoolAddress_3.Text = txtSchoolAddress_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 School Address from {0} to {1}. ", txtSchoolAddress_3.Tag, txtSchoolAddress_3.Text)
            End If
            '*** D E P E N D E N T 4 ***
            If CbxPrefix_4.Text = CbxPrefix_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 Prefix from {0} to {1}. ", CbxPrefix_4.Tag, CbxPrefix_4.Text)
            End If
            If TxtFirstN_4.Text = TxtFirstN_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 First Name from {0} to {1}. ", TxtFirstN_4.Tag, TxtFirstN_4.Text)
            End If
            If TxtMiddleN_4.Text = TxtMiddleN_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 Middle Name from {0} to {1}. ", TxtMiddleN_4.Tag, TxtMiddleN_4.Text)
            End If
            If TxtLastN_4.Text = TxtLastN_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 Last Name from {0} to {1}. ", TxtLastN_4.Tag, TxtLastN_4.Text)
            End If
            If cbxSuffix_4.Text = cbxSuffix_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 Suffix from {0} to {1}. ", cbxSuffix_4.Tag, cbxSuffix_4.Text)
            End If
            If iAge_D4.Value = iAge_D4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 Age from {0} to {1}. ", iAge_D4.Tag, iAge_D4.Value)
            End If
            If txtGrade_4.Text = txtGrade_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 Grade from {0} to {1}. ", txtGrade_4.Tag, txtGrade_4.Text)
            End If
            If txtSchool_4.Text = txtSchool_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 School from {0} to {1}. ", txtSchool_4.Tag, txtSchool_4.Text)
            End If
            If txtSchoolAddress_4.Text = txtSchoolAddress_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 School Address from {0} to {1}. ", txtSchoolAddress_4.Tag, txtSchoolAddress_4.Text)
            End If
            If cbxEmployer_B.Text = cbxEmployer_B.Tag Then
            Else
                Change &= String.Format("Change Employer from {0} to {1}. ", cbxEmployer_B.Tag, cbxEmployer_B.Text)
            End If
            If txtEmployerAddress_B.Text = txtEmployerAddress_B.Tag Then
            Else
                Change &= String.Format("Change Employer Address from {0} to {1}. ", txtEmployerAddress_B.Tag, txtEmployerAddress_B.Text)
            End If
            If FormatDatePicker(dtpHired_B) = dtpHired_B.Tag Then
            Else
                Change &= String.Format("Change Date Hired from {0} to {1}. ", dtpHired_B.Tag, FormatDatePicker(dtpHired_B))
            End If
            If cbxCasual_B.Tag.ToString <> "Casual" And cbxCasual_B.Checked Then
                Change &= String.Format("Change Employment Status from {0} to {1}. ", cbxCasual_B.Tag, cbxCasual_B.Text)
            ElseIf cbxTemporary_B.Tag.ToString <> "Temporary" And cbxTemporary_B.Checked Then
                Change &= String.Format("Change Employment Status from {0} to {1}. ", cbxTemporary_B.Tag, cbxTemporary_B.Text)
            ElseIf cbxPermanent_B.Tag.ToString <> "Permanent" And cbxPermanent_B.Checked Then
                Change &= String.Format("Change Employment Status from {0} to {1}. ", cbxPermanent_B.Tag, cbxPermanent_B.Text)
            End If
            If cbxPosition_B.Text = cbxPosition_B.Tag Then
            Else
                Change &= String.Format("Change Position from {0} to {1}. ", cbxPosition_B.Tag, cbxPosition_B.Text)
            End If
            If dMonthly_B.Value = dMonthly_B.Tag Then
            Else
                Change &= String.Format("Change Gross Monthly Income as employed from {0} to {1}. ", dMonthly_B.Tag, dMonthly_B.Text)
            End If
            If txtBusinessName_B.Text = txtBusinessName_B.Tag Then
            Else
                Change &= String.Format("Change Business Name from {0} to {1}. ", txtBusinessName_B.Tag, txtBusinessName_B.Text)
            End If
            If txtBusinessAddress_B.Text = txtBusinessAddress_B.Tag Then
            Else
                Change &= String.Format("Change Business Address from {0} to {1}. ", txtBusinessAddress_B.Tag, txtBusinessAddress_B.Text)
            End If
            If FormatDatePicker(dtpBusinessStarted) = dtpBusinessStarted.Tag Then
            Else
                Change &= String.Format("Change Date Started from {0} to {1}. ", dtpBusinessStarted.Tag, FormatDatePicker(dtpBusinessStarted))
            End If
            If cbxBusinessNature.Text = cbxBusinessNature.Tag Then
            Else
                Change &= String.Format("Change Nature of Business from {0} to {1}. ", cbxBusinessNature.Tag, cbxBusinessNature.Text)
            End If
            If dCapital_B.Value = dCapital_B.Tag Then
            Else
                Change &= String.Format("Change Capital from {0} to {1}. ", dCapital_B.Tag, dCapital_B.Text)
            End If
            If iNoEmployees_B.Value = iNoEmployees_B.Tag Then
            Else
                Change &= String.Format("Change Num of Employees from {0} to {1}. ", iNoEmployees_B.Tag, iNoEmployees_B.Text)
            End If
            If dBusinessStock.Value = dBusinessStock.Tag Then
            Else
                Change &= String.Format("Change Stock Inty. from {0} to {1}. ", dBusinessStock.Tag, dBusinessStock.Text)
            End If
            If txtBusinessVehicle.Text = txtBusinessVehicle.Tag Then
            Else
                Change &= String.Format("Change Business Vehicle from {0} to {1}. ", txtBusinessVehicle.Tag, txtBusinessVehicle.Text)
            End If
            If dBusinessIncome_B.Value = dBusinessIncome_B.Tag Then
            Else
                Change &= String.Format("Change Business Income from {0} to {1}. ", dBusinessIncome_B.Tag, dBusinessIncome_B.Text)
            End If
            If txtBusinessPermit.Text = txtBusinessPermit.Tag Then
            Else
                Change &= String.Format("Change Business Permit from {0} to {1}. ", txtBusinessPermit.Tag, txtBusinessPermit.Text)
            End If
            If txtOtherIncome_B.Text = txtOtherIncome_B.Tag Then
            Else
                Change &= String.Format("Change Other Income from {0} to {1}. ", txtOtherIncome_B.Tag, txtOtherIncome_B.Text)
            End If
            If dOtherIncome_B.Value = dOtherIncome_B.Tag Then
            Else
                Change &= String.Format("Change Other Income Monthly from {0} to {1}. ", dOtherIncome_B.Tag, dOtherIncome_B.Text)
            End If
            If dCapitalP.Value = dCapitalP.Tag Then
            Else
                Change &= String.Format("Change Business Expense Capital from {0} to {1}. ", dCapitalP.Tag, dCapitalP.Text)
            End If
            If dFuelMaintenanceP.Value = dFuelMaintenanceP.Tag Then
            Else
                Change &= String.Format("Change Business Expense Fuel and Maintenance from {0} to {1}. ", dFuelMaintenanceP.Tag, dFuelMaintenanceP.Text)
            End If
            If dUtilitiesP.Value = dUtilitiesP.Tag Then
            Else
                Change &= String.Format("Change Business Expense Utilities from {0} to {1}. ", dUtilitiesP.Tag, dUtilitiesP.Text)
            End If
            If dSalariesWagesP.Value = dSalariesWagesP.Tag Then
            Else
                Change &= String.Format("Change Business Expense Salaries and Wages from {0} to {1}. ", dSalariesWagesP.Tag, dSalariesWagesP.Text)
            End If
            If dBMiscellaneousP.Value = dBMiscellaneousP.Tag Then
            Else
                Change &= String.Format("Change Business Expense Miscellaneous from {0} to {1}. ", dBMiscellaneousP.Tag, dBMiscellaneousP.Text)
            End If
            If dBOthersP.Value = dBOthersP.Tag Then
            Else
                Change &= String.Format("Change Business Expense Others from {0} to {1}. ", dBOthersP.Tag, dBOthersP.Text)
            End If
            If txtCreditor_1.Text = txtCreditor_1.Tag Then
            Else
                Change &= String.Format("Change Creditor 1 from {0} to {1}. ", txtCreditor_1.Tag, txtCreditor_1.Text)
            End If
            If txtCreditAddress_1.Text = txtCreditAddress_1.Tag Then
            Else
                Change &= String.Format("Change Creditor Address 1 from {0} to {1}. ", txtCreditAddress_1.Tag, txtCreditAddress_1.Text)
            End If
            If FormatDatePicker(dtpCreditGranted_1) = dtpCreditGranted_1.Tag Then
            Else
                Change &= String.Format("Change Date Granted 1 from {0} to {1}. ", dtpCreditGranted_1.Tag, FormatDatePicker(dtpCreditGranted_1))
            End If
            If iTerm_1.Value = iTerm_1.Tag Then
            Else
                Change &= String.Format("Change Term 1 from {0} to {1}. ", iTerm_1.Tag, iTerm_1.Text)
            End If
            If dAmountGranted_1.Value = dAmountGranted_1.Tag Then
            Else
                Change &= String.Format("Change Principal 1 from {0} to {1}. ", dAmountGranted_1.Tag, dAmountGranted_1.Text)
            End If
            If dBalance_1.Value = dBalance_1.Tag Then
            Else
                Change &= String.Format("Change Outstanding Balance 1 from {0} to {1}. ", dBalance_1.Tag, dBalance_1.Text)
            End If
            If dCreditPayment_1.Value = dCreditPayment_1.Tag Then
            Else
                Change &= String.Format("Change Monthly Payment 1 from {0} to {1}. ", dCreditPayment_1.Tag, dCreditPayment_1.Text)
            End If
            If txtCreditRemarks_1.Text = txtCreditRemarks_1.Tag Then
            Else
                Change &= String.Format("Change Credit Remarks 1 from {0} to {1}. ", txtCreditRemarks_1.Tag, txtCreditRemarks_1.Text)
            End If
            If txtCreditor_2.Text = txtCreditor_2.Tag Then
            Else
                Change &= String.Format("Change Creditor 2 from {0} to {1}. ", txtCreditor_2.Tag, txtCreditor_2.Text)
            End If
            If txtCreditAddress_2.Text = txtCreditAddress_2.Tag Then
            Else
                Change &= String.Format("Change Creditor Address 2 from {0} to {1}. ", txtCreditAddress_2.Tag, txtCreditAddress_2.Text)
            End If
            If FormatDatePicker(dtpCreditGranted_2) = dtpCreditGranted_2.Tag Then
            Else
                Change &= String.Format("Change Date Granted 2 from {0} to {1}. ", dtpCreditGranted_2.Tag, FormatDatePicker(dtpCreditGranted_2))
            End If
            If iTerm_2.Value = iTerm_2.Tag Then
            Else
                Change &= String.Format("Change Term 2 from {0} to {1}. ", iTerm_2.Tag, iTerm_2.Text)
            End If
            If dAmountGranted_2.Value = dAmountGranted_2.Tag Then
            Else
                Change &= String.Format("Change Principal 2 from {0} to {1}. ", dAmountGranted_2.Tag, dAmountGranted_2.Text)
            End If
            If dBalance_2.Value = dBalance_2.Tag Then
            Else
                Change &= String.Format("Change Outstanding Balance 2 from {0} to {1}. ", dBalance_2.Tag, dBalance_2.Text)
            End If
            If dCreditPayment_2.Value = dCreditPayment_2.Tag Then
            Else
                Change &= String.Format("Change Monthly Payment 2 from {0} to {1}. ", dCreditPayment_2.Tag, dCreditPayment_2.Text)
            End If
            If txtCreditRemarks_2.Text = txtCreditRemarks_2.Tag Then
            Else
                Change &= String.Format("Change Credit Remarks 2 from {0} to {1}. ", txtCreditRemarks_2.Tag, txtCreditRemarks_2.Text)
            End If
            If txtBank_1.Text = txtBank_1.Tag Then
            Else
                Change &= String.Format("Change Bank 1 from {0} to {1}. ", txtBank_1.Tag, txtBank_1.Text)
            End If
            If txtBranch_1.Text = txtBranch_1.Tag Then
            Else
                Change &= String.Format("Change Branch 1 from {0} to {1}. ", txtBranch_1.Tag, txtBranch_1.Text)
            End If
            If cbxSA_1.Tag <> "SA" And cbxSA_1.Checked Then
                Change &= String.Format("Change Account Type 1 from {0} to {1}. ", cbxSA_1.Tag, "SA")
            ElseIf cbxCA_1.Tag <> "CA" And cbxCA_1.Checked Then
                Change &= String.Format("Change Account Type 1 from {0} to {1}. ", cbxCA_1.Tag, "CA")
            End If
            If txtSA_1.Text = txtSA_1.Tag Then
            Else
                Change &= String.Format("Change Account No. 1 from {0} to {1}. ", txtSA_1.Tag, txtSA_1.Text)
            End If
            If dAverageBalance_1.Value = dAverageBalance_1.Tag Then
            Else
                Change &= String.Format("Change Average Balance 1 from {0} to {1}. ", dAverageBalance_1.Tag, dAverageBalance_1.Text)
            End If
            If txtOpened_1.Text = txtOpened_1.Tag Then
            Else
                Change &= String.Format("Change Date Opened 1 from {0} to {1}. ", txtOpened_1.Tag, txtOpened_1.Text)
            End If
            If txtBank_2.Text = txtBank_2.Tag Then
            Else
                Change &= String.Format("Change Bank 2 from {0} to {1}. ", txtBank_2.Tag, txtBank_2.Text)
            End If
            If txtBranch_2.Text = txtBranch_2.Tag Then
            Else
                Change &= String.Format("Change Branch 2 from {0} to {1}. ", txtBranch_2.Tag, txtBranch_2.Text)
            End If
            If cbxSA_2.Tag <> "SA" And cbxSA_2.Checked Then
                Change &= String.Format("Change Account Type 2 from {0} to {1}. ", cbxSA_2.Tag, "SA")
            ElseIf cbxCA_2.Tag <> "CA" And cbxCA_2.Checked Then
                Change &= String.Format("Change Account Type 2 from {0} to {1}. ", cbxCA_2.Tag, "CA")
            End If
            If txtSA_2.Text = txtSA_2.Tag Then
            Else
                Change &= String.Format("Change Account No. 2 from {0} to {1}. ", txtSA_2.Tag, txtSA_2.Text)
            End If
            If dAverageBalance_2.Value = dAverageBalance_2.Tag Then
            Else
                Change &= String.Format("Change Average Balance 2 from {0} to {1}. ", dAverageBalance_2.Tag, dAverageBalance_2.Text)
            End If
            If txtOpened_2.Text = txtOpened_2.Tag Then
            Else
                Change &= String.Format("Change Date Opened 2 from {0} to {1}. ", txtOpened_2.Tag, txtOpened_2.Text)
            End If
            If cbxGood.Tag <> "GOOD" And cbxGood.Checked Then
                Change &= String.Format("Change Credit Rating from {0} to {1}. ", cbxGood.Tag, "GOOD")
            ElseIf cbxFair.Tag <> "FAIR" And cbxFair.Checked Then
                Change &= String.Format("Change Credit Rating from {0} to {1}. ", cbxFair.Tag, "FAIR")
            ElseIf cbxPoor.Tag <> "POOR" And cbxPoor.Checked Then
                Change &= String.Format("Change Credit Rating from {0} to {1}. ", cbxPoor.Tag, "POOR")
            End If
            If cbxApproval.Tag <> "APPROVAL" And cbxApproval.Checked Then
                Change &= String.Format("Change Recommendation For from {0} to {1}. ", cbxApproval.Tag, "APPROVAL")
            ElseIf cbxDisapproval.Tag <> "DISAPPROVAL" And cbxDisapproval.Checked Then
                Change &= String.Format("Change Recommendation For from {0} to {1}. ", cbxDisapproval.Tag, "DISAPPROVAL")
            End If
            If dApprovedAmount.Value = dApprovedAmount.Tag Then
            Else
                Change &= String.Format("Change Recommended Amount from {0} to {1}. ", dApprovedAmount.Tag, dApprovedAmount.Text)
            End If
            If iApprovedTerms.Value = iApprovedTerms.Tag Then
            Else
                Change &= String.Format("Change Recommended Terms from {0} to {1}. ", iApprovedTerms.Tag, iApprovedTerms.Text)
            End If
            If dApprovedRate.Value = dApprovedRate.Tag Then
            Else
                Change &= String.Format("Change Recommended Rate from {0} to {1}. ", dApprovedRate.Tag, dApprovedRate.Text)
            End If
            If cbxPDC.Tag <> "1" And cbxPDC.Checked Then
                Change &= String.Format("Change Recommendation with PDC from {0} to {1}. ", "No", "Yes")
            ElseIf cbxPDC.Tag <> "0" And cbxPDC.Checked = False Then
                Change &= String.Format("Change Recommendation with PDC from {0} to {1}. ", "Yes", "No")
            End If
            If cbxNoPDC.Tag <> "1" And cbxNoPDC.Checked Then
                Change &= String.Format("Change Recommendation with No PDC from {0} to {1}. ", "No", "Yes")
            ElseIf cbxNoPDC.Tag <> "0" And cbxNoPDC.Checked = False Then
                Change &= String.Format("Change Recommendation with No PDC from {0} to {1}. ", "Yes", "No")
            End If
            If rRecommendation.Text = rRecommendation.Tag Then
            Else
                Change &= String.Format("Change Recommendation from {0} to {1}. ", rRecommendation.Tag, rRecommendation.Text)
            End If
            If txtTitle.Text = txtTitle.Tag Then
            Else
                Change &= String.Format("Change Case Title from {0} to {1}. ", txtTitle.Tag, txtTitle.Text)
            End If
            If txtCaseNum.Text = txtCaseNum.Tag Then
            Else
                Change &= String.Format("Change Case Number from {0} to {1}. ", txtCaseNum.Tag, txtCaseNum.Text)
            End If
            If FormatDatePicker(dtpDateFilled) = dtpDateFilled.Tag Then
            Else
                Change &= String.Format("Change Date Filled from {0} to {1}. ", dtpDateFilled.Tag, FormatDatePicker(dtpDateFilled))
            End If
            If cbxCourt.Text = cbxCourt.Tag Then
            Else
                Change &= String.Format("Change Court from {0} to {1}. ", cbxCourt.Tag, cbxCourt.Text)
            End If
            If cbxCaseNature.Text = cbxCaseNature.Tag Then
            Else
                Change &= String.Format("Change Case Nature from {0} to {1}. ", cbxCaseNature.Tag, cbxCaseNature.Text)
            End If
            If dAmountInvolved.Value = dAmountInvolved.Tag Then
            Else
                Change &= String.Format("Change Amount Involved from {0} to {1}. ", dAmountInvolved.Tag, dAmountInvolved.Text)
            End If
            If cbxCaseStatus.Text = cbxCaseStatus.Tag Then
            Else
                Change &= String.Format("Change Case Status from {0} to {1}. ", cbxCaseStatus.Tag, cbxCaseStatus.Text)
            End If
            If txtFindings.Text = txtFindings.Tag Then
            Else
                Change &= String.Format("Change Case Findings from {0} to {1}. ", txtFindings.Tag, txtFindings.Text)
            End If
            If cbxPositive.Tag <> "Positive" And cbxPositive.Checked Then
                Change &= String.Format("Change Case Findings Status from {0} to {1}. ", cbxPositive.Tag, "Positive")
            ElseIf cbxNegative.Tag <> "Negative" And cbxNegative.Checked Then
                Change &= String.Format("Change Case Findings Status from {0} to {1}. ", cbxNegative.Tag, "Negative")
            ElseIf cbxUnestablished.Tag <> "Unestablished" And cbxUnestablished.Checked Then
                Change &= String.Format("Change Case Findings Status from {0} to {1}. ", cbxUnestablished.Tag, "Unestablished")
            End If
            If txtCACPI.Text = txtCACPI.Tag Then
            Else
                Change &= String.Format("Change Other Information Pertinent to the case from {0} to {1}. ", txtCACPI.Tag, txtCACPI.Text)
            End If
            If txtLocation_1.Text = txtLocation_1.Tag Then
            Else
                Change &= String.Format("Change Location 1 from {0} to {1}. ", txtLocation_1.Tag, txtLocation_1.Text)
            End If
            If txtTCT_1.Text = txtTCT_1.Tag Then
            Else
                Change &= String.Format("Change TCT 1 from {0} to {1}. ", txtTCT_1.Tag, txtTCT_1.Text)
            End If
            If dArea_1.Value = dArea_1.Tag Then
            Else
                Change &= String.Format("Change Area 1 from {0} to {1}. ", dArea_1.Tag, dArea_1.Text)
            End If
            If txtPropertiesRemarks_1.Text = txtPropertiesRemarks_1.Tag Then
            Else
                Change &= String.Format("Change Properties Remarks 1 from {0} to {1}. ", txtPropertiesRemarks_1.Tag, txtPropertiesRemarks_1.Text)
            End If
            If txtLocation_2.Text = txtLocation_2.Tag Then
            Else
                Change &= String.Format("Change Location 2 from {0} to {1}. ", txtLocation_2.Tag, txtLocation_2.Text)
            End If
            If txtTCT_2.Text = txtTCT_2.Tag Then
            Else
                Change &= String.Format("Change TCT 2 from {0} to {1}. ", txtTCT_2.Tag, txtTCT_2.Text)
            End If
            If dArea_2.Value = dArea_2.Tag Then
            Else
                Change &= String.Format("Change Area 2 from {0} to {1}. ", dArea_2.Tag, dArea_2.Text)
            End If
            If txtPropertiesRemarks_2.Text = txtPropertiesRemarks_2.Tag Then
            Else
                Change &= String.Format("Change Properties Remarks 2 from {0} to {1}. ", txtPropertiesRemarks_2.Tag, txtPropertiesRemarks_2.Text)
            End If
            If txtVehicle_1.Text = txtVehicle_1.Tag Then
            Else
                Change &= String.Format("Change Vehicle 1 from {0} to {1}. ", txtVehicle_1.Tag, txtVehicle_1.Text)
            End If
            If If(dtpYear_1.Tag = "", dtpYear_1.Text.Trim = dtpYear_1.Tag, Format(dtpYear_1.Value, "yyyy-MM-dd") = dtpYear_1.Tag) Then
            Else
                Change &= String.Format("Change Year Model 1 from {0} to {1}. ", dtpYear_1.Tag, dtpYear_1.Text.Trim)
            End If
            If txtWhomAcquired_1.Text = txtWhomAcquired_1.Tag Then
            Else
                Change &= String.Format("Change Whom Acquired 1  from {0} to {1}. ", txtWhomAcquired_1.Tag, txtWhomAcquired_1.Text)
            End If
            If txtVehicleRemarks_1.Text = txtVehicleRemarks_1.Tag Then
            Else
                Change &= String.Format("Change Vehicle Remark 1 from {0} to {1}. ", txtVehicleRemarks_1.Tag, txtVehicleRemarks_1.Text)
            End If
            If txtVehicle_2.Text = txtVehicle_2.Tag Then
            Else
                Change &= String.Format("Change Vehicle 2 from {0} to {1}. ", txtVehicle_2.Tag, txtVehicle_2.Text)
            End If
            If If(dtpYear_2.Tag = "", dtpYear_2.Text.Trim = dtpYear_2.Tag, Format(dtpYear_2.Value, "yyyy-MM-dd") = dtpYear_2.Tag) Then
            Else
                Change &= String.Format("Change Year Model 2 from {0} to {1}. ", dtpYear_2.Tag, dtpYear_2.Text.Trim)
            End If
            If txtWhomAcquired_2.Text = txtWhomAcquired_2.Tag Then
            Else
                Change &= String.Format("Change Whom Acquired 2 from {0} to {1}. ", txtWhomAcquired_2.Tag, txtWhomAcquired_2.Text)
            End If
            If txtVehicleRemarks_2.Text = txtVehicleRemarks_2.Tag Then
            Else
                Change &= String.Format("Change Vehicle Remarks 2 from {0} to {1}. ", txtVehicleRemarks_2.Tag, txtVehicleRemarks_2.Text)
            End If
            If txtOtherProperties.Text = txtOtherProperties.Tag Then
            Else
                Change &= String.Format("Change Other Properties from {0} to {1}. ", txtOtherProperties.Tag, txtOtherProperties.Text)
            End If
            If rNarrative.Text.InsertQuote = rNarrative.Tag Then
            Else
                Change &= String.Format("Change Narrative CI Remarks from {0} to {1}. ", rNarrative.Tag.ToString.InsertQuote, rNarrative.Text.InsertQuote)
            End If
            If txtC1.Text = txtC1.Tag Then
            Else
                Change &= String.Format("Change Condition 1 from {0} to {1}. ", txtC1.Tag, txtC1.Text)
            End If
            If txtC2.Text = txtC2.Tag Then
            Else
                Change &= String.Format("Change Condition 2 from {0} to {1}. ", txtC2.Tag, txtC2.Text)
            End If
            If txtC3.Text = txtC3.Tag Then
            Else
                Change &= String.Format("Change Condition 3 from {0} to {1}. ", txtC3.Tag, txtC3.Text)
            End If
            If txtC4.Text = txtC4.Tag Then
            Else
                Change &= String.Format("Change Condition 4 from {0} to {1}. ", txtC4.Tag, txtC4.Text)
            End If
            If txtC5.Text = txtC5.Tag Then
            Else
                Change &= String.Format("Change Condition 5 from {0} to {1}. ", txtC5.Tag, txtC5.Text)
            End If
            If txtC6.Text = txtC6.Tag Then
            Else
                Change &= String.Format("Change Condition 6 from {0} to {1}. ", txtC6.Tag, txtC6.Text)
            End If
            If txtC7.Text = txtC7.Tag Then
            Else
                Change &= String.Format("Change Condition 7 from {0} to {1}. ", txtC7.Tag, txtC7.Text)
            End If
            If txtC8.Text = txtC8.Tag Then
            Else
                Change &= String.Format("Change Condition 8 from {0} to {1}. ", txtC8.Tag, txtC8.Text)
            End If
            If txtC9.Text = txtC9.Tag Then
            Else
                Change &= String.Format("Change Condition 9 from {0} to {1}. ", txtC9.Tag, txtC9.Text)
            End If
            If ChangeBorrowerPic Then
                Change &= "Change Borrower Picture. "
            End If
        Catch ex As Exception
            TriggerBugReport("Creidt Investigation - Changes", ex.Message.ToString)
        End Try

        Return Change
    End Function

    Private Sub CbxSA_1_CheckedChanged(sender As Object, e As EventArgs) Handles cbxSA_1.CheckedChanged
        If cbxSA_1.Checked Then
            txtSA_1.Enabled = True
            cbxCA_1.Checked = False
        End If
    End Sub

    Private Sub CbxCA_1_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCA_1.CheckedChanged
        If cbxCA_1.Checked Then
            txtSA_1.Enabled = True
            cbxSA_1.Checked = False
        End If
    End Sub

    Private Sub CbxSA_2_CheckedChanged(sender As Object, e As EventArgs) Handles cbxSA_2.CheckedChanged
        If cbxSA_2.Checked Then
            txtSA_2.Enabled = True
            cbxCA_2.Checked = False
        End If
    End Sub

    Private Sub CbxCA_2_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCA_2.CheckedChanged
        If cbxCA_2.Checked Then
            txtSA_2.Enabled = True
            cbxSA_2.Checked = False
        End If
    End Sub

    Private Sub CbxNatureBusiness_B2_TextChanged(sender As Object, e As EventArgs) Handles cbxNatureBusiness_B2.TextChanged
        cbxBusinessNature.Text = If(cbxNatureBusiness_B2.Text.Length > 60, cbxNatureBusiness_B2.Text.Substring(1, 60), cbxNatureBusiness_B2.Text)
    End Sub

    Public Sub LoadData()
        Dim SQL As String = "SELECT"
        SQL &= "    ID,"
        SQL &= "    DATE_FORMAT(credit_investigation.trans_date,'%b %d, %Y') AS 'Date',"
        SQL &= "    CINumber AS 'CI Number',"
        SQL &= "    credit_investigation.CreditNumber AS 'Credit Number',"
        SQL &= "    CONCAT(IF(FirstN_B = '','',CONCAT(FirstN_B, ' ')), IF(MiddleN_B = '','',CONCAT(MiddleN_B, ' ')), IF(LastN_B = '','',CONCAT(LastN_B, ' ')), Suffix_B) AS 'Borrower',"
        SQL &= "    C.AmountApplied AS 'Amount Applied',"
        SQL &= "    CreditRating AS 'Credit Rating',"
        SQL &= "    RecommendationFor AS 'Recommendation',"
        SQL &= "    IF(credit_investigation.`status` = 'CANCELLED' OR credit_investigation.`status` = 'DELETED', 'CI CANCELLED',IF(credit_investigation.`status` = 'DISAPPROVED','CI DISAPPROVED',IF(PaymentRequest = 'CLOSED','CLOSED ACCOUNT',IF(ApproveStatus = 'For ReApprove','FOR REAPPROVAL',IF(ApproveStatus = 'For Special','FOR SPECIAL APPROVAL',IF(PaymentRequest = 'RELEASED' AND C.`status` = 'ACTIVE','BOOKED',IF(PaymentRequest = 'APPROVED REQUEST' AND C.`status` = 'ACTIVE','FOR RELEASING',IF(PaymentRequest = 'CHECKED REQUEST' AND C.`status` = 'ACTIVE' AND C.CI_Status = 'APPROVED','CV FOR APPROVAL',IF(PaymentRequest = 'REQUESTED' AND C.`status` = 'ACTIVE' AND C.CI_Status = 'APPROVED',CONCAT(IF(CVforJV,'JV','CV'),' FOR CHECKING'),IF(PaymentRequest = 'PENDING' AND C.CI_Status = 'APPROVED' AND C.`status` = 'ACTIVE' AND (loan_type = 'RESTRUCTURE' OR From_ROPOA = 1 OR CVforJV = 1),'FOR JOURNAL VOUCHER',IF(PaymentRequest = 'PENDING' AND C.CI_Status = 'APPROVED' AND C.`status` = 'ACTIVE' AND loan_type != 'RESTRUCTURE','FOR PAYMENT REQUEST',IF(PaymentRequest = 'REQUEST' AND C.CI_Status = 'APPROVED' AND C.`status` = 'ACTIVE' AND loan_type != 'RESTRUCTURE','FOR CHECK PREPARATION',IF(PaymentRequest = 'PENDING' AND C.CI_Status = 'APPROVED' AND C.`status` = 'ACTIVE' AND (loan_type = 'RESTRUCTURE' OR From_ROPOA = 1 OR CVforJV = 1),'FOR JOURNAL VOUCHER',IF(C.CI_Status = 'CHECKED' AND application_status = 'APPROVED' AND C.`status` = 'ACTIVE' AND ForCI_Product(C.Product_ID) = 'Yes','FOR CRECOMM APPROVAL',IF(C.CI_Status = 'ONGOING' AND application_status = 'APPROVED' AND C.`status` = 'ACTIVE' AND ForCI_Product(C.Product_ID) = 'Yes',IF(Credit_Investigation.Status='DRAFT','DRAFT',IF(Credit_Investigation.CI_Status='PENDING' AND Credit_Investigation.Status='ACTIVE','FOR BM APPROVAL','CREDIT INVESTIGATION STARTED')),IF(C.CI_Status = 'PENDING' AND application_status = 'APPROVED' AND C.`status` = 'ACTIVE' AND ForCI_Product(Product_ID) = 'No','FOR CRECOMM APPROVAL',IF(C.CI_Status = 'PENDING' AND application_status = 'APPROVED' AND C.`status` = 'ACTIVE' AND ForCI_Product(C.Product_ID) = 'Yes','FOR CREDIT INVESTIGATION',IF(application_status = 'PENDING' AND C.`status` = 'ACTIVE','FOR BM/OIC APPROVAL',IF(C.`status` = 'HOLD','HOLD',IF(C.`status` = 'CANCELLED','CANCELLED',IF(C.CI_Status = 'DISAPPROVED' OR application_status = 'DISAPPROVED','DISAPPROVED',IF(PaymentRequest = 'JV Request','CURRENTLY ON JV','DRAFT')))))))))))))))))))))) AS 'Application Status',"
        SQL &= "    Product,"
        SQL &= "    Collateral,"
        SQL &= "    TotalAppraised AS 'Appraised Value', C.Terms AS 'ApplicationTerms',  C.Interest_rate AS 'ApplicationInterest', C.Product_ID AS 'ProductID', C.Trans_Date AS 'ApplicationDate', "
        SQL &= "    Employee(PreparedID) AS 'Prepared By',"
        SQL &= "    Employee(CheckedID) AS 'Checked By',"
        SQL &= "    credit_investigation.*, IFNULL(Borrower_S,0) AS 'Borrower_S', IFNULL(Borrower_C1,0) AS 'Borrower_C1', IFNULL(Borrower_C2,0) AS 'Borrower_C2', IFNULL(Borrower_C3,0) AS 'Borrower_C3', IFNULL(Borrower_C4,0) AS 'Borrower_C4', ApproveStatus, ApprovedAmount_Crecomm, ApprovedTerm_Crecomm, ApprovedInterest_Crecomm, ApprovedSC_Crecomm, From_ROPOA, Branch(credit_investigation.Branch_ID) AS 'Branch', C.Branch_ID AS 'BranchID_Source', BM_Amount, BM_Terms, BM_Interest"
        SQL &= String.Format(" FROM credit_investigation LEFT JOIN (SELECT Terms, Interest_rate, Product_ID, Trans_Date, CreditNumber, AmountApplied, Borrower_S, Borrower_C1, Borrower_C2, Borrower_C3, Borrower_C4, ApproveStatus, ApprovedAmount_Crecomm, ApprovedTerm_Crecomm, ApprovedInterest_Crecomm, ApprovedSC_Crecomm, PaymentRequest, application_status, CI_Status, loan_type, `status`, From_ROPOA, CVforJV, OutsourceCI, Branch_ID, BM_Amount, BM_Terms, BM_Interest FROM credit_application WHERE (Branch_ID IN ({0}) OR FIND_IN_SET(OutsourceCI,'{0}'))) C ON C.CreditNumber = credit_investigation.CreditNumber", If(Multiple_ID = "", Branch_ID, Multiple_ID))
        SQL &= String.Format("    WHERE C.CreditNumber != '' AND (FIND_IN_SET(credit_investigation.Branch_ID,'{0}') OR IF(OutsourceCI = '',FALSE,FIND_IN_SET(C.Branch_ID,'{0}')))", If(Multiple_ID = "", Branch_ID, Multiple_ID))
        Dim Draft As Boolean
        Dim ForApproval As Boolean
        Dim ForCrecommApproval As Boolean
        Dim ForReapproval As Boolean
        Dim ForSpecialApproval As Boolean
        Dim ForPaymentRequest As Boolean
        Dim ForCheckPreparation As Boolean
        Dim CVForChecking As Boolean
        Dim CVForApproval As Boolean
        Dim ForJournalVoucher As Boolean
        Dim CurrentlyAtJV As Boolean
        Dim ForReleasing As Boolean
        Dim Booked As Boolean
        Dim ClosedAccount As Boolean
        Dim CI_Cancelled As Boolean
        For x As Integer = 0 To cbxStatus.Properties.Items.Count - 1
            If cbxStatus.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "Draft" Then
                    Draft = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For BM Approval" Then
                    ForApproval = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Crecomm Approval" Then
                    ForCrecommApproval = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Reapproval" Then
                    ForReapproval = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Special Approval" Then
                    ForSpecialApproval = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Payment Request" Then
                    ForPaymentRequest = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Check Preparation" Then
                    ForCheckPreparation = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "CV For Checking" Then
                    CVForChecking = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "CV For Approval" Then
                    CVForApproval = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Journal Voucher" Then
                    ForJournalVoucher = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "Currently at JV" Then
                    CurrentlyAtJV = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Releasing" Then
                    ForReleasing = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "Booked" Then
                    Booked = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "Closed Account" Then
                    ClosedAccount = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "Cancelled" Then
                    CI_Cancelled = True
                End If
            End If
        Next
        If CI_Cancelled Then
            SQL &= " AND ("
            If Draft = False And ForApproval = False And ForCrecommApproval = False And ForReapproval = False And ForSpecialApproval = False And ForPaymentRequest = False And ForCheckPreparation = False And CVForChecking = False And CVForApproval = False And ForJournalVoucher = False And CurrentlyAtJV = False And ForReleasing = False And Booked = False And ClosedAccount = False Then
                SQL &= " (credit_investigation.`status` = 'CANCELLED' OR credit_investigation.`status` = 'DELETED' OR credit_investigation.`status` = 'DISAPPROVED' OR C.`status` = 'HOLD')"
            Else
                Dim CancelledStatus As String = "'CANCELLED','DELETED','DISAPPROVED','HOLD'"
                If Draft Then
                    SQL &= String.Format(" (credit_investigation.status IN ('DRAFT',{0}) OR C.`status` IN ({0}))", CancelledStatus)
                    If ForApproval Or ForCrecommApproval Or ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForApproval Then
                    SQL &= String.Format(" ((credit_investigation.ci_status = 'PENDING' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE') OR (credit_investigation.status IN ({0}) OR C.`status` IN ({0})))", CancelledStatus)
                    If ForCrecommApproval Or ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForCrecommApproval Then
                    SQL &= String.Format(" ((credit_investigation.ci_status = 'CHECKED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE') OR (credit_investigation.status IN ({0}) OR C.`status` IN ({0})))", CancelledStatus)
                    If ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForReapproval Then
                    SQL &= String.Format(" ((ApproveStatus = 'For Reapprove' AND credit_investigation.ci_status = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE') OR (credit_investigation.status IN ({0}) OR C.`status` IN ({0})))", CancelledStatus)
                    If ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForSpecialApproval Then
                    SQL &= String.Format(" ((ApproveStatus = 'For Special' AND credit_investigation.ci_status = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE') OR (credit_investigation.status IN ({0}) OR C.`status` IN ({0})))", CancelledStatus)
                    If ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForPaymentRequest Then
                    SQL &= String.Format(" ((PaymentRequest = 'PENDING' AND C.CI_Status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND CVforJV = 0 AND From_ROPOA = 0 AND ApproveStatus = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE') OR (credit_investigation.status IN ({0}) OR C.`status` IN ({0})))", CancelledStatus)
                    If ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForCheckPreparation Then
                    SQL &= String.Format(" ((PaymentRequest = 'REQUEST' AND C.CI_Status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND ApproveStatus = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE') OR (credit_investigation.status IN ({0}) OR C.`status` IN ({0})))", CancelledStatus)
                    If CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If CVForChecking Then
                    SQL &= String.Format(" ((PaymentRequest = 'REQUESTED' AND C.CI_Status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND ApproveStatus = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE') OR (credit_investigation.status IN ({0}) OR C.`status` IN ({0})))", CancelledStatus)
                    If CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If CVForApproval Then
                    SQL &= String.Format(" ((PaymentRequest = 'CHECKED REQUEST' AND C.CI_Status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND ApproveStatus = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE') OR (credit_investigation.status IN ({0}) OR C.`status` IN ({0})))", CancelledStatus)
                    If ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForJournalVoucher Then
                    SQL &= String.Format(" ((PaymentRequest = 'PENDING' AND C.CI_Status = 'APPROVED' AND (loan_type = 'RESTRUCTURE' OR From_ROPOA = 1 OR CVforJV = 1) AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE') OR (credit_investigation.status IN ({0}) OR C.`status` IN ({0})))", CancelledStatus)
                    If CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If CurrentlyAtJV Then
                    SQL &= String.Format(" ((PaymentRequest = 'JV Request' AND credit_investigation.ci_status = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE') OR (credit_investigation.status IN ({0}) OR C.`status` IN ({0})))", CancelledStatus)
                    If ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForReleasing Then
                    SQL &= String.Format(" ((PaymentRequest = 'APPROVED REQUEST' AND credit_investigation.ci_status = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE') OR (credit_investigation.status IN ({0}) OR C.`status` IN ({0})))", CancelledStatus)
                    If Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If Booked Then
                    SQL &= String.Format(" ((PaymentRequest = 'RELEASED' AND credit_investigation.ci_status = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE') OR (credit_investigation.status IN ({0}) OR C.`status` IN ({0})))", CancelledStatus)
                    If ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ClosedAccount Then
                    SQL &= String.Format(" ((PaymentRequest = 'CLOSED' AND credit_investigation.ci_status = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE') OR (credit_investigation.status IN ({0}) OR C.`status` IN ({0})))", CancelledStatus)
                End If
            End If
            SQL &= " )"
        Else
            If Draft Or ForApproval Or ForCrecommApproval Or ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                SQL &= " AND ("
                If Draft Then
                    SQL &= " (credit_investigation.status = 'DRAFT')"
                    If ForApproval Or ForCrecommApproval Or ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForApproval Then
                    SQL &= " (credit_investigation.ci_status = 'PENDING' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE')"
                    If ForCrecommApproval Or ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForCrecommApproval Then
                    SQL &= " (credit_investigation.ci_status = 'CHECKED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE')"
                    If ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForReapproval Then
                    SQL &= " (ApproveStatus = 'For Reapprove' AND credit_investigation.ci_status = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE')"
                    If ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForSpecialApproval Then
                    SQL &= " (ApproveStatus = 'For Special' AND credit_investigation.ci_status = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE')"
                    If ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForPaymentRequest Then
                    SQL &= " (PaymentRequest = 'PENDING' AND C.CI_Status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND CVforJV = 0 AND From_ROPOA = 0 AND ApproveStatus = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE')"
                    If ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForCheckPreparation Then
                    SQL &= " (PaymentRequest = 'REQUEST' AND C.CI_Status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND ApproveStatus = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE')"
                    If CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If CVForChecking Then
                    SQL &= " (PaymentRequest = 'REQUESTED' AND C.CI_Status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND ApproveStatus = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE')"
                    If CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If CVForApproval Then
                    SQL &= " (PaymentRequest = 'CHECKED REQUEST' AND C.CI_Status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND ApproveStatus = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE')"
                    If ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForJournalVoucher Then
                    SQL &= " (PaymentRequest = 'PENDING' AND C.CI_Status = 'APPROVED' AND (loan_type = 'RESTRUCTURE' OR From_ROPOA = 1 OR CVforJV = 1) AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE')"
                    If CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If CurrentlyAtJV Then
                    SQL &= " (PaymentRequest = 'JV Request' AND credit_investigation.ci_status = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE')"
                    If ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForReleasing Then
                    SQL &= " (PaymentRequest = 'APPROVED REQUEST' AND credit_investigation.ci_status = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE')"
                    If Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If Booked Then
                    SQL &= " (PaymentRequest = 'RELEASED' AND credit_investigation.ci_status = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE')"
                    If ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ClosedAccount Then
                    SQL &= " (PaymentRequest = 'CLOSED' AND credit_investigation.ci_status = 'APPROVED' AND credit_investigation.status = 'ACTIVE' AND C.`status` = 'ACTIVE')"
                End If
                SQL &= " )"
            End If
        End If

        If cbxAll.Checked Then
        Else
            SQL &= String.Format("    AND DATE(credit_investigation.trans_date) BETWEEN '{0}' AND '{1}'", FormatDatePicker(dtpFrom), FormatDatePicker(dtpTo))
        End If
        SQL &= " ORDER BY CINumber DESC"

        GridControl5.DataSource = DataSource(SQL)
        If Multiple_ID.Contains(",") Then
            GridColumn21.Visible = True
            GridColumn21.VisibleIndex = 11
        End If
        GridView5.Columns("Borrower").SummaryItem.SummaryType = DevExpress.Data.SummaryItemType.Count
        GridView5.Columns("Borrower").SummaryItem.DisplayFormat = "Total of {0} record(s) fetched"
    End Sub

    Public Sub GridView5_DoubleClick(sender As Object, e As EventArgs) Handles GridView5.DoubleClick
        Try
            If GridView5.GetFocusedRowCellValue("Credit Number") = "" Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Cursor = Cursors.WaitCursor
        Clear()
        btnCalculator.Enabled = True
        LabelX70.Visible = True
        cbxApproval.Visible = True
        LabelX71.Visible = True
        LabelX71.BringToFront()
        dApprovedAmount.Visible = True
        dApprovedAmount.BringToFront()
        LabelX72.Visible = True
        iApprovedTerms.Visible = True
        LabelX73.Visible = True
        LabelX74.Visible = True
        dApprovedRate.Visible = True
        LabelX75.Visible = True
        cbxPDC.Visible = True
        cbxNoPDC.Visible = True
        cbxDisapproval.Visible = True

        btnSN.Enabled = True
        btnCM_1.Enabled = True
        btnCM_2.Enabled = True
        btnCM_3.Enabled = True
        btnCM_4.Enabled = True
        With GridView5
            dtpDate.Value = .GetFocusedRowCellValue("trans_date")
            dtpDate.Tag = .GetFocusedRowCellValue("trans_date")

            txtCINumber.Text = .GetFocusedRowCellValue("CI Number")
            txtCINumber.Tag = .GetFocusedRowCellValue("CI Number")
            CollateralFromROPOA = .GetFocusedRowCellValue("From_ROPOA")

            CreditNumber = .GetFocusedRowCellValue("Credit Number")
            BorrowerID = .GetFocusedRowCellValue("BorrowerID")
            PreparedBy = .GetFocusedRowCellValue("Prepared By")
            CheckedBy = .GetFocusedRowCellValue("Checked By")
        End With
        If BorrowerID.Contains("C") Then
            LabelX43.Text = "Trade Name :"
            LabelX21.Text = "Representative 1 :"
            LabelX77.Text = "Representative 2 :"
            LabelX3.Text = "Representative 3 :"
            LabelX29.Text = "Representative 4 :"
            LabelX24.Text = "Representative 5 :"

            btnSN.Visible = False
            btnCM_1.Visible = False
            btnCM_2.Visible = False
            btnCM_3.Visible = False
            btnCM_4.Visible = False

            TxtFirstN_B.Location = New Point(146, 35)
            TxtFirstN_B.Size = New Point(740, 23)
            CbxPrefix_B.Visible = False
            TxtMiddleN_B.Visible = False
            TxtLastN_B.Visible = False
            cbxSuffix_B.Visible = False
            LabelX10.Text = "Incorporation Date :"

            Dim DT_Representative As DataTable = DataSource(String.Format("SELECT Prefix_R1, FirstN_R1, MiddleN_R1, LastN_R1, Suffix_R1, Prefix_R2, FirstN_R2, MiddleN_R2, LastN_R2, Suffix_R2, Prefix_R3, FirstN_R3, MiddleN_R3, LastN_R3, Suffix_R3, Prefix_R4, FirstN_R4, MiddleN_R4, LastN_R4, Suffix_R4, Prefix_R5, FirstN_R5, MiddleN_R5, LastN_R5, Suffix_R5 FROM profile_corporation WHERE BorrowerID = '{0}';", BorrowerID))
            CbxPrefix_S.Text = DT_Representative(0)("Prefix_R1")
            CbxPrefix_S.Tag = DT_Representative(0)("Prefix_R1")
            TxtFirstN_S.Text = DT_Representative(0)("FirstN_R1")
            TxtFirstN_S.Tag = DT_Representative(0)("FirstN_R1")
            TxtMiddleN_S.Text = DT_Representative(0)("MiddleN_R1")
            TxtMiddleN_S.Tag = DT_Representative(0)("MiddleN_R1")
            TxtLastN_S.Text = DT_Representative(0)("LastN_R1")
            TxtLastN_S.Tag = DT_Representative(0)("LastN_R1")
            cbxSuffix_S.Text = DT_Representative(0)("Suffix_R1")
            cbxSuffix_S.Tag = DT_Representative(0)("Suffix_R1")

            CbxPrefix_C1.Text = DT_Representative(0)("Prefix_R2")
            CbxPrefix_C1.Tag = DT_Representative(0)("Prefix_R2")
            TxtFirstN_C1.Text = DT_Representative(0)("FirstN_R2")
            TxtFirstN_C1.Tag = DT_Representative(0)("FirstN_R2")
            TxtMiddleN_C1.Text = DT_Representative(0)("MiddleN_R2")
            TxtMiddleN_C1.Tag = DT_Representative(0)("MiddleN_R2")
            TxtLastN_C1.Text = DT_Representative(0)("LastN_R2")
            TxtLastN_C1.Tag = DT_Representative(0)("LastN_R2")
            cbxSuffix_C1.Text = DT_Representative(0)("Suffix_R2")
            cbxSuffix_C1.Tag = DT_Representative(0)("Suffix_R2")

            CbxPrefix_C2.Text = DT_Representative(0)("Prefix_R3")
            CbxPrefix_C2.Tag = DT_Representative(0)("Prefix_R3")
            TxtFirstN_C2.Text = DT_Representative(0)("FirstN_R3")
            TxtFirstN_C2.Tag = DT_Representative(0)("FirstN_R3")
            TxtMiddleN_C2.Text = DT_Representative(0)("MiddleN_R3")
            TxtMiddleN_C2.Tag = DT_Representative(0)("MiddleN_R3")
            TxtLastN_C2.Text = DT_Representative(0)("LastN_R3")
            TxtLastN_C2.Tag = DT_Representative(0)("LastN_R3")
            cbxSuffix_C2.Text = DT_Representative(0)("Suffix_R3")
            cbxSuffix_C2.Tag = DT_Representative(0)("Suffix_R3")

            CbxPrefix_C3.Text = DT_Representative(0)("Prefix_R4")
            CbxPrefix_C3.Tag = DT_Representative(0)("Prefix_R4")
            TxtFirstN_C3.Text = DT_Representative(0)("FirstN_R4")
            TxtFirstN_C3.Tag = DT_Representative(0)("FirstN_R4")
            TxtMiddleN_C3.Text = DT_Representative(0)("MiddleN_R4")
            TxtMiddleN_C3.Tag = DT_Representative(0)("MiddleN_R4")
            TxtLastN_C3.Text = DT_Representative(0)("LastN_R4")
            TxtLastN_C3.Tag = DT_Representative(0)("LastN_R4")
            cbxSuffix_C3.Text = DT_Representative(0)("Suffix_R4")
            cbxSuffix_C3.Tag = DT_Representative(0)("Suffix_R4")

            CbxPrefix_C4.Text = DT_Representative(0)("Prefix_R5")
            CbxPrefix_C4.Tag = DT_Representative(0)("Prefix_R5")
            TxtFirstN_C4.Text = DT_Representative(0)("FirstN_R5")
            TxtFirstN_C4.Tag = DT_Representative(0)("FirstN_R5")
            TxtMiddleN_C4.Text = DT_Representative(0)("MiddleN_R5")
            TxtMiddleN_C4.Tag = DT_Representative(0)("MiddleN_R5")
            TxtLastN_C4.Text = DT_Representative(0)("LastN_R5")
            TxtLastN_C4.Tag = DT_Representative(0)("LastN_R5")
            cbxSuffix_C4.Text = DT_Representative(0)("Suffix_R5")
            cbxSuffix_C4.Tag = DT_Representative(0)("Suffix_R5")
        Else
            LabelX43.Text = "<span align='right'><font color='red'>*</font>Borrower's Name :</span>"
            LabelX21.Text = "Spouse Name :"
            LabelX77.Text = "Co-Maker I :"
            LabelX3.Text = "Co-Maker II :"
            LabelX29.Text = "Co-Maker III :"
            LabelX24.Text = "Co-Maker IV :"

            btnSN.Visible = True
            btnCM_1.Visible = True
            btnCM_2.Visible = True
            btnCM_3.Visible = True
            btnCM_4.Visible = True

            TxtFirstN_B.Location = New Point(224, 35)
            TxtFirstN_B.Size = New Point(200, 23)
            CbxPrefix_B.Visible = True
            TxtMiddleN_B.Visible = True
            TxtLastN_B.Visible = True
            cbxSuffix_B.Visible = True
            LabelX10.Text = "<span align='right'><font color='red'>*</font>Date of Birth :</span>"
        End If

        cbxApplication.Text = ""
        With GridView5
            CbxPrefix_B.Text = .GetFocusedRowCellValue("Prefix_B")
            CbxPrefix_B.Tag = .GetFocusedRowCellValue("Prefix_B")

            TxtFirstN_B.Text = .GetFocusedRowCellValue("FirstN_B")
            TxtFirstN_B.Tag = .GetFocusedRowCellValue("FirstN_B")

            TxtMiddleN_B.Text = .GetFocusedRowCellValue("MiddleN_B")
            TxtMiddleN_B.Tag = .GetFocusedRowCellValue("MiddleN_B")

            TxtLastN_B.Text = .GetFocusedRowCellValue("LastN_B")
            TxtLastN_B.Tag = .GetFocusedRowCellValue("LastN_B")

            cbxSuffix_B.Text = .GetFocusedRowCellValue("Suffix_B")
            cbxSuffix_B.Tag = .GetFocusedRowCellValue("Suffix_B")
        End With

        Dim Spouse As New DataTable
        If GridView5.GetFocusedRowCellValue("Civil_B") = "Married" Or GridView5.GetFocusedRowCellValue("Civil_B") = "Separated" Then
            Spouse = DataSource(String.Format("SELECT * FROM profile_spouse WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE' ORDER BY ID DESC LIMIT 1;", BorrowerID))
        End If
        If Spouse.Rows.Count > 0 Then
            SpouseID = Spouse(0)("SpouseID")
            CbxPrefix_S.Text = Spouse(0)("Prefix_S")
            TxtFirstN_S.Text = Spouse(0)("FirstN_S")
            TxtMiddleN_S.Text = Spouse(0)("MiddleN_S")
            TxtLastN_S.Text = Spouse(0)("LastN_S")
            cbxSuffix_S.Text = Spouse(0)("Suffix_S")

            vPrefix_S = Spouse(0)("Prefix_S")
            vFirstN_S = Spouse(0)("FirstN_S")
            vMiddleN_S = Spouse(0)("MiddleN_S")
            vLastN_S = Spouse(0)("LastN_S")
            vSuffix_S = Spouse(0)("Suffix_S")
            vNoC_S = Spouse(0)("NoC_S")
            vStreetC_S = Spouse(0)("StreetC_S")
            vBarangayC_S = Spouse(0)("BarangayC_S")
            vAddressC_S = Spouse(0)("AddressC_S")
            vNoP_S = Spouse(0)("NoP_S")
            vStreetP_S = Spouse(0)("StreetP_S")
            vBarangayP_S = Spouse(0)("BarangayP_S")
            vAddressP_S = Spouse(0)("AddressP_S")
            vBirth_S = Spouse(0)("Birth_S")
            vPlaceBirth_S = Spouse(0)("PlaceBirth_S")
            If Spouse(0)("Gender_S") = "Male" Then
                vMale_S = True
            ElseIf Spouse(0)("Gender_S") = "Female" Then
                vFemale_S = True
            End If
            vCitizenship_S = Spouse(0)("Citizenship_S")
            vTIN_S = Spouse(0)("TIN_S")
            vTelephone_S = Spouse(0)("Telephone_S")
            vSSS_S = Spouse(0)("SSS_S")
            vMobile_S = Spouse(0)("Mobile_S")
            vEmail_S = Spouse(0)("Email_S")
            If Spouse(0)("House_S") = "Owned" Then
                vOwned_S = True
            ElseIf Spouse(0)("House_S") = "Free" Then
                vFree_S = True
            ElseIf Spouse(0)("House_S") = "Rented" Then
                vRented_S = True
                vRent_S = Spouse(0)("Rent_S")
            End If
            Try
                Using TempPB As New DevExpress.XtraEditors.PictureEdit
                    TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, GridView5.GetFocusedRowCellValue("branch_code"), txtCINumber.Text, "Spouse.jpg"))
                    If IO.File.Exists(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, GridView5.GetFocusedRowCellValue("branch_code"), txtCINumber.Text, "Spouse.jpg")) Then
                        txtPath_S.Text = "Spouse.jpg"
                    Else
                        txtPath_S.Text = ""
                    End If
                    ResizeImages(TempPB.Image.Clone, pb_Spouse, 850, 700)
                End Using
            Catch ex As Exception
                txtPath_S.Text = ""
            End Try
            vEmployer_S = Spouse(0)("Employer_S")
            vEmpAddress_S = Spouse(0)("EmployerAddress_S")
            vEmpTelephone_S = Spouse(0)("EmployerTelephone_S")
            vPosition_S = Spouse(0)("Position_S")
            If Spouse(0)("EmploymentStat_S") = "Casual" Then
                vCasual_S = True
            ElseIf Spouse(0)("EmploymentStat_S") = "Temporary" Then
                vTemporary_S = True
            ElseIf Spouse(0)("EmploymentStat_S") = "Permanent" Then
                vPermanent_S = True
            End If
            vHired_S = Spouse(0)("Hired_S")
            vYearHired_S = Spouse(0)("YearHired_S")
            vSupervisor_S = Spouse(0)("Supervisor_S")
            vSalary_S = Spouse(0)("Monthly_S")
            dSalary_S.Value = CDbl(Spouse(0)("Monthly_S")) + If(cbxIncludeSpouseBusiness.Checked, CDbl(Spouse(0)("BusinessIncome_S")), 0)
            vBusinessName_S = Spouse(0)("BusinessName_S")
            vBusinessAddress_S = Spouse(0)("BusinessAddress_S")
            vBusinessTelephone_S = Spouse(0)("BusinessTelephone_S")
            vNatureBusiness_S = Spouse(0)("NatureBusiness_S")
            vYrsOperation_S = Spouse(0)("YrsOperation_S")
            vBusinessIncome_S = Spouse(0)("BusinessIncome_S")
            vNoEmployees_S = Spouse(0)("NoEmployees_S")
            vCapital_S = Spouse(0)("Capital_S")
            vArea_S = Spouse(0)("Area_S")
            vExpiry_S = Spouse(0)("Expiry_S")
            vOutlet_S = Spouse(0)("Outlet_S")
            vOtherIncome_S = Spouse(0)("OtherIncome_S")
            vOtherIncomeD_S = Spouse(0)("OtherIncome_S-Amount")
            Industry_S.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM profile_borrower_industry WHERE `status` = 'ACTIVE' AND BorrowerID = '{0}' AND `Type` = 'Spouse'", Spouse(0)("BorrowerID"))))

            '*** I D E N T I F I C A T I O N ***
            Dim BorrowerID_S As DataTable = DataSource(String.Format("SELECT * FROM profile_borrowerid WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE' AND ID_Type = 'S'", BorrowerID))
            If BorrowerID_S.Rows.Count > 0 Then
                GSIS_S = BorrowerID_S(0)("GSIS")
                PhilHealth_S = BorrowerID_S(0)("PhilHealth")
                Senior_S = BorrowerID_S(0)("Senior")
                UMID_S = BorrowerID_S(0)("UMID")
                SEC_S = BorrowerID_S(0)("SEC")
                DTI_S = BorrowerID_S(0)("DTI")
                CDA_S = BorrowerID_S(0)("CDA")
                Cooperative_S = BorrowerID_S(0)("Cooperative")
                Drivers_S = BorrowerID_S(0)("Drivers")
                dDrivers_S = BorrowerID_S(0)("dDrivers")
                VIN_S = BorrowerID_S(0)("VIN")
                dVIN_S = BorrowerID_S(0)("dVIN")
                Passport_S = BorrowerID_S(0)("Passport")
                dPassport_S = BorrowerID_S(0)("dPassport")
                PRC_S = BorrowerID_S(0)("PRC")
                dPRC_S = BorrowerID_S(0)("dPRC")
                NBI_S = BorrowerID_S(0)("NBI")
                dNBI_S = BorrowerID_S(0)("dNBI")
                Police_S = BorrowerID_S(0)("Police")
                dPolice_S = BorrowerID_S(0)("dPolice")
                Postal_S = BorrowerID_S(0)("Postal")
                dPostal_S = BorrowerID_S(0)("dPostal")
                Barangay_S = BorrowerID_S(0)("Barangay")
                dBarangay_S = BorrowerID_S(0)("dBarangay")
                OWWA_S = BorrowerID_S(0)("OWWA")
                dOWWA_S = BorrowerID_S(0)("dOWWA")
                OFW_S = BorrowerID_S(0)("OFW")
                dOFW_S = BorrowerID_S(0)("dOFW")
                Seaman_S = BorrowerID_S(0)("Seaman")
                dSeaman_S = BorrowerID_S(0)("dSeaman")
                PNP_S = BorrowerID_S(0)("PNP")
                dPNP_S = BorrowerID_S(0)("dPNP")
                AFP_S = BorrowerID_S(0)("AFP")
                dAFP_S = BorrowerID_S(0)("dAFP")
                HDMF_S = BorrowerID_S(0)("HDMF")
                dHDMF_S = BorrowerID_S(0)("dHDMF")
                PWD_S = BorrowerID_S(0)("PWD")
                dPWD_S = BorrowerID_S(0)("dPWD")
                DSWD_S = BorrowerID_S(0)("DSWD")
                dDSWD_S = BorrowerID_S(0)("dDSWD")
                ACR_S = BorrowerID_S(0)("ACR")
                dACR_S = BorrowerID_S(0)("dACR")
                DTI_Business_S = BorrowerID_S(0)("DTI_Business")
                dDTI_Business_S = BorrowerID_S(0)("dDTI_Business")
                IBP_S = BorrowerID_S(0)("IBP")
                dIBP_S = BorrowerID_S(0)("dIBP")
                FireArms_S = BorrowerID_S(0)("FireArms")
                dFireArms_S = BorrowerID_S(0)("dFireArms")
                Government_S = BorrowerID_S(0)("Government")
                dGovernment_S = BorrowerID_S(0)("dGovernment")
                Diplomat_S = BorrowerID_S(0)("Diplomat")
                dDiplomat_S = BorrowerID_S(0)("dDiplomat")
                National_S = BorrowerID_S(0)("National")
                dNational_S = BorrowerID_S(0)("dNational")
                Work_S = BorrowerID_S(0)("Work")
                dWork_S = BorrowerID_S(0)("dWork")
                GOCC_S = BorrowerID_S(0)("GOCC")
                dGOCC_S = BorrowerID_S(0)("dGOCC")
                PLRA_S = BorrowerID_S(0)("PLRA")
                dPLRA_S = BorrowerID_S(0)("dPLRA")
                Major_S = BorrowerID_S(0)("Major")
                dMajor_S = BorrowerID_S(0)("dMajor")
                Media_S = BorrowerID_S(0)("Media")
                dMedia_S = BorrowerID_S(0)("dMedia")
                Student_S = BorrowerID_S(0)("Student")
                dStudent_S = BorrowerID_S(0)("dStudent")
                SIRV_S = BorrowerID_S(0)("SIRV")
                dSIRV_S = BorrowerID_S(0)("dSIRV")
            End If
            '*** I D E N T I F I C A T I O N ***
        Else
            SpouseID = ""
        End If

        Dim CoMaker As DataTable = DataSource(String.Format("SELECT * FROM credit_application_comaker WHERE CreditNumber = '{0}' AND `status` = 'ACTIVE' ORDER BY `Rank`", CreditNumber))
        If CoMaker.Rows.Count > 0 Then
            ReferenceID_1 = CoMaker(0)("ReferenceID")
            CoMakerID = CoMaker(0)("CoMakerID")
            CbxPrefix_C1.Text = CoMaker(0)("Prefix_C")
            TxtFirstN_C1.Text = CoMaker(0)("FirstN_C")
            TxtMiddleN_C1.Text = CoMaker(0)("MiddleN_C")
            TxtLastN_C1.Text = CoMaker(0)("LastN_C")
            cbxSuffix_C1.Text = CoMaker(0)("Suffix_C")

            CbxPrefix_C1.Tag = CoMaker(0)("Prefix_C")
            TxtFirstN_C1.Tag = CoMaker(0)("FirstN_C")
            TxtMiddleN_C1.Tag = CoMaker(0)("MiddleN_C")
            TxtLastN_C1.Tag = CoMaker(0)("LastN_C")
            cbxSuffix_C1.Tag = CoMaker(0)("Suffix_C")

            vPrefix_C1 = CoMaker(0)("Prefix_C")
            vFirstN_C1 = CoMaker(0)("FirstN_C")
            vMiddleN_C1 = CoMaker(0)("MiddleN_C")
            vLastN_C1 = CoMaker(0)("LastN_C")
            vSuffix_C1 = CoMaker(0)("Suffix_C")
            vNoC_C1 = CoMaker(0)("NoC_C")
            vStreetC_C1 = CoMaker(0)("StreetC_C")
            vBarangayC_C1 = CoMaker(0)("BarangayC_C")
            vAddressC_C1 = CoMaker(0)("AddressC_C")
            vNoP_C1 = CoMaker(0)("NoP_C")
            vStreetP_C1 = CoMaker(0)("StreetP_C")
            vBarangayP_C1 = CoMaker(0)("BarangayP_C")
            vAddressP_C1 = CoMaker(0)("AddressP_C")
            vBirth_C1 = CoMaker(0)("Birth_C")
            vPlaceBirth_C1 = CoMaker(0)("PlaceBirth_C")
            If CoMaker(0)("Gender_C") = "Male" Then
                vMale_C1 = True
            ElseIf CoMaker(0)("Gender_C") = "Female" Then
                vFemale_C1 = True
            End If
            If CoMaker(0)("Civil_C") = "Single" Then
                vSingle_C1 = True
            ElseIf CoMaker(0)("Civil_C") = "Married" Then
                vMarried_C1 = True
            ElseIf CoMaker(0)("Civil_C") = "Separated" Then
                vSeparated_C1 = True
            ElseIf CoMaker(0)("Civil_C") = "Widowed" Then
                vWidowed_C1 = True
            End If
            vCitizenship_C1 = CoMaker(0)("Citizenship_C")
            vTIN_C1 = CoMaker(0)("TIN_C")
            vTelephone_C1 = CoMaker(0)("Telephone_C")
            vSSS_C1 = CoMaker(0)("SSS_C")
            vMobile_C1 = CoMaker(0)("Mobile_C")
            vEmail_C1 = CoMaker(0)("Email_C")
            If CoMaker(0)("House_C") = "Owned" Then
                vOwned_C1 = True
            ElseIf CoMaker(0)("House_C") = "Free" Then
                vFree_C1 = True
            ElseIf CoMaker(0)("House_C") = "Rented" Then
                vRented_C1 = True
                vRent_C1 = CoMaker(0)("Rent_C")
            End If
            Try
                Using TempPB As New DevExpress.XtraEditors.PictureEdit
                    TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, CreditNumber, "CoMaker1.jpg"))
                    ResizeImages(TempPB.Image.Clone, CoMaker1, 850, 700)
                End Using
            Catch ex As Exception
            End Try
            TotalImageC1 = CoMaker(0)("Attach")
            vRelationship_C1 = CoMaker(0)("Relation")
            vRelationship_C1_ID = CoMaker(0)("Relation_ID")
            vEmployer_C1 = CoMaker(0)("Employer_C")
            vEmpAddress_C1 = CoMaker(0)("EmployerAddress_C")
            vEmpTelephone_C1 = CoMaker(0)("EmployerTelephone_C")
            vPosition_C1 = CoMaker(0)("Position_C")
            If CoMaker(0)("EmploymentStat_C") = "Casual" Then
                vCasual_C1 = True
            ElseIf CoMaker(0)("EmploymentStat_C") = "Temporary" Then
                vTemporary_C1 = True
            ElseIf CoMaker(0)("EmploymentStat_C") = "Permanent" Then
                vPermanent_C1 = True
            End If
            vHired_C1 = CoMaker(0)("Hired_C")
            vYearHired_C1 = CoMaker(0)("YearHired_C")
            vSupervisor_C1 = CoMaker(0)("Supervisor_C")
            vSalary_C1 = CoMaker(0)("Monthly_C")
            dSalary_C1.Value = CoMaker(0)("Ex_NetDisposable")
            vBusinessName_C1 = CoMaker(0)("BusinessName_C")
            vBusinessAddress_C1 = CoMaker(0)("BusinessAddress_C")
            vBusinessTelephone_C1 = CoMaker(0)("BusinessTelephone_C")
            vNatureBusiness_C1 = CoMaker(0)("NatureBusiness_C")
            vYrsOperation_C1 = CoMaker(0)("YrsOperation_C")
            vBusinessIncome_C1 = CoMaker(0)("BusinessIncome_C")
            vNoEmployees_C1 = CoMaker(0)("NoEmployees_C")
            vCapital_C1 = CoMaker(0)("Capital_C")
            vArea_C1 = CoMaker(0)("Area_C")
            vExpiry_C1 = CoMaker(0)("Expiry_C")
            vOutlet_C1 = CoMaker(0)("Outlet_C")
            vOtherIncome_C1 = CoMaker(0)("OtherIncome_C")
            vOtherIncomeD_C1 = CoMaker(0)("OtherIncome_C-Amount")
            Industry_C1.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker1'", CreditNumber)))

            'COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************
            vCreditor_1_C1 = CoMaker(0)("Creditor_1")
            vCreditAddress_1_C1 = CoMaker(0)("CreditAddress_1")
            vCreditGranted_1_C1 = CoMaker(0)("CreditGranted_1")
            vTerm_1_C1 = CoMaker(0)("Term_1")
            vAmountGranted_1_C1 = CoMaker(0)("AmountGranted_1")
            vBalance_1_C1 = CoMaker(0)("Balance_1")
            vCreditPayment_1_C1 = CoMaker(0)("CreditPayment_1")
            vCreditRemarks_1_C1 = CoMaker(0)("CreditRemarks_1")
            vCreditor_2_C1 = CoMaker(0)("Creditor_2")
            vCreditAddress_2_C1 = CoMaker(0)("CreditAddress_2")
            vCreditGranted_2_C1 = CoMaker(0)("CreditGranted_2")
            vTerm_2_C1 = CoMaker(0)("Term_2")
            vAmountGranted_2_C1 = CoMaker(0)("AmountGranted_2")
            vBalance_2_C1 = CoMaker(0)("Balance_2")
            vCreditPayment_2_C1 = CoMaker(0)("CreditPayment_2")
            vCreditRemarks_2_C1 = CoMaker(0)("CreditRemarks_2")
            vBank_1_C1 = CoMaker(0)("Bank_1")
            vBranch_1_C1 = CoMaker(0)("Branch_1")
            vAccountT_1_C1 = CoMaker(0)("AccountT_1")
            vSA_1_C1 = CoMaker(0)("SA_1")
            vAverageBalance_1_C1 = CoMaker(0)("AverageBalance_1")
            vOpened_1_C1 = CoMaker(0)("Opened_1")
            vBank_2_C1 = CoMaker(0)("Bank_2")
            vBranch_2_C1 = CoMaker(0)("Branch_2")
            vAccountT_2_C1 = CoMaker(0)("AccountT_2")
            vSA_2_C1 = CoMaker(0)("SA_2")
            vAverageBalance_2_C1 = CoMaker(0)("AverageBalance_2")
            vOpened_2_C1 = CoMaker(0)("Opened_2")
            vCreditRating_C1 = CoMaker(0)("CreditRating")
            vRec_Remarks_C1 = CoMaker(0)("Rec_Remarks")
            vTitle_C1 = CoMaker(0)("Title")
            vCaseNum_C1 = CoMaker(0)("CaseNum")
            vDateFilled_C1 = CoMaker(0)("DateFilled")
            vCourt_C1 = CoMaker(0)("Court")
            vCaseNature_C1 = CoMaker(0)("CaseNature")
            vAmountInvolved_C1 = CoMaker(0)("AmountInvolved")
            vCaseStatus_C1 = CoMaker(0)("CaseStatus")
            vFindings_C1 = CoMaker(0)("Findings")
            vFindingsStat_C1 = CoMaker(0)("FindingsStat")
            vCACPI_C1 = CoMaker(0)("CACPI")
            vLocation_1_C1 = CoMaker(0)("Location_1")
            vTCT_1_C1 = CoMaker(0)("TCT_1")
            vArea_1_C1 = CoMaker(0)("Area_1")
            vPropertiesRemarks_1_C1 = CoMaker(0)("PropertiesRemarks_1")
            vLocation_2_C1 = CoMaker(0)("Location_2")
            vTCT_2_C1 = CoMaker(0)("TCT_2")
            vArea_2_C1 = CoMaker(0)("Area_2")
            vPropertiesRemarks_2_C1 = CoMaker(0)("PropertiesRemarks_2")
            vVehicle_1_C1 = CoMaker(0)("Vehicle_1")
            vYear_1_C1 = CoMaker(0)("Year_1")
            vWhomAcquired_1_C1 = CoMaker(0)("WhomAcquired_1")
            vVehicleRemarks_1_C1 = CoMaker(0)("VehicleRemarks_1")
            vVehicle_2_C1 = CoMaker(0)("Vehicle_2")
            vYear_2_C1 = CoMaker(0)("Year_2")
            vWhomAcquired_2_C1 = CoMaker(0)("WhomAcquired_2")
            vVehicleRemarks_2_C1 = CoMaker(0)("VehicleRemarks_2")
            vOtherProperties_C1 = CoMaker(0)("OtherProperties")
            vNarrative_C1 = CoMaker(0)("Narrative")
            vC1_C1 = CoMaker(0)("C1")
            vC2_C1 = CoMaker(0)("C2")
            vC3_C1 = CoMaker(0)("C3")
            vC4_C1 = CoMaker(0)("C4")
            vC5_C1 = CoMaker(0)("C5")
            vC6_C1 = CoMaker(0)("C6")
            vC7_C1 = CoMaker(0)("C7")
            vC8_C1 = CoMaker(0)("C8")
            vC9_C1 = CoMaker(0)("C9")
            vEx_TotalDisposable_C1 = CoMaker(0)("Ex_TotalDisposable")
            vEx_Living_C1 = CoMaker(0)("Ex_Living")
            vEx_Clothing_C1 = CoMaker(0)("Ex_Clothing")
            vEx_Education_C1 = CoMaker(0)("Ex_Education")
            vEx_Transportation_C1 = CoMaker(0)("Ex_Transportation")
            vEx_Lights_C1 = CoMaker(0)("Ex_Lights")
            vEx_Insurance_C1 = CoMaker(0)("Ex_Insurance")
            vEx_Amortization_C1 = CoMaker(0)("Ex_Amortization")
            vEx_Miscellaneous_C1 = CoMaker(0)("Ex_Miscellaneous")
            vEx_TotalExpenses_C1 = CoMaker(0)("Ex_TotalExpenses")
            vEx_NetDisposable_C1 = CoMaker(0)("Ex_NetDisposable")
            vEx_TMFI_C1 = CoMaker(0)("Ex_TMFI")
            vEx_TMDI_C1 = CoMaker(0)("Ex_TMDI")
            vEx_Remarks_C1 = CoMaker(0)("Ex_Remarks")
            vPurposeLoan_C1 = CoMaker(0)("PurposeLoan")
            vOthers_C1 = CoMaker(0)("Others")
            'COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************

            If CoMaker.Rows.Count > 1 Then 'COMAKER 2
                btnCM_2.Enabled = True
                ReferenceID_2 = CoMaker(1)("ReferenceID")
                CbxPrefix_C2.Text = CoMaker(1)("Prefix_C")
                TxtFirstN_C2.Text = CoMaker(1)("FirstN_C")
                TxtMiddleN_C2.Text = CoMaker(1)("MiddleN_C")
                TxtLastN_C2.Text = CoMaker(1)("LastN_C")
                cbxSuffix_C2.Text = CoMaker(1)("Suffix_C")

                CbxPrefix_C2.Tag = CoMaker(1)("Prefix_C")
                TxtFirstN_C2.Tag = CoMaker(1)("FirstN_C")
                TxtMiddleN_C2.Tag = CoMaker(1)("MiddleN_C")
                TxtLastN_C2.Tag = CoMaker(1)("LastN_C")
                cbxSuffix_C2.Tag = CoMaker(1)("Suffix_C")

                vPrefix_C2 = CoMaker(1)("Prefix_C")
                vFirstN_C2 = CoMaker(1)("FirstN_C")
                vMiddleN_C2 = CoMaker(1)("MiddleN_C")
                vLastN_C2 = CoMaker(1)("LastN_C")
                vSuffix_C2 = CoMaker(1)("Suffix_C")
                vNoC_C2 = CoMaker(1)("NoC_C")
                vStreetC_C2 = CoMaker(1)("StreetC_C")
                vBarangayC_C2 = CoMaker(1)("BarangayC_C")
                vAddressC_C2 = CoMaker(1)("AddressC_C")
                vNoP_C2 = CoMaker(1)("NoP_C")
                vStreetP_C2 = CoMaker(1)("StreetP_C")
                vBarangayP_C2 = CoMaker(1)("BarangayP_C")
                vAddressP_C2 = CoMaker(1)("AddressP_C")
                vBirth_C2 = CoMaker(1)("Birth_C")
                vPlaceBirth_C2 = CoMaker(1)("PlaceBirth_C")
                If CoMaker(1)("Gender_C") = "Male" Then
                    vMale_C2 = True
                ElseIf CoMaker(1)("Gender_C") = "Female" Then
                    vFemale_C2 = True
                End If
                If CoMaker(1)("Civil_C") = "Single" Then
                    vSingle_C2 = True
                ElseIf CoMaker(1)("Civil_C") = "Married" Then
                    vMarried_C2 = True
                ElseIf CoMaker(1)("Civil_C") = "Separated" Then
                    vSeparated_C2 = True
                ElseIf CoMaker(1)("Civil_C") = "Widowed" Then
                    vWidowed_C2 = True
                End If
                vCitizenship_C2 = CoMaker(1)("Citizenship_C")
                vTIN_C2 = CoMaker(1)("TIN_C")
                vTelephone_C2 = CoMaker(1)("Telephone_C")
                vSSS_C2 = CoMaker(1)("SSS_C")
                vMobile_C2 = CoMaker(1)("Mobile_C")
                vEmail_C2 = CoMaker(1)("Email_C")
                If CoMaker(1)("House_C") = "Owned" Then
                    vOwned_C2 = True
                ElseIf CoMaker(1)("House_C") = "Free" Then
                    vFree_C2 = True
                ElseIf CoMaker(1)("House_C") = "Rented" Then
                    vRented_C2 = True
                    vRent_C2 = CoMaker(1)("Rent_C")
                End If
                Try
                    Using TempPB As New DevExpress.XtraEditors.PictureEdit
                        TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, CreditNumber, "CoMaker2.jpg"))
                        ResizeImages(TempPB.Image.Clone, CoMaker2, 850, 700)
                    End Using
                Catch ex As Exception
                End Try
                TotalImageC2 = CoMaker(1)("Attach")
                vRelationship_C2 = CoMaker(1)("Relation")
                vRelationship_C2_ID = CoMaker(1)("Relation_ID")
                vEmployer_C2 = CoMaker(1)("Employer_C")
                vEmpAddress_C2 = CoMaker(1)("EmployerAddress_C")
                vEmpTelephone_C2 = CoMaker(1)("EmployerTelephone_C")
                vPosition_C2 = CoMaker(1)("Position_C")
                If CoMaker(1)("EmploymentStat_C") = "Casual" Then
                    vCasual_C2 = True
                ElseIf CoMaker(1)("EmploymentStat_C") = "Temporary" Then
                    vTemporary_C2 = True
                ElseIf CoMaker(1)("EmploymentStat_C") = "Permanent" Then
                    vPermanent_C2 = True
                End If
                vHired_C2 = CoMaker(1)("Hired_C")
                vYearHired_C2 = CoMaker(1)("YearHired_C")
                vSupervisor_C2 = CoMaker(1)("Supervisor_C")
                vSalary_C2 = CoMaker(1)("Monthly_C")
                dSalary_C2.Value = CoMaker(1)("Ex_NetDisposable")
                vBusinessName_C2 = CoMaker(1)("BusinessName_C")
                vBusinessAddress_C2 = CoMaker(1)("BusinessAddress_C")
                vBusinessTelephone_C2 = CoMaker(1)("BusinessTelephone_C")
                vNatureBusiness_C2 = CoMaker(1)("NatureBusiness_C")
                vYrsOperation_C2 = CoMaker(1)("YrsOperation_C")
                vBusinessIncome_C2 = CoMaker(1)("BusinessIncome_C")
                vNoEmployees_C2 = CoMaker(1)("NoEmployees_C")
                vCapital_C2 = CoMaker(1)("Capital_C")
                vArea_C2 = CoMaker(1)("Area_C")
                vExpiry_C2 = CoMaker(1)("Expiry_C")
                vOutlet_C2 = CoMaker(1)("Outlet_C")
                vOtherIncome_C2 = CoMaker(1)("OtherIncome_C")
                vOtherIncomeD_C2 = CoMaker(1)("OtherIncome_C-Amount")
                Industry_C2.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker2'", CreditNumber)))

                'COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************
                vCreditor_1_C2 = CoMaker(1)("Creditor_1")
                vCreditAddress_1_C2 = CoMaker(1)("CreditAddress_1")
                vCreditGranted_1_C2 = CoMaker(1)("CreditGranted_1")
                vTerm_1_C2 = CoMaker(1)("Term_1")
                vAmountGranted_1_C2 = CoMaker(1)("AmountGranted_1")
                vBalance_1_C2 = CoMaker(1)("Balance_1")
                vCreditPayment_1_C2 = CoMaker(1)("CreditPayment_1")
                vCreditRemarks_1_C2 = CoMaker(1)("CreditRemarks_1")
                vCreditor_2_C2 = CoMaker(1)("Creditor_2")
                vCreditAddress_2_C2 = CoMaker(1)("CreditAddress_2")
                vCreditGranted_2_C2 = CoMaker(1)("CreditGranted_2")
                vTerm_2_C2 = CoMaker(1)("Term_2")
                vAmountGranted_2_C2 = CoMaker(1)("AmountGranted_2")
                vBalance_2_C2 = CoMaker(1)("Balance_2")
                vCreditPayment_2_C2 = CoMaker(1)("CreditPayment_2")
                vCreditRemarks_2_C2 = CoMaker(1)("CreditRemarks_2")
                vBank_1_C2 = CoMaker(1)("Bank_1")
                vBranch_1_C2 = CoMaker(1)("Branch_1")
                vAccountT_1_C2 = CoMaker(1)("AccountT_1")
                vSA_1_C2 = CoMaker(1)("SA_1")
                vAverageBalance_1_C2 = CoMaker(1)("AverageBalance_1")
                vOpened_1_C2 = CoMaker(1)("Opened_1")
                vBank_2_C2 = CoMaker(1)("Bank_2")
                vBranch_2_C2 = CoMaker(1)("Branch_2")
                vAccountT_2_C2 = CoMaker(1)("AccountT_2")
                vSA_2_C2 = CoMaker(1)("SA_2")
                vAverageBalance_2_C2 = CoMaker(1)("AverageBalance_2")
                vOpened_2_C2 = CoMaker(1)("Opened_2")
                vCreditRating_C2 = CoMaker(1)("CreditRating")
                vRec_Remarks_C2 = CoMaker(1)("Rec_Remarks")
                vTitle_C2 = CoMaker(1)("Title")
                vCaseNum_C2 = CoMaker(1)("CaseNum")
                vDateFilled_C2 = CoMaker(1)("DateFilled")
                vCourt_C2 = CoMaker(1)("Court")
                vCaseNature_C2 = CoMaker(1)("CaseNature")
                vAmountInvolved_C2 = CoMaker(1)("AmountInvolved")
                vCaseStatus_C2 = CoMaker(1)("CaseStatus")
                vFindings_C2 = CoMaker(1)("Findings")
                vFindingsStat_C2 = CoMaker(1)("FindingsStat")
                vCACPI_C2 = CoMaker(1)("CACPI")
                vLocation_1_C2 = CoMaker(1)("Location_1")
                vTCT_1_C2 = CoMaker(1)("TCT_1")
                vArea_1_C2 = CoMaker(1)("Area_1")
                vPropertiesRemarks_1_C2 = CoMaker(1)("PropertiesRemarks_1")
                vLocation_2_C2 = CoMaker(1)("Location_2")
                vTCT_2_C2 = CoMaker(1)("TCT_2")
                vArea_2_C2 = CoMaker(1)("Area_2")
                vPropertiesRemarks_2_C2 = CoMaker(1)("PropertiesRemarks_2")
                vVehicle_1_C2 = CoMaker(1)("Vehicle_1")
                vYear_1_C2 = CoMaker(1)("Year_1")
                vWhomAcquired_1_C2 = CoMaker(1)("WhomAcquired_1")
                vVehicleRemarks_1_C2 = CoMaker(1)("VehicleRemarks_1")
                vVehicle_2_C2 = CoMaker(1)("Vehicle_2")
                vYear_2_C2 = CoMaker(1)("Year_2")
                vWhomAcquired_2_C2 = CoMaker(1)("WhomAcquired_2")
                vVehicleRemarks_2_C2 = CoMaker(1)("VehicleRemarks_2")
                vOtherProperties_C2 = CoMaker(1)("OtherProperties")
                vNarrative_C2 = CoMaker(1)("Narrative")
                vC1_C2 = CoMaker(1)("C1")
                vC2_C2 = CoMaker(1)("C2")
                vC3_C2 = CoMaker(1)("C3")
                vC4_C2 = CoMaker(1)("C4")
                vC5_C2 = CoMaker(1)("C5")
                vC6_C2 = CoMaker(1)("C6")
                vC7_C2 = CoMaker(1)("C7")
                vC8_C2 = CoMaker(1)("C8")
                vC9_C2 = CoMaker(1)("C9")
                vEx_TotalDisposable_C2 = CoMaker(1)("Ex_TotalDisposable")
                vEx_Living_C2 = CoMaker(1)("Ex_Living")
                vEx_Clothing_C2 = CoMaker(1)("Ex_Clothing")
                vEx_Education_C2 = CoMaker(1)("Ex_Education")
                vEx_Transportation_C2 = CoMaker(1)("Ex_Transportation")
                vEx_Lights_C2 = CoMaker(1)("Ex_Lights")
                vEx_Insurance_C2 = CoMaker(1)("Ex_Insurance")
                vEx_Amortization_C2 = CoMaker(1)("Ex_Amortization")
                vEx_Miscellaneous_C2 = CoMaker(1)("Ex_Miscellaneous")
                vEx_TotalExpenses_C2 = CoMaker(1)("Ex_TotalExpenses")
                vEx_NetDisposable_C2 = CoMaker(1)("Ex_NetDisposable")
                vEx_TMFI_C2 = CoMaker(1)("Ex_TMFI")
                vEx_TMDI_C2 = CoMaker(1)("Ex_TMDI")
                vEx_Remarks_C2 = CoMaker(1)("Ex_Remarks")
                vPurposeLoan_C2 = CoMaker(1)("PurposeLoan")
                vOthers_C2 = CoMaker(1)("Others")
                'COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************

                If CoMaker.Rows.Count > 2 Then 'COMAKER 3
                    btnCM_3.Enabled = True
                    ReferenceID_3 = CoMaker(2)("ReferenceID")
                    CbxPrefix_C3.Text = CoMaker(2)("Prefix_C")
                    TxtFirstN_C3.Text = CoMaker(2)("FirstN_C")
                    TxtMiddleN_C3.Text = CoMaker(2)("MiddleN_C")
                    TxtLastN_C3.Text = CoMaker(2)("LastN_C")
                    cbxSuffix_C3.Text = CoMaker(2)("Suffix_C")

                    CbxPrefix_C3.Tag = CoMaker(2)("Prefix_C")
                    TxtFirstN_C3.Tag = CoMaker(2)("FirstN_C")
                    TxtMiddleN_C3.Tag = CoMaker(2)("MiddleN_C")
                    TxtLastN_C3.Tag = CoMaker(2)("LastN_C")
                    cbxSuffix_C3.Tag = CoMaker(2)("Suffix_C")

                    vPrefix_C3 = CoMaker(2)("Prefix_C")
                    vFirstN_C3 = CoMaker(2)("FirstN_C")
                    vMiddleN_C3 = CoMaker(2)("MiddleN_C")
                    vLastN_C3 = CoMaker(2)("LastN_C")
                    vSuffix_C3 = CoMaker(2)("Suffix_C")
                    vNoC_C3 = CoMaker(2)("NoC_C")
                    vStreetC_C3 = CoMaker(2)("StreetC_C")
                    vBarangayC_C3 = CoMaker(2)("BarangayC_C")
                    vAddressC_C3 = CoMaker(2)("AddressC_C")
                    vNoP_C3 = CoMaker(2)("NoP_C")
                    vStreetP_C3 = CoMaker(2)("StreetP_C")
                    vBarangayP_C3 = CoMaker(2)("BarangayP_C")
                    vAddressP_C3 = CoMaker(2)("AddressP_C")
                    vBirth_C3 = CoMaker(2)("Birth_C")
                    vPlaceBirth_C3 = CoMaker(2)("PlaceBirth_C")
                    If CoMaker(2)("Gender_C") = "Male" Then
                        vMale_C3 = True
                    ElseIf CoMaker(2)("Gender_C") = "Female" Then
                        vFemale_C3 = True
                    End If
                    If CoMaker(2)("Civil_C") = "Single" Then
                        vSingle_C3 = True
                    ElseIf CoMaker(2)("Civil_C") = "Married" Then
                        vMarried_C3 = True
                    ElseIf CoMaker(2)("Civil_C") = "Separated" Then
                        vSeparated_C3 = True
                    ElseIf CoMaker(2)("Civil_C") = "Widowed" Then
                        vWidowed_C3 = True
                    End If
                    vCitizenship_C3 = CoMaker(2)("Citizenship_C")
                    vTIN_C3 = CoMaker(2)("TIN_C")
                    vTelephone_C3 = CoMaker(2)("Telephone_C")
                    vSSS_C3 = CoMaker(2)("SSS_C")
                    vMobile_C3 = CoMaker(2)("Mobile_C")
                    vEmail_C3 = CoMaker(2)("Email_C")
                    If CoMaker(2)("House_C") = "Owned" Then
                        vOwned_C3 = True
                    ElseIf CoMaker(2)("House_C") = "Free" Then
                        vFree_C3 = True
                    ElseIf CoMaker(2)("House_C") = "Rented" Then
                        vRented_C3 = True
                        vRent_C3 = CoMaker(2)("Rent_C")
                    End If
                    Try
                        Using TempPB As New DevExpress.XtraEditors.PictureEdit
                            TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, CreditNumber, "CoMaker3.jpg"))
                            ResizeImages(TempPB.Image.Clone, CoMaker3, 850, 700)
                        End Using
                    Catch ex As Exception
                    End Try
                    TotalImageC3 = CoMaker(2)("Attach")
                    vRelationship_C3 = CoMaker(2)("Relation")
                    vRelationship_C3_ID = CoMaker(2)("Relation_ID")
                    vEmployer_C3 = CoMaker(2)("Employer_C")
                    vEmpAddress_C3 = CoMaker(2)("EmployerAddress_C")
                    vEmpTelephone_C3 = CoMaker(2)("EmployerTelephone_C")
                    vPosition_C3 = CoMaker(2)("Position_C")
                    If CoMaker(2)("EmploymentStat_C") = "Casual" Then
                        vCasual_C3 = True
                    ElseIf CoMaker(2)("EmploymentStat_C") = "Temporary" Then
                        vTemporary_C3 = True
                    ElseIf CoMaker(2)("EmploymentStat_C") = "Permanent" Then
                        vPermanent_C3 = True
                    End If
                    vHired_C3 = CoMaker(2)("Hired_C")
                    vYearHired_C3 = CoMaker(2)("YearHired_C")
                    vSupervisor_C3 = CoMaker(2)("Supervisor_C")
                    vSalary_C3 = CoMaker(2)("Monthly_C")
                    dSalary_C3.Value = CoMaker(2)("Ex_NetDisposable")
                    vBusinessName_C3 = CoMaker(2)("BusinessName_C")
                    vBusinessAddress_C3 = CoMaker(2)("BusinessAddress_C")
                    vBusinessTelephone_C3 = CoMaker(2)("BusinessTelephone_C")
                    vNatureBusiness_C3 = CoMaker(2)("NatureBusiness_C")
                    vYrsOperation_C3 = CoMaker(2)("YrsOperation_C")
                    vBusinessIncome_C3 = CoMaker(2)("BusinessIncome_C")
                    vNoEmployees_C3 = CoMaker(2)("NoEmployees_C")
                    vCapital_C3 = CoMaker(2)("Capital_C")
                    vArea_C3 = CoMaker(2)("Area_C")
                    vExpiry_C3 = CoMaker(2)("Expiry_C")
                    vOutlet_C3 = CoMaker(2)("Outlet_C")
                    vOtherIncome_C3 = CoMaker(2)("OtherIncome_C")
                    vOtherIncomeD_C3 = CoMaker(2)("OtherIncome_C-Amount")
                    Industry_C3.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker3'", CreditNumber)))

                    'COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************
                    vCreditor_1_C3 = CoMaker(2)("Creditor_1")
                    vCreditAddress_1_C3 = CoMaker(2)("CreditAddress_1")
                    vCreditGranted_1_C3 = CoMaker(2)("CreditGranted_1")
                    vTerm_1_C3 = CoMaker(2)("Term_1")
                    vAmountGranted_1_C3 = CoMaker(2)("AmountGranted_1")
                    vBalance_1_C3 = CoMaker(2)("Balance_1")
                    vCreditPayment_1_C3 = CoMaker(2)("CreditPayment_1")
                    vCreditRemarks_1_C3 = CoMaker(2)("CreditRemarks_1")
                    vCreditor_2_C3 = CoMaker(2)("Creditor_2")
                    vCreditAddress_2_C3 = CoMaker(2)("CreditAddress_2")
                    vCreditGranted_2_C3 = CoMaker(2)("CreditGranted_2")
                    vTerm_2_C3 = CoMaker(2)("Term_2")
                    vAmountGranted_2_C3 = CoMaker(2)("AmountGranted_2")
                    vBalance_2_C3 = CoMaker(2)("Balance_2")
                    vCreditPayment_2_C3 = CoMaker(2)("CreditPayment_2")
                    vCreditRemarks_2_C3 = CoMaker(2)("CreditRemarks_2")
                    vBank_1_C3 = CoMaker(2)("Bank_1")
                    vBranch_1_C3 = CoMaker(2)("Branch_1")
                    vAccountT_1_C3 = CoMaker(2)("AccountT_1")
                    vSA_1_C3 = CoMaker(2)("SA_1")
                    vAverageBalance_1_C3 = CoMaker(2)("AverageBalance_1")
                    vOpened_1_C3 = CoMaker(2)("Opened_1")
                    vBank_2_C3 = CoMaker(2)("Bank_2")
                    vBranch_2_C3 = CoMaker(2)("Branch_2")
                    vAccountT_2_C3 = CoMaker(2)("AccountT_2")
                    vSA_2_C3 = CoMaker(2)("SA_2")
                    vAverageBalance_2_C3 = CoMaker(2)("AverageBalance_2")
                    vOpened_2_C3 = CoMaker(2)("Opened_2")
                    vCreditRating_C3 = CoMaker(2)("CreditRating")
                    vRec_Remarks_C3 = CoMaker(2)("Rec_Remarks")
                    vTitle_C3 = CoMaker(2)("Title")
                    vCaseNum_C3 = CoMaker(2)("CaseNum")
                    vDateFilled_C3 = CoMaker(2)("DateFilled")
                    vCourt_C3 = CoMaker(2)("Court")
                    vCaseNature_C3 = CoMaker(2)("CaseNature")
                    vAmountInvolved_C3 = CoMaker(2)("AmountInvolved")
                    vCaseStatus_C3 = CoMaker(2)("CaseStatus")
                    vFindings_C3 = CoMaker(2)("Findings")
                    vFindingsStat_C3 = CoMaker(2)("FindingsStat")
                    vCACPI_C3 = CoMaker(2)("CACPI")
                    vLocation_1_C3 = CoMaker(2)("Location_1")
                    vTCT_1_C3 = CoMaker(2)("TCT_1")
                    vArea_1_C3 = CoMaker(2)("Area_1")
                    vPropertiesRemarks_1_C3 = CoMaker(2)("PropertiesRemarks_1")
                    vLocation_2_C3 = CoMaker(2)("Location_2")
                    vTCT_2_C3 = CoMaker(2)("TCT_2")
                    vArea_2_C3 = CoMaker(2)("Area_2")
                    vPropertiesRemarks_2_C3 = CoMaker(2)("PropertiesRemarks_2")
                    vVehicle_1_C3 = CoMaker(2)("Vehicle_1")
                    vYear_1_C3 = CoMaker(2)("Year_1")
                    vWhomAcquired_1_C3 = CoMaker(2)("WhomAcquired_1")
                    vVehicleRemarks_1_C3 = CoMaker(2)("VehicleRemarks_1")
                    vVehicle_2_C3 = CoMaker(2)("Vehicle_2")
                    vYear_2_C3 = CoMaker(2)("Year_2")
                    vWhomAcquired_2_C3 = CoMaker(2)("WhomAcquired_2")
                    vVehicleRemarks_2_C3 = CoMaker(2)("VehicleRemarks_2")
                    vOtherProperties_C3 = CoMaker(2)("OtherProperties")
                    vNarrative_C3 = CoMaker(2)("Narrative")
                    vC1_C3 = CoMaker(2)("C1")
                    vC2_C3 = CoMaker(2)("C2")
                    vC3_C3 = CoMaker(2)("C3")
                    vC4_C3 = CoMaker(2)("C4")
                    vC5_C3 = CoMaker(2)("C5")
                    vC6_C3 = CoMaker(2)("C6")
                    vC7_C3 = CoMaker(2)("C7")
                    vC8_C3 = CoMaker(2)("C8")
                    vC9_C3 = CoMaker(2)("C9")
                    vEx_TotalDisposable_C3 = CoMaker(2)("Ex_TotalDisposable")
                    vEx_Living_C3 = CoMaker(2)("Ex_Living")
                    vEx_Clothing_C3 = CoMaker(2)("Ex_Clothing")
                    vEx_Education_C3 = CoMaker(2)("Ex_Education")
                    vEx_Transportation_C3 = CoMaker(2)("Ex_Transportation")
                    vEx_Lights_C3 = CoMaker(2)("Ex_Lights")
                    vEx_Insurance_C3 = CoMaker(2)("Ex_Insurance")
                    vEx_Amortization_C3 = CoMaker(2)("Ex_Amortization")
                    vEx_Miscellaneous_C3 = CoMaker(2)("Ex_Miscellaneous")
                    vEx_TotalExpenses_C3 = CoMaker(2)("Ex_TotalExpenses")
                    vEx_NetDisposable_C3 = CoMaker(2)("Ex_NetDisposable")
                    vEx_TMFI_C3 = CoMaker(2)("Ex_TMFI")
                    vEx_TMDI_C3 = CoMaker(2)("Ex_TMDI")
                    vEx_Remarks_C3 = CoMaker(2)("Ex_Remarks")
                    vPurposeLoan_C3 = CoMaker(2)("PurposeLoan")
                    vOthers_C3 = CoMaker(2)("Others")
                    'COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************

                    If CoMaker.Rows.Count > 3 Then 'COMAKER 4
                        btnCM_4.Enabled = True
                        ReferenceID_4 = CoMaker(3)("ReferenceID")
                        CbxPrefix_C4.Text = CoMaker(3)("Prefix_C")
                        TxtFirstN_C4.Text = CoMaker(3)("FirstN_C")
                        TxtMiddleN_C4.Text = CoMaker(3)("MiddleN_C")
                        TxtLastN_C4.Text = CoMaker(3)("LastN_C")
                        cbxSuffix_C4.Text = CoMaker(3)("Suffix_C")

                        CbxPrefix_C4.Tag = CoMaker(3)("Prefix_C")
                        TxtFirstN_C4.Tag = CoMaker(3)("FirstN_C")
                        TxtMiddleN_C4.Tag = CoMaker(3)("MiddleN_C")
                        TxtLastN_C4.Tag = CoMaker(3)("LastN_C")
                        cbxSuffix_C4.Tag = CoMaker(3)("Suffix_C")

                        vPrefix_C4 = CoMaker(3)("Prefix_C")
                        vFirstN_C4 = CoMaker(3)("FirstN_C")
                        vMiddleN_C4 = CoMaker(3)("MiddleN_C")
                        vLastN_C4 = CoMaker(3)("LastN_C")
                        vSuffix_C4 = CoMaker(3)("Suffix_C")
                        vNoC_C4 = CoMaker(3)("NoC_C")
                        vStreetC_C4 = CoMaker(3)("StreetC_C")
                        vBarangayC_C4 = CoMaker(3)("BarangayC_C")
                        vAddressC_C4 = CoMaker(3)("AddressC_C")
                        vNoP_C4 = CoMaker(3)("NoP_C")
                        vStreetP_C4 = CoMaker(3)("StreetP_C")
                        vBarangayP_C4 = CoMaker(3)("BarangayP_C")
                        vAddressP_C4 = CoMaker(3)("AddressP_C")
                        vBirth_C4 = CoMaker(3)("Birth_C")
                        vPlaceBirth_C4 = CoMaker(3)("PlaceBirth_C")
                        If CoMaker(3)("Gender_C") = "Male" Then
                            vMale_C4 = True
                        ElseIf CoMaker(3)("Gender_C") = "Female" Then
                            vFemale_C4 = True
                        End If
                        If CoMaker(3)("Civil_C") = "Single" Then
                            vSingle_C4 = True
                        ElseIf CoMaker(3)("Civil_C") = "Married" Then
                            vMarried_C4 = True
                        ElseIf CoMaker(3)("Civil_C") = "Separated" Then
                            vSeparated_C4 = True
                        ElseIf CoMaker(3)("Civil_C") = "Widowed" Then
                            vWidowed_C4 = True
                        End If
                        vCitizenship_C4 = CoMaker(3)("Citizenship_C")
                        vTIN_C4 = CoMaker(3)("TIN_C")
                        vTelephone_C4 = CoMaker(3)("Telephone_C")
                        vSSS_C4 = CoMaker(3)("SSS_C")
                        vMobile_C4 = CoMaker(3)("Mobile_C")
                        vEmail_C4 = CoMaker(3)("Email_C")
                        If CoMaker(3)("House_C") = "Owned" Then
                            vOwned_C4 = True
                        ElseIf CoMaker(3)("House_C") = "Free" Then
                            vFree_C4 = True
                        ElseIf CoMaker(3)("House_C") = "Rented" Then
                            vRented_C4 = True
                            vRent_C4 = CoMaker(3)("Rent_C")
                        End If
                        Try
                            Using TempPB As New DevExpress.XtraEditors.PictureEdit
                                TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, CreditNumber, "CoMaker4.jpg"))
                                ResizeImages(TempPB.Image.Clone, CoMaker4, 850, 700)
                            End Using
                        Catch ex As Exception
                        End Try
                        TotalImageC4 = CoMaker(3)("Attach")
                        vRelationship_C4 = CoMaker(3)("Relation")
                        vRelationship_C4_ID = CoMaker(3)("Relation_ID")
                        vEmployer_C4 = CoMaker(3)("Employer_C")
                        vEmpAddress_C4 = CoMaker(3)("EmployerAddress_C")
                        vEmpTelephone_C4 = CoMaker(3)("EmployerTelephone_C")
                        vPosition_C4 = CoMaker(3)("Position_C")
                        If CoMaker(3)("EmploymentStat_C") = "Casual" Then
                            vCasual_C4 = True
                        ElseIf CoMaker(3)("EmploymentStat_C") = "Temporary" Then
                            vTemporary_C4 = True
                        ElseIf CoMaker(3)("EmploymentStat_C") = "Permanent" Then
                            vPermanent_C4 = True
                        End If
                        vHired_C4 = CoMaker(3)("Hired_C")
                        vYearHired_C4 = CoMaker(3)("YearHired_C")
                        vSupervisor_C4 = CoMaker(3)("Supervisor_C")
                        vSalary_C4 = CoMaker(3)("Monthly_C")
                        dSalary_C4.Value = CoMaker(3)("Ex_NetDisposable")
                        vBusinessName_C4 = CoMaker(3)("BusinessName_C")
                        vBusinessAddress_C4 = CoMaker(3)("BusinessAddress_C")
                        vBusinessTelephone_C4 = CoMaker(3)("BusinessTelephone_C")
                        vNatureBusiness_C4 = CoMaker(3)("NatureBusiness_C")
                        vYrsOperation_C4 = CoMaker(3)("YrsOperation_C")
                        vBusinessIncome_C4 = CoMaker(3)("BusinessIncome_C")
                        vNoEmployees_C4 = CoMaker(3)("NoEmployees_C")
                        vCapital_C4 = CoMaker(3)("Capital_C")
                        vArea_C4 = CoMaker(3)("Area_C")
                        vExpiry_C4 = CoMaker(3)("Expiry_C")
                        vOutlet_C4 = CoMaker(3)("Outlet_C")
                        vOtherIncome_C4 = CoMaker(3)("OtherIncome_C")
                        vOtherIncomeD_C4 = CoMaker(3)("OtherIncome_C-Amount")
                        Industry_C4.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker4'", CreditNumber)))

                        'COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************
                        vCreditor_1_C4 = CoMaker(3)("Creditor_1")
                        vCreditAddress_1_C4 = CoMaker(3)("CreditAddress_1")
                        vCreditGranted_1_C4 = CoMaker(3)("CreditGranted_1")
                        vTerm_1_C4 = CoMaker(3)("Term_1")
                        vAmountGranted_1_C4 = CoMaker(3)("AmountGranted_1")
                        vBalance_1_C4 = CoMaker(3)("Balance_1")
                        vCreditPayment_1_C4 = CoMaker(3)("CreditPayment_1")
                        vCreditRemarks_1_C4 = CoMaker(3)("CreditRemarks_1")
                        vCreditor_2_C4 = CoMaker(3)("Creditor_2")
                        vCreditAddress_2_C4 = CoMaker(3)("CreditAddress_2")
                        vCreditGranted_2_C4 = CoMaker(3)("CreditGranted_2")
                        vTerm_2_C4 = CoMaker(3)("Term_2")
                        vAmountGranted_2_C4 = CoMaker(3)("AmountGranted_2")
                        vBalance_2_C4 = CoMaker(3)("Balance_2")
                        vCreditPayment_2_C4 = CoMaker(3)("CreditPayment_2")
                        vCreditRemarks_2_C4 = CoMaker(3)("CreditRemarks_2")
                        vBank_1_C4 = CoMaker(3)("Bank_1")
                        vBranch_1_C4 = CoMaker(3)("Branch_1")
                        vAccountT_1_C4 = CoMaker(3)("AccountT_1")
                        vSA_1_C4 = CoMaker(3)("SA_1")
                        vAverageBalance_1_C4 = CoMaker(3)("AverageBalance_1")
                        vOpened_1_C4 = CoMaker(3)("Opened_1")
                        vBank_2_C4 = CoMaker(3)("Bank_2")
                        vBranch_2_C4 = CoMaker(3)("Branch_2")
                        vAccountT_2_C4 = CoMaker(3)("AccountT_2")
                        vSA_2_C4 = CoMaker(3)("SA_2")
                        vAverageBalance_2_C4 = CoMaker(3)("AverageBalance_2")
                        vOpened_2_C4 = CoMaker(3)("Opened_2")
                        vCreditRating_C4 = CoMaker(3)("CreditRating")
                        vRec_Remarks_C4 = CoMaker(3)("Rec_Remarks")
                        vTitle_C4 = CoMaker(3)("Title")
                        vCaseNum_C4 = CoMaker(3)("CaseNum")
                        vDateFilled_C4 = CoMaker(3)("DateFilled")
                        vCourt_C4 = CoMaker(3)("Court")
                        vCaseNature_C4 = CoMaker(3)("CaseNature")
                        vAmountInvolved_C4 = CoMaker(3)("AmountInvolved")
                        vCaseStatus_C4 = CoMaker(3)("CaseStatus")
                        vFindings_C4 = CoMaker(3)("Findings")
                        vFindingsStat_C4 = CoMaker(3)("FindingsStat")
                        vCACPI_C4 = CoMaker(3)("CACPI")
                        vLocation_1_C4 = CoMaker(3)("Location_1")
                        vTCT_1_C4 = CoMaker(3)("TCT_1")
                        vArea_1_C4 = CoMaker(3)("Area_1")
                        vPropertiesRemarks_1_C4 = CoMaker(3)("PropertiesRemarks_1")
                        vLocation_2_C4 = CoMaker(3)("Location_2")
                        vTCT_2_C4 = CoMaker(3)("TCT_2")
                        vArea_2_C4 = CoMaker(3)("Area_2")
                        vPropertiesRemarks_2_C4 = CoMaker(3)("PropertiesRemarks_2")
                        vVehicle_1_C4 = CoMaker(3)("Vehicle_1")
                        vYear_1_C4 = CoMaker(3)("Year_1")
                        vWhomAcquired_1_C4 = CoMaker(3)("WhomAcquired_1")
                        vVehicleRemarks_1_C4 = CoMaker(3)("VehicleRemarks_1")
                        vVehicle_2_C4 = CoMaker(3)("Vehicle_2")
                        vYear_2_C4 = CoMaker(3)("Year_2")
                        vWhomAcquired_2_C4 = CoMaker(3)("WhomAcquired_2")
                        vVehicleRemarks_2_C4 = CoMaker(3)("VehicleRemarks_2")
                        vOtherProperties_C4 = CoMaker(3)("OtherProperties")
                        vNarrative_C4 = CoMaker(3)("Narrative")
                        vC1_C4 = CoMaker(3)("C1")
                        vC2_C4 = CoMaker(3)("C2")
                        vC3_C4 = CoMaker(3)("C3")
                        vC4_C4 = CoMaker(3)("C4")
                        vC5_C4 = CoMaker(3)("C5")
                        vC6_C4 = CoMaker(3)("C6")
                        vC7_C4 = CoMaker(3)("C7")
                        vC8_C4 = CoMaker(3)("C8")
                        vC9_C4 = CoMaker(3)("C9")
                        vEx_TotalDisposable_C4 = CoMaker(3)("Ex_TotalDisposable")
                        vEx_Living_C4 = CoMaker(3)("Ex_Living")
                        vEx_Clothing_C4 = CoMaker(3)("Ex_Clothing")
                        vEx_Education_C4 = CoMaker(3)("Ex_Education")
                        vEx_Transportation_C4 = CoMaker(3)("Ex_Transportation")
                        vEx_Lights_C4 = CoMaker(3)("Ex_Lights")
                        vEx_Insurance_C4 = CoMaker(3)("Ex_Insurance")
                        vEx_Amortization_C4 = CoMaker(3)("Ex_Amortization")
                        vEx_Miscellaneous_C4 = CoMaker(3)("Ex_Miscellaneous")
                        vEx_TotalExpenses_C4 = CoMaker(3)("Ex_TotalExpenses")
                        vEx_NetDisposable_C4 = CoMaker(3)("Ex_NetDisposable")
                        vEx_TMFI_C4 = CoMaker(3)("Ex_TMFI")
                        vEx_TMDI_C4 = CoMaker(3)("Ex_TMDI")
                        vEx_Remarks_C4 = CoMaker(3)("Ex_Remarks")
                        vPurposeLoan_C4 = CoMaker(3)("PurposeLoan")
                        vOthers_C4 = CoMaker(3)("Others")
                        'COMAKER CREDIT INVESTIGATION REPORT **********************************************************************************
                    End If
                End If
            End If
        Else
            CoMakerID = ""
        End If
        With GridView5
            cbxSpouse_B.Checked = .GetFocusedRowCellValue("Borrower_S")
            cbxCoMaker1_B.Checked = .GetFocusedRowCellValue("Borrower_C1")
            cbxCoMaker2_B.Checked = .GetFocusedRowCellValue("Borrower_C2")
            cbxCoMaker3_B.Checked = .GetFocusedRowCellValue("Borrower_C3")
            cbxCoMaker4_B.Checked = .GetFocusedRowCellValue("Borrower_C4")
        End With

        '*** I D E N T I F I C A T I O N ***
        Dim BorrowerID_B As DataTable = DataSource(String.Format("SELECT * FROM profile_borrowerid WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE' AND ID_Type = 'B'", BorrowerID))
        If BorrowerID_B.Rows.Count > 0 Then
            GSIS = BorrowerID_B(0)("GSIS")
            PhilHealth = BorrowerID_B(0)("PhilHealth")
            Senior = BorrowerID_B(0)("Senior")
            UMID = BorrowerID_B(0)("UMID")
            SEC = BorrowerID_B(0)("SEC")
            DTI = BorrowerID_B(0)("DTI")
            CDA = BorrowerID_B(0)("CDA")
            Cooperative = BorrowerID_B(0)("Cooperative")
            Drivers = BorrowerID_B(0)("Drivers")
            dDrivers = BorrowerID_B(0)("dDrivers")
            VIN = BorrowerID_B(0)("VIN")
            dVIN = BorrowerID_B(0)("dVIN")
            Passport = BorrowerID_B(0)("Passport")
            dPassport = BorrowerID_B(0)("dPassport")
            PRC = BorrowerID_B(0)("PRC")
            dPRC = BorrowerID_B(0)("dPRC")
            NBI = BorrowerID_B(0)("NBI")
            dNBI = BorrowerID_B(0)("dNBI")
            Police = BorrowerID_B(0)("Police")
            dPolice = BorrowerID_B(0)("dPolice")
            Postal = BorrowerID_B(0)("Postal")
            dPostal = BorrowerID_B(0)("dPostal")
            Barangay = BorrowerID_B(0)("Barangay")
            dBarangay = BorrowerID_B(0)("dBarangay")
            OWWA = BorrowerID_B(0)("OWWA")
            dOWWA = BorrowerID_B(0)("dOWWA")
            OFW = BorrowerID_B(0)("OFW")
            dOFW = BorrowerID_B(0)("dOFW")
            Seaman = BorrowerID_B(0)("Seaman")
            dSeaman = BorrowerID_B(0)("dSeaman")
            PNP = BorrowerID_B(0)("PNP")
            dPNP = BorrowerID_B(0)("dPNP")
            AFP = BorrowerID_B(0)("AFP")
            dAFP = BorrowerID_B(0)("dAFP")
            HDMF = BorrowerID_B(0)("HDMF")
            dHDMF = BorrowerID_B(0)("dHDMF")
            PWD = BorrowerID_B(0)("PWD")
            dPWD = BorrowerID_B(0)("dPWD")
            DSWD = BorrowerID_B(0)("DSWD")
            dDSWD = BorrowerID_B(0)("dDSWD")
            ACR = BorrowerID_B(0)("ACR")
            dACR = BorrowerID_B(0)("dACR")
            DTI_Business = BorrowerID_B(0)("DTI_Business")
            dDTI_Business = BorrowerID_B(0)("dDTI_Business")
            IBP = BorrowerID_B(0)("IBP")
            dIBP = BorrowerID_B(0)("dIBP")
            FireArms = BorrowerID_B(0)("FireArms")
            dFireArms = BorrowerID_B(0)("dFireArms")
            Government = BorrowerID_B(0)("Government")
            dGovernment = BorrowerID_B(0)("dGovernment")
            Diplomat = BorrowerID_B(0)("Diplomat")
            dDiplomat = BorrowerID_B(0)("dDiplomat")
            National = BorrowerID_B(0)("National")
            dNational = BorrowerID_B(0)("dNational")
            Work = BorrowerID_B(0)("Work")
            dWork = BorrowerID_B(0)("dWork")
            GOCC = BorrowerID_B(0)("GOCC")
            dGOCC = BorrowerID_B(0)("dGOCC")
            PLRA = BorrowerID_B(0)("PLRA")
            dPLRA = BorrowerID_B(0)("dPLRA")
            Major = BorrowerID_B(0)("Major")
            dMajor = BorrowerID_B(0)("dMajor")
            Media = BorrowerID_B(0)("Media")
            dMedia = BorrowerID_B(0)("dMedia")
            Student = BorrowerID_B(0)("Student")
            dStudent = BorrowerID_B(0)("dStudent")
            SIRV = BorrowerID_B(0)("SIRV")
            dSIRV = BorrowerID_B(0)("dSIRV")
        End If

        With GridView5
            txtNoC_B.Text = .GetFocusedRowCellValue("NoC_B")
            txtNoC_B.Tag = .GetFocusedRowCellValue("NoC_B")

            txtStreetC_B.Text = .GetFocusedRowCellValue("StreetC_B")
            txtStreetC_B.Tag = .GetFocusedRowCellValue("StreetC_B")

            txtBarangayC_B.Text = .GetFocusedRowCellValue("BarangayC_B")
            txtBarangayC_B.Tag = .GetFocusedRowCellValue("BarangayC_B")

            cbxAddressC_B.Text = .GetFocusedRowCellValue("AddressC_B")
            cbxAddressC_B.Tag = .GetFocusedRowCellValue("AddressC_B")

            cbxResidence.Text = .GetFocusedRowCellValue("Residence_B")
            cbxResidence.Tag = .GetFocusedRowCellValue("Residence_B")

            If .GetFocusedRowCellValue("House_B") = "Owned" Then
                cbxOwned_B.Checked = True
                dRent_B.Value = 0
            ElseIf .GetFocusedRowCellValue("House_B") = "Free" Then
                cbxFree_B.Checked = True
                dRent_B.Value = 0
            ElseIf .GetFocusedRowCellValue("House_B") = "Rented" Then
                cbxRented_B.Checked = True
                dRent_B.Value = .GetFocusedRowCellValue("Rent_B")
            End If
            cbxOwned_B.Tag = .GetFocusedRowCellValue("House_B")
            cbxFree_B.Tag = .GetFocusedRowCellValue("House_B")
            dRent_B.Tag = .GetFocusedRowCellValue("Rent_B")
            cbxRented_B.Tag = .GetFocusedRowCellValue("House_B")

            txtConfirmed.Text = .GetFocusedRowCellValue("AsConfirmed")
            txtConfirmed.Tag = .GetFocusedRowCellValue("AsConfirmed")

            txtLengthStay.Text = .GetFocusedRowCellValue("LenghtOfStay")
            txtLengthStay.Tag = .GetFocusedRowCellValue("LenghtOfStay")

            cbxNeighborhood.Text = .GetFocusedRowCellValue("Neighborhood")
            cbxNeighborhood.Tag = .GetFocusedRowCellValue("Neighborhood")

            If .GetFocusedRowCellValue("Birth_B") = "" Then
                DtpBirth_B.CustomFormat = ""
            Else
                DtpBirth_B.CustomFormat = "MMMM dd, yyyy"
                DtpBirth_B.Value = .GetFocusedRowCellValue("Birth_B")
            End If
            DtpBirth_B.Tag = .GetFocusedRowCellValue("Birth_B")

            If .GetFocusedRowCellValue("Civil_B") = "Single" Then
                cbxSingle_B.Checked = True
            ElseIf .GetFocusedRowCellValue("Civil_B") = "Married" Then
                cbxMarried_B.Checked = True
            ElseIf .GetFocusedRowCellValue("Civil_B") = "Separated" Then
                cbxSeparated_B.Checked = True
            ElseIf .GetFocusedRowCellValue("Civil_B") = "Widowed" Then
                cbxWidowed_B.Checked = True
            End If
            cbxSingle_B.Tag = .GetFocusedRowCellValue("Civil_B")
            cbxMarried_B.Tag = .GetFocusedRowCellValue("Civil_B")
            cbxSeparated_B.Tag = .GetFocusedRowCellValue("Civil_B")
            cbxWidowed_B.Tag = .GetFocusedRowCellValue("Civil_B")

            cbxIncludeSpouseBusiness.Checked = .GetFocusedRowCellValue("IncludeSpouseBusiness")
            cbxIncludeC1.Checked = .GetFocusedRowCellValue("IncludeC1")
            cbxIncludeC2.Checked = .GetFocusedRowCellValue("IncludeC2")
            cbxIncludeC3.Checked = .GetFocusedRowCellValue("IncludeC3")
            cbxIncludeC4.Checked = .GetFocusedRowCellValue("IncludeC4")

            Try
                Dim TempPB As New DevExpress.XtraEditors.PictureEdit
                TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, .GetFocusedRowCellValue("branch_code"), txtCINumber.Text, "Borrower.jpg"))
                If IO.File.Exists(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, .GetFocusedRowCellValue("branch_code"), txtCINumber.Text, "Borrower.jpg")) Then
                    txtPath_B.Text = "Borrower.jpg"
                Else
                    txtPath_B.Text = ""
                End If
                ResizeImages(TempPB.Image.Clone, pb_B, 850, 700)
                TempPB.Dispose()
            Catch ex As Exception
                pb_B.Image = DefaultImage.Image.Clone
            End Try

            '**DEPENDENT
            CbxPrefix_1.Text = .GetFocusedRowCellValue("Prefix_D1")
            CbxPrefix_1.Tag = .GetFocusedRowCellValue("Prefix_D1")

            TxtFirstN_1.Text = .GetFocusedRowCellValue("FirstN_D1")
            TxtFirstN_1.Tag = .GetFocusedRowCellValue("FirstN_D1")

            TxtMiddleN_1.Text = .GetFocusedRowCellValue("MiddleN_D1")
            TxtMiddleN_1.Tag = .GetFocusedRowCellValue("MiddleN_D1")

            TxtLastN_1.Text = .GetFocusedRowCellValue("LastN_D1")
            TxtLastN_1.Tag = .GetFocusedRowCellValue("LastN_D1")

            cbxSuffix_1.Text = .GetFocusedRowCellValue("Suffix_D1")
            cbxSuffix_1.Tag = .GetFocusedRowCellValue("Suffix_D1")

            iAge_D1.Value = .GetFocusedRowCellValue("Age_D1")
            iAge_D1.Tag = .GetFocusedRowCellValue("Age_D1")

            txtGrade_1.Text = .GetFocusedRowCellValue("Grade_D1")
            txtGrade_1.Tag = .GetFocusedRowCellValue("Grade_D1")

            txtSchool_1.Text = .GetFocusedRowCellValue("School_D1")
            txtSchool_1.Tag = .GetFocusedRowCellValue("School_D1")

            txtSchoolAddress_1.Text = .GetFocusedRowCellValue("SchoolAddress_D1")
            txtSchoolAddress_1.Tag = .GetFocusedRowCellValue("SchoolAddress_D1")

            CbxPrefix_2.Text = .GetFocusedRowCellValue("Prefix_D2")
            CbxPrefix_2.Tag = .GetFocusedRowCellValue("Prefix_D2")

            TxtFirstN_2.Text = .GetFocusedRowCellValue("FirstN_D2")
            TxtFirstN_2.Tag = .GetFocusedRowCellValue("FirstN_D2")

            TxtMiddleN_2.Text = .GetFocusedRowCellValue("MiddleN_D2")
            TxtMiddleN_2.Tag = .GetFocusedRowCellValue("MiddleN_D2")

            TxtLastN_2.Text = .GetFocusedRowCellValue("LastN_D2")
            TxtLastN_2.Tag = .GetFocusedRowCellValue("LastN_D2")

            cbxSuffix_2.Text = .GetFocusedRowCellValue("Suffix_D2")
            cbxSuffix_2.Tag = .GetFocusedRowCellValue("Suffix_D2")

            iAge_D2.Value = .GetFocusedRowCellValue("Age_D2")
            iAge_D2.Tag = .GetFocusedRowCellValue("Age_D2")

            txtGrade_2.Text = .GetFocusedRowCellValue("Grade_D2")
            txtGrade_2.Tag = .GetFocusedRowCellValue("Grade_D2")

            txtSchool_2.Text = .GetFocusedRowCellValue("School_D2")
            txtSchool_2.Tag = .GetFocusedRowCellValue("School_D2")

            txtSchoolAddress_2.Text = .GetFocusedRowCellValue("SchoolAddress_D2")
            txtSchoolAddress_2.Tag = .GetFocusedRowCellValue("SchoolAddress_D2")

            CbxPrefix_3.Text = .GetFocusedRowCellValue("Prefix_D3")
            CbxPrefix_3.Tag = .GetFocusedRowCellValue("Prefix_D3")

            TxtFirstN_3.Text = .GetFocusedRowCellValue("FirstN_D3")
            TxtFirstN_3.Tag = .GetFocusedRowCellValue("FirstN_D3")

            TxtMiddleN_3.Text = .GetFocusedRowCellValue("MiddleN_D3")
            TxtMiddleN_3.Tag = .GetFocusedRowCellValue("MiddleN_D3")

            TxtLastN_3.Text = .GetFocusedRowCellValue("LastN_D3")
            TxtLastN_3.Tag = .GetFocusedRowCellValue("LastN_D3")

            cbxSuffix_3.Text = .GetFocusedRowCellValue("Suffix_D3")
            cbxSuffix_3.Tag = .GetFocusedRowCellValue("Suffix_D3")

            iAge_D3.Value = .GetFocusedRowCellValue("Age_D3")
            iAge_D3.Tag = .GetFocusedRowCellValue("Age_D3")

            txtGrade_3.Text = .GetFocusedRowCellValue("Grade_D3")
            txtGrade_3.Tag = .GetFocusedRowCellValue("Grade_D3")

            txtSchool_3.Text = .GetFocusedRowCellValue("School_D3")
            txtSchool_3.Tag = .GetFocusedRowCellValue("School_D3")

            txtSchoolAddress_3.Text = .GetFocusedRowCellValue("SchoolAddress_D3")
            txtSchoolAddress_3.Tag = .GetFocusedRowCellValue("SchoolAddress_D3")

            CbxPrefix_4.Text = .GetFocusedRowCellValue("Prefix_D4")
            CbxPrefix_4.Tag = .GetFocusedRowCellValue("Prefix_D4")

            TxtFirstN_4.Text = .GetFocusedRowCellValue("FirstN_D4")
            TxtFirstN_4.Tag = .GetFocusedRowCellValue("FirstN_D4")

            TxtMiddleN_4.Text = .GetFocusedRowCellValue("MiddleN_D4")
            TxtMiddleN_4.Tag = .GetFocusedRowCellValue("MiddleN_D4")

            TxtLastN_4.Text = .GetFocusedRowCellValue("LastN_D4")
            TxtLastN_4.Tag = .GetFocusedRowCellValue("LastN_D4")

            cbxSuffix_4.Text = .GetFocusedRowCellValue("Suffix_D4")
            cbxSuffix_4.Tag = .GetFocusedRowCellValue("Suffix_D4")

            iAge_D4.Value = .GetFocusedRowCellValue("Age_D4")
            iAge_D4.Tag = .GetFocusedRowCellValue("Age_D4")

            txtGrade_4.Text = .GetFocusedRowCellValue("Grade_D4")
            txtGrade_4.Tag = .GetFocusedRowCellValue("Grade_D4")

            txtSchool_4.Text = .GetFocusedRowCellValue("School_D4")
            txtSchool_4.Tag = .GetFocusedRowCellValue("School_D4")

            txtSchoolAddress_4.Text = .GetFocusedRowCellValue("SchoolAddress_D4")
            txtSchoolAddress_4.Tag = .GetFocusedRowCellValue("SchoolAddress_D4")
            '**DEPENDENT

            cbxEmployer_B.Text = .GetFocusedRowCellValue("Employer_B")
            cbxEmployer_B.Tag = .GetFocusedRowCellValue("Employer_B")

            txtEmployerAddress_B.Text = .GetFocusedRowCellValue("EmployerAddress_B")
            txtEmployerAddress_B.Tag = .GetFocusedRowCellValue("EmployerAddress_B")

            If .GetFocusedRowCellValue("Hired_B") = "" Then
                dtpHired_B.CustomFormat = ""
            Else
                dtpHired_B.CustomFormat = "MMM. dd, yyyy"
                dtpHired_B.Value = .GetFocusedRowCellValue("Hired_B")
            End If
            dtpHired_B.Tag = .GetFocusedRowCellValue("Hired_B")
            cbxYearHired.Checked = .GetFocusedRowCellValue("YearHired")

            If .GetFocusedRowCellValue("EmploymentStat_B") = "Casual" Then
                cbxCasual_B.Checked = True
            ElseIf .GetFocusedRowCellValue("EmploymentStat_B") = "Temporary" Then
                cbxTemporary_B.Checked = True
            ElseIf .GetFocusedRowCellValue("EmploymentStat_B") = "Permanent" Then
                cbxPermanent_B.Checked = True
            End If
            cbxCasual_B.Tag = .GetFocusedRowCellValue("EmploymentStat_B")
            cbxTemporary_B.Tag = .GetFocusedRowCellValue("EmploymentStat_B")
            cbxPermanent_B.Tag = .GetFocusedRowCellValue("EmploymentStat_B")

            cbxPosition_B.Text = .GetFocusedRowCellValue("Position_B")
            cbxPosition_B.Tag = .GetFocusedRowCellValue("Position_B")

            dMonthly_B.Value = .GetFocusedRowCellValue("Monthly_B")
            dMonthly_B.Tag = .GetFocusedRowCellValue("Monthly_B")

            txtBusinessName_B.Text = .GetFocusedRowCellValue("BusinessName_B")
            txtBusinessName_B.Tag = .GetFocusedRowCellValue("BusinessName_B")

            txtBusinessAddress_B.Text = .GetFocusedRowCellValue("BusinessAddress_B")
            txtBusinessAddress_B.Tag = .GetFocusedRowCellValue("BusinessAddress_B")

            If .GetFocusedRowCellValue("BusinessStarted") = "" Then
                dtpBusinessStarted.CustomFormat = ""
            Else
                dtpBusinessStarted.CustomFormat = "MMM. dd, yyyy"
                dtpBusinessStarted.Value = .GetFocusedRowCellValue("BusinessStarted")
            End If
            dtpBusinessStarted.Tag = .GetFocusedRowCellValue("BusinessStarted")

            cbxBusinessNature.Text = .GetFocusedRowCellValue("NatureBusiness_B")
            cbxBusinessNature.Tag = .GetFocusedRowCellValue("NatureBusiness_B")

            cbxNatureBusiness_B2.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'Borrower'", .GetFocusedRowCellValue("Credit Number"))))

            dCapital_B.Value = .GetFocusedRowCellValue("Capital_B")
            dCapital_B.Tag = .GetFocusedRowCellValue("Capital_B")

            iNoEmployees_B.Value = .GetFocusedRowCellValue("NoEmployees_B")
            iNoEmployees_B.Tag = .GetFocusedRowCellValue("NoEmployees_B")

            dBusinessStock.Value = .GetFocusedRowCellValue("BusinessStock")
            dBusinessStock.Tag = .GetFocusedRowCellValue("BusinessStock")

            txtBusinessVehicle.Text = .GetFocusedRowCellValue("BusinessVehicle")
            txtBusinessVehicle.Tag = .GetFocusedRowCellValue("BusinessVehicle")

            dBusinessIncome_B.Value = .GetFocusedRowCellValue("BusinessIncome_B")
            dBusinessIncome_B.Tag = .GetFocusedRowCellValue("BusinessIncome_B")

            txtBusinessPermit.Text = .GetFocusedRowCellValue("BusinessPermit")
            txtBusinessPermit.Tag = .GetFocusedRowCellValue("BusinessPermit")

            txtOtherIncome_B.Text = .GetFocusedRowCellValue("OtherIncome_B")
            txtOtherIncome_B.Tag = .GetFocusedRowCellValue("OtherIncome_B")

            dOtherIncome_B.Value = .GetFocusedRowCellValue("OtherIncome_B_Amount")
            dOtherIncome_B.Tag = .GetFocusedRowCellValue("OtherIncome_B_Amount")

            dCapitalP.Value = .GetFocusedRowCellValue("CapitalP")
            dCapitalP.Tag = .GetFocusedRowCellValue("CapitalP")

            dFuelMaintenanceP.Value = .GetFocusedRowCellValue("FuelMaintenanceP")
            dFuelMaintenanceP.Tag = .GetFocusedRowCellValue("FuelMaintenanceP")

            dUtilitiesP.Value = .GetFocusedRowCellValue("UtilitiesP")
            dUtilitiesP.Tag = .GetFocusedRowCellValue("UtilitiesP")

            dSalariesWagesP.Value = .GetFocusedRowCellValue("SalariesWagesP")
            dSalariesWagesP.Tag = .GetFocusedRowCellValue("SalariesWagesP")

            dBMiscellaneousP.Value = .GetFocusedRowCellValue("BMiscellaneousP")
            dBMiscellaneousP.Tag = .GetFocusedRowCellValue("BMiscellaneousP")

            dBOthersP.Value = .GetFocusedRowCellValue("BOthersP")
            dBOthersP.Tag = .GetFocusedRowCellValue("BOthersP")

            txtCreditor_1.Text = .GetFocusedRowCellValue("Creditor_1")
            txtCreditor_1.Tag = .GetFocusedRowCellValue("Creditor_1")

            txtCreditAddress_1.Text = .GetFocusedRowCellValue("CreditAddress_1")
            txtCreditAddress_1.Tag = .GetFocusedRowCellValue("CreditAddress_1")

            If .GetFocusedRowCellValue("CreditGranted_1") = "" Then
                dtpCreditGranted_1.CustomFormat = ""
            Else
                dtpCreditGranted_1.CustomFormat = "MMM. dd, yyyy"
                dtpCreditGranted_1.Value = .GetFocusedRowCellValue("CreditGranted_1")
            End If
            dtpCreditGranted_1.Tag = .GetFocusedRowCellValue("CreditGranted_1")

            iTerm_1.Value = .GetFocusedRowCellValue("Term_1")
            iTerm_1.Tag = .GetFocusedRowCellValue("Term_1")

            dAmountGranted_1.Value = .GetFocusedRowCellValue("AmountGranted_1")
            dAmountGranted_1.Tag = .GetFocusedRowCellValue("AmountGranted_1")

            dBalance_1.Value = .GetFocusedRowCellValue("Balance_1")
            dBalance_1.Tag = .GetFocusedRowCellValue("Balance_1")

            dCreditPayment_1.Value = .GetFocusedRowCellValue("CreditPayment_1")
            dCreditPayment_1.Tag = .GetFocusedRowCellValue("CreditPayment_1")

            txtCreditRemarks_1.Text = .GetFocusedRowCellValue("CreditRemarks_1")
            txtCreditRemarks_1.Tag = .GetFocusedRowCellValue("CreditRemarks_1")

            txtCreditor_2.Text = .GetFocusedRowCellValue("Creditor_2")
            txtCreditor_2.Tag = .GetFocusedRowCellValue("Creditor_2")

            txtCreditAddress_2.Text = .GetFocusedRowCellValue("CreditAddress_2")
            txtCreditAddress_2.Tag = .GetFocusedRowCellValue("CreditAddress_2")

            If .GetFocusedRowCellValue("CreditGranted_2") = "" Then
                dtpCreditGranted_2.CustomFormat = ""
            Else
                dtpCreditGranted_2.CustomFormat = "MMM. dd, yyyy"
                dtpCreditGranted_2.Value = .GetFocusedRowCellValue("CreditGranted_2")
            End If
            dtpCreditGranted_2.Tag = .GetFocusedRowCellValue("CreditGranted_2")

            iTerm_2.Value = .GetFocusedRowCellValue("Term_2")
            iTerm_2.Tag = .GetFocusedRowCellValue("Term_2")

            dAmountGranted_2.Value = .GetFocusedRowCellValue("AmountGranted_2")
            dAmountGranted_2.Tag = .GetFocusedRowCellValue("AmountGranted_2")

            dBalance_2.Value = .GetFocusedRowCellValue("Balance_2")
            dBalance_2.Tag = .GetFocusedRowCellValue("Balance_2")

            dCreditPayment_2.Value = .GetFocusedRowCellValue("CreditPayment_2")
            dCreditPayment_2.Tag = .GetFocusedRowCellValue("CreditPayment_2")

            txtCreditRemarks_2.Text = .GetFocusedRowCellValue("CreditRemarks_2")
            txtCreditRemarks_2.Tag = .GetFocusedRowCellValue("CreditRemarks_2")

            txtBank_1.Text = .GetFocusedRowCellValue("Bank_1")
            txtBank_1.Tag = .GetFocusedRowCellValue("Bank_1")

            txtBranch_1.Text = .GetFocusedRowCellValue("Branch_1")
            txtBranch_1.Tag = .GetFocusedRowCellValue("Branch_1")

            If .GetFocusedRowCellValue("AccountT_1") = "SA" Then
                cbxSA_1.Checked = True
            ElseIf .GetFocusedRowCellValue("AccountT_1") = "CA" Then
                cbxCA_1.Checked = True
            End If
            cbxSA_1.Tag = .GetFocusedRowCellValue("AccountT_1")
            cbxCA_1.Tag = .GetFocusedRowCellValue("AccountT_1")
            txtSA_1.Text = .GetFocusedRowCellValue("SA_1")
            txtSA_1.Tag = .GetFocusedRowCellValue("SA_1")

            dAverageBalance_1.Value = .GetFocusedRowCellValue("AverageBalance_1")
            dAverageBalance_1.Tag = .GetFocusedRowCellValue("AverageBalance_1")

            txtOpened_1.Text = .GetFocusedRowCellValue("Opened_1")
            txtOpened_1.Tag = .GetFocusedRowCellValue("Opened_1")

            txtBank_2.Text = .GetFocusedRowCellValue("Bank_2")
            txtBank_2.Tag = .GetFocusedRowCellValue("Bank_2")

            txtBranch_2.Text = .GetFocusedRowCellValue("Branch_2")
            txtBranch_2.Tag = .GetFocusedRowCellValue("Branch_2")

            If .GetFocusedRowCellValue("AccountT_2") = "SA" Then
                cbxSA_2.Checked = True
            ElseIf .GetFocusedRowCellValue("AccountT_2") = "CA" Then
                cbxCA_2.Checked = True
            End If
            cbxSA_2.Tag = .GetFocusedRowCellValue("AccountT_2")
            cbxCA_2.Tag = .GetFocusedRowCellValue("AccountT_2")
            txtSA_2.Text = .GetFocusedRowCellValue("SA_2")
            txtSA_2.Tag = .GetFocusedRowCellValue("SA_2")

            dAverageBalance_2.Value = .GetFocusedRowCellValue("AverageBalance_2")
            dAverageBalance_2.Tag = .GetFocusedRowCellValue("AverageBalance_2")

            txtOpened_2.Text = .GetFocusedRowCellValue("Opened_2")
            txtOpened_2.Tag = .GetFocusedRowCellValue("Opened_2")

            If .GetFocusedRowCellValue("CreditRating") = "GOOD" Then
                cbxGood.Checked = True
            ElseIf .GetFocusedRowCellValue("CreditRating") = "FAIR" Then
                cbxFair.Checked = True
            ElseIf .GetFocusedRowCellValue("CreditRating") = "POOR" Then
                cbxPoor.Checked = True
            End If
            cbxGood.Tag = .GetFocusedRowCellValue("CreditRating")
            cbxFair.Tag = .GetFocusedRowCellValue("CreditRating")
            cbxPoor.Tag = .GetFocusedRowCellValue("CreditRating")

            If .GetFocusedRowCellValue("RecommendationFor") = "APPROVAL" Then
                cbxApproval.Checked = True
            ElseIf .GetFocusedRowCellValue("RecommendationFor") = "DISAPPROVAL" Then
                cbxDisapproval.Checked = True
            End If
            cbxApproval.Tag = .GetFocusedRowCellValue("RecommendationFor")
            cbxDisapproval.Tag = .GetFocusedRowCellValue("RecommendationFor")

            dApprovedAmount.Value = .GetFocusedRowCellValue("Rec_ApprovedAmount")
            dApprovedAmount.Tag = .GetFocusedRowCellValue("Rec_ApprovedAmount")

            iApprovedTerms.Value = .GetFocusedRowCellValue("Rec_ApprovedTerms")
            iApprovedTerms.Tag = .GetFocusedRowCellValue("Rec_ApprovedTerms")

            dApprovedRate.Value = .GetFocusedRowCellValue("Rec_ApprovedRate")
            dApprovedRate.Tag = .GetFocusedRowCellValue("Rec_ApprovedRate")

            cbxPDC.Checked = .GetFocusedRowCellValue("Rec_PDC")
            cbxPDC.Tag = .GetFocusedRowCellValue("Rec_PDC")

            cbxNoPDC.Checked = .GetFocusedRowCellValue("Rec_NoPDC")
            cbxNoPDC.Tag = .GetFocusedRowCellValue("Rec_NoPDC")

            rRecommendation.Text = .GetFocusedRowCellValue("Rec_Remarks")
            rRecommendation.Tag = .GetFocusedRowCellValue("Rec_Remarks")

            txtTitle.Text = .GetFocusedRowCellValue("Title")
            txtTitle.Tag = .GetFocusedRowCellValue("Title")

            txtCaseNum.Text = .GetFocusedRowCellValue("CaseNum")
            txtCaseNum.Tag = .GetFocusedRowCellValue("CaseNum")

            If .GetFocusedRowCellValue("DateFilled") = "" Then
                dtpDateFilled.CustomFormat = ""
            Else
                dtpDateFilled.CustomFormat = "MMM. dd, yyyy"
                dtpDateFilled.Value = .GetFocusedRowCellValue("DateFilled")
            End If
            dtpDateFilled.Tag = .GetFocusedRowCellValue("DateFilled")

            cbxCourt.Text = .GetFocusedRowCellValue("Court")
            cbxCourt.Tag = .GetFocusedRowCellValue("Court")

            cbxCaseNature.Text = .GetFocusedRowCellValue("CaseNature")
            cbxCaseNature.Tag = .GetFocusedRowCellValue("CaseNature")

            dAmountInvolved.Value = .GetFocusedRowCellValue("AmountInvolved")
            dAmountInvolved.Tag = .GetFocusedRowCellValue("AmountInvolved")

            cbxCaseStatus.Text = .GetFocusedRowCellValue("CaseStatus")
            cbxCaseStatus.Tag = .GetFocusedRowCellValue("CaseStatus")

            txtFindings.Text = .GetFocusedRowCellValue("Findings")
            txtFindings.Tag = .GetFocusedRowCellValue("Findings")

            If .GetFocusedRowCellValue("FindingsStat") = "Positive" Then
                cbxPositive.Checked = True
            ElseIf .GetFocusedRowCellValue("FindingsStat") = "Negative" Then
                cbxNegative.Checked = True
            ElseIf .GetFocusedRowCellValue("FindingsStat") = "Unestablished" Then
                cbxUnestablished.Checked = True
            End If
            cbxPositive.Tag = .GetFocusedRowCellValue("FindingsStat")
            cbxNegative.Tag = .GetFocusedRowCellValue("FindingsStat")
            cbxUnestablished.Tag = .GetFocusedRowCellValue("FindingsStat")

            txtCACPI.Text = .GetFocusedRowCellValue("CACPI")
            txtCACPI.Tag = .GetFocusedRowCellValue("CACPI")

            txtLocation_1.Text = .GetFocusedRowCellValue("Location_1")
            txtLocation_1.Tag = .GetFocusedRowCellValue("Location_1")

            txtTCT_1.Text = .GetFocusedRowCellValue("TCT_1")
            txtTCT_1.Tag = .GetFocusedRowCellValue("TCT_1")

            dArea_1.Value = .GetFocusedRowCellValue("Area_1")
            dArea_1.Tag = .GetFocusedRowCellValue("Area_1")

            txtPropertiesRemarks_1.Text = .GetFocusedRowCellValue("PropertiesRemarks_1")
            txtPropertiesRemarks_1.Tag = .GetFocusedRowCellValue("PropertiesRemarks_1")

            txtLocation_2.Text = .GetFocusedRowCellValue("Location_2")
            txtLocation_2.Tag = .GetFocusedRowCellValue("Location_2")

            txtTCT_2.Text = .GetFocusedRowCellValue("TCT_2")
            txtTCT_2.Tag = .GetFocusedRowCellValue("TCT_2")

            dArea_2.Value = .GetFocusedRowCellValue("Area_2")
            dArea_2.Tag = .GetFocusedRowCellValue("Area_2")

            txtPropertiesRemarks_2.Text = .GetFocusedRowCellValue("PropertiesRemarks_2")
            txtPropertiesRemarks_2.Tag = .GetFocusedRowCellValue("PropertiesRemarks_2")

            txtVehicle_1.Text = .GetFocusedRowCellValue("Vehicle_1")
            txtVehicle_1.Tag = .GetFocusedRowCellValue("Vehicle_1")

            dtpYear_1.Text = .GetFocusedRowCellValue("Year_1")
            dtpYear_1.Tag = .GetFocusedRowCellValue("Year_1")

            txtWhomAcquired_1.Text = .GetFocusedRowCellValue("WhomAcquired_1")
            txtWhomAcquired_1.Tag = .GetFocusedRowCellValue("WhomAcquired_1")

            txtVehicleRemarks_1.Text = .GetFocusedRowCellValue("VehicleRemarks_1")
            txtVehicleRemarks_1.Tag = .GetFocusedRowCellValue("VehicleRemarks_1")

            txtVehicle_2.Text = .GetFocusedRowCellValue("Vehicle_2")
            txtVehicle_2.Tag = .GetFocusedRowCellValue("Vehicle_2")

            dtpYear_2.Text = .GetFocusedRowCellValue("Year_2")
            dtpYear_2.Tag = .GetFocusedRowCellValue("Year_2")

            txtWhomAcquired_2.Text = .GetFocusedRowCellValue("WhomAcquired_2")
            txtWhomAcquired_2.Tag = .GetFocusedRowCellValue("WhomAcquired_2")

            txtVehicleRemarks_2.Text = .GetFocusedRowCellValue("VehicleRemarks_2")
            txtVehicleRemarks_2.Tag = .GetFocusedRowCellValue("VehicleRemarks_2")

            txtOtherProperties.Text = .GetFocusedRowCellValue("OtherProperties")
            txtOtherProperties.Tag = .GetFocusedRowCellValue("OtherProperties")

            rNarrative.Text = .GetFocusedRowCellValue("Narrative")
            rNarrative.Tag = .GetFocusedRowCellValue("Narrative")

            txtC1.Text = .GetFocusedRowCellValue("C1")
            txtC1.Tag = .GetFocusedRowCellValue("C1")

            txtC2.Text = .GetFocusedRowCellValue("C2")
            txtC2.Tag = .GetFocusedRowCellValue("C2")

            txtC3.Text = .GetFocusedRowCellValue("C3")
            txtC3.Tag = .GetFocusedRowCellValue("C3")

            txtC4.Text = .GetFocusedRowCellValue("C4")
            txtC4.Tag = .GetFocusedRowCellValue("C4")

            txtC5.Text = .GetFocusedRowCellValue("C5")
            txtC5.Tag = .GetFocusedRowCellValue("C5")

            txtC6.Text = .GetFocusedRowCellValue("C6")
            txtC6.Tag = .GetFocusedRowCellValue("C6")

            txtC7.Text = .GetFocusedRowCellValue("C7")
            txtC7.Tag = .GetFocusedRowCellValue("C7")

            txtC8.Text = .GetFocusedRowCellValue("C8")
            txtC8.Tag = .GetFocusedRowCellValue("C8")

            txtC9.Text = .GetFocusedRowCellValue("C9")
            txtC9.Tag = .GetFocusedRowCellValue("C9")

            dTotalDisposable.Value = .GetFocusedRowCellValue("Ex_TotalDisposable")
            dTotalDisposable.Tag = .GetFocusedRowCellValue("Ex_TotalDisposable")

            dLiving.Value = .GetFocusedRowCellValue("Ex_Living")
            dLiving.Tag = .GetFocusedRowCellValue("Ex_Living")

            dClothing.Value = .GetFocusedRowCellValue("Ex_Clothing")
            dClothing.Tag = .GetFocusedRowCellValue("Ex_Clothing")

            dEducation.Value = .GetFocusedRowCellValue("Ex_Education")
            dEducation.Tag = .GetFocusedRowCellValue("Ex_Education")

            dTransportation.Value = .GetFocusedRowCellValue("Ex_Transportation")
            dTransportation.Tag = .GetFocusedRowCellValue("Ex_Transportation")

            dLighths.Value = .GetFocusedRowCellValue("Ex_Lights")
            dLighths.Tag = .GetFocusedRowCellValue("Ex_Lights")

            dInsurance.Value = .GetFocusedRowCellValue("Ex_Insurance")
            dInsurance.Tag = .GetFocusedRowCellValue("Ex_Insurance")

            dAmortization.Value = .GetFocusedRowCellValue("Ex_Amortization")
            dAmortization.Tag = .GetFocusedRowCellValue("Ex_Amortization")

            dMiscellaneous.Value = .GetFocusedRowCellValue("Ex_Miscellaneous")
            dMiscellaneous.Tag = .GetFocusedRowCellValue("Ex_Miscellaneous")

            dTotalExpenses.Value = .GetFocusedRowCellValue("Ex_TotalExpenses")
            dTotalExpenses.Tag = .GetFocusedRowCellValue("Ex_TotalExpenses")

            dNetDisposable.Value = .GetFocusedRowCellValue("Ex_NetDisposable")
            dNetDisposable.Tag = .GetFocusedRowCellValue("Ex_NetDisposable")

            dTMFI.Value = .GetFocusedRowCellValue("Ex_TMFI")
            dTMFI.Tag = .GetFocusedRowCellValue("Ex_TMFI")

            dTMDI.Value = .GetFocusedRowCellValue("Ex_TMDI")
            dTMDI.Tag = .GetFocusedRowCellValue("Ex_TMDI")

            txtExpenseRemarks.Text = .GetFocusedRowCellValue("Ex_Remarks")
            txtExpenseRemarks.Tag = .GetFocusedRowCellValue("Ex_Remarks")

            rPurposeLoan.Text = .GetFocusedRowCellValue("PurposeLoan")
            rPurposeLoan.Tag = .GetFocusedRowCellValue("PurposeLoan")

            rOthers.Text = .GetFocusedRowCellValue("Others")
            rOthers.Tag = .GetFocusedRowCellValue("Others")

            Try
                Dim TempPB As New DevExpress.XtraEditors.PictureEdit
                TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, .GetFocusedRowCellValue("branch_code"), txtCINumber.Text, "Sketch.jpg"))
                ResizeImages(TempPB.Image.Clone, pbSketch, 850, 700)
                TempPB.Dispose()
            Catch ex As Exception
                pbSketch.Image = DefaultMap.Image.Clone
            End Try

            Mortgage = .GetFocusedRowCellValue("LoanType")
            Collateral = .GetFocusedRowCellValue("Collateral")
            Product = .GetFocusedRowCellValue("Product")
            ProductID = .GetFocusedRowCellValue("ProductID")
            ApplicationDate = .GetFocusedRowCellValue("ApplicationDate")
            TotalAppraised = .GetFocusedRowCellValue("TotalAppraised")
            RecommendedLoan = .GetFocusedRowCellValue("Loanable")
            AmountApplied = .GetFocusedRowCellValue("Amount Applied")
            Terms = .GetFocusedRowCellValue("ApplicationTerms")
            Interest = .GetFocusedRowCellValue("ApplicationInterest")

            BM_AmountApplied = .GetFocusedRowCellValue("BM_Amount")
            BM_Terms = .GetFocusedRowCellValue("BM_Terms")
            BM_Interest = .GetFocusedRowCellValue("BM_Interest")

            Draft_Status = .GetFocusedRowCellValue("status").ToUpper
            Status = .GetFocusedRowCellValue("ci_status").ToUpper

            TotalImage = .GetFocusedRowCellValue("Attach")
            TotalImage_Approval = .GetFocusedRowCellValue("Attach_Approval")
        End With

        PanelEx10.Enabled = False
        PanelEx2.Enabled = False
        PanelEx4.Enabled = False
        PanelEx5.Enabled = False
        PanelEx6.Enabled = False
        PanelEx7.Enabled = False
        SuperTabControl1.SelectedTabIndex = 0
        btnSave.Enabled = False
        btnSave_F.Enabled = False

        ApplicationStatus_V2 = GridView5.GetFocusedRowCellValue("Application Status")
        ChangeCollateral = GridView5.GetFocusedRowCellValue("ChangeCollateral")

        Dim DT As DataTable
        If GridView5.GetFocusedRowCellValue("LoanType").ToUpper = "CHATTEL MORTGAGE" Then
            DT = DataSource(String.Format("SELECT * FROM (SELECT A.appraise_num AS 'ID', A.CollateralNumber AS 'Col_ID', ROW_NUMBER() OVER() AS 'No', (SELECT CONCAT(C.Make, ' ', C.`Type`, ' Plate Number ', C.PlateNum) FROM collateral_ve C WHERE C.CollateralNumber = A.CollateralNumber AND C.CINumber = '{1}') AS 'Collateral', A.market_value AS 'Market Value', A.appraised_value AS 'AppraisedValue', A.Loanable_Value AS 'LoanableValue', A.Loanable_Percent AS 'LoanPercent', asset_number AS 'AssetNumber', AppraiseSellingPrice 'SellingPrice' FROM appraise_ve A WHERE A.`status` = 'ACTIVE' AND A.appraise = 'Credit Investigation' AND A.credit_number = '{0}' AND (SELECT CINumber FROM collateral_ve WHERE CollateralNumber = A.CollateralNumber AND `status` = 'ACTIVE') = '{1}' ORDER BY ID DESC) A GROUP BY Col_ID;", CreditNumber, txtCINumber.Text))
            GridControl1.DataSource = DT
            If DT.Rows.Count > 0 Then
                'If GridView5.GetFocusedRowCellValue("Application Status") = "BOOKED" Or GridView5.GetFocusedRowCellValue("Application Status") = "CLOSED" Then
                '    btnVehicleReappraise.Visible = False
                '    btnVehicleReappraise.Enabled = False
                'Else
                '    btnVehicleReappraise.Visible = True
                '    btnVehicleReappraise.Enabled = True
                'End If
                btnVehicleReappraise.Visible = True
                btnVehicleReappraise.Enabled = True
                btnModifyVehicle.Enabled = True
                btnPrintVehicle.Enabled = True
                If ChangeCollateral Then
                    btnVehicleAppraisal.Enabled = True
                End If
            Else
                btnVehicleAppraisal.Enabled = True
                btnModifyVehicle.Enabled = False
                btnPrintVehicle.Enabled = False
            End If
        ElseIf GridView5.GetFocusedRowCellValue("LoanType").ToUpper = "REAL ESTATE MORTGAGE" Then
            DT = DataSource(String.Format("SELECT * FROM (SELECT A.appraise_num AS 'ID', A.CollateralNumber AS 'Col_ID', ROW_NUMBER() OVER() AS 'No', (SELECT CONCAT(C.TCT, ' of the Registry of  ', A.registry_deeds) FROM collateral_re C WHERE C.CollateralNumber = A.CollateralNumber AND C.CINumber = '{1}') AS 'Collateral', FORMAT(A.market_value,2) AS 'Market Value', FORMAT(A.appraised_value,2) AS 'AppraisedValue', FORMAT(A.Loanable_Value,2) AS 'LoanableValue', FORMAT(A.Loanable_Percent,2) AS 'LoanPercent', A.Coordinates AS 'Coordinates', asset_number AS 'AssetNumber', AppraiseSellingPrice 'SellingPrice' FROM appraise_re A WHERE A.`status` = 'ACTIVE' AND A.appraise = 'Credit Investigation' AND A.credit_number = '{0}' AND (SELECT CINumber FROM collateral_re WHERE CollateralNumber = A.CollateralNumber AND `status` = 'ACTIVE') = '{1}' ORDER BY ID DESC) A GROUP BY Col_ID;", CreditNumber, txtCINumber.Text))
            GridControl2.DataSource = DT
            If DT.Rows.Count > 0 Then
                'If GridView5.GetFocusedRowCellValue("Application Status") = "BOOKED" Or GridView5.GetFocusedRowCellValue("Application Status") = "CLOSED" Then
                '    btnRealEstateReappraise.Visible = False
                '    btnRealEstateReappraise.Enabled = False
                'Else
                '    btnRealEstateReappraise.Visible = True
                '    btnRealEstateReappraise.Enabled = True
                'End If
                btnRealEstateReappraise.Visible = True
                btnRealEstateReappraise.Enabled = True
                btnModifyRealEstate.Enabled = True
                btnPrintRealEstate.Enabled = True
                If ChangeCollateral Then
                    btnRealEstate.Enabled = True
                End If
            Else
                btnRealEstate.Enabled = True
                btnModifyRealEstate.Enabled = False
                btnPrintRealEstate.Enabled = False
            End If
        Else
            btnRealEstate.Enabled = False
            btnVehicleAppraisal.Enabled = False
        End If

        If GridView5.GetFocusedRowCellValue("ci_status") = "PENDING" Or GridView5.GetFocusedRowCellValue("status") = "DRAFT" Then
            btnModify.Enabled = True
        Else
            btnModify.Enabled = False
        End If
        If GridView5.GetFocusedRowCellValue("status") = "DELETED" Or GridView5.GetFocusedRowCellValue("status") = "CANCELLED" Or GridView5.GetFocusedRowCellValue("status") = "DISAPPROVED" Then
            btnModify.Enabled = False
        End If
        If (User_Type = "ADMIN" Or ComparePosition({"REGIONAL MANAGER", "BRANCH MANAGER", "OPERATIONS MANAGER", "MICROFINANCE LOAN MANAGER", "OFFICER-IN-CHARGE", "OFFICE SUPERVISOR", "ASSISTANT BRANCH MANAGER"}, False)) And (GridView5.GetFocusedRowCellValue("ci_status") = "PENDING" Or GridView5.GetFocusedRowCellValue("ci_status") = "CHECKED") And GridView5.GetFocusedRowCellValue("status") = "ACTIVE" Then
            If GridView5.GetFocusedRowCellValue("ci_status") = "CHECKED" Then
                If ChangeCollateral Then
                    btnCheckBM.Enabled = True
                    btnEmailCrecom.Enabled = False
                    btnApproveCI.Enabled = False
                Else
                    btnCheckBM.Enabled = False
                    If GridView5.GetFocusedRowCellValue("BranchID_Source") = Branch_ID Then
                        btnEmailCrecom.Enabled = True
                        btnApproveCI.Enabled = True
                    End If
                End If
            ElseIf GridView5.GetFocusedRowCellValue("ci_status") = "PENDING" Then
                btnCheckBM.Enabled = True
                If GridView5.GetFocusedRowCellValue("BranchID_Source") = Branch_ID Then
                    btnEmailCrecom.Enabled = True
                End If
                btnEmailCrecom.Text = "Send Review"
            End If
        Else
            btnApproveCI.Enabled = False
            btnEmailCrecom.Enabled = False
            btnEmailCrecom.Text = "Send &Email"
            btnCheckBM.Enabled = False
        End If
        If GridView5.GetFocusedRowCellValue("ApproveStatus") = "For ReApprove" Or GridView5.GetFocusedRowCellValue("ApproveStatus") = "For Special" Then
            If GridView5.GetFocusedRowCellValue("BranchID_Source") = Branch_ID Then
                btnApproveCI.Enabled = True
                btnEmailCrecom.Enabled = True
            End If
        End If
        Cursor = Cursors.Default
    End Sub

    Private Sub CbxDisplay_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbxDisplay.SelectedIndexChanged
        If cbxDisplay.SelectedIndex = 0 Then
            dtpFrom.Value = Date.Now
            dtpFrom.Enabled = False
            dtpFrom.CustomFormat = "MMMM dd, yyyy"

            dtpTo.Value = Date.Now
            dtpTo.Enabled = False
            dtpTo.CustomFormat = "MMMM dd, yyyy"
        ElseIf cbxDisplay.SelectedIndex = 1 Then
            Dim today As Date = Date.Today
            Dim dayDiff As Integer = today.DayOfWeek - DayOfWeek.Monday
            Dim monday As Date = today.AddDays(-dayDiff)

            dtpFrom.Value = monday
            dtpFrom.Enabled = False
            dtpFrom.CustomFormat = "MMMM dd, yyyy"

            dtpTo.Value = monday.AddDays(6)
            dtpTo.Enabled = False
            dtpTo.CustomFormat = "MMMM dd, yyyy"
        ElseIf cbxDisplay.SelectedIndex = 2 Then
            dtpFrom.Value = DateValue(Format(Date.Now, "yyyy-MM-01"))
            dtpFrom.Enabled = False
            dtpFrom.CustomFormat = "MMMM dd, yyyy"

            dtpTo.Value = DateValue(Format(Date.Now, String.Format("yyyy-MM-{0}", Date.DaysInMonth(Format(Date.Now, "yyyy"), Format(Date.Now, "MM")))))
            dtpTo.Enabled = False
            dtpTo.CustomFormat = "MMMM dd, yyyy"
        ElseIf cbxDisplay.SelectedIndex = 3 Then
            dtpFrom.Value = DateValue(Format(Date.Now, "yyyy-01-01"))
            dtpFrom.Enabled = False
            dtpFrom.CustomFormat = "MMMM dd, yyyy"

            dtpTo.Value = DateValue(Format(Date.Now, "yyyy-12-31"))
            dtpTo.Enabled = False
            dtpTo.CustomFormat = "MMMM dd, yyyy"
        ElseIf cbxDisplay.SelectedIndex = 4 Then
            dtpFrom.Enabled = True
            dtpFrom.CustomFormat = "MMMM dd, yyyy"

            dtpTo.Enabled = True
            dtpTo.CustomFormat = "MMMM dd, yyyy"
        End If
    End Sub

    Private Sub DtpFrom_Leave(sender As Object, e As EventArgs) Handles dtpFrom.Leave
        dtpTo.MinDate = dtpFrom.Value
    End Sub

    Private Sub CbxAll_CheckedChanged(sender As Object, e As EventArgs) Handles cbxAll.CheckedChanged
        If cbxAll.Checked Then
            cbxDisplay.SelectedIndex = -1
            cbxDisplay.Enabled = False
            dtpFrom.Enabled = False
            dtpFrom.CustomFormat = ""
            dtpTo.Enabled = False
            dtpTo.CustomFormat = ""
        Else
            cbxDisplay.SelectedIndex = 0
            cbxDisplay.Enabled = True
            dtpFrom.CustomFormat = "MMMM dd, yyyy"
            dtpTo.CustomFormat = "MMMM dd, yyyy"
        End If
    End Sub

    Private Sub BtnSearch_Click(sender As Object, e As EventArgs) Handles btnSearch.Click
        If FirstLoad Then
            Exit Sub
        End If

        LoadData()
    End Sub

    Private Sub BtnModify_Click(sender As Object, e As EventArgs) Handles btnModify.Click
        If vUpdate Then
        Else
            MsgBox(mBox_Update, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        If MsgBoxYes(mModify) = MsgBoxResult.Yes Then
            cbxApplication.Enabled = False
            dtpDate.Enabled = False
            If Draft_Status = "DRAFT" Then
                btnSave.Text = "Update Draft"
                btnSave_F.Text = "&Save"
                btnSave.Enabled = True
            Else
                btnSave.Enabled = False
                btnSave_F.Text = "Update"
            End If
            btnSave_F.Enabled = True
            btnModify.Enabled = False
            btnDelete.Enabled = True

            PanelEx10.Enabled = True
            PanelEx2.Enabled = True
            PanelEx4.Enabled = True
            PanelEx5.Enabled = True
            PanelEx6.Enabled = True
            PanelEx7.Enabled = True
            'GridControl1.Enabled = True
            'GridControl2.Enabled = True
            If GridView1.RowCount > 0 Then
                btnVehicleAppraisal.Enabled = True
                btnModifyVehicle.Enabled = True
                btnPrintVehicle.Enabled = True
            ElseIf Mortgage = "CHATTEL MORTGAGE" Then 'And (Draft_Status = "DRAFT" Or Draft_Status = "UPDATE DRAFT") Then
                btnVehicleAppraisal.Enabled = True
                btnModifyVehicle.Enabled = False
                btnPrintVehicle.Enabled = False
            End If
            If GridView2.RowCount > 0 Then
                btnRealEstate.Enabled = True
                btnModifyRealEstate.Enabled = True
                btnPrintRealEstate.Enabled = True
            ElseIf Mortgage = "REAL ESTATE MORTGAGE" Then 'And (Draft_Status = "DRAFT" Or Draft_Status = "UPDATE DRAFT") Then
                btnRealEstate.Enabled = True
                btnModifyRealEstate.Enabled = False
                btnPrintRealEstate.Enabled = False
            End If
        End If
    End Sub

    Private Sub BtnDelete_Click(sender As Object, e As EventArgs) Handles btnDelete.Click
        If vDelete Then
        Else
            Dim Creator_Draft As Integer = DataObject(String.Format("SELECT COUNT(ID) FROM credit_investigation WHERE `status` = 'DRAFT' AND user_code = '{0}' AND CINumber = '{1}';", User_Code, txtCINumber.Text))
            If Creator_Draft > 0 Then
            Else
                MsgBox(mBox_Delete, MsgBoxStyle.Information, "Info")
                Exit Sub
            End If
        End If

        If MsgBoxYes(mDelete) = MsgBoxResult.Yes Then
            Dim Reason As String 'Reason for change
            If FrmReason.ShowDialog = DialogResult.OK Then
                Reason = FrmReason.txtReason.Text
            Else
                Exit Sub
            End If

            Cursor = Cursors.WaitCursor
            DataObject(String.Format("UPDATE credit_investigation SET `status` = 'DELETED' WHERE CINumber = '{0}'; UPDATE credit_application SET CI_status = 'PENDING' WHERE CreditNumber = '{1}';", txtCINumber.Text, CreditNumber))
            Logs("Credit Investigation", "Cancel", Reason, String.Format("Cancel Credit Investigation with CI Number {0}", txtCINumber.Text), "", "", CreditNumber)
            LoadData()
            Clear()
            Cursor = Cursors.Default
            MsgBox("Successfully Cancelled", MsgBoxStyle.Information, "Info")
        End If
    End Sub

    Private Sub BtnAttach_Click(sender As Object, e As EventArgs) Handles btnAttach.Click
        Dim Attach As New FrmAttachFileV2
        With Attach
            .FolderName = "Attachment"
            .Type = "CI Attachment"
            .TotalImage = TotalImage
            .CINumber = txtCINumber.Text
            .ID = txtCINumber.Text
            Dim Result = .ShowDialog
            If Result = DialogResult.OK Then
                TotalImage = .TotalImage
            ElseIf Result = DialogResult.Yes Then
                TotalImage = .TotalImage
            End If
            .Dispose()
        End With
    End Sub

    Private Sub Generate_Appraisal(Show As Boolean, FName As String, Col_ID As String, ID As String)
        If GridView1.RowCount > 0 Then
            Dim DT As DataTable = DataSource(String.Format("SELECT A.appraise_by, (SELECT CONCAT(IF(First_Name = '','',CONCAT(First_Name, ' ')), IF(Middle_Name = '','',CONCAT(Middle_Name, ' ')), Last_Name) FROM employee_setup WHERE ID = A.appraise_by) AS 'Appraised By', C.Make, C.`Type`, C.Model, C.Series, C.PlateNum, C.Transmission, C.Fuel, C.BodyColor, C.`Year`, C.EngineNum, C.ChassisNum, C.RegistryCert, C.ORNum, C.GrossWeight, C.RimHoles, C.MileAge, C.MileAgeType, C.DateRegistered, C.LTO, A.appraise_num AS 'Appraise Number', DATE_FORMAT(A.appraise_date,'%b %d, %Y') AS 'Date', A.`Engine`, A.Engine_R AS 'Engine Remarks', A.Steering, A.Steering_R AS 'Steering Remarks', A.Clutch, A.Clutch_R AS 'Clutch Remarks', A.HeadLight AS 'Head Light', A.HeadLight_R AS 'Head Light Remarks', A.SignalLight AS 'Signal Light', A.SignalLight_R AS 'Signal Light Remarks', A.Shock, A.Shock_R AS 'Shock Remarks', A.Underchassis, A.Underchassis_R AS 'Underchassis Remarks', A.Upholstery, A.Upholstery_R AS 'Upholstery Remarks', A.TempGauge AS 'Temp Gauge', A.TempGauge_R AS 'Temp Gauge Remarks', A.Odometer AS 'Odometer', A.Odometer_R AS 'Odometer Remarks', A.Transmission AS 'Transmission', A.Transmission_R AS 'Transmission Remarks', A.Tires, A.Tires_R AS 'Tires Remarks', A.Acceleration, A.Acceleration_R AS 'Acceleration Remarks', A.ParkLight AS 'Park Light', A.ParkLight_R AS 'Park Light Remarks', A.Horn, A.Horn_R AS 'Horn Remarks', A.Chassis,A.Chassis_R AS 'Chassis Remarks', A.FrontBumper AS 'Front Bumper', A.FrontBumper_R AS 'Front Bumper Remarks', A.Ampheres, A.Ampheres_R AS 'Ampheres Remarks', A.Fuel, A.Fuel_R AS 'Fuel Remarks', A.Starter, A.Starter_R AS 'Starter Remarks', A.Differential, A.Differential_R AS 'Differential Remarks', A.Brakes, A.Brakes_R AS 'Brakes Remarks', A.Wiper, A.Wiper_R AS 'Wiper Remarks', A.`BackUp` AS 'Back Up', A.BackUp_R AS 'Back Up Remarks', A.SideMirror AS 'Side Mirror', A.SideMirror_R AS 'Side Mirror Remarks', A.BodyFlooring AS 'Body Flooring', A.BodyFlooring_R AS 'Body Flooring Remarks', A.RearBumper AS 'Rear Bumper', A.RearBumper_R AS 'Rear Bumper Remarks', A.OilPressure AS 'Oil Pressure', A.OilPressure_R AS 'Oil Pressure Remarks', A.Speedometer, A.Speedometer_R AS 'Speedometer Remarks', A.BodyPaint AS 'Body Paint', A.BodyPaint_R AS 'Body Paint Remarks', A.Remarks AS 'Appraiser Remarks', A.Source, A.telephone_num AS 'Telephone Num', FORMAT(A.selling_price,2) AS 'Selling Price', FORMAT(A.market_value,2) AS 'Market Value', FORMAT(A.appraised_value,2) AS 'Appraised Value', Employee(A.appraise_by) AS 'Appraised By', FORMAT(A.loanable_value,2) AS 'Loanable Value', FORMAT(A.loanable_percent,2) AS 'Loanable Percent', Attach_2, A.Attach FROM collateral_ve C LEFT JOIN appraise_ve A ON C.CollateralNumber = A.CollateralNumber WHERE C.CollateralNumber = '{0}' AND A.appraise = 'Credit Investigation' AND A.appraise_num = '{1}';", Col_ID, ID))
            Dim Report As New RptAppraisalVE
            With Report
                .Name = DT(0)("Appraise Number")
                .lblDate.Text = DT(0)("Date")
                .lblAppaiseNum.Text = DT(0)("Appraise Number")
                .lblAppraisedBy.Text = DT(0)("Appraised By")
                .lblAppraiseFor.Text = "Credit Investigation"
                .lblMake.Text = DT(0)("Make")
                .lblType.Text = DT(0)("Type")
                .lblEngine.Text = DT(0)("Model") & " " & DT(0)("Series")
                .lblPlateNumber.Text = DT(0)("PlateNum")
                .lblTransmission.Text = DT(0)("Transmission")
                .lblGasoline.Text = DT(0)("Fuel")
                .lblBodyColor.Text = DT(0)("BodyColor")
                .lblYear.Text = DT(0)("Year")
                .lblMotorNumber.Text = DT(0)("EngineNum")
                .lblSerialNumber.Text = DT(0)("ChassisNum")
                .lblRegCertNumber.Text = DT(0)("RegistryCert")
                .lblORNumber.Text = DT(0)("ORNum")
                .lblGrossWeight.Text = DT(0)("GrossWeight") & " kgs"
                .lblRim.Text = DT(0)("RimHoles")
                .lblMileAge.Text = DT(0)("MileAge") & " " & DT(0)("MileAgeType")
                .cbxEngine_G.Checked = If(DT(0)("Engine") = "G", True, False)
                .cbxEngine_F.Checked = If(DT(0)("Engine") = "F", True, False)
                .cbxEngine_P.Checked = If(DT(0)("Engine") = "P", True, False)
                .txtEngine.Text = DT(0)("Engine Remarks")
                .cbxSteering_G.Checked = If(DT(0)("Steering") = "G", True, False)
                .cbxSteering_F.Checked = If(DT(0)("Steering") = "F", True, False)
                .cbxSteering_P.Checked = If(DT(0)("Steering") = "P", True, False)
                .txtSteering.Text = DT(0)("Steering Remarks")
                .cbxClutch_G.Checked = If(DT(0)("Clutch") = "G", True, False)
                .cbxClutch_F.Checked = If(DT(0)("Clutch") = "F", True, False)
                .cbxClutch_P.Checked = If(DT(0)("Clutch") = "P", True, False)
                .txtClutch.Text = DT(0)("Clutch Remarks")
                .cbxHeadLight_G.Checked = If(DT(0)("Head Light") = "G", True, False)
                .cbxHeadLight_F.Checked = If(DT(0)("Head Light") = "F", True, False)
                .cbxHeadLight_P.Checked = If(DT(0)("Head Light") = "P", True, False)
                .txtHeadLight.Text = DT(0)("Head Light Remarks")
                .cbxSignalLight_G.Checked = If(DT(0)("Signal Light") = "G", True, False)
                .cbxSignalLight_F.Checked = If(DT(0)("Signal Light") = "F", True, False)
                .cbxSignalLight_P.Checked = If(DT(0)("Signal Light") = "P", True, False)
                .txtSignalLight.Text = DT(0)("Signal Light Remarks")
                .cbxShock_G.Checked = If(DT(0)("Shock") = "G", True, False)
                .cbxShock_F.Checked = If(DT(0)("Shock") = "F", True, False)
                .cbxShock_P.Checked = If(DT(0)("Shock") = "P", True, False)
                .txtShock.Text = DT(0)("Shock Remarks")
                .cbxUnderchassis_G.Checked = If(DT(0)("Underchassis") = "G", True, False)
                .cbxUnderchassis_F.Checked = If(DT(0)("Underchassis") = "F", True, False)
                .cbxUnderchassis_P.Checked = If(DT(0)("Underchassis") = "P", True, False)
                .txtUnderchassis.Text = DT(0)("Underchassis Remarks")
                .cbxUpholstery_G.Checked = If(DT(0)("Upholstery") = "G", True, False)
                .cbxUpholstery_F.Checked = If(DT(0)("Upholstery") = "F", True, False)
                .cbxUpholstery_P.Checked = If(DT(0)("Upholstery") = "P", True, False)
                .txtUpholstery.Text = DT(0)("Upholstery Remarks")
                .cbxTempGauge_G.Checked = If(DT(0)("Temp Gauge") = "G", True, False)
                .cbxTempGauge_F.Checked = If(DT(0)("Temp Gauge") = "F", True, False)
                .cbxTempGauge_P.Checked = If(DT(0)("Temp Gauge") = "P", True, False)
                .txtTempGauge.Text = DT(0)("Temp Gauge Remarks")
                .cbxOdometer_G.Checked = If(DT(0)("Odometer") = "G", True, False)
                .cbxOdometer_F.Checked = If(DT(0)("Odometer") = "F", True, False)
                .cbxOdometer_P.Checked = If(DT(0)("Odometer") = "P", True, False)
                .txtOdometer.Text = DT(0)("Odometer Remarks")
                .cbxTransmission_G.Checked = If(DT(0)("Transmission1") = "G", True, False)
                .cbxTransmission_F.Checked = If(DT(0)("Transmission1") = "F", True, False)
                .cbxTransmission_P.Checked = If(DT(0)("Transmission1") = "P", True, False)
                .txtTransmission.Text = DT(0)("Transmission Remarks")
                .dTires.Text = DT(0)("Tires") & "%"
                .txtTires.Text = DT(0)("Tires Remarks")
                .cbxAcceleration_G.Checked = If(DT(0)("Acceleration") = "G", True, False)
                .cbxAcceleration_F.Checked = If(DT(0)("Acceleration") = "F", True, False)
                .cbxAcceleration_P.Checked = If(DT(0)("Acceleration") = "P", True, False)
                .txtAcceleration.Text = DT(0)("Acceleration Remarks")
                .cbxParkLight_G.Checked = If(DT(0)("Park Light") = "G", True, False)
                .cbxParkLight_F.Checked = If(DT(0)("Park Light") = "F", True, False)
                .cbxParkLight_P.Checked = If(DT(0)("Park Light") = "P", True, False)
                .txtParkLight.Text = DT(0)("Park Light Remarks")
                .cbxHorn_G.Checked = If(DT(0)("Horn") = "G", True, False)
                .cbxHorn_F.Checked = If(DT(0)("Horn") = "F", True, False)
                .cbxHorn_P.Checked = If(DT(0)("Horn") = "P", True, False)
                .txtHorn.Text = DT(0)("Horn Remarks")
                .cbxChassis_G.Checked = If(DT(0)("Chassis") = "G", True, False)
                .cbxChassis_F.Checked = If(DT(0)("Chassis") = "F", True, False)
                .cbxChassis_P.Checked = If(DT(0)("Chassis") = "P", True, False)
                .txtChassis.Text = DT(0)("Chassis Remarks")
                .cbxFrontBumper_G.Checked = If(DT(0)("Front Bumper") = "G", True, False)
                .cbxFrontBumper_F.Checked = If(DT(0)("Front Bumper") = "F", True, False)
                .cbxFrontBumper_P.Checked = If(DT(0)("Front Bumper") = "P", True, False)
                .txtFrontBumper.Text = DT(0)("Front Bumper Remarks")
                .cbxAmpheres_G.Checked = If(DT(0)("Ampheres") = "G", True, False)
                .cbxAmpheres_F.Checked = If(DT(0)("Ampheres") = "F", True, False)
                .cbxAmpheres_P.Checked = If(DT(0)("Ampheres") = "P", True, False)
                .txtAmpheres.Text = DT(0)("Ampheres Remarks")
                .cbxFuel_G.Checked = If(DT(0)("Fuel1") = "G", True, False)
                .cbxFuel_F.Checked = If(DT(0)("Fuel1") = "F", True, False)
                .cbxFuel_P.Checked = If(DT(0)("Fuel1") = "P", True, False)
                .txtFuel.Text = DT(0)("Fuel Remarks")
                .cbxStarter_G.Checked = If(DT(0)("Starter") = "G", True, False)
                .cbxStarter_F.Checked = If(DT(0)("Starter") = "F", True, False)
                .cbxStarter_P.Checked = If(DT(0)("Starter") = "P", True, False)
                .txtStarter.Text = DT(0)("Starter Remarks")
                .cbxDifferential_G.Checked = If(DT(0)("Differential") = "G", True, False)
                .cbxDifferential_F.Checked = If(DT(0)("Differential") = "F", True, False)
                .cbxDifferential_P.Checked = If(DT(0)("Differential") = "P", True, False)
                .txtDifferential.Text = DT(0)("Differential Remarks")
                .cbxBrakes_G.Checked = If(DT(0)("Brakes") = "G", True, False)
                .cbxBrakes_F.Checked = If(DT(0)("Brakes") = "F", True, False)
                .cbxBrakes_P.Checked = If(DT(0)("Brakes") = "P", True, False)
                .txtBrakes.Text = DT(0)("Brakes Remarks")
                .cbxWiper_G.Checked = If(DT(0)("Wiper") = "G", True, False)
                .cbxWiper_F.Checked = If(DT(0)("Wiper") = "F", True, False)
                .cbxWiper_P.Checked = If(DT(0)("Wiper") = "P", True, False)
                .txtWiper.Text = DT(0)("Wiper Remarks")
                .cbxBackUp_G.Checked = If(DT(0)("Back Up") = "G", True, False)
                .cbxBackUp_F.Checked = If(DT(0)("Back Up") = "F", True, False)
                .cbxBackUp_P.Checked = If(DT(0)("Back Up") = "P", True, False)
                .txtBackUp.Text = DT(0)("Back Up Remarks")
                .cbxSideMirror_G.Checked = If(DT(0)("Side Mirror") = "G", True, False)
                .cbxSideMirror_F.Checked = If(DT(0)("Side Mirror") = "F", True, False)
                .cbxSideMirror_P.Checked = If(DT(0)("Side Mirror") = "P", True, False)
                .txtSideMirror.Text = DT(0)("Side Mirror Remarks")
                .cbxBodyFlooring_G.Checked = If(DT(0)("Body Flooring") = "G", True, False)
                .cbxBodyFlooring_F.Checked = If(DT(0)("Body Flooring") = "F", True, False)
                .cbxBodyFlooring_P.Checked = If(DT(0)("Body Flooring") = "P", True, False)
                .txtBodyFlooring.Text = DT(0)("Body Flooring Remarks")
                .cbxRearBumper_G.Checked = If(DT(0)("Rear Bumper") = "G", True, False)
                .cbxRearBumper_F.Checked = If(DT(0)("Rear Bumper") = "F", True, False)
                .cbxRearBumper_P.Checked = If(DT(0)("Rear Bumper") = "P", True, False)
                .txtRearBumper.Text = DT(0)("Rear Bumper Remarks")
                .cbxOilPressure_G.Checked = If(DT(0)("Oil Pressure") = "G", True, False)
                .cbxOilPressure_F.Checked = If(DT(0)("Oil Pressure") = "F", True, False)
                .cbxOilPressure_P.Checked = If(DT(0)("Oil Pressure") = "P", True, False)
                .txtOilPressure.Text = DT(0)("Oil Pressure Remarks")
                .cbxSpeedometer_G.Checked = If(DT(0)("Speedometer") = "G", True, False)
                .cbxSpeedometer_F.Checked = If(DT(0)("Speedometer") = "F", True, False)
                .cbxSpeedometer_P.Checked = If(DT(0)("Speedometer") = "P", True, False)
                .txtSpeedometer.Text = DT(0)("Speedometer Remarks")
                .cbxBodyPaint_G.Checked = If(DT(0)("Body Paint") = "G", True, False)
                .cbxBodyPaint_F.Checked = If(DT(0)("Body Paint") = "F", True, False)
                .cbxBodyPaint_P.Checked = If(DT(0)("Body Paint") = "P", True, False)
                .txtBodyPaint.Text = DT(0)("Body Paint Remarks")
                .txtAppraisersRemarks.Text = DT(0)("Appraiser Remarks")
                .txtSource.Text = DT(0)("Source")
                .txtTelNo.Text = DT(0)("Telephone Num")
                FormRestriction(64)
                If allow_Print Then
                    .txtSellingPrice.Text = "Php " & DT(0)("Selling Price")
                    .txtMarketValue.Text = "Php " & DT(0)("Market Value")
                    .txtAppraisedValue.Text = "Php " & DT(0)("Appraised Value")
                Else
                    .txtSellingPrice.Text = ""
                    .txtMarketValue.Text = ""
                    .txtAppraisedValue.Text = ""
                End If
                .txtLoanble.Text = "Php " & DT(0)("Loanable Value")
                .txtLoanableP.Text = DT(0)("Loanable Percent") & "%"
                .lblLoanable.Visible = True
                .txtLoanble.Visible = True
                .txtLoanableP.Visible = True

                Dim xPos As Integer = 1
                If CInt(DT(0)("Attach")) > 0 Then
                    For x As Integer = 1 To DT(0)("Attach")
                        Dim pB_Dev As New DevExpress.XtraEditors.PictureEdit
                        If x Mod 5 = 1 Then
                            pB_Dev.Properties.NullText = "Front"
                        ElseIf x Mod 5 = 2 Then
                            pB_Dev.Properties.NullText = "Back"
                        ElseIf x Mod 5 = 3 Then
                            pB_Dev.Properties.NullText = "Interior"
                        ElseIf x Mod 5 = 4 Then
                            pB_Dev.Properties.NullText = "Engine"
                        ElseIf x Mod 5 = 0 Then
                            pB_Dev.Properties.NullText = "Odometer"
                        End If

                        Dim pB As New XRPictureBox With {
                            .Size = New Size(375, 250),
                            .Sizing = DevExpress.XtraPrinting.ImageSizeMode.StretchImage,
                            .Borders = DevExpress.XtraPrinting.BorderSide.All
                        }
                        '***ADD LABEL***'
                        Dim lblImage As New XRLabel With {
                            .Text = pB_Dev.Properties.NullText.ToString,
                            .SizeF = New Size(375, 15),
                            .Font = New Font(OfficialFont, 8, FontStyle.Bold),
                            .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter
                        }
                        '***ADD LABEL***'
                        If xPos Mod 2 = 0 Then
                            pB.Location = New Point(412.5, 770 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 265), 0))
                            lblImage.Location = New Point(412.5, (770 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 265), 0)) - 15)
                        Else
                            pB.Location = New Point(12.5, 770 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 265), 0))
                            lblImage.Location = New Point(12.5, (770 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 265), 0)) - 15)
                        End If
                        Dim Path As String = String.Format("{0}\{1}\{2}\Application\{3}\{4}\{5}", RootFolder, MainFolder, Branch_Code, CreditNumber, DT(0)("Appraise Number"), pB_Dev.Properties.NullText & x & ".jpg")
                        If IO.File.Exists(Path) Then
                            Dim TempPB As New DevExpress.XtraEditors.PictureEdit
                            Try
                                TempPB.Image = Image.FromFile(Path)
                            Catch ex As Exception
                                TriggerBugReport("Credit Investigation - General_Appraisal", ex.Message.ToString)
                            End Try
                            pB.Image = TempPB.Image
                            .Detail.Controls.Add(pB)
                            .Detail.Controls.Add(lblImage)
                            TempPB.Dispose()
                            xPos += 1
                        End If
                    Next
                Else
                End If

                If Show Then
                    .ShowPreview()
                Else
                    Try
                        .ExportToPdf(FName)
                    Catch ex As Exception
                    End Try
                End If
            End With
        ElseIf GridView2.RowCount > 0 Then
            Dim SQL As String = "SELECT"
            SQL &= "   A.appraise_num      AS 'Appraise Number',"
            SQL &= "   DATE_FORMAT(A.appraise_date,'%b %d, %Y') AS 'Date',"
            SQL &= "   A.appraise_by, (SELECT CONCAT(IF(First_Name = '','',CONCAT(First_Name, ' ')), IF(Middle_Name = '','',CONCAT(Middle_Name, ' ')), Last_Name) FROM employee_setup WHERE ID = A.appraise_by) AS 'Appraised By',"
            SQL &= "   A.asset_number      AS 'Credit Number',"
            SQL &= "   Land,"
            SQL &= "   FORMAT(A.land_area,2) AS 'Land Area',"
            SQL &= "   FORMAT(A.land_price,2) AS 'Land Price',"
            SQL &= "   FORMAT(A.land_price * land_area,2) AS 'Land Total',"
            SQL &= "   land_remarks_1 AS 'Land Remarks',"
            SQL &= "   FORMAT(A.land_area_2,2) AS 'Land Area 2',"
            SQL &= "   FORMAT(A.land_price_2,2) AS 'Land Price 2',"
            SQL &= "   FORMAT(A.land_price_2 * land_area_2,2) AS 'Land Total 2',"
            SQL &= "   land_remarks_2 AS 'Land Remarks 2',"
            SQL &= "   FORMAT(A.land_area_3,2) AS 'Land Area 3',"
            SQL &= "   FORMAT(A.land_price_3,2) AS 'Land Price 3',"
            SQL &= "   FORMAT(A.land_price_3 * land_area_3,2) AS 'Land Total 3',"
            SQL &= "   land_remarks_3 AS 'Land Remarks 3',"
            SQL &= "   FORMAT(A.land_area_4,2) AS 'Land Area 4',"
            SQL &= "   FORMAT(A.land_price_4,2) AS 'Land Price 4',"
            SQL &= "   FORMAT(A.land_price_4 * land_area_4,2) AS 'Land Total 4',"
            SQL &= "   land_remarks_4 AS 'Land Remarks 4',"
            SQL &= "   FORMAT(A.land_area_5,2) AS 'Land Area 5',"
            SQL &= "   FORMAT(A.land_price_5,2) AS 'Land Price 5',"
            SQL &= "   FORMAT(A.land_price_5 * land_area_5,2) AS 'Land Total 5',"
            SQL &= "   land_remarks_5 AS 'Land Remarks 5',"
            SQL &= "   Machine,"
            SQL &= "   FORMAT(A.Machine_area,2) AS 'Machine Area',"
            SQL &= "   FORMAT(A.Machine_price,2) AS 'Machine Price',"
            SQL &= "   FORMAT(A.Machine_price * Machine_area,2) AS 'Machine Total',"
            SQL &= "   Machine_remarks_1 AS 'Machine Remarks',"
            SQL &= "   FORMAT(A.Machine_area_2,2) AS 'Machine Area 2',"
            SQL &= "   FORMAT(A.Machine_price_2,2) AS 'Machine Price 2',"
            SQL &= "   FORMAT(A.Machine_price_2 * Machine_area_2,2) AS 'Machine Total 2',"
            SQL &= "   Machine_remarks_2 AS 'Machine Remarks 2',"
            SQL &= "   FORMAT(A.Machine_area_3,2) AS 'Machine Area 3',"
            SQL &= "   FORMAT(A.Machine_price_3,2) AS 'Machine Price 3',"
            SQL &= "   FORMAT(A.Machine_price_3 * Machine_area_3,2) AS 'Machine Total 3',"
            SQL &= "   Machine_remarks_3 AS 'Machine Remarks 3',"
            SQL &= "   FORMAT(A.Machine_area_4,2) AS 'Machine Area 4',"
            SQL &= "   FORMAT(A.Machine_price_4,2) AS 'Machine Price 4',"
            SQL &= "   FORMAT(A.Machine_price_4 * Machine_area_4,2) AS 'Machine Total 4',"
            SQL &= "   Machine_remarks_4 AS 'Machine Remarks 4',"
            SQL &= "   FORMAT(A.Machine_area_5,2) AS 'Machine Area 5',"
            SQL &= "   FORMAT(A.Machine_price_5,2) AS 'Machine Price 5',"
            SQL &= "   FORMAT(A.Machine_price_5 * Machine_area_5,2) AS 'Machine Total 5',"
            SQL &= "   Machine_remarks_5 AS 'Machine Remarks 5',"
            SQL &= "   Improvement,"
            SQL &= "   FORMAT(A.Improvement_area,2) AS 'Improvement Area',"
            SQL &= "   FORMAT(A.Improvement_price,2) AS 'Improvement Price',"
            SQL &= "   FORMAT(A.Improvement_price * Improvement_area,2) AS 'Improvement Total',"
            SQL &= "   Improvement_remarks_1 AS 'Improvement Remarks',"
            SQL &= "   FORMAT(A.Improvement_area_2,2) AS 'Improvement Area 2',"
            SQL &= "   FORMAT(A.Improvement_price_2,2) AS 'Improvement Price 2',"
            SQL &= "   FORMAT(A.Improvement_price_2 * Improvement_area_2,2) AS 'Improvement Total 2',"
            SQL &= "   Improvement_remarks_2 AS 'Improvement Remarks 2',"
            SQL &= "   FORMAT(A.Improvement_area_3,2) AS 'Improvement Area 3',"
            SQL &= "   FORMAT(A.Improvement_price_3,2) AS 'Improvement Price 3',"
            SQL &= "   FORMAT(A.Improvement_price_3 * Improvement_area_3,2) AS 'Improvement Total 3',"
            SQL &= "   Improvement_remarks_3 AS 'Improvement Remarks 3',"
            SQL &= "   FORMAT(A.Improvement_area_4,2) AS 'Improvement Area 4',"
            SQL &= "   FORMAT(A.Improvement_price_4,2) AS 'Improvement Price 4',"
            SQL &= "   FORMAT(A.Improvement_price_4 * Improvement_area_4,2) AS 'Improvement Total 4',"
            SQL &= "   Improvement_remarks_4 AS 'Improvement Remarks 4',"
            SQL &= "   FORMAT(A.Improvement_area_5,2) AS 'Improvement Area 5',"
            SQL &= "   FORMAT(A.Improvement_price_5,2) AS 'Improvement Price 5',"
            SQL &= "   FORMAT(A.Improvement_price_5 * Improvement_area_5,2) AS 'Improvement Total 5',"
            SQL &= "   Improvement_remarks_5 AS 'Improvement Remarks 5',"
            SQL &= "   FORMAT((A.land_price * A.land_area) + (A.land_price_2 * land_area_2) + (A.land_price_3 * land_area_3) + (A.land_price_4 * land_area_4) + (A.land_price_5 * land_area_5) + (A.machine_price * A.machine_area) + (A.machine_price_2 * machine_area_2) + (A.machine_price_3 * machine_area_3) + (A.machine_price_4 * machine_area_4) + (A.machine_price_5 * machine_area_5) + (A.improvement_price * A.improvement_area) + (A.improvement_price_2 * improvement_area_2) + (A.improvement_price_3 * improvement_area_3) + (A.improvement_price_4 * improvement_area_4) + (A.improvement_price_5 * improvement_area_5),2) AS 'Total',"
            SQL &= "   FORMAT(A.prevailing_selling,2) AS 'Prevailing Selling Price',"
            SQL &= "   FORMAT(A.rounded_to,2) AS 'Zonal Valuation',"
            SQL &= "   A.TCT               AS 'TCT No.',"
            SQL &= "   A.lot_block         AS 'Lot / Block No.',"
            SQL &= "   FORMAT(A.area_sqm,2) AS 'Area SQ.M.',"
            SQL &= "   A.registered_owner  AS 'Registered Owner',"
            SQL &= "   A.registry_deeds    AS 'Registry of Deeds',"
            SQL &= "   A.Location,"
            SQL &= "   A.vacant_lot        AS 'Vacant Lot',"
            SQL &= "   A.Classification,"
            SQL &= "   A.Storey_R          AS 'Storey',"
            SQL &= "   A.Roofing_R         AS 'Roofing',"
            SQL &= "   A.FLooring_R        AS 'Flooring',"
            SQL &= "   A.TandB_R           AS 'T and B',"
            SQL &= "   A.Frame_R           AS 'Frame',"
            SQL &= "   A.Beams_R           AS 'Beams',"
            SQL &= "   A.Doors_R           AS 'Door',"
            SQL &= "   A.YearConstructed_R AS 'Year Constructed',"
            SQL &= "   A.Walling_R         AS 'Walling',"
            SQL &= "   A.Ceiling_R         AS 'Ceiling',"
            SQL &= "   A.Windows_R         AS 'Windows',"
            SQL &= "   A.FloorArea_R       AS 'Floor Area',"
            SQL &= "   A.Partitions_R      AS 'Partitions',"
            SQL &= "   A.Remarks           AS 'Remarks',"
            SQL &= "   FORMAT(A.appraised_value,2) AS 'Appraised Value',"
            SQL &= "   Employee(A.appraise_by) AS 'Appraised By',"
            SQL &= "   A.as_of             AS 'As of',"
            SQL &= "   FORMAT(A.loanable_value,2) AS 'Loanable Value',"
            SQL &= "   FORMAT(A.loanable_percent,2) AS 'Loanable Percent', Attach"
            SQL &= " FROM appraise_re A"
            SQL &= String.Format("   WHERE A.appraise = 'Credit Investigation' AND A.appraise_num = '{1}' AND CollateralNumber = '{0}'", Col_ID, ID)
            Dim DT As DataTable = DataSource(SQL)

            Dim Report As New RptAppraisalRE
            With Report
                .Name = DT(0)("Appraise Number")
                .lblDate.Text = DT(0)("Date")
                .lblAppaiseNum.Text = DT(0)("Appraise Number")
                .lblAppraiseFor.Text = "Credit Investigation"
                .lblAppraisedBy.Text = DT(0)("Appraised By")

                .lblLand.Text = DT(0)("Land")

                .dLandArea.Text = DT(0)("Land Area")
                .dPrice_1.Text = DT(0)("Land Price")
                .dTotal_1.Text = "PHP " & DT(0)("Land Total")
                .lblRemarks_1.Text = DT(0)("Land Remarks")

                .dLandArea_2.Text = DT(0)("Land Area 2")
                .dPrice_2.Text = DT(0)("Land Price 2")
                .dTotal_2.Text = "PHP " & DT(0)("Land Total 2")
                .lblRemarks_2.Text = DT(0)("Land Remarks 2")

                .dLandArea_3.Text = DT(0)("Land Area 3")
                .dPrice_3.Text = DT(0)("Land Price 3")
                .dTotal_3.Text = "PHP " & DT(0)("Land Total 3")
                .lblRemarks_3.Text = DT(0)("Land Remarks 3")

                .dLandArea_4.Text = DT(0)("Land Area 4")
                .dPrice_4.Text = DT(0)("Land Price 4")
                .dTotal_4.Text = "PHP " & DT(0)("Land Total 4")
                .lblRemarks_4.Text = DT(0)("Land Remarks 4")

                .dLandArea_5.Text = DT(0)("Land Area 5")
                .dPrice_5.Text = DT(0)("Land Price 5")
                .dTotal_5.Text = "PHP " & DT(0)("Land Total 5")
                .lblRemarks_5.Text = DT(0)("Land Remarks 5")
                .dLandTotal_T.Text = "PHP " & FormatNumber(CDbl(DT(0)("Land Total")) + CDbl(DT(0)("Land Total 2")) + CDbl(DT(0)("Land Total 3")) + CDbl(DT(0)("Land Total 4")) + CDbl(DT(0)("Land Total 5")), 2)

                .lblImprovements.Text = DT(0)("Improvement")

                .dImprovementArea_1.Text = DT(0)("Improvement Area")
                .dImprovementPrice_1.Text = DT(0)("Improvement Price")
                .dImprovementTotal_1.Text = "PHP " & DT(0)("Improvement Total")
                .lblImprovementRemarks_1.Text = DT(0)("Improvement Remarks")

                .dImprovementArea_2.Text = DT(0)("Improvement Area 2")
                .dImprovementPrice_2.Text = DT(0)("Improvement Price 2")
                .dImprovementTotal_2.Text = "PHP " & DT(0)("Improvement Total 2")
                .lblImprovementRemarks_2.Text = DT(0)("Improvement Remarks 2")

                .dImprovementArea_3.Text = DT(0)("Improvement Area 3")
                .dImprovementPrice_3.Text = DT(0)("Improvement Price 3")
                .dImprovementTotal_3.Text = "PHP " & DT(0)("Improvement Total 3")
                .lblImprovementRemarks_3.Text = DT(0)("Improvement Remarks 3")

                .dImprovementArea_4.Text = DT(0)("Improvement Area 4")
                .dImprovementPrice_4.Text = DT(0)("Improvement Price 4")
                .dImprovementTotal_4.Text = "PHP " & DT(0)("Improvement Total 4")
                .lblImprovementRemarks_4.Text = DT(0)("Improvement Remarks 4")

                .dImprovementArea_5.Text = DT(0)("Improvement Area 5")
                .dImprovementPrice_5.Text = DT(0)("Improvement Price 5")
                .dImprovementTotal_5.Text = "PHP " & DT(0)("Improvement Total 5")
                .lblImprovementRemarks_5.Text = DT(0)("Improvement Remarks 5")
                .dImprovementTotal_T.Text = "PHP " & FormatNumber(CDbl(DT(0)("Improvement Total")) + CDbl(DT(0)("Improvement Total 2")) + CDbl(DT(0)("Improvement Total 3")) + CDbl(DT(0)("Improvement Total 4")) + CDbl(DT(0)("Improvement Total 5")), 2)

                .lblMachine.Text = DT(0)("Machine")

                .dMachineArea_1.Text = DT(0)("Machine Area")
                .dMachinePrice_1.Text = DT(0)("Machine Price")
                .dMachineTotal_1.Text = "PHP " & DT(0)("Machine Total")
                .lblMachineRemarks_1.Text = DT(0)("Machine Remarks")

                .dMachineArea_2.Text = DT(0)("Machine Area 2")
                .dMachinePrice_2.Text = DT(0)("Machine Price 2")
                .dMachineTotal_2.Text = "PHP " & DT(0)("Machine Total 2")
                .lblMachineRemarks_2.Text = DT(0)("Machine Remarks 2")

                .dMachineArea_3.Text = DT(0)("Machine Area 3")
                .dMachinePrice_3.Text = DT(0)("Machine Price 3")
                .dMachineTotal_3.Text = "PHP " & DT(0)("Machine Total 3")
                .lblMachineRemarks_3.Text = DT(0)("Machine Remarks 3")

                .dMachineArea_4.Text = DT(0)("Machine Area 4")
                .dMachinePrice_4.Text = DT(0)("Machine Price 4")
                .dMachineTotal_4.Text = "PHP " & DT(0)("Machine Total 4")
                .lblMachineRemarks_4.Text = DT(0)("Machine Remarks 4")

                .dMachineArea_5.Text = DT(0)("Machine Area 5")
                .dMachinePrice_5.Text = DT(0)("Machine Price 5")
                .dMachineTotal_5.Text = "PHP " & DT(0)("Machine Total 5")
                .lblMachineRemarks_5.Text = DT(0)("Machine Remarks 5")
                .dMachineTotal_T.Text = "PHP " & FormatNumber(CDbl(DT(0)("Machine Total")) + CDbl(DT(0)("Machine Total 2")) + CDbl(DT(0)("Machine Total 3")) + CDbl(DT(0)("Machine Total 4")) + CDbl(DT(0)("Machine Total 5")), 2)

                .dTotalAmount.Text = "PHP " & DT(0)("Total")
                .dPrevailingSellingPrice.Text = "PHP " & DT(0)("Prevailing Selling Price")
                .dZonalValuation.Text = "PHP " & DT(0)("Zonal Valuation")

                .txtTCT.Text = DT(0)("TCT No.")
                .txtLot.Text = DT(0)("Lot / Block No.")
                .dArea.Text = DT(0)("Area SQ.M.")
                .txtRegisteredOwner.Text = DT(0)("Registered Owner")
                .txtRegistryOfDeeds.Text = DT(0)("Registry of Deeds")
                .txtLocation.Text = DT(0)("Location")
                .cbxVacantLot.Checked = If(DT(0)("Vacant Lot") = "YES", True, False)
                .cbxResidential.Checked = If(DT(0)("Classification") = "Residential", True, False)
                .cbxCommercial.Checked = If(DT(0)("Classification") = "Commercial", True, False)
                .cbxAgricultural.Checked = If(DT(0)("Classification") = "Agricultural", True, False)
                .cbxTourism.Checked = If(DT(0)("Classification") = "Tourism", True, False)
                .cbxIndustrial.Checked = If(DT(0)("Classification") = "Industrial", True, False)
                .cbxOthers.Checked = If(DT(0)("Classification") = "Others", True, False)
                .lblStorey_R.Text = DT(0)("Storey")
                .lblRoofings_R.Text = DT(0)("Roofing")
                .lblFloorings_R.Text = DT(0)("Flooring")
                .lblTandB_R.Text = DT(0)("T and B")
                .lblFrames_R.Text = DT(0)("Frame")
                .lblBeams_R.Text = DT(0)("Beams")
                .lblDoors_R.Text = DT(0)("Door")
                .lblYear_R.Text = DT(0)("Year Constructed")
                .lblWalling_R.Text = DT(0)("Walling")
                .lblCeiling_R.Text = DT(0)("Ceiling")
                .lblWindows_R.Text = DT(0)("Windows")
                .lblFloorArea_R.Text = DT(0)("Floor Area")
                .lblPartitions_R.Text = DT(0)("Partitions")
                .lblRemarks.Text = DT(0)("Remarks")
                FormRestriction(64)
                If allow_Print Then
                    .dAppraisedValue.Text = "Php " & DT(0)("Appraised Value")
                    .txtValueWords.Text = ConvertNumberToWords(CDbl(DT(0)("Appraised Value")), False, False)
                    .lblAsOf.Text = CDate(DT(0)("As of"))
                Else
                    .dAppraisedValue.Text = ""
                    .txtValueWords.Text = ""
                    .lblAsOf.Text = ""
                End If

                .dRecommendedAmount.Text = "Php " & DT(0)("Loanable Value")
                .dRecommendedPercent.Text = DT(0)("Loanable Percent") & "%"
                .lblRecommended.Visible = True
                .lblRecommendedPHP.Visible = True
                .dRecommendedAmount.Visible = True
                .dRecommendedPercent.Visible = True

                Dim xPos As Integer = 1
                If CInt(DT(0)("Attach")) > 0 Then
                    Dim DT_Pictures As DataTable = DataSource(String.Format("SELECT Picture FROM re_classification WHERE IF('{0}' NOT IN ('Residential','Commercial','Agricultural','Tourism','Industrial','Condominium'),Classification = 'Others',Classification = '{0}') AND `status` = 'ACTIVE';", DT(0)("Classification")))
                    Dim PathX As String = String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Branch_Code, CreditNumber, "RE Appraise")
                    If IO.Directory.Exists(PathX) Then
                        Dim files() As String = IO.Directory.GetFiles(PathX)
                        For Each file As String In files
                            Dim pB As New XRPictureBox With {
                                .Size = New Size(375, 235),
                                .Sizing = DevExpress.XtraPrinting.ImageSizeMode.StretchImage,
                                .Borders = DevExpress.XtraPrinting.BorderSide.All
                            }
                            '***ADD LABEL***'
                            Dim lblImage As New XRLabel With {
                                .SizeF = New Size(375, 10),
                                .Font = New Font(OfficialFont, 8, FontStyle.Bold),
                                .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter
                            }
                            '***ADD LABEL***'
                            If xPos Mod 2 = 0 Then
                                pB.Location = New Point(412.5, 1000 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 245), 0))
                                lblImage.Location = New Point(412.5, (1000 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 245), 0)) - 10)
                            Else
                                pB.Location = New Point(12.5, 1000 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 245), 0))
                                lblImage.Location = New Point(12.5, (1000 + If(xPos > 2, (Math.Ceiling((xPos - 2) / 2) * 245), 0)) - 10)
                            End If
                            Dim Path As String = file.ToString
                            If IO.File.Exists(Path) Then
                                Dim TempPB As New DevExpress.XtraEditors.PictureEdit
                                Try
                                    TempPB.Image = Image.FromFile(Path)
                                Catch ex As Exception
                                    TriggerBugReport("Credit Investigation - General_Appraisal", ex.Message.ToString)
                                End Try
                                pB.Image = TempPB.Image.Clone
                                TempPB.Dispose()
                                .Detail.Controls.Add(pB)
                                .Detail.Controls.Add(lblImage)
                                xPos += 1
                            End If
                        Next
                    End If
                End If

                If Show Then
                    .ShowPreview()
                Else
                    Try
                        .ExportToPdf(FName)
                    Catch ex As Exception
                    End Try
                End If
            End With
        End If
    End Sub

    Private Sub GenerateCIR(Show As Boolean, FName As String)
        Dim Report As New RptCreditInvestigationReport
        With Report
            .Name = String.Format("Credit Investigation Report {0}", txtCINumber.Text)
            If BorrowerID.Contains("C") Then
                .XrLabel22.Text = "Representative 1 :"
                .XrLabel25.Text = "Representative 2 :"
                .XrLabel28.Text = "Representative 3 :"
                .XrLabel31.Text = "Representative 4 :"
                .XrLabel34.Text = "Representative 5 :"
                .XrLabel50.Text = "Incorporation Date :"
            End If
            .lblAmountApplied.Text = FormatNumber(If(BM_AmountApplied > 0, BM_AmountApplied, AmountApplied), 2)
            .lblTerms.Text = If(BM_Terms > 0, BM_Terms, Terms)
            .lblCollateral.Text = Collateral
            .lblDate.Text = dtpDate.Text
            .lblCINumber.Text = txtCINumber.Text
            .lblCreditNumber.Text = CreditNumber
            .lblBorrower.Text = If(CbxPrefix_B.Text.Trim = "", "", CbxPrefix_B.Text.Trim & " ") & If(TxtFirstN_B.Text.Trim = "", "", TxtFirstN_B.Text.Trim & " ") & If(TxtMiddleN_B.Text.Trim = "", "", TxtMiddleN_B.Text.Trim & " ") & If(TxtLastN_B.Text.Trim = "", "", TxtLastN_B.Text.Trim & " ") & If(cbxSuffix_B.Text.Trim = "", "", cbxSuffix_B.Text.Trim)
            .lblSpouse.Text = If(CbxPrefix_S.Text.Trim = "", "", CbxPrefix_S.Text.Trim & " ") & If(TxtFirstN_S.Text.Trim = "", "", TxtFirstN_S.Text.Trim & " ") & If(TxtMiddleN_S.Text.Trim = "", "", TxtMiddleN_S.Text.Trim & " ") & If(TxtLastN_S.Text.Trim = "", "", TxtLastN_S.Text.Trim & " ") & If(cbxSuffix_S.Text.Trim = "", "", cbxSuffix_S.Text.Trim)
            .lblCoMaker1.Text = If(CbxPrefix_C1.Text.Trim = "", "", CbxPrefix_C1.Text.Trim & " ") & If(TxtFirstN_C1.Text.Trim = "", "", TxtFirstN_C1.Text.Trim & " ") & If(TxtMiddleN_C1.Text.Trim = "", "", TxtMiddleN_C1.Text.Trim & " ") & If(TxtLastN_C1.Text.Trim = "", "", TxtLastN_C1.Text.Trim & " ") & If(cbxSuffix_C1.Text.Trim = "", "", cbxSuffix_C1.Text.Trim)
            .lblCoMaker2.Text = If(CbxPrefix_C2.Text.Trim = "", "", CbxPrefix_C2.Text.Trim & " ") & If(TxtFirstN_C2.Text.Trim = "", "", TxtFirstN_C2.Text.Trim & " ") & If(TxtMiddleN_C2.Text.Trim = "", "", TxtMiddleN_C2.Text.Trim & " ") & If(TxtLastN_C2.Text.Trim = "", "", TxtLastN_C2.Text.Trim & " ") & If(cbxSuffix_C2.Text.Trim = "", "", cbxSuffix_C2.Text.Trim)
            .lblCoMaker3.Text = If(CbxPrefix_C3.Text.Trim = "", "", CbxPrefix_C3.Text.Trim & " ") & If(TxtFirstN_C3.Text.Trim = "", "", TxtFirstN_C3.Text.Trim & " ") & If(TxtMiddleN_C3.Text.Trim = "", "", TxtMiddleN_C3.Text.Trim & " ") & If(TxtLastN_C3.Text.Trim = "", "", TxtLastN_C3.Text.Trim & " ") & If(cbxSuffix_C3.Text.Trim = "", "", cbxSuffix_C3.Text.Trim)
            .lblCoMaker4.Text = If(CbxPrefix_C4.Text.Trim = "", "", CbxPrefix_C4.Text.Trim & " ") & If(TxtFirstN_C4.Text.Trim = "", "", TxtFirstN_C4.Text.Trim & " ") & If(TxtMiddleN_C4.Text.Trim = "", "", TxtMiddleN_C4.Text.Trim & " ") & If(TxtLastN_C4.Text.Trim = "", "", TxtLastN_C4.Text.Trim & " ") & If(cbxSuffix_C4.Text.Trim = "", "", cbxSuffix_C4.Text.Trim)
            .lblAddress.Text = If(txtNoC_B.Text.Trim = "", "", txtNoC_B.Text.Trim & " ") & If(txtStreetC_B.Text.Trim = "", "", txtStreetC_B.Text.Trim & " ") & If(txtBarangayC_B.Text.Trim = "", "", txtBarangayC_B.Text.Trim & " ") & If(cbxAddressC_B.Text.Trim = "", "", cbxAddressC_B.Text.Trim)
            .lblResidency.Text = cbxResidence.Text
            .cbxOwned.Checked = cbxOwned_B.Checked
            .cbxFree.Checked = cbxFree_B.Checked
            .cbxRented.Checked = cbxRented_B.Checked
            .lblRent.Text = If(cbxRented_B.Checked, dRent_B.Text, "")
            .lblConfirmed.Text = txtConfirmed.Text
            .lblLength.Text = txtLengthStay.Text
            .lblNeighborhood.Text = cbxNeighborhood.Text
            .lblBirthdate.Text = DtpBirth_B.Text
            .cbxSingle.Checked = cbxSingle_B.Checked
            .cbxMarried.Checked = cbxMarried_B.Checked
            .cbxSeparated.Checked = cbxSeparated_B.Checked
            .cbxWidowed.Checked = cbxWidowed_B.Checked
            .p_Borrower.Image = pb_B.Image.Clone
            .lblDependent1.Text = If(CbxPrefix_1.Text.Trim = "", "", CbxPrefix_1.Text.Trim & " ") & If(TxtFirstN_1.Text.Trim = "", "", TxtFirstN_1.Text.Trim & " ") & If(TxtMiddleN_1.Text.Trim = "", "", TxtMiddleN_1.Text.Trim & " ") & If(TxtLastN_1.Text.Trim = "", "", TxtLastN_1.Text.Trim & " ") & If(cbxSuffix_1.Text.Trim = "", "", cbxSuffix_1.Text.Trim)
            .lblAge1.Text = iAge_D1.Value
            .lblGrade1.Text = If(txtGrade_1.Text.Trim = "", "", txtGrade_1.Text.Trim & " ") & If(txtSchool_1.Text.Trim = "", "", txtSchool_1.Text.Trim & " ") & If(txtSchoolAddress_1.Text.Trim = "", "", txtSchoolAddress_1.Text.Trim)
            .lblDependent2.Text = If(CbxPrefix_2.Text.Trim = "", "", CbxPrefix_2.Text.Trim & " ") & If(TxtFirstN_2.Text.Trim = "", "", TxtFirstN_2.Text.Trim & " ") & If(TxtMiddleN_2.Text.Trim = "", "", TxtMiddleN_2.Text.Trim & " ") & If(TxtLastN_2.Text.Trim = "", "", TxtLastN_2.Text.Trim & " ") & If(cbxSuffix_2.Text.Trim = "", "", cbxSuffix_2.Text.Trim)
            .lblAge2.Text = iAge_D2.Value
            .lblGrade2.Text = If(txtGrade_2.Text.Trim = "", "", txtGrade_2.Text.Trim & " ") & If(txtSchool_2.Text.Trim = "", "", txtSchool_2.Text.Trim & " ") & If(txtSchoolAddress_2.Text.Trim = "", "", txtSchoolAddress_2.Text.Trim)
            .lblDependent3.Text = If(CbxPrefix_3.Text.Trim = "", "", CbxPrefix_3.Text.Trim & " ") & If(TxtFirstN_3.Text.Trim = "", "", TxtFirstN_3.Text.Trim & " ") & If(TxtMiddleN_3.Text.Trim = "", "", TxtMiddleN_3.Text.Trim & " ") & If(TxtLastN_3.Text.Trim = "", "", TxtLastN_3.Text.Trim & " ") & If(cbxSuffix_3.Text.Trim = "", "", cbxSuffix_3.Text.Trim)
            .lblAge3.Text = iAge_D3.Value
            .lblGrade3.Text = If(txtGrade_3.Text.Trim = "", "", txtGrade_3.Text.Trim & " ") & If(txtSchool_3.Text.Trim = "", "", txtSchool_3.Text.Trim & " ") & If(txtSchoolAddress_3.Text.Trim = "", "", txtSchoolAddress_3.Text.Trim)
            .lblDependent4.Text = If(CbxPrefix_4.Text.Trim = "", "", CbxPrefix_4.Text.Trim & " ") & If(TxtFirstN_4.Text.Trim = "", "", TxtFirstN_4.Text.Trim & " ") & If(TxtMiddleN_4.Text.Trim = "", "", TxtMiddleN_4.Text.Trim & " ") & If(TxtLastN_4.Text.Trim = "", "", TxtLastN_4.Text.Trim & " ") & If(cbxSuffix_4.Text.Trim = "", "", cbxSuffix_4.Text.Trim)
            .lblAge4.Text = iAge_D4.Value
            .lblGrade4.Text = If(txtGrade_4.Text.Trim = "", "", txtGrade_4.Text.Trim & " ") & If(txtSchool_4.Text.Trim = "", "", txtSchool_4.Text.Trim & " ") & If(txtSchoolAddress_4.Text.Trim = "", "", txtSchoolAddress_4.Text.Trim)
            If cbxEmployer_B.Text = "" Then
            Else
                .lblEmployer_B.Text = cbxEmployer_B.Text
                .lblAddress_B.Text = txtEmployerAddress_B.Text
                .lblDateHired_B.Text = dtpHired_B.Text
                .cbxCasual.Checked = cbxCasual_B.Checked
                .cbxTemporary.Checked = cbxTemporary_B.Checked
                .cbxPermanent.Checked = cbxPermanent_B.Checked
                .lblPosition_B.Text = cbxPosition_B.Text
                .lblMonthly_B.Text = dMonthly_B.Text
            End If
            If vEmployer_S = "" Then
            Else
                .lblEmployer_S.Text = vEmployer_S
                .lblAddress_S.Text = vEmpAddress_S
                .lblDateHired_S.Text = vHired_S
                .cbxCasual_S.Checked = vCasual_S
                .cbxTemporary_S.Checked = vTemporary_S
                .cbxPermanent_S.Checked = vPermanent_S
                .lblPosition_S.Text = vPosition_S
                .lblMonthly_S.Text = vSalary_S
            End If
            If txtBusinessName_B.Text = "" Then
            Else
                .lblBusiness.Text = txtBusinessName_B.Text
                .lblBusinessAddress.Text = txtBusinessAddress_B.Text
                .lblStarted.Text = dtpBusinessStarted.Text
                .lblNatureBusiness.Text = cbxNatureBusiness_B2.Text
                .lblCapital.Text = dCapital_B.Text
                .lblEmployees.Text = iNoEmployees_B.Text
                .lblInventory.Text = dBusinessStock.Text
                .lblBusinessVehicle.Text = txtBusinessVehicle.Text
                .lblBusinessIncome.Text = dBusinessIncome_B.Text
                .lblBusinessPermit.Text = txtBusinessPermit.Text
            End If
            If txtOtherIncome_B.Text = "" Then
            Else
                .lblOtherIncome.Text = txtOtherIncome_B.Text
                .lblOtherIncomeAmount.Text = dOtherIncome_B.Text
            End If
            .lblSalary_B.Text = dSalary_B.Text
            .lblSalary_S.Text = dSalary_S.Text
            .lblSalary_Business.Text = dBusinessNet.Text

            .lblBCapitalP.Text = dCapitalP.Text
            .lblBFuelAndMaintenanceP.Text = dFuelMaintenanceP.Text
            .lblBUtilitiesP.Text = dUtilitiesP.Text
            .lblBSalariesWagesP.Text = dSalariesWagesP.Text
            .lblBMiscellaneousP.Text = dBMiscellaneousP.Text
            .lblBOthersP.Text = dBOthersP.Text

            .lblBCapital.Text = dCapital.Text
            .lblBFuelAndMaintenance.Text = dFuelMaintenance.Text
            .lblBUtilities.Text = dUtilities.Text
            .lblBSalariesWages.Text = dSalariesWages.Text
            .lblBMiscellaneous.Text = dBMiscellaneous.Text
            .lblBOthers.Text = dBOthers.Text
            .lblTotalExpense.Text = dTotalBExpense.Text

            .lblSalary_C1.Text = dSalary_C1.Text
            .lblSalary_C2.Text = dSalary_C2.Text
            .lblSalary_C3.Text = dSalary_C3.Text
            .lblSalary_C4.Text = dSalary_C4.Text
            .lblSalary_T.Text = dTotalIncome.Text
            If txtCreditor_1.Text = "" Then
            Else
                .lblCredit1.Text = txtCreditor_1.Text & " " & txtCreditAddress_1.Text
                .lblGranted1.Text = dtpCreditGranted_1.Text
                .lblTerms1.Text = iTerm_1.Text
                .lblPrincipal1.Text = dAmountGranted_1.Text
                .lblOutstanding1.Text = dBalance_1.Text
                .lblMonthlyPay1.Text = dCreditPayment_1.Text
                .lblCreditRemarks1.Text = txtCreditRemarks_1.Text
            End If
            If txtCreditor_2.Text = "" Then
            Else
                .lblCredit2.Text = txtCreditor_2.Text & " " & txtCreditAddress_2.Text
                .lblGranted2.Text = dtpCreditGranted_2.Text
                .lblTerms2.Text = iTerm_2.Text
                .lblPrincipal2.Text = dAmountGranted_2.Text
                .lblOutstanding2.Text = dBalance_2.Text
                .lblMonthlyPay2.Text = dCreditPayment_2.Text
                .lblCreditRemarks2.Text = txtCreditRemarks_2.Text
            End If
            If txtBank_1.Text = "" Then
            Else
                .lblBank1.Text = txtBank_1.Text
                .lblBranch1.Text = txtBranch_1.Text
                .cbxSA1.Checked = cbxSA_1.Checked
                .cbxCA1.Checked = cbxCA_1.Checked
                .cbxAccountNum1.Text = txtSA_1.Text
                .lblDaily1.Text = dAverageBalance_1.Text
                .lblOpened1.Text = txtOpened_1.Text
            End If
            If txtBank_2.Text = "" Then
            Else
                .lblBank2.Text = txtBank_2.Text
                .lblBranch2.Text = txtBranch_2.Text
                .cbxSA2.Checked = cbxSA_2.Checked
                .cbxCA2.Checked = cbxCA_2.Checked
                .cbxAccountNum2.Text = txtSA_2.Text
                .lblDaily2.Text = dAverageBalance_2.Text
                .lblOpened2.Text = txtOpened_2.Text
            End If
            .cbxGood.Checked = cbxGood.Checked
            .cbxFair.Checked = cbxFair.Checked
            .cbxPoor.Checked = cbxPoor.Checked
            .lblRecommendation.Text = rRecommendation.Text
            If cbxApproval.Checked Then
                .lblApprovedAmount.Text = dApprovedAmount.Text
                .lblApprovedTerms.Text = iApprovedTerms.Text
                .lblApprovedRate.Text = dApprovedRate.Text
                .cbxW_PDC.Checked = cbxPDC.Checked
                .cbxNO_PDC.Checked = cbxNoPDC.Checked
            End If
            .cbxApproval.Checked = cbxApproval.Checked
            .cbxDisapproval.Checked = cbxDisapproval.Checked
            If txtTitle.Text = "" Then
            Else
                .lblTitle.Text = txtTitle.Text
                .lblCaseNumber.Text = txtCaseNum.Text
                .lblDateFilled.Text = dtpDateFilled.Text
                .lblCourtBranch.Text = cbxCourt.Text
                .lblCaseNature.Text = cbxCaseNature.Text
                .lblAmountInvolved.Text = dAmountInvolved.Text
                .lblCaseStatus.Text = cbxCaseStatus.Text
                .lblFindings.Text = txtFindings.Text
                .cbxPositive.Checked = cbxPositive.Checked
                .cbxNegative.Checked = cbxNegative.Checked
                .cbxUnestablied.Checked = cbxUnestablished.Checked
                .lblOtherInfo.Text = txtCACPI.Text
            End If
            If txtLocation_1.Text = "" Then
            Else
                .lblLocation1.Text = txtLocation_1.Text
                .lblTCT1.Text = txtTCT_1.Text
                .lblArea1.Text = dArea_1.Text
                .lblRE_Remarks1.Text = txtPropertiesRemarks_1.Text
            End If
            If txtLocation_2.Text = "" Then
            Else
                .lblLocation2.Text = txtLocation_2.Text
                .lblTCT2.Text = txtTCT_2.Text
                .lblArea2.Text = dArea_2.Text
                .lblRE_Remarks2.Text = txtPropertiesRemarks_2.Text
            End If
            If txtVehicle_1.Text = "" Then
            Else
                .lblVehicle1.Text = txtVehicle_1.Text
                .lblModel1.Text = dtpYear_1.Text
                .lblAcquired1.Text = txtWhomAcquired_1.Text
                .lblVE_Remarks1.Text = txtVehicleRemarks_1.Text
            End If
            If txtVehicle_2.Text = "" Then
            Else
                .lblVehicle2.Text = txtVehicle_2.Text
                .lblModel2.Text = dtpYear_2.Text
                .lblAcquired2.Text = txtWhomAcquired_2.Text
                .lblVE_Remarks2.Text = txtVehicleRemarks_2.Text
            End If
            .lblOtherProperty.Text = txtOtherProperties.Text
            .lblNarrative.Text = rNarrative.Text
            .lblCondition1.Text = txtC1.Text
            .lblCondition2.Text = txtC2.Text
            .lblCondition3.Text = txtC3.Text
            .lblCondition4.Text = txtC4.Text
            .lblCondition5.Text = txtC5.Text
            .lblCondition6.Text = txtC6.Text
            .lblCondition7.Text = txtC7.Text
            .lblCondition8.Text = txtC8.Text
            .lblCondition9.Text = txtC9.Text
            .lblIncome.Text = dTotalDisposable.Text
            .lblLivingExpense.Text = dLiving.Text
            .lblClothing.Text = dClothing.Text
            .lblEducation.Text = dEducation.Text
            .lblTransportation.Text = dTransportation.Text
            .lblLight.Text = dLighths.Text
            .lblInsurance.Text = dInsurance.Text
            .lblAmortazation.Text = dAmortization.Text
            .lblMiscellaneous.Text = dMiscellaneous.Text
            .lblTotal.Text = dTotalExpenses.Text
            .lblNetDisposable.Text = dNetDisposable.Text
            .lblTMFI.Text = dTMFI.Text
            .lblTMDI.Text = dTMDI.Text
            .lblPurpose.Text = rPurposeLoan.Text
            .lblDeviations.Text = rOthers.Text
            .p_Sketch.Image = pbSketch.Image.Clone
            .lblPreparedBy.Text = If(PreparedBy = "", Empl_Name, PreparedBy)
            .lblCheckedBy.Text = CheckedBy

            If Show Then
                .ShowPreview()
                Logs("Credit Investigation", "Print", "[SENSITIVE] Print Credit Investigation of " & If(CbxPrefix_B.Text.Trim = "", "", CbxPrefix_B.Text.Trim & " ") & If(TxtFirstN_B.Text.Trim = "", "", TxtFirstN_B.Text.Trim & " ") & If(TxtMiddleN_B.Text.Trim = "", "", TxtMiddleN_B.Text.Trim & " ") & If(TxtLastN_B.Text.Trim = "", "", TxtLastN_B.Text.Trim & " ") & If(cbxSuffix_B.Text.Trim = "", "", cbxSuffix_B.Text.Trim), "", "", "", CreditNumber)
            Else
                Try
                    .ExportToPdf(FName)
                Catch ex As Exception
                End Try
            End If
        End With
    End Sub

    Private Sub BtnPrint_Click(sender As Object, e As EventArgs) Handles btnPrint.Click
        If vPrint Then
        Else
            MsgBox(mBox_Print, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Cursor = Cursors.WaitCursor
        If SuperTabControl1.SelectedTabIndex = 4 Then
            GridView5.OptionsPrint.UsePrintStyles = False
            StandardPrinting("CREDIT INVESTIGATION LIST", GridControl5)
            Logs("Credit Investigation", "Print", "[SENSITIVE] Print Investigation List", "", "", "", CreditNumber)
        Else
            GenerateCIR(True, "")
        End If
        Cursor = Cursors.Default
    End Sub

    Private Sub GridView5_RowCellStyle(sender As Object, e As DevExpress.XtraGrid.Views.Grid.RowCellStyleEventArgs) Handles GridView5.RowCellStyle
        If GridView5.RowCount > 0 Then
            Dim View As DevExpress.XtraGrid.Views.Grid.GridView = sender
            Dim AppStatus As String = View.GetRowCellDisplayText(e.RowHandle, View.Columns("ci_status"))
            Dim ApplicationStatus As String = View.GetRowCellDisplayText(e.RowHandle, View.Columns("Application Status"))
            Dim Status As String = View.GetRowCellDisplayText(e.RowHandle, View.Columns("status"))
            If Status = "DISAPPROVED" Or AppStatus = "DISAPPROVED" Or ApplicationStatus = "CANCELLED" Or ApplicationStatus = "HOLD" Or ApplicationStatus = "CI CANCELLED" Then
                e.Appearance.ForeColor = Color.Red
            End If
            'If Status = "DRAFT" Then
            '    e.Appearance.ForeColor = Color.IndianRed
            'Else
            '    If Status = "DISAPPROVED" Or AppStatus = "DISAPPROVED" Or ApplicationStatus = "CANCELLED" Or ApplicationStatus = "HOLD" Or ApplicationStatus = "CI CANCELLED" Then
            '        e.Appearance.ForeColor = Color.Red
            '    ElseIf AppStatus = "PENDING" Then
            '        e.Appearance.ForeColor = Color.RoyalBlue
            '    ElseIf AppStatus = "CHECKED" Then
            '        e.Appearance.ForeColor = Color.SeaGreen
            '    ElseIf AppStatus = "APPROVED" Then
            '        e.Appearance.ForeColor = Color.SeaGreen
            '        e.Appearance.Font = New Font(OfficialFont, 8.25, FontStyle.Bold)
            '    End If
            'End If
        End If
    End Sub

    Private Sub CbxIncludeC3_CheckedChanged(sender As Object, e As EventArgs) Handles cbxIncludeC3.CheckedChanged
        dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + (dBusinessNet.Value - (dCapital.Value + dFuelMaintenance.Value + dUtilities.Value + dSalariesWages.Value + dBMiscellaneous.Value + dBOthers.Value)) + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
        'dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + dBusinessNet.Value + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
    End Sub

    Private Sub CbxIncludeC4_CheckedChanged(sender As Object, e As EventArgs) Handles cbxIncludeC4.CheckedChanged
        dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + (dBusinessNet.Value - (dCapital.Value + dFuelMaintenance.Value + dUtilities.Value + dSalariesWages.Value + dBMiscellaneous.Value + dBOthers.Value)) + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
        'dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + dBusinessNet.Value + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
    End Sub

    Private Sub BtnCheckBM_Click(sender As Object, e As EventArgs) Handles btnCheckBM.Click
        If vUpdate Then
        Else
            MsgBox(mBox_Update, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Dim Approved As New FrmCIApproved_BM
        With Approved
            If BorrowerID.Contains("C") Then
                .Corporate = True
            End If
            .BorrowerID = BorrowerID
            .CreditNumber = CreditNumber
            .CINumber = txtCINumber.Text
            .CbxPrefix_B.Text = CbxPrefix_B.Text
            .TxtFirstN_B.Text = TxtFirstN_B.Text
            .TxtMiddleN_B.Text = TxtMiddleN_B.Text
            .TxtLastN_B.Text = TxtLastN_B.Text
            .cbxSuffix_B.Text = cbxSuffix_B.Text
            Dim DT As DataTable = DataSource(String.Format("SELECT AmountApplied, Terms, TermType, net_proceeds, interest_rate FROM credit_application WHERE CreditNumber = '{0}';", CreditNumber))
            If DT.Rows.Count > 0 Then
                .dPrincipal.Value = DT(0)("AmountApplied")
                .iTerms.Value = DT(0)("Terms")
                .cbxTerms.Text = DT(0)("TermType")
                .dInterestRate.Value = DT(0)("interest_rate")

                .dPrincipalA.Value = dApprovedAmount.Value
                .iTermsA.Value = iApprovedTerms.Value
                .cbxTermsA.Text = DT(0)("TermType")
                .dInterestRateA.Value = dApprovedRate.Value

                .dPrincipalB.Value = 0
                .iTermsB.Value = 0
                .cbxTermsB.Text = DT(0)("TermType")
                .dInterestRateB.Value = 0
            End If
            .pb_B.Image = pb_B.Image.Clone
            .rNarrative.Text = rNarrative.Text
            .dTotalDisposable.Value = dTotalDisposable.Value
            .dTotalExpenses.Value = dTotalExpenses.Value
            .dNetDisposable.Value = dNetDisposable.Value
            .dTMFI.Value = dTMFI.Value
            .dTMDI.Value = dTMDI.Value
            .TotalImage = TotalImage_Approval
            Dim TotalLoanable As Double
            For x As Integer = 0 To GridView1.RowCount - 1
                TotalLoanable += CDbl(GridView1.GetRowCellValue(x, "LoanableValue"))
            Next
            For x As Integer = 0 To GridView2.RowCount - 1
                TotalLoanable += CDbl(GridView2.GetRowCellValue(x, "LoanableValue"))
            Next

            Dim Result = .ShowDialog
            If Result = DialogResult.OK Then
                Dim Civil_B As String = ""
                If cbxSingle_B.Checked Then
                    Civil_B = "Single"
                ElseIf cbxMarried_B.Checked Then
                    Civil_B = "Married"
                ElseIf cbxSeparated_B.Checked Then
                    Civil_B = "Separated"
                ElseIf cbxWidowed_B.Checked Then
                    Civil_B = "Widowed"
                End If

                Dim House_B As String = ""
                If cbxOwned_B.Checked Then
                    House_B = "Owned"
                ElseIf cbxFree_B.Checked Then
                    House_B = "Free"
                ElseIf cbxRented_B.Checked Then
                    House_B = "Rented"
                End If

                Dim EmplStatus_B As String = ""
                If cbxCasual_B.Checked Then
                    EmplStatus_B = "Casual"
                ElseIf cbxTemporary_B.Checked Then
                    EmplStatus_B = "Temporary"
                ElseIf cbxPermanent_B.Checked Then
                    EmplStatus_B = "Permanent"
                End If

                Dim AccountT_1 As String = ""
                If cbxSA_1.Checked Then
                    AccountT_1 = "SA"
                ElseIf cbxCA_1.Checked Then
                    AccountT_1 = "CA"
                End If
                Dim AccountT_2 As String = ""
                If cbxSA_2.Checked Then
                    AccountT_2 = "SA"
                ElseIf cbxCA_2.Checked Then
                    AccountT_2 = "CA"
                End If

                Dim CreditRating As String = ""
                If cbxGood.Checked Then
                    CreditRating = "GOOD"
                ElseIf cbxFair.Checked Then
                    CreditRating = "FAIR"
                ElseIf cbxPoor.Checked Then
                    CreditRating = "POOR"
                End If

                Dim RecommendedFor As String = ""
                If cbxApproval.Checked Then
                    RecommendedFor = "APPROVAL"
                ElseIf cbxDisapproval.Checked Then
                    RecommendedFor = "DISAPPROVAL"
                End If

                Dim Findings As String = ""
                If cbxPositive.Checked Then
                    Findings = "Positive"
                ElseIf cbxNegative.Checked Then
                    Findings = "Negative"
                ElseIf cbxUnestablished.Checked Then
                    Findings = "Unestablished"
                End If

                Collateral = ""
                RecommendedLoan = 0
                TotalAppraised = 0
                For x As Integer = 0 To GridView1.RowCount - 1
                    Collateral = If(Collateral = "", "", Collateral & ", ") & GridView1.GetRowCellValue(x, "Collateral")
                    RecommendedLoan += GridView1.GetRowCellValue(x, "LoanableValue")
                    TotalAppraised += GridView1.GetRowCellValue(x, "AppraisedValue")
                Next
                For x As Integer = 0 To GridView2.RowCount - 1
                    Collateral = If(Collateral = "", "", Collateral & ", ") & GridView2.GetRowCellValue(x, "Collateral")
                    RecommendedLoan += GridView2.GetRowCellValue(x, "LoanableValue")
                    TotalAppraised += GridView2.GetRowCellValue(x, "AppraisedValue")
                Next

                'If MsgBoxYes("Are you sure you want to approve this credit investigation?") = MsgBoxResult.Yes Then
                Dim SQL As String = "UPDATE credit_investigation SET"
                SQL &= String.Format(" Prefix_B = '{0}', ", CbxPrefix_B.Text)
                SQL &= String.Format(" FirstN_B = '{0}', ", TxtFirstN_B.Text)
                SQL &= String.Format(" MiddleN_B = '{0}', ", TxtMiddleN_B.Text)
                SQL &= String.Format(" LastN_B = '{0}', ", TxtLastN_B.Text)
                SQL &= String.Format(" Suffix_B = '{0}', ", cbxSuffix_B.Text)
                SQL &= String.Format(" NoC_B = '{0}', ", txtNoC_B.Text)
                SQL &= String.Format(" StreetC_B = '{0}', ", txtStreetC_B.Text)
                SQL &= String.Format(" BarangayC_B = '{0}', ", txtBarangayC_B.Text)
                SQL &= String.Format(" `AddressC_B-ID` = '{0}', ", ValidateComboBox(cbxAddressC_B))
                SQL &= String.Format(" AddressC_B = '{0}', ", cbxAddressC_B.Text)

                SQL &= String.Format(" Residence_B = '{0}', ", cbxResidence.Text)
                SQL &= String.Format(" House_B = '{0}', ", House_B)
                SQL &= String.Format(" Rent_B = '{0}', ", dRent_B.Value)
                SQL &= String.Format(" AsConfirmed = '{0}', ", txtConfirmed.Text)
                SQL &= String.Format(" LenghtOfStay = '{0}', ", txtLengthStay.Text)
                SQL &= String.Format(" Neighborhood = '{0}', ", cbxNeighborhood.Text)
                SQL &= String.Format(" Birth_B = '{0}', ", FormatDatePicker(DtpBirth_B))
                SQL &= String.Format(" Civil_B = '{0}', ", Civil_B)

                SQL &= String.Format(" Prefix_D1 = '{0}', ", CbxPrefix_1.Text)
                SQL &= String.Format(" FirstN_D1 = '{0}', ", TxtFirstN_1.Text)
                SQL &= String.Format(" MiddleN_D1 = '{0}', ", TxtMiddleN_1.Text)
                SQL &= String.Format(" LastN_D1 = '{0}', ", TxtLastN_1.Text)
                SQL &= String.Format(" Suffix_D1 = '{0}', ", cbxSuffix_1.Text)
                SQL &= String.Format(" Age_D1 = '{0}', ", iAge_D1.Value)
                SQL &= String.Format(" Grade_D1 = '{0}', ", txtGrade_1.Text)
                SQL &= String.Format(" School_D1 = '{0}', ", txtSchool_1.Text)
                SQL &= String.Format(" SchoolAddress_D1 = '{0}', ", txtSchoolAddress_1.Text)
                SQL &= String.Format(" Prefix_D2 = '{0}', ", CbxPrefix_2.Text)
                SQL &= String.Format(" FirstN_D2 = '{0}', ", TxtFirstN_2.Text)
                SQL &= String.Format(" MiddleN_D2 = '{0}', ", TxtMiddleN_2.Text)
                SQL &= String.Format(" LastN_D2 = '{0}', ", TxtLastN_2.Text)
                SQL &= String.Format(" Suffix_D2 = '{0}', ", cbxSuffix_2.Text)
                SQL &= String.Format(" Age_D2 = '{0}', ", iAge_D2.Value)
                SQL &= String.Format(" Grade_D2 = '{0}', ", txtGrade_2.Text)
                SQL &= String.Format(" School_D2 = '{0}', ", txtSchool_2.Text)
                SQL &= String.Format(" SchoolAddress_D2 = '{0}', ", txtSchoolAddress_2.Text)
                SQL &= String.Format(" Prefix_D3 = '{0}', ", CbxPrefix_3.Text)
                SQL &= String.Format(" FirstN_D3 = '{0}', ", TxtFirstN_3.Text)
                SQL &= String.Format(" MiddleN_D3 = '{0}', ", TxtMiddleN_3.Text)
                SQL &= String.Format(" LastN_D3 = '{0}', ", TxtLastN_3.Text)
                SQL &= String.Format(" Suffix_D3 = '{0}', ", cbxSuffix_3.Text)
                SQL &= String.Format(" Age_D3 = '{0}', ", iAge_D3.Value)
                SQL &= String.Format(" Grade_D3 = '{0}', ", txtGrade_3.Text)
                SQL &= String.Format(" School_D3 = '{0}', ", txtSchool_3.Text)
                SQL &= String.Format(" SchoolAddress_D3 = '{0}', ", txtSchoolAddress_3.Text)
                SQL &= String.Format(" Prefix_D4 = '{0}', ", CbxPrefix_4.Text)
                SQL &= String.Format(" FirstN_D4 = '{0}', ", TxtFirstN_4.Text)
                SQL &= String.Format(" MiddleN_D4 = '{0}', ", TxtMiddleN_4.Text)
                SQL &= String.Format(" LastN_D4 = '{0}', ", TxtLastN_4.Text)
                SQL &= String.Format(" Suffix_D4 = '{0}', ", cbxSuffix_4.Text)
                SQL &= String.Format(" Age_D4 = '{0}', ", iAge_D4.Value)
                SQL &= String.Format(" Grade_D4 = '{0}', ", txtGrade_4.Text)
                SQL &= String.Format(" School_D4 = '{0}', ", txtSchool_4.Text)
                SQL &= String.Format(" SchoolAddress_D4 = '{0}', ", txtSchoolAddress_4.Text)

                SQL &= String.Format(" Employer_B = '{0}', ", cbxEmployer_B.Text)
                SQL &= String.Format(" EmployerAddress_B = '{0}', ", txtEmployerAddress_B.Text)
                SQL &= String.Format(" Hired_B = '{0}', ", FormatDatePicker(dtpHired_B))
                SQL &= String.Format(" YearHired = {0}, ", If(cbxYearHired.Checked, 1, 0))
                SQL &= String.Format(" EmploymentStat_B = '{0}', ", EmplStatus_B)
                SQL &= String.Format(" Position_B = '{0}', ", cbxPosition_B.Text)
                SQL &= String.Format(" Monthly_B = '{0}', ", dMonthly_B.Value)
                SQL &= String.Format("  BusinessName_B = '{0}', ", txtBusinessName_B.Text)
                SQL &= String.Format(" BusinessAddress_B = '{0}', ", txtBusinessAddress_B.Text)
                SQL &= String.Format(" BusinessStarted = '{0}', ", FormatDatePicker(dtpBusinessStarted))
                SQL &= String.Format(" NatureBusiness_B = '{0}', ", cbxBusinessNature.Text)
                SQL &= String.Format(" Capital_B = '{0}', ", dCapital_B.Value)
                SQL &= String.Format(" NoEmployees_B = '{0}', ", iNoEmployees_B.Value)
                SQL &= String.Format(" BusinessStock = '{0}', ", dBusinessStock.Value)
                SQL &= String.Format(" BusinessVehicle = '{0}', ", txtBusinessVehicle.Text)
                SQL &= String.Format(" BusinessIncome_B = '{0}', ", dBusinessIncome_B.Value)
                SQL &= String.Format(" BusinessPermit = '{0}', ", txtBusinessPermit.Text)
                SQL &= String.Format(" OtherIncome_B = '{0}', ", txtOtherIncome_B.Text)
                SQL &= String.Format(" OtherIncome_B_Amount = '{0}', ", dOtherIncome_B.Value)
                SQL &= String.Format(" Creditor_1 = '{0}', ", txtCreditor_1.Text)
                SQL &= String.Format(" CreditAddress_1 = '{0}', ", txtCreditAddress_1.Text)
                SQL &= String.Format(" CreditGranted_1 = '{0}', ", FormatDatePicker(dtpCreditGranted_1))
                SQL &= String.Format(" Term_1 = '{0}', ", iTerm_1.Value)
                SQL &= String.Format(" AmountGranted_1 = '{0}', ", dAmountGranted_1.Value)
                SQL &= String.Format(" Balance_1 = '{0}', ", dBalance_1.Value)
                SQL &= String.Format(" CreditPayment_1 = '{0}', ", dCreditPayment_1.Value)
                SQL &= String.Format(" CreditRemarks_1 = '{0}', ", txtCreditRemarks_1.Text)
                SQL &= String.Format(" Creditor_2 = '{0}', ", txtCreditor_2.Text)
                SQL &= String.Format(" CreditAddress_2 = '{0}', ", txtCreditAddress_2.Text)
                SQL &= String.Format(" CreditGranted_2 = '{0}', ", FormatDatePicker(dtpCreditGranted_2))
                SQL &= String.Format(" Term_2 = '{0}', ", iTerm_2.Value)
                SQL &= String.Format(" AmountGranted_2 = '{0}', ", dAmountGranted_2.Value)
                SQL &= String.Format(" Balance_2 = '{0}', ", dBalance_2.Value)
                SQL &= String.Format(" CreditPayment_2 = '{0}', ", dCreditPayment_2.Value)
                SQL &= String.Format(" CreditRemarks_2 = '{0}', ", txtCreditRemarks_2.Text)

                SQL &= String.Format(" Bank_1 = '{0}', ", txtBank_1.Text)
                SQL &= String.Format(" Branch_1 = '{0}', ", txtBranch_1.Text)
                SQL &= String.Format(" AccountT_1 = '{0}', ", AccountT_1)
                SQL &= String.Format(" SA_1 = '{0}', ", txtSA_1.Text)
                SQL &= String.Format(" AverageBalance_1 = '{0}', ", dAverageBalance_1.Value)
                SQL &= String.Format(" Opened_1 = '{0}', ", txtOpened_1.Text)
                SQL &= String.Format(" Bank_2 = '{0}', ", txtBank_2.Text)
                SQL &= String.Format(" Branch_2 = '{0}', ", txtBranch_2.Text)
                SQL &= String.Format(" AccountT_2 = '{0}', ", AccountT_2)
                SQL &= String.Format(" SA_2 = '{0}', ", txtSA_2.Text)
                SQL &= String.Format(" AverageBalance_2 = '{0}', ", dAverageBalance_2.Value)
                SQL &= String.Format(" Opened_2 = '{0}', ", txtOpened_2.Text)

                SQL &= String.Format(" CreditRating = '{0}', ", CreditRating)
                SQL &= String.Format(" RecommendationFor = '{0}', ", RecommendedFor)
                SQL &= String.Format(" Rec_ApprovedAmount = '{0}', ", dApprovedAmount.Value)
                SQL &= String.Format(" Rec_ApprovedTerms = '{0}', ", iApprovedTerms.Value)
                SQL &= String.Format(" Rec_ApprovedRate = '{0}', ", dApprovedRate.Value)
                SQL &= String.Format(" Rec_PDC = '{0}', ", If(cbxPDC.Checked, 1, 0))
                SQL &= String.Format(" Rec_NoPDC = '{0}', ", If(cbxNoPDC.Checked, 1, 0))
                SQL &= String.Format(" Rec_Remarks = '{0}', ", rRecommendation.Text)
                SQL &= String.Format(" Title = '{0}', ", txtTitle.Text)
                SQL &= String.Format(" CaseNum = '{0}', ", txtCaseNum.Text)
                SQL &= String.Format(" DateFilled = '{0}', ", FormatDatePicker(dtpDateFilled))
                SQL &= String.Format(" Court = '{0}', ", cbxCourt.Text)
                SQL &= String.Format(" CaseNature = '{0}', ", cbxCaseNature.Text)
                SQL &= String.Format(" AmountInvolved = '{0}', ", dAmountInvolved.Value)
                SQL &= String.Format(" CaseStatus = '{0}', ", cbxCaseStatus.Text)
                SQL &= String.Format(" Findings = '{0}', ", txtFindings.Text)
                SQL &= String.Format(" FindingsStat = '{0}', ", Findings)
                SQL &= String.Format(" CACPI = '{0}', ", txtCACPI.Text)

                SQL &= String.Format(" Location_1 = '{0}', ", txtLocation_1.Text)
                SQL &= String.Format(" TCT_1 = '{0}', ", txtTCT_1.Text)
                SQL &= String.Format(" Area_1 = '{0}', ", dArea_1.Value)
                SQL &= String.Format(" PropertiesRemarks_1 = '{0}', ", txtPropertiesRemarks_1.Text)
                SQL &= String.Format(" Location_2 = '{0}', ", txtLocation_2.Text)
                SQL &= String.Format(" TCT_2 = '{0}', ", txtTCT_2.Text)
                SQL &= String.Format(" Area_2 = '{0}', ", dArea_2.Value)
                SQL &= String.Format(" PropertiesRemarks_2 = '{0}', ", txtPropertiesRemarks_2.Text)

                SQL &= String.Format(" Vehicle_1 = '{0}', ", txtVehicle_1.Text)
                SQL &= String.Format(" Year_1 = '{0}', ", FormatDatePicker(dtpYear_1))
                SQL &= String.Format(" WhomAcquired_1 = '{0}', ", txtWhomAcquired_1.Text)
                SQL &= String.Format(" VehicleRemarks_1 = '{0}', ", txtVehicleRemarks_1.Text)
                SQL &= String.Format(" Vehicle_2 = '{0}', ", txtVehicle_2.Text)
                SQL &= String.Format(" Year_2 = '{0}', ", FormatDatePicker(dtpYear_2))
                SQL &= String.Format(" WhomAcquired_2 = '{0}', ", txtWhomAcquired_2.Text)
                SQL &= String.Format(" VehicleRemarks_2 = '{0}', ", txtVehicleRemarks_2.Text)

                SQL &= String.Format(" OtherProperties = '{0}', ", txtOtherProperties.Text)
                SQL &= String.Format(" Narrative = '{0}', ", rNarrative.Text.InsertQuote)
                SQL &= String.Format(" Ex_TotalDisposable = '{0}', ", dTotalDisposable.Value)
                SQL &= String.Format(" Ex_Living = '{0}', ", dLiving.Value)
                SQL &= String.Format(" Ex_Clothing = '{0}', ", dClothing.Value)
                SQL &= String.Format(" Ex_Education = '{0}', ", dEducation.Value)
                SQL &= String.Format(" Ex_Transportation = '{0}', ", dTransportation.Value)
                SQL &= String.Format(" Ex_Lights = '{0}', ", dLighths.Value)
                SQL &= String.Format(" Ex_Insurance = '{0}', ", dInsurance.Value)
                SQL &= String.Format(" Ex_Amortization = '{0}', ", dAmortization.Value)
                SQL &= String.Format(" Ex_Miscellaneous = '{0}', ", dMiscellaneous.Value)
                SQL &= String.Format(" Ex_TotalExpenses = '{0}', ", dTotalExpenses.Value)
                SQL &= String.Format(" Ex_NetDisposable = '{0}', ", dNetDisposable.Value)
                SQL &= String.Format(" Ex_TMFI = '{0}', ", dTMFI.Value)
                SQL &= String.Format(" Ex_TMDI = '{0}', ", dTMDI.Value)
                SQL &= String.Format(" Ex_Remarks = '{0}', ", txtExpenseRemarks.Text.InsertQuote)
                SQL &= String.Format(" PurposeLoan = '{0}', ", rPurposeLoan.Text.InsertQuote)
                SQL &= String.Format(" AmountApplied = '{0}', ", AmountApplied)
                SQL &= String.Format(" LoanType = '{0}', ", Mortgage)
                SQL &= String.Format(" Product = '{0}', ", Product)
                SQL &= String.Format(" Collateral = '{0}', ", Collateral)
                SQL &= String.Format(" TotalAppraised = '{0}', ", TotalAppraised)
                SQL &= String.Format(" Loanable = '{0}', ", RecommendedLoan)
                SQL &= String.Format(" Others = '{0}',", rOthers.Text.InsertQuote)
                SQL &= String.Format(" CheckedID = '{0}',", Empl_ID)
                SQL &= " `CI_status` = 'CHECKED'"
                SQL &= String.Format(" WHERE CINumber = '{0}';", txtCINumber.Text)

                BM_AmountApplied = .dPrincipalB.Value
                BM_Terms = .iTermsB.Value
                BM_Interest = .dInterestRateB.Value
                DataObject(String.Format(" UPDATE credit_application SET CI_status = 'CHECKED', BM_Amount = '{1}', BM_Terms = '{2}', BM_Interest = '{3}' WHERE CreditNumber = '{0}';", CreditNumber, .dPrincipalB.Value, .iTermsB.Value, .dInterestRateB.Value))
                For x As Integer = 0 To GridView1.RowCount - 1
                    SQL &= String.Format("UPDATE appraise_ve SET `status` = 'ACTIVE' WHERE CollateralNumber = '{0}' AND `status` = 'PENDING';", GridView1.GetRowCellValue(x, "Col_ID"))
                    SQL &= String.Format("UPDATE collateral_ve SET `status` = 'ACTIVE', CINumber = '{1}' WHERE CollateralNumber = '{0}' AND `status` = 'PENDING';", GridView1.GetRowCellValue(x, "Col_ID"), txtCINumber.Text)
                Next
                For x As Integer = 0 To GridView2.RowCount - 1
                    SQL &= String.Format("UPDATE appraise_re SET `status` = 'ACTIVE' WHERE CollateralNumber = '{0}' AND `status` = 'PENDING';", GridView2.GetRowCellValue(x, "Col_ID"))
                    SQL &= String.Format("UPDATE collateral_re SET `status` = 'ACTIVE', CINumber = '{1}' WHERE CollateralNumber = '{0}' AND `status` = 'PENDING';", GridView2.GetRowCellValue(x, "Col_ID"), txtCINumber.Text)
                Next

                DataObject(SQL)
                If txtPath_B.Text <> "" Then
                    SaveImage(pb_B, "Borrower", False)
                End If
                If txtPath_S.Text <> "" Then
                    SaveImage(pb_Spouse, "Spouse", False)
                End If
                If ChangeSketch Then
                    SaveImage(pbSketch, "Sketch", False)
                End If
                FromApproveBM = True

                If Approver1_Credit >= AmountApplied Or Approver2_Credit >= AmountApplied Then
                    MsgBox("Successfully Approved!", MsgBoxStyle.Information, "Info")
                Else
                    MsgBox("Successfully BM Approved! Credit Investigation is now for crecomm approval.", MsgBoxStyle.Information, "Info")
                End If

                If GridView5.GetFocusedRowCellValue("BranchID_Source") = Branch_ID Then
                    BtnEmailCrecom_Click(sender, e)
                Else
                    'EMAIL TO NOTIFY SOURCE BRANCH FOR CI REPORT
                    Dim Msg As String = ""
                    Dim Subject As String = String.Format("Credit Investigate Report of {0} [{1}].", If(CbxPrefix_B.Text = "", "", CbxPrefix_B.Text & " ") & If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & cbxSuffix_B.Text, Branch)
                    Dim EmailTo As String = ""
                    Dim BM As DataTable = GetBM(GridView5.GetFocusedRowCellValue("BranchID_Source"))
                    For x As Integer = 0 To BM.Rows.Count - 1
                        Msg = String.Format("Good day," & vbCrLf, BM(x)("Employee"))
                        Msg &= String.Format("Sending you the CI Report of {1} that you requested from {0} Branch." & vbCrLf, Branch, If(CbxPrefix_B.Text = "", "", CbxPrefix_B.Text & " ") & If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & cbxSuffix_B.Text)
                        Msg &= "Thank you!"
                        '******* SEND SMS *********************************************************************************
                        If BM(x)("Phone") = "" Then
                        Else
                            SendSMS(BM(x)("Phone"), Msg, True)
                        End If
                        '******* SEND EMAIL *********************************************************************************
                        If BM(x)("EmailAdd") = "" Then
                        Else
                            EmailTo = EmailTo & BM(x)("EmailAdd") & ", "
                        End If
                    Next
                    If EmailTo = "" Then
                    Else
                        AttachmentFiles = New ArrayList()
                        Dim FName As String = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) & "\" & txtCINumber.Text & "-" & Format(Date.Now, "yyyy-MM-dd_hhmmss") & ".pdf"
                        GenerateCIR(False, FName)
                        AttachmentFiles.Add(FName)
                        SendEmail(EmailTo.Substring(0, EmailTo.Length - 2), Subject, Msg, False, False, False, 0, "", "")
                    End If
                End If
                btnEmailCrecom.Text = "Send &Email"
                FromApproveBM = False
                Logs("Credit Investigation", "BM Approve", "BM Approve", String.Format("BM Approved Credit Investigation with CI Number {0}.", txtCINumber.Text) & Changes(), "", "", CreditNumber)
                LoadData()
                If Approver1_Credit >= AmountApplied Or Approver2_Credit >= AmountApplied Then
                    Clear()
                Else
                    PanelEx10.Enabled = False
                    PanelEx2.Enabled = False
                    PanelEx4.Enabled = False
                    PanelEx5.Enabled = False
                    PanelEx6.Enabled = False
                    PanelEx7.Enabled = False
                    btnSave.Enabled = False
                    btnSave_F.Enabled = False

                    btnCheckBM.Enabled = False
                    If GridView5.GetFocusedRowCellValue("BranchID_Source") = Branch_ID Then
                        btnEmailCrecom.Enabled = True
                        btnApproveCI.Enabled = True
                    End If
                    'End If
                    'btnEmailCrecom.Location = New Point(948, 4)
                End If
            ElseIf Result = DialogResult.yes Then
                Dim Reason As String 'Reason for change
                If FrmReason.ShowDialog = DialogResult.OK Then
                    Reason = FrmReason.txtReason.Text
                End If

                Cursor = Cursors.WaitCursor
                DataObject(String.Format("UPDATE credit_investigation SET `status` = 'DISAPPROVED' WHERE CINumber = '{0}';UPDATE credit_application SET CI_status = 'PENDING' WHERE CreditNumber = '{1}';", txtCINumber.Text, CreditNumber))
                Logs("Credit Investigation", "BM Disapproved", "BM Disapproved", String.Format("BM Disapproved Credit Investigation with CI Number {0}.", txtCINumber.Text), "", "", CreditNumber)
                MsgBox("Successfully Disapproved!", MsgBoxStyle.Information, "Info")
                Clear()
                LoadData()
                Cursor = Cursors.Default
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnEmailCrecom_Click(sender As Object, e As EventArgs) Handles btnEmailCrecom.Click
        If FromApproveBM Then
            GoTo Here
        End If
        If MsgBoxYes(If(btnEmailCrecom.Text = "Send Review", "Are you sure you want to send this Credit Investigation for Review?", "Are you sure you want to send this Credit Investigation to Credit Committee?")) = MsgBoxResult.Yes Then
Here:
            Cursor = Cursors.WaitCursor
            Dim CreComm As New FrmCrecomList
            With CreComm
                .DocumentNumber = CreditNumber
                If Approver3_Credit >= AmountApplied Then
                    .IncludeDM = True
                End If
                If Approver4_Credit >= AmountApplied Then
                    .IncludeRM = True
                End If
                If btnEmailCrecom.Text = "Send Review" Then
                    .IncludeCrecomm = False
                    .IncludeDM = True
                    .IncludeRM = True
                Else
                    .IncludeCrecomm = True
                End If
            End With
            If CreComm.ShowDialog = DialogResult.OK Then
                Dim Email As String = ""
                Dim CC As String = ""
                For x As Integer = 0 To CreComm.GridView1.RowCount - 1
                    If CBool(CreComm.GridView1.GetRowCellValue(x, "Include")) = True And CBool(CreComm.GridView1.GetRowCellValue(x, "CC Only")) = False And CreComm.GridView1.GetRowCellValue(x, "Email Address") <> "" Then
                        Email &= CreComm.GridView1.GetRowCellValue(x, "Email Address") & ", "
                    End If
                    If CBool(CreComm.GridView1.GetRowCellValue(x, "Include")) = True And CBool(CreComm.GridView1.GetRowCellValue(x, "CC Only")) = True And CreComm.GridView1.GetRowCellValue(x, "Email Address") <> "" Then
                        CC &= CreComm.GridView1.GetRowCellValue(x, "Email Address") & ", "
                    End If
                Next
                If Email = "" Then
                    MsgBox("Please select a Credit Committee.", MsgBoxStyle.Information, "Info")
                    Cursor = Cursors.Default
                    Exit Sub
                End If

                Dim SQL As String = "SELECT "
                SQL &= "    FORMAT(IFNULL(SUM(AmountApplied),0),2) AS 'Total Booking',"
                SQL &= String.Format("    FORMAT(IFNULL((SELECT `M{0}T` FROM target_booking WHERE ProductID = {1} AND BranchID = '{2}' AND `status` = 'ACTIVE' AND FP_Status = 'APPROVED' AND YEAR('{3}') = `Year` AND Half = IF(MONTH('{3}') BETWEEN 1 AND 6,1,2)),0),2) AS 'Threshold'", If(Format(ApplicationDate, "MM") > 6, Format(ApplicationDate.AddMonths(-6), "MM"), Format(ApplicationDate, "MM")), ProductID, Branch_ID, Format(ApplicationDate, "yyyy-MM-dd"))
                SQL &= " FROM credit_application"
                SQL &= String.Format(" WHERE `status` = 'ACTIVE' AND PaymentRequest IN ('RELEASED','REQUESTED','CHECKED REQUEST','APPROVED REQUEST','CLOSED') AND Product_ID = '{1}' AND MONTH(IFNULL(Released,Trans_Date)) = MONTH('{0}') AND YEAR(IFNULL(Released,Trans_Date)) = YEAR('{0}')", Format(ApplicationDate, "yyyy-MM-dd"), ProductID)
                Dim DT_Thresholding As DataTable = DataSource(SQL)

                Dim Subject As String = String.Format("[{4}] {0}-{1}-{2} {3}", Branch_Code, DataObject(String.Format("SELECT `code` FROM product_setup WHERE Product = '{0}';", Product)), TxtFirstN_B.Text & " " & TxtLastN_B.Text, If(dApprovedAmount.Text = 0, FormatNumber(AmountApplied, 2), dApprovedAmount.Text), CreditNumber)
                'Body = "Please forward your reply to this email : " & Branch_Email & "<br><br>"
                Dim Body As String = "Dear Sir/Madam,<br><br>"
                Body &= "Sending to you RLA under the following scope<br><br>"
                Body &= "Borrower : <b>" & UpperCaseFirst(TxtFirstN_B.Text & " " & TxtLastN_B.Text) & "</b><br>"
                Body &= "Principal : <b>P" & FormatNumber(If(BM_AmountApplied = 0, AmountApplied, BM_AmountApplied), 2) & "</b><br>"
                Body &= "Facility : <b>" & UpperCaseFirst(Product) & "</b><br>"
                Body &= "Interest : <b>" & If(BM_AmountApplied = 0, Interest, BM_Interest) & "% P.A.</b><br>"
                Body &= "Terms : <b>" & If(BM_Terms = 0, Terms, BM_Terms) & " Month(s)</b><br><br>"
                Body &= "Collateral : <blockquote>"
                For x As Integer = 0 To GridView1.RowCount - 1
                    Body &= "             " & GridView1.GetRowCellValue(x, "Collateral") & "<br><br>"
                Next
                For x As Integer = 0 To GridView2.RowCount - 1
                    Body &= "             " & GridView2.GetRowCellValue(x, "Collateral") & "<br>"
                    If GridView2.GetRowCellValue(x, "Coordinates") = "" Then
                        Body &= "<br>"
                    Else
                        Body &= "Google Map Link : <i>" & GridView2.GetRowCellValue(x, "Coordinates") & "</i><br><br>"
                    End If
                Next
                Body &= "</blockquote>Loan Purpose : " & rPurposeLoan.Text.InsertQuote & "<br><br>"
                Body &= "Business : " & txtBusinessName_B.Text & "<br><br>"
                Body &= "Narrative Report : " & rNarrative.Text.InsertQuote & "<br><br>"
                Body &= "Web Approval Link : http://portal.firststandardfinancecorp.com:8887/" & "<br><br>"

                If DT_Thresholding.Rows.Count > 0 Then
                    If CDbl(DT_Thresholding(0)("Total Booking")) + AmountApplied > CDbl(DT_Thresholding(0)("Threshold")) Then
                        Body &= "<font color='red'>Note : <b>Approved Principal Amount will reach or exceed the Threshold for Product " & Product & "</b><br>"
                        Body &= "Total Booking : <b>" & DT_Thresholding(0)("Total Booking") & "</b><br>"
                        Body &= "Threshold <b>: " & DT_Thresholding(0)("Threshold") & "</b><br>"
                        Body &= "Excess : <b>" & FormatNumber((CDbl(DT_Thresholding(0)("Total Booking")) + AmountApplied) - CDbl(DT_Thresholding(0)("Threshold")), 2) & "</b><br>"
                        If DT_Thresholding(0)("Threshold") > 0 Then
                            Body &= "Excess % <b>: " & FormatNumber((((CDbl(DT_Thresholding(0)("Total Booking")) + AmountApplied) - CDbl(DT_Thresholding(0)("Threshold"))) / CDbl(DT_Thresholding(0)("Threshold")) * 100), 2) & "%</font></b><br><br>"
                        Else
                            Body &= "<br><br>"
                        End If
                    End If
                End If

                Dim Requirements As String = ""
                Dim DT_Requirements As DataTable = DataSource(String.Format("SELECT Requirement(Doc_ID) AS 'Document' FROM submit_documents WHERE is_complete = 'NO' AND `status` = 'ACTIVE' AND CreditNumber = '{0}';", CreditNumber))
                For x As Integer = 0 To DT_Requirements.Rows.Count - 1
                    Requirements &= x + 1 & ".) " & DT_Requirements(x)("Document") & "<br>" & vbCrLf
                Next

                If Requirements = "" Then
                Else
                    Body &= "List of Lacking Requirements :"
                    Body &= vbCrLf & "<br>" & Requirements & "<br>" & vbCrLf
                End If

                Body &= "For your perusal<br><br>"
                Body &= "Thank you<br>"

                'AttachmentFiles = New ArrayList()
                Dim FName As String = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) & "\CIR-" & txtCINumber.Text & "-" & Format(Date.Now, "yyyy-MM-dd_hhmmss") & ".pdf"
                GenerateCIR(False, FName)
                AttachmentFiles.Add(FName)
                'WebAttachments(CreditNumber, FName, "CIR-" & txtCINumber.Text & ".pdf")
                For x As Integer = 0 To GridView1.RowCount - 1
                    FName = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) & "\Appraisal-" & GridView1.GetRowCellValue(x, "Collateral").Replace("/", " ") & "-" & Format(Date.Now, "yyyy-MM-dd_hhmmss") & ".pdf"
                    Generate_Appraisal(False, FName, GridView1.GetRowCellValue(x, "Col_ID"), GridView1.GetRowCellValue(x, "ID"))
                    AttachmentFiles.Add(FName)
                    'WebAttachments(CreditNumber, FName, "Appraisal-" & GridView1.GetRowCellValue(x, "Collateral").Replace("/", " ") & ".pdf")
                Next
                For x As Integer = 0 To GridView2.RowCount - 1
                    FName = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) & "\Appraisal-" & GridView2.GetRowCellValue(x, "Collateral").Replace("/", " ") & "-" & Format(Date.Now, "yyyy-MM-dd_hhmmss") & ".pdf"
                    Generate_Appraisal(False, FName, GridView2.GetRowCellValue(x, "Col_ID"), GridView2.GetRowCellValue(x, "ID"))
                    AttachmentFiles.Add(FName)
                    'WebAttachments(CreditNumber, FName, "Appraisal-" & GridView2.GetRowCellValue(x, "Collateral").Replace("/", " ") & ".pdf")
                Next
                For x As Integer = 0 To TotalImage - 1
                    FName = String.Format("{0}\{1}\{2}\Investigation\{3}\{4}\{5}", RootFolder, MainFolder, Branch_Code, txtCINumber.Text, "Attachment", "Image" & x & ".jpg")
                    AttachmentFiles.Add(FName)
                    'WebAttachments(CreditNumber, FName, "Image" & x & ".jpg")
                Next
                Dim Loans As New FrmLoanApplication
                With Loans
                    .WindowState = FormWindowState.Minimized
                    .From_CI_Print = True
                    .CreditNumber = CreditNumber
                    .Show()
                    .cbxAll.Checked = True
                    .btnSearch.PerformClick()
                    .vPrint = True
                    .PrintName = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) & "\CAF-" & txtCINumber.Text & "-" & Format(Date.Now, "yyyy-MM-dd_hhmmss") & ".pdf"
                    .GridView5_DoubleClick(sender, e)
                    .BtnPrint_Click(sender, e)
                    AttachmentFiles.Add(.PrintName)
                    'WebAttachments(CreditNumber, .PrintName, "CAF-" & txtCINumber.Text & ".pdf")
                    .Dispose()
                End With
                'Gi Comment usa ang RLA kay wala pa nahuman
                'FName = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) & "\RLA-" & txtCINumber.Text & "-" & Format(Date.Now, "yyyy-MM-dd_hhmmss") & ".pdf"
                'Generate_RLA(False, FName)
                'AttachmentFiles.Add(FName)
                Dim CompiledFile As String = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) & "\Compiled Attachment for " & txtCINumber.Text & " " & Format(Date.Now, "yyyy-MM-dd_hhmmss") & ".pdf"
                Dim ListOfPDF As New List(Of String)
                Dim OtherFiles As New ArrayList
                If AttachmentFiles.Count > 0 Then
                    For x As Integer = 0 To AttachmentFiles.Count - 1
                        If FileExists(AttachmentFiles(x)) Then
                            If AttachmentFiles(x).ToString.Contains(".pdf") Then
                                ListOfPDF.Add(AttachmentFiles(x))
                            Else
                                OtherFiles.Add(AttachmentFiles(x))
                            End If
                        End If
                    Next
                    AttachmentFiles.Clear()
                End If
                If OtherFiles.Count > 0 Then
                    For x As Integer = 0 To OtherFiles.Count - 1
                        AttachmentFiles.Add(OtherFiles(x)) 'Merged File 
                        'WebAttachments(CreditNumber, OtherFiles(x), "Attachment " & x + 1 & "." & OtherFiles(x).Split(".")(1))
                    Next
                    OtherFiles.Clear()
                End If
                MergePdfFiles(ListOfPDF.ToArray, CompiledFile)
                WebAttachments(CreditNumber, CompiledFile, "Compiled Attachment for " & txtCINumber.Text & " " & Format(Date.Now, "yyyy-MM-dd_hhmmss") & ".pdf")
                AttachmentFiles.Add(CompiledFile) 'Merged File 
                If Empl_Email = "" Then
                    SendEmail(Email, Subject, Body, False, True, False, 0, CreditNumber, CC)
                Else
                    SendEmail(Email & Empl_Email, Subject, Body, False, True, False, 0, CreditNumber, CC)
                End If
                'Attachment to be followed lang usa kay daku pa workouton kay apil ang printout sa CI og ang appraisal.
                'DataSource(String.Format("UPDATE credit_investigation SET `CI_status` = 'EMAILED' WHERE CINumber = '{0}'", txtCINumber.Text))
                Logs("Credit Investigation", "Email", "Email", String.Format("Email Credit Investigation with CI Number {0}", txtCINumber.Text), "", "", CreditNumber)
                LoadData()
            End If
            CreComm.Dispose()
            Cursor = Cursors.Default
        End If
    End Sub

    Public Sub WebAttachments(DocumentNumber As String, FileFrom As String, FName As String)
        '********CREATE FOLDER WebAttachments
        If Not IO.Directory.Exists(String.Format("{0}\{1}\Web", RootFolder, MainFolder)) Then
            IO.Directory.CreateDirectory(String.Format("{0}\{1}\Web", RootFolder, MainFolder))
        End If
        '********CREATE FOLDER WebAttachments
        If Not IO.Directory.Exists(String.Format("{0}\{1}\Web\{2}", RootFolder, MainFolder, DocumentNumber)) Then
            IO.Directory.CreateDirectory(String.Format("{0}\{1}\Web\{2}", RootFolder, MainFolder, DocumentNumber))
        End If
        '********CREATE File
        Try
            Dim xPath As String = String.Format("{0}\{1}\Web\{2}\{3}", RootFolder, MainFolder, DocumentNumber, FName)
            IO.File.Copy(FileFrom, xPath, True)
        Catch ex As Exception
        End Try
    End Sub

    Public Sub SaveImage(pBox As DevExpress.XtraEditors.PictureEdit, Description As String, ForCreditApplication As Boolean)
        FileName = Description & ".jpg"
        '********CREATE FOLDER FSFC System
        If Not IO.Directory.Exists(String.Format("{0}\{1}", RootFolder, MainFolder)) Then
            IO.Directory.CreateDirectory(String.Format("{0}\{1}", RootFolder, MainFolder))
        End If
        '********CREATE FOLDER Branch
        If Not IO.Directory.Exists(String.Format("{0}\{1}\{2}", RootFolder, MainFolder, Branch_Code)) Then
            IO.Directory.CreateDirectory(String.Format("{0}\{1}\{2}", RootFolder, MainFolder, Branch_Code))
        End If
        '********CREATE FOLDER Borrowers
        If Not IO.Directory.Exists(String.Format("{0}\{1}\{2}\Application", RootFolder, MainFolder, Branch_Code)) Then
            IO.Directory.CreateDirectory(String.Format("{0}\{1}\{2}\Application", RootFolder, MainFolder, Branch_Code))
        End If
        '********CREATE FOLDER BorrowerID
        If Not IO.Directory.Exists(String.Format("{0}\{1}\{2}\Application\{3}", RootFolder, MainFolder, Branch_Code, If(ForCreditApplication, CreditNumber, txtCINumber.Text))) Then
            IO.Directory.CreateDirectory(String.Format("{0}\{1}\{2}\Application\{3}", RootFolder, MainFolder, Branch_Code, If(ForCreditApplication, CreditNumber, txtCINumber.Text)))
        End If
        '********CREATE File
        Try
            Dim xPath As String = String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Branch_Code, If(ForCreditApplication, CreditNumber, txtCINumber.Text), FileName)
            If IO.File.Exists(xPath) Then
                IO.File.Delete(xPath)
            End If
            pBox.Image.Save(xPath, ImageFormat.Jpeg)
        Catch ex As Exception
        End Try
    End Sub

    Private Sub IEvaluatorsW_Click(sender As Object, e As EventArgs) Handles iEvaluatorsW.Click
        Try
            If GridView5.GetFocusedRowCellValue("CI Number") = "" Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim Credit_Details As DataTable = DataSource(String.Format("SELECT Interest, RPPD, Face_Amount, GMA, Rebate, GMA - Rebate AS 'NMA', Service_Charge + Appraisal_Fee + CI_Fee + Insurance + Miscellaneous_Income + Advance_Payment + Deduct_Balance AS 'Deductions', Mobile_B, TermType, Terms FROM credit_application WHERE CreditNumber = '{0}';", GridView5.GetFocusedRowCellValue("Credit Number")))
        If Credit_Details.Rows.Count > 0 Then
            Dim Report As New RptEvaluatorsWorksheet
            With Report
                .Name = "Evaluator's Worksheet of " & GridView5.GetFocusedRowCellValue("Borrower")
                .lblBorrower.Text = GridView5.GetFocusedRowCellValue("Borrower")
                .lblAddress.Text = If(GridView5.GetFocusedRowCellValue("NoC_B") = "", "", GridView5.GetFocusedRowCellValue("NoC_B") & ", ") & If(GridView5.GetFocusedRowCellValue("StreetC_B") = "", "", GridView5.GetFocusedRowCellValue("StreetC_B") & ", ") & If(GridView5.GetFocusedRowCellValue("BarangayC_B") = "", "", GridView5.GetFocusedRowCellValue("BarangayC_B") & ", ") & GridView5.GetFocusedRowCellValue("AddressC_B")
                .lblTelephone.Text = If(Credit_Details(0)("Mobile_B").Length = 10, "0" & Credit_Details(0)("Mobile_B"), Credit_Details(0)("Mobile_B"))
                .lblCollateral.Text = GridView5.GetFocusedRowCellValue("Collateral")
                .lblTypeLoan.Text = GridView5.GetFocusedRowCellValue("LoanType")
                .lblTerms.Text = Credit_Details(0)("Terms")
                .lblModePayment.Text = Credit_Details(0)("TermType")
                .lblAppraisedValue.Text = FormatNumber(GridView5.GetFocusedRowCellValue("TotalAppraised"), 2)

                .lblDisposable.Text = FormatNumber(GridView5.GetFocusedRowCellValue("Ex_TotalDisposable"), 2)
                .lblLiving.Text = FormatNumber(GridView5.GetFocusedRowCellValue("Ex_Living"), 2)
                .lblClothing.Text = FormatNumber(GridView5.GetFocusedRowCellValue("Ex_Clothing"), 2)
                .lblEducation.Text = FormatNumber(GridView5.GetFocusedRowCellValue("Ex_Education"), 2)
                .lblTransportation.Text = FormatNumber(GridView5.GetFocusedRowCellValue("Ex_Transportation"), 2)
                .lblLights.Text = FormatNumber(GridView5.GetFocusedRowCellValue("Ex_Lights"), 2)
                .lblInsurance.Text = FormatNumber(GridView5.GetFocusedRowCellValue("Ex_Insurance"), 2)
                .lblAmortization.Text = FormatNumber(GridView5.GetFocusedRowCellValue("Ex_Amortization"), 2)
                .lblMiscellaneous.Text = FormatNumber(GridView5.GetFocusedRowCellValue("Ex_Miscellaneous"), 2)
                .lblTotal.Text = FormatNumber(GridView5.GetFocusedRowCellValue("Ex_TotalExpenses"), 2)
                .lblNetDisposable.Text = FormatNumber(GridView5.GetFocusedRowCellValue("Ex_NetDisposable"), 2)
                .lblTMFI.Text = FormatNumber(GridView5.GetFocusedRowCellValue("Ex_TMFI"), 2)
                .lblTMDI.Text = FormatNumber(GridView5.GetFocusedRowCellValue("Ex_TMDI"), 2)

                .lblFaceAmount.Text = FormatNumber(Credit_Details(0)("Face_Amount"), 2)
                .lblRPPD.Text = FormatNumber(Credit_Details(0)("RPPD"), 2)
                .lblUDI.Text = FormatNumber(Credit_Details(0)("Interest"), 2)
                .lblTotalDeductions.Text = FormatNumber(Credit_Details(0)("Deductions"), 2)
                .lblGMA.Text = FormatNumber(Credit_Details(0)("GMA"), 2)
                .lblRebate.Text = FormatNumber(Credit_Details(0)("Rebate"), 2)
                .lblNMA.Text = FormatNumber(Credit_Details(0)("NMA"), 2)

                .lblJustification.Text = GridView5.GetFocusedRowCellValue("Narrative")
                .lblDeviations.Text = GridView5.GetFocusedRowCellValue("Others")
                .lblRecommendation.Text = GridView5.GetFocusedRowCellValue("Rec_Remarks")
                .lblC1.Text = If(GridView5.GetFocusedRowCellValue("C1") = "", "", "1.) " & GridView5.GetFocusedRowCellValue("C1"))
                .lblC2.Text = If(GridView5.GetFocusedRowCellValue("C2") = "", "", "2.) " & GridView5.GetFocusedRowCellValue("C2"))
                .lblC3.Text = If(GridView5.GetFocusedRowCellValue("C3") = "", "", "3.) " & GridView5.GetFocusedRowCellValue("C3"))
                .lblC4.Text = If(GridView5.GetFocusedRowCellValue("C4") = "", "", "4.) " & GridView5.GetFocusedRowCellValue("C4"))
                .lblC5.Text = If(GridView5.GetFocusedRowCellValue("C5") = "", "", "5.) " & GridView5.GetFocusedRowCellValue("C5"))
                .lblC6.Text = If(GridView5.GetFocusedRowCellValue("C6") = "", "", "6.) " & GridView5.GetFocusedRowCellValue("C6"))
                .lblC7.Text = If(GridView5.GetFocusedRowCellValue("C7") = "", "", "7.) " & GridView5.GetFocusedRowCellValue("C7"))
                .lblC8.Text = If(GridView5.GetFocusedRowCellValue("C8") = "", "", "8.) " & GridView5.GetFocusedRowCellValue("C8"))
                .lblC9.Text = If(GridView5.GetFocusedRowCellValue("C9") = "", "", "9.) " & GridView5.GetFocusedRowCellValue("C9"))

                .cbxApproval.Checked = If(GridView5.GetFocusedRowCellValue("Recommendation") = "APPROVAL", True, False)
                .cbxDisapproval.Checked = If(GridView5.GetFocusedRowCellValue("Recommendation") = "APPROVAL", False, True)

                .lblEvaluator.Text = DataObject(String.Format("SELECT Employee(empl_id) FROM users WHERE user_code = '{0}';", GridView5.GetFocusedRowCellValue("user_code")))
                .lblPosition.Text = DataObject(String.Format("SELECT (SELECT `Position` FROM employee_setup WHERE employee_setup.ID = users.empl_ID) FROM users WHERE user_code = '{0}';", GridView5.GetFocusedRowCellValue("user_code")))

                .ShowPreview()
            End With
        End If
    End Sub

    Private Sub Generate_RLA(Show As Boolean, FName As String)
        Dim Collateral_Count As Integer = 0
        Dim Repeat As String = ""
        Dim Collateral_Details As DataTable
        Dim SQL As String = "SELECT Purpose, Loan_Type, Civil_B, Birth_B, Interest_Rate, Terms, TermType, "
        SQL &= "    (SELECT COUNT(D.ID) FROM profile_dependent D WHERE D.BorrowerID = credit_application.BorrowerID AND D.`status` = 'ACTIVE') AS 'Dependents', "
        SQL &= "    CONCAT(IF(FirstN_S = '','',CONCAT(FirstN_S, ' ')), IF(MiddleN_S = '','',CONCAT(MiddleN_S, ' ')), IF(LastN_S = '','',CONCAT(LastN_S, ' ')), Suffix_S) AS 'Spouse', "
        SQL &= "    CONCAT(IF(FirstN_C1 = '','',CONCAT(FirstN_C1, ' ')), IF(MiddleN_C1 = '','',CONCAT(MiddleN_C1, ' ')), IF(LastN_C1 = '','',CONCAT(LastN_C1, ' ')), Suffix_C1) AS 'CM1', "
        SQL &= "    CONCAT(IF(FirstN_C2 = '','',CONCAT(FirstN_C2, ' ')), IF(MiddleN_C2 = '','',CONCAT(MiddleN_C2, ' ')), IF(LastN_C2 = '','',CONCAT(LastN_C2, ' ')), Suffix_C2) AS 'CM2', "
        SQL &= "    CONCAT(IF(FirstN_C3 = '','',CONCAT(FirstN_C3, ' ')), IF(MiddleN_C3 = '','',CONCAT(MiddleN_C3, ' ')), IF(LastN_C3 = '','',CONCAT(LastN_C3, ' ')), Suffix_C3) AS 'CM3', "
        SQL &= "    CONCAT(IF(FirstN_C4 = '','',CONCAT(FirstN_C4, ' ')), IF(MiddleN_C4 = '','',CONCAT(MiddleN_C4, ' ')), IF(LastN_C4 = '','',CONCAT(LastN_C4, ' ')), Suffix_C4) AS 'CM4' "
        SQL &= String.Format("    FROM credit_application WHERE CreditNumber = '{0}';", GridView5.GetFocusedRowCellValue("Credit Number"))
        Dim Credit_Details As DataTable = DataSource(SQL)
        If GridView5.GetFocusedRowCellValue("LoanType") = "CHATTEL MORTGAGE" Then
            SQL = "SELECT Purpose, Loan_Type, Civil_B, Birth_B, Interest_Rate, Terms, TermType, "
            SQL &= "    (SELECT COUNT(D.ID) FROM profile_dependent D WHERE D.BorrowerID = credit_application.BorrowerID AND D.`status` = 'ACTIVE') AS 'Dependents', "
            SQL &= "    CONCAT(IF(FirstN_S = '','',CONCAT(FirstN_S, ' ')), IF(MiddleN_S = '','',CONCAT(MiddleN_S, ' ')), IF(LastN_S = '','',CONCAT(LastN_S, ' ')), Suffix_S) AS 'Spouse', "
            SQL &= "    CONCAT(IF(FirstN_C1 = '','',CONCAT(FirstN_C1, ' ')), IF(MiddleN_C1 = '','',CONCAT(MiddleN_C1, ' ')), IF(LastN_C1 = '','',CONCAT(LastN_C1, ' ')), Suffix_C1) AS 'CM1', "
            SQL &= "    CONCAT(IF(FirstN_C2 = '','',CONCAT(FirstN_C2, ' ')), IF(MiddleN_C2 = '','',CONCAT(MiddleN_C2, ' ')), IF(LastN_C2 = '','',CONCAT(LastN_C2, ' ')), Suffix_C2) AS 'CM2', "
            SQL &= "    CONCAT(IF(FirstN_C3 = '','',CONCAT(FirstN_C3, ' ')), IF(MiddleN_C3 = '','',CONCAT(MiddleN_C3, ' ')), IF(LastN_C3 = '','',CONCAT(LastN_C3, ' ')), Suffix_C3) AS 'CM3', "
            SQL &= "    CONCAT(IF(FirstN_C4 = '','',CONCAT(FirstN_C4, ' ')), IF(MiddleN_C4 = '','',CONCAT(MiddleN_C4, ' ')), IF(LastN_C4 = '','',CONCAT(LastN_C4, ' ')), Suffix_C4) AS 'CM4' "
            SQL &= String.Format("    FROM credit_application WHERE CreditNumber = '{0}';", GridView5.GetFocusedRowCellValue("Credit Number"))
            Collateral_Details = DataSource(SQL)
        End If
        If Credit_Details.Rows.Count > 0 Then
            If GridView5.GetFocusedRowCellValue("LoanType") = "CHATTEL MORTGAGE" Then
                Collateral_Count = DataObject(String.Format("SELECT COUNT(C2.ID) FROM collateral_ve C2 WHERE C2.PlateNum IN (SELECT GROUP_CONCAT(C1.PlateNum) FROM collateral_ve C1 WHERE C1.CINumber = '{0}') AND C2.`status` = 'ACTIVE';", GridView5.GetFocusedRowCellValue("CI Number")))
                If Credit_Details(0)("Loan_Type") = "NEW" And Collateral_Count = 1 Then
                    Repeat = "NEW CLIENT / NEW COLLATERAL"
                ElseIf Credit_Details(0)("Loan_Type") = "NEW" And Collateral_Count > 1 Then
                    Repeat = String.Format("NEW CLIENT / REPEAT COLLATERAL ({0} time)", AddSuffix(Collateral_Count))
                ElseIf Credit_Details(0)("Loan_Type") = "RELOAN" And Collateral_Count > 1 Then
                    Repeat = String.Format("REPEAT CLIENT / REPEAT COLLATERAL ({0} time)", AddSuffix(Collateral_Count))
                ElseIf Credit_Details(0)("Loan_Type") = "RELOAN" And Collateral_Count = 1 Then
                    Repeat = "REPEAT CLIENT / NEW COLLATERAL"
                End If
                Dim Report As New RptRequestApprovalVL
                With Report
                    .Name = "Request for Loan Approval for " & GridView5.GetFocusedRowCellValue("Borrower")
                    .lblDate.Text = Format(Date.Now, "MMM dd, yyyy")
                    .lblBorrower.Text = GridView5.GetFocusedRowCellValue("Borrower")
                    .lblRepeat.Text = Repeat
                    .lblStatus.Text = Credit_Details(0)("Civil_B")
                    .lblAge.Text = DataObject(String.Format("SELECT Age('{0}')", Credit_Details(0)("Birth_B")))
                    .lblDependents.Text = "(" & Credit_Details(0)("Dependents") & ") " & ConvertNumberToWords(Credit_Details(0)("Dependents"), False, False)
                    .lblSpouse.Text = Credit_Details(0)("Spouse")
                    .lblCI.Text = DataObject(String.Format("SELECT Employee(empl_id) FROM users WHERE user_code = '{0}';", GridView5.GetFocusedRowCellValue("user_code")))
                    .lblCoMaker.Text = Credit_Details(0)("CM1") & ""
                    .lblAddress.Text = If(GridView5.GetFocusedRowCellValue("NoC_B") = "", "", GridView5.GetFocusedRowCellValue("NoC_B") & ", ") & If(GridView5.GetFocusedRowCellValue("StreetC_B") = "", "", GridView5.GetFocusedRowCellValue("StreetC_B") & ", ") & If(GridView5.GetFocusedRowCellValue("BarangayC_B") = "", "", GridView5.GetFocusedRowCellValue("BarangayC_B") & ", ") & GridView5.GetFocusedRowCellValue("AddressC_B")
                    .cbxOwned.Text = If(GridView5.GetFocusedRowCellValue("House_B") = "Owned", True, False)
                    .cbxRented.Text = If(GridView5.GetFocusedRowCellValue("House_B") = "Rented", True, False)
                    .cbxFree.Text = If(GridView5.GetFocusedRowCellValue("House_B") = "Free", True, False)
                    .lblLength.Text = GridView5.GetFocusedRowCellValue("LenghtOfStay") & " years"
                    .lblFacility.Text = GridView5.GetFocusedRowCellValue("Product") & " / " & Credit_Details(0)("Loan_Type")
                    .lblAmountApplied.Text = FormatNumber(GridView5.GetFocusedRowCellValue("AmountApplied"), 2)
                    .lblPurpose.Text = GridView5.GetFocusedRowCellValue("PurposeLoan")
                    .lblInterest.Text = Credit_Details(0)("Interest_Rate") & "% per Annum"
                    .lblTerms.Text = Credit_Details(0)("Terms") & " " & Credit_Details(0)("TermType")
                    .lblModePayment.Text = "Fixed Monthly Amortization"
                    .lblCollateral.Text = Collateral
                    .lblPowered.Text = "Powered by "
                    .lblCondition.Text = ""
                    .lblUsage.Text = ""
                    .lblMileAge.Text = ""
                    .lblFairMarketValue.Text = ""
                    .lblAppraisedP.Text = ""
                    .lblAppraisedValue.Text = ""
                    .lblLoanableP.Text = ""
                    .lblLoanableValue.Text = ""
                    .lblLoanable.Text = ""
                    .lblFinancingRate.Text = ""
                    .lblPrincipal.Text = ""
                    .lblFairMarketValue_2.Text = ""
                    .lblCollateralRatio.Text = ""
                    .lblSourceIncome.Text = ""
                    .lblSourceIncome_CoMaker.Text = ""
                    .lblGrossIncome.Text = ""
                    .lblDisposableIncome.Text = ""

                    .lblAccountNumber.Text = ""
                    .lblPrincipalEx.Text = ""
                    .lblFaceAmount.Text = ""
                    .lblOB.Text = ""
                    .lblGMA.Text = ""
                    .lblRemarks.Text = ""

                    .lblAccountNumber_1.Text = ""
                    .lblPrincipalEx_1.Text = ""
                    .lblFaceAmount_1.Text = ""
                    .lblOB_1.Text = ""
                    .lblGMA_1.Text = ""
                    .lblRemarks_1.Text = ""
                    .lblAccountNumber_2.Text = ""
                    .lblPrincipalEx_2.Text = ""
                    .lblFaceAmount_2.Text = ""
                    .lblOB_2.Text = ""
                    .lblGMA_2.Text = ""
                    .lblRemarks_2.Text = ""
                    .lblAccountNumber_3.Text = ""
                    .lblPrincipalEx_3.Text = ""
                    .lblFaceAmount_3.Text = ""
                    .lblOB_3.Text = ""
                    .lblGMA_3.Text = ""
                    .lblRemarks_3.Text = ""
                    .lblAccountNumber_4.Text = ""
                    .lblPrincipalEx_4.Text = ""
                    .lblFaceAmount_4.Text = ""
                    .lblOB_4.Text = ""
                    .lblGMA_4.Text = ""
                    .lblRemarks_4.Text = ""
                    .lblAccountNumber_5.Text = ""
                    .lblPrincipalEx_5.Text = ""
                    .lblFaceAmount_5.Text = ""
                    .lblOB_5.Text = ""
                    .lblGMA_5.Text = ""
                    .lblRemarks_5.Text = ""

                    .lblGMA_0.Text = ""
                    .lblGrossIncome_2.Text = ""
                    .lblBurdenRatio.Text = ""
                    .lblCreditChecking.Text = rNarrative.Text
                    .lblAdditionalRemarks.Text = ""
                    .lblC1.Text = txtC1.Text
                    .lblC2.Text = txtC2.Text
                    .lblC3.Text = txtC3.Text
                    .lblC4.Text = txtC4.Text
                    .lblC5.Text = txtC5.Text
                    .lblC6.Text = txtC6.Text
                    .lblC7.Text = txtC7.Text
                    .lblC8.Text = txtC8.Text
                    .lblC9.Text = txtC9.Text

                    .lblPreparedBy.Text = DataObject(String.Format("SELECT Employee(empl_id) FROM users WHERE user_code = '{0}';", GridView5.GetFocusedRowCellValue("user_code")))
                    .lblPreparedBy_Position.Text = DataObject(String.Format("SELECT (SELECT `Position` FROM employee_setup WHERE employee_setup.ID = users.empl_ID) FROM users WHERE user_code = '{0}';", GridView5.GetFocusedRowCellValue("user_code")))

                    .lblRecommendedBy.Text = ""
                    .lblApprovedBy.Text = ""

                    If Show Then
                        .ShowPreview()
                    Else
                        Try
                            .ExportToPdf(FName)
                        Catch ex As Exception
                        End Try
                    End If
                End With
            ElseIf GridView5.GetFocusedRowCellValue("LoanType") = "REAL ESTATE MORTGAGE" Then
                Collateral_Count = DataObject(String.Format("SELECT COUNT(C2.ID) FROM collateral_re C2 WHERE C2.TCT IN (SELECT GROUP_CONCAT(C1.TCT) FROM collateral_re C1 WHERE C1.CINumber = '{0}') AND C2.`status` = 'ACTIVE';", GridView5.GetFocusedRowCellValue("CI Number")))
                If Credit_Details(0)("Loan_Type") = "NEW" And Collateral_Count = 1 Then
                    Repeat = "NEW CLIENT / NEW COLLATERAL"
                ElseIf Credit_Details(0)("Loan_Type") = "NEW" And Collateral_Count > 1 Then
                    Repeat = String.Format("NEW CLIENT / REPEAT COLLATERAL ({0} time)", AddSuffix(Collateral_Count))
                ElseIf Credit_Details(0)("Loan_Type") = "RELOAN" And Collateral_Count > 1 Then
                    Repeat = String.Format("REPEAT CLIENT / REPEAT COLLATERAL ({0} time)", AddSuffix(Collateral_Count))
                ElseIf Credit_Details(0)("Loan_Type") = "RELOAN" And Collateral_Count = 1 Then
                    Repeat = "REPEAT CLIENT / NEW COLLATERAL"
                End If
                Dim Report As New RptRequestApproval
                With Report
                    .Name = "Request for Loan Approval for " & GridView5.GetFocusedRowCellValue("Borrower")
                    .lblDate.Text = ""
                    .lblBorrower.Text = GridView5.GetFocusedRowCellValue("Borrower")
                    .lblRepeat.Text = Repeat
                    .lblStatus.Text = ""
                    .lblAge.Text = ""
                    .lblDependents.Text = ""
                    .lblSpouse.Text = ""
                    .lblCI.Text = ""
                    .lblCoMaker.Text = ""
                    .lblAddress.Text = ""
                    .cbxOwned.Text = ""
                    .cbxRented.Text = ""
                    .cbxFree.Text = ""
                    .lblLength.Text = ""
                    .lblFacility.Text = ""
                    .lblAmountApplied.Text = ""
                    .lblPurpose.Text = ""
                    .lblInterest.Text = ""
                    .lblTerms.Text = ""
                    .lblModePayment.Text = ""
                    .lblCollateral.Text = ""
                    .lblCollateralDetails.Text = ""
                    .lblLandArea.Text = ""
                    .lblLandPrice.Text = ""
                    .lblLandTotal.Text = ""
                    .lblHouse.Text = ""
                    .lblImprovementArea.Text = ""
                    .lblHousePrice.Text = ""
                    .lblHouseTotal.Text = ""
                    .lblFairMarketValue.Text = ""
                    .lblAppraisedP.Text = ""
                    .lblAppraisedValue.Text = ""
                    .lblLoanableP.Text = ""
                    .lblLoanableValue.Text = ""
                    .lblPrincipal.Text = ""
                    .lblFairMarketValue_2.Text = ""
                    .lblCollateralRatio.Text = ""
                    .lblSourceIncome.Text = ""
                    .lblSourceIncome_CoMaker.Text = ""
                    .lblGrossIncome.Text = ""
                    .lblDisposableIncome.Text = ""

                    .lblAccountNumber.Text = ""
                    .lblPrincipalEx.Text = ""
                    .lblFaceAmount.Text = ""
                    .lblOB.Text = ""
                    .lblGMA.Text = ""
                    .lblRemarks.Text = ""

                    .lblAccountNumber_1.Text = ""
                    .lblPrincipalEx_1.Text = ""
                    .lblFaceAmount_1.Text = ""
                    .lblOB_1.Text = ""
                    .lblGMA_1.Text = ""
                    .lblRemarks_1.Text = ""
                    .lblAccountNumber_2.Text = ""
                    .lblPrincipalEx_2.Text = ""
                    .lblFaceAmount_2.Text = ""
                    .lblOB_2.Text = ""
                    .lblGMA_2.Text = ""
                    .lblRemarks_2.Text = ""
                    .lblAccountNumber_3.Text = ""
                    .lblPrincipalEx_3.Text = ""
                    .lblFaceAmount_3.Text = ""
                    .lblOB_3.Text = ""
                    .lblGMA_3.Text = ""
                    .lblRemarks_3.Text = ""
                    .lblAccountNumber_4.Text = ""
                    .lblPrincipalEx_4.Text = ""
                    .lblFaceAmount_4.Text = ""
                    .lblOB_4.Text = ""
                    .lblGMA_4.Text = ""
                    .lblRemarks_4.Text = ""
                    .lblAccountNumber_5.Text = ""
                    .lblPrincipalEx_5.Text = ""
                    .lblFaceAmount_5.Text = ""
                    .lblOB_5.Text = ""
                    .lblGMA_5.Text = ""
                    .lblRemarks_5.Text = ""

                    .lblGMA_0.Text = ""
                    .lblGrossIncome_2.Text = ""
                    .lblBurdenRatio.Text = ""
                    .lblCreditChecking.Text = ""
                    .lblAdditionalRemarks.Text = ""
                    .lblC1.Text = txtC1.Text
                    .lblC2.Text = txtC2.Text
                    .lblC3.Text = txtC3.Text
                    .lblC4.Text = txtC4.Text
                    .lblC5.Text = txtC5.Text
                    .lblC6.Text = txtC6.Text
                    .lblC7.Text = txtC7.Text
                    .lblC8.Text = txtC8.Text
                    .lblC9.Text = txtC9.Text

                    .lblPreparedBy.Text = ""
                    .lblPreparedBy_Position.Text = ""

                    .lblRecommendedBy.Text = ""
                    .lblApprovedBy.Text = ""

                    If Show Then
                        .ShowPreview()
                    Else
                        Try
                            .ExportToPdf(FName)
                        Catch ex As Exception
                        End Try
                    End If
                End With
            End If
        End If
    End Sub

    Private Sub IRequest_Click(sender As Object, e As EventArgs) Handles iRequest.Click
        Try
            If GridView5.GetFocusedRowCellValue("CI Number") = "" Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Generate_RLA(True, "")
    End Sub

    Private Sub TxtC1_TextChanged(sender As Object, e As EventArgs) Handles txtC1.TextChanged
        If txtC1.Text = "" Then
            txtC2.Text = ""
            txtC3.Text = ""
            txtC4.Text = ""
            txtC5.Text = ""
            txtC6.Text = ""
            txtC7.Text = ""
            txtC8.Text = ""
            txtC9.Text = ""

            txtC2.Enabled = False
            txtC3.Enabled = False
            txtC4.Enabled = False
            txtC5.Enabled = False
            txtC6.Enabled = False
            txtC7.Enabled = False
            txtC8.Enabled = False
            txtC9.Enabled = False
        Else
            txtC2.Enabled = True
        End If
    End Sub

    Private Sub TxtC2_TextChanged(sender As Object, e As EventArgs) Handles txtC2.TextChanged
        If txtC2.Text = "" Then
            txtC3.Text = ""
            txtC4.Text = ""
            txtC5.Text = ""
            txtC6.Text = ""
            txtC7.Text = ""
            txtC8.Text = ""
            txtC9.Text = ""

            txtC3.Enabled = False
            txtC4.Enabled = False
            txtC5.Enabled = False
            txtC6.Enabled = False
            txtC7.Enabled = False
            txtC8.Enabled = False
            txtC9.Enabled = False
        Else
            txtC3.Enabled = True
        End If
    End Sub

    Private Sub TxtC3_TextChanged(sender As Object, e As EventArgs) Handles txtC3.TextChanged
        If txtC3.Text = "" Then
            txtC4.Text = ""
            txtC5.Text = ""
            txtC6.Text = ""
            txtC7.Text = ""
            txtC8.Text = ""
            txtC9.Text = ""

            txtC4.Enabled = False
            txtC5.Enabled = False
            txtC6.Enabled = False
            txtC7.Enabled = False
            txtC8.Enabled = False
            txtC9.Enabled = False
        Else
            txtC4.Enabled = True
        End If
    End Sub

    Private Sub TxtC4_TextChanged(sender As Object, e As EventArgs) Handles txtC4.TextChanged
        If txtC4.Text = "" Then
            txtC5.Text = ""
            txtC6.Text = ""
            txtC7.Text = ""
            txtC8.Text = ""
            txtC9.Text = ""

            txtC5.Enabled = False
            txtC6.Enabled = False
            txtC7.Enabled = False
            txtC8.Enabled = False
            txtC9.Enabled = False
        Else
            txtC5.Enabled = True
        End If
    End Sub

    Private Sub TxtC5_TextChanged(sender As Object, e As EventArgs) Handles txtC5.TextChanged
        If txtC5.Text = "" Then
            txtC6.Text = ""
            txtC7.Text = ""
            txtC8.Text = ""
            txtC9.Text = ""

            txtC6.Enabled = False
            txtC7.Enabled = False
            txtC8.Enabled = False
            txtC9.Enabled = False
        Else
            txtC6.Enabled = True
        End If
    End Sub

    Private Sub TxtC6_TextChanged(sender As Object, e As EventArgs) Handles txtC6.TextChanged
        If txtC6.Text = "" Then
            txtC7.Text = ""
            txtC8.Text = ""
            txtC9.Text = ""

            txtC7.Enabled = False
            txtC8.Enabled = False
            txtC9.Enabled = False
        Else
            txtC7.Enabled = True
        End If
    End Sub

    Private Sub TxtC7_TextChanged(sender As Object, e As EventArgs) Handles txtC7.TextChanged
        If txtC7.Text = "" Then
            txtC8.Text = ""
            txtC9.Text = ""

            txtC8.Enabled = False
            txtC9.Enabled = False
        Else
            txtC8.Enabled = True
        End If
    End Sub

    Private Sub TxtC8_TextChanged(sender As Object, e As EventArgs) Handles txtC8.TextChanged
        If txtC8.Text = "" Then
            txtC9.Text = ""

            txtC9.Enabled = False
        Else
            txtC9.Enabled = True
        End If
    End Sub

    Private Sub DtpBirth_B_Click(sender As Object, e As EventArgs) Handles DtpBirth_B.Click
        DtpBirth_B.CustomFormat = "MMMM dd, yyyy"
    End Sub

    Private Sub BtnVehicleReappraise_Click(sender As Object, e As EventArgs) Handles btnVehicleReappraise.Click
        Try
            If GridView1.GetFocusedRowCellValue("Collateral") = "" Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim Vehicle As New FrmVehicleAppraisal
        With Vehicle
            .Tag = 54
            FormRestriction(.Tag)
            If allow_Access Then
                .vSave = allow_Save
                .vUpdate = allow_Update
                .vDelete = allow_Delete
                .vPrint = allow_Print
            Else
                MsgBox(mBox_Access, MsgBoxStyle.Information, "Info")
                Exit Sub
            End If

            .CreditNumber = CreditNumber
            .AssetNumber = GridView1.GetFocusedRowCellValue("AssetNumber")
            .AssetNumber_1 = AssetNumber_1
            .AssetNumber_2 = AssetNumber_2
            .AssetNumber_3 = AssetNumber_3
            .AssetNumber_4 = AssetNumber_4
            .AssetNumber_5 = AssetNumber_5
            .txtAppraiseNumber.Text = GridView1.GetFocusedRowCellValue("ID")
            .CollateralNumber = GridView1.GetFocusedRowCellValue("Col_ID")
            .cbxAppraiseFor.Text = "Credit Investigation"
            .For_ReApraise = True

            Dim DT As New DataTable
            DT = DataSource(String.Format("SELECT A.appraise_by, (SELECT CONCAT(IF(First_Name = '','',CONCAT(First_Name, ' ')), IF(Middle_Name = '','',CONCAT(Middle_Name, ' ')), Last_Name) FROM employee_setup WHERE ID = A.appraise_by) AS 'Appraised By', C.Make, C.`Type`, C.Used, C.Model, C.Series, C.PlateNum, C.Transmission, C.Fuel, C.BodyColor, C.`Year`, C.EngineNum, C.ChassisNum, C.RegistryCert, C.ORNum, C.GrossWeight, C.RimHoles, C.MileAge, C.MileAgeType, C.DateRegistered, C.LTO, A.appraise_num AS 'Appraise Number', DATE_FORMAT(A.appraise_date,'%b %d, %Y') AS 'Date', A.`Engine`, A.Engine_R AS 'Engine Remarks', A.Steering, A.Steering_R AS 'Steering Remarks', A.Clutch, A.Clutch_R AS 'Clutch Remarks', A.HeadLight AS 'Head Light', A.HeadLight_R AS 'Head Light Remarks', A.SignalLight AS 'Signal Light', A.SignalLight_R AS 'Signal Light Remarks', A.Shock, A.Shock_R AS 'Shock Remarks', A.Underchassis, A.Underchassis_R AS 'Underchassis Remarks', A.Upholstery, A.Upholstery_R AS 'Upholstery Remarks', A.TempGauge AS 'Temp Gauge', A.TempGauge_R AS 'Temp Gauge Remarks', A.Odometer AS 'Odometer', A.Odometer_R AS 'Odometer Remarks', A.Transmission AS 'Transmission', A.Transmission_R AS 'Transmission Remarks', A.Tires, A.Tires_R AS 'Tires Remarks', A.Acceleration, A.Acceleration_R AS 'Acceleration Remarks', A.ParkLight AS 'Park Light', A.ParkLight_R AS 'Park Light Remarks', A.Horn, A.Horn_R AS 'Horn Remarks', A.Chassis,A.Chassis_R AS 'Chassis Remarks', A.FrontBumper AS 'Front Bumper', A.FrontBumper_R AS 'Front Bumper Remarks', A.Ampheres, A.Ampheres_R AS 'Ampheres Remarks', A.Fuel, A.Fuel_R AS 'Fuel Remarks', A.Starter, A.Starter_R AS 'Starter Remarks', A.Differential, A.Differential_R AS 'Differential Remarks', A.Brakes, A.Brakes_R AS 'Brakes Remarks', A.Wiper, A.Wiper_R AS 'Wiper Remarks', A.`BackUp` AS 'Back Up', A.BackUp_R AS 'Back Up Remarks', A.SideMirror AS 'Side Mirror', A.SideMirror_R AS 'Side Mirror Remarks', A.BodyFlooring AS 'Body Flooring', A.BodyFlooring_R AS 'Body Flooring Remarks', A.RearBumper AS 'Rear Bumper', A.RearBumper_R AS 'Rear Bumper Remarks', A.OilPressure AS 'Oil Pressure', A.OilPressure_R AS 'Oil Pressure Remarks', A.Speedometer, A.Speedometer_R AS 'Speedometer Remarks', A.BodyPaint AS 'Body Paint', A.BodyPaint_R AS 'Body Paint Remarks', A.Remarks AS 'Appraiser Remarks', A.Source, A.telephone_num AS 'Telephone Num', FORMAT(A.selling_price,2) AS 'Selling Price', FORMAT(A.market_value,2) AS 'Market Value', FORMAT(A.appraised_value,2) AS 'Appraised Value', FORMAT(A.loanable_value,2) AS 'Loanable Value', FORMAT(A.loanable_percent,2) AS 'Loanable Percent', Attach_2, A.BaseMarket FROM collateral_ve C LEFT JOIN appraise_ve A ON C.CollateralNumber = A.CollateralNumber WHERE C.CollateralNumber = '{0}' AND A.appraise = 'Credit Investigation' AND A.appraise_num = '{1}';", GridView1.GetFocusedRowCellValue("Col_ID"), GridView1.GetFocusedRowCellValue("ID")))
            If DT.Rows.Count > 0 Then
                .TotalImage_II = DT(0)("Attach_2")
                .btnSave.Text = "&Save"
                .vAppraised = DT(0)("Appraised By")
                .vMake = DT(0)("Make")
                .vType = DT(0)("Type")
                .cbxUsed.Text = DT(0)("Used")
                .vModel = DT(0)("Model")
                .txtSeries.Text = DT(0)("Series")
                .txtPlateNum.Text = DT(0)("PlateNum")
                .cbxTransmission.Text = DT(0)("Transmission")
                .vFuel = DT(0)("Fuel")
                .cbxBodyColor.Text = DT(0)("BodyColor")
                If DT(0)("Year") = "" Then
                    .dtpYear.CustomFormat = ""
                Else
                    .dtpYear.CustomFormat = "     yyyy"
                    .dtpYear.Value = CDate(DT(0)("Year") & "-01-01")
                End If
                .cbxEngineNumber.Text = DT(0)("EngineNum")
                .txtChassisNum.Text = DT(0)("ChassisNum")
                .txtRegistryCert.Text = DT(0)("RegistryCert")
                .txtORNum.Text = DT(0)("ORNum")
                .dGrossWeight.Value = DT(0)("GrossWeight")
                .iRim.Value = CInt(DT(0)("RimHoles"))
                .dMileAge.Value = CDbl(DT(0)("MileAge"))
                .vMileAge = DT(0)("MileAgeType")
                If DT(0)("DateRegistered") = "" Then
                    .cbxNA.Checked = True
                    .dtpRegistered.CustomFormat = ""
                Else
                    .cbxNA.Checked = False
                    .dtpRegistered.CustomFormat = "MMMM dd, yyyy"
                    .dtpRegistered.Value = DT(0)("DateRegistered")
                End If
                .txtLTO.Text = DT(0)("LTO")

                .cbxMake.Enabled = False
                .cbxType.Enabled = False
                .cbxUsed.Enabled = False
                .cbxModel.Enabled = False
                .txtSeries.Enabled = False
                .txtPlateNum.Enabled = False
                .cbxTransmission.Enabled = False
                .cbxFuel.Enabled = False
                .cbxBodyColor.Enabled = False
                .dtpYear.Enabled = False
                .cbxEngineNumber.Enabled = False
                .txtChassisNum.Enabled = False
                .txtRegistryCert.Enabled = False
                .txtORNum.Enabled = False
                .dGrossWeight.Enabled = False
                .iRim.Enabled = False
                .dMileAge.Enabled = False
                .cbxMileAge.Enabled = False
                .dtpRegistered.Enabled = False
                .cbxNA.Enabled = False
                .txtLTO.Enabled = False

                Dim Result As DialogResult
                Result = .ShowDialog
                If Result = DialogResult.OK Then
                    GridView1.SetFocusedRowCellValue("ID", .txtAppraiseNumber.Text)
                    GridView1.SetFocusedRowCellValue("Market Value", .dFairMarketValue.Text)
                    GridView1.SetFocusedRowCellValue("AppraisedValue", .dAppraisedValue.Text)
                    GridView1.SetFocusedRowCellValue("LoanableValue", .dLoanableValue.Text)
                    GridView1.SetFocusedRowCellValue("LoanPercent", .dLoanablePercent.Text)
                    GridView1.SetFocusedRowCellValue("AssetNumber", .AssetNumber)
                End If

                If GridView1.RowCount = 0 Then
                    btnModifyVehicle.Enabled = False
                    btnPrintVehicle.Enabled = False
                Else
                    btnModifyVehicle.Enabled = True
                    btnPrintVehicle.Enabled = True
                End If
                .Dispose()
            End If
        End With
    End Sub

    Private Sub BtnRealEstateReappraise_Click(sender As Object, e As EventArgs) Handles btnRealEstateReappraise.Click
        Try
            If GridView2.GetFocusedRowCellValue("Collateral") = "" Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim RealEstate As New FrmRealEstateAppraisal
        With RealEstate
            .Tag = 54
            FormRestriction(.Tag)
            If allow_Access Then
                .vSave = allow_Save
                .vUpdate = allow_Update
                .vDelete = allow_Delete
                .vPrint = allow_Print
            Else
                MsgBox(mBox_Access, MsgBoxStyle.Information, "Info")
                Exit Sub
            End If

            .CreditNumber = CreditNumber
            .AssetNumber = GridView2.GetFocusedRowCellValue("AssetNumber")
            .AssetNumber_1 = AssetNumber_1
            .AssetNumber_2 = AssetNumber_2
            .AssetNumber_3 = AssetNumber_3
            .AssetNumber_4 = AssetNumber_4
            .AssetNumber_5 = AssetNumber_5
            .txtAppraiseNumber.Text = GridView2.GetFocusedRowCellValue("ID")
            .CollateralNumber = GridView2.GetFocusedRowCellValue("Col_ID")
            .cbxAppraiseFor.Text = "Credit Investigation"
            .For_ReApraise = True

            Dim SQL As String = "SELECT"
            SQL &= "   A.appraise_num      AS 'Appraise Number',"
            SQL &= "   DATE_FORMAT(A.appraise_date,'%b %d, %Y') AS 'Date',"
            SQL &= "   A.appraise_by, (SELECT CONCAT(IF(First_Name = '','',CONCAT(First_Name, ' ')), IF(Middle_Name = '','',CONCAT(Middle_Name, ' ')), Last_Name) FROM employee_setup WHERE ID = A.appraise_by) AS 'Appraised By',"
            SQL &= "   A.asset_number      AS 'Credit Number',"
            SQL &= "   Land,"
            SQL &= "   FORMAT(A.land_area,2) AS 'Land Area',"
            SQL &= "   FORMAT(A.land_price,2) AS 'Land Price',"
            SQL &= "   FORMAT(A.land_price * land_area,2) AS 'Land Total',"
            SQL &= "   land_remarks_1 AS 'Land Remarks',"
            SQL &= "   FORMAT(A.land_area_2,2) AS 'Land Area 2',"
            SQL &= "   FORMAT(A.land_price_2,2) AS 'Land Price 2',"
            SQL &= "   FORMAT(A.land_price_2 * land_area_2,2) AS 'Land Total 2',"
            SQL &= "   land_remarks_2 AS 'Land Remarks 2',"
            SQL &= "   FORMAT(A.land_area_3,2) AS 'Land Area 3',"
            SQL &= "   FORMAT(A.land_price_3,2) AS 'Land Price 3',"
            SQL &= "   FORMAT(A.land_price_3 * land_area_3,2) AS 'Land Total 3',"
            SQL &= "   land_remarks_3 AS 'Land Remarks 3',"
            SQL &= "   FORMAT(A.land_area_4,2) AS 'Land Area 4',"
            SQL &= "   FORMAT(A.land_price_4,2) AS 'Land Price 4',"
            SQL &= "   FORMAT(A.land_price_4 * land_area_4,2) AS 'Land Total 4',"
            SQL &= "   land_remarks_4 AS 'Land Remarks 4',"
            SQL &= "   FORMAT(A.land_area_5,2) AS 'Land Area 5',"
            SQL &= "   FORMAT(A.land_price_5,2) AS 'Land Price 5',"
            SQL &= "   FORMAT(A.land_price_5 * land_area_5,2) AS 'Land Total 5',"
            SQL &= "   land_remarks_5 AS 'Land Remarks 5',"
            SQL &= "   Machine,"
            SQL &= "   FORMAT(A.Machine_area,2) AS 'Machine Area',"
            SQL &= "   FORMAT(A.Machine_price,2) AS 'Machine Price',"
            SQL &= "   FORMAT(A.Machine_price * Machine_area,2) AS 'Machine Total',"
            SQL &= "   Machine_remarks_1 AS 'Machine Remarks',"
            SQL &= "   FORMAT(A.Machine_area_2,2) AS 'Machine Area 2',"
            SQL &= "   FORMAT(A.Machine_price_2,2) AS 'Machine Price 2',"
            SQL &= "   FORMAT(A.Machine_price_2 * Machine_area_2,2) AS 'Machine Total 2',"
            SQL &= "   Machine_remarks_2 AS 'Machine Remarks 2',"
            SQL &= "   FORMAT(A.Machine_area_3,2) AS 'Machine Area 3',"
            SQL &= "   FORMAT(A.Machine_price_3,2) AS 'Machine Price 3',"
            SQL &= "   FORMAT(A.Machine_price_3 * Machine_area_3,2) AS 'Machine Total 3',"
            SQL &= "   Machine_remarks_3 AS 'Machine Remarks 3',"
            SQL &= "   FORMAT(A.Machine_area_4,2) AS 'Machine Area 4',"
            SQL &= "   FORMAT(A.Machine_price_4,2) AS 'Machine Price 4',"
            SQL &= "   FORMAT(A.Machine_price_4 * Machine_area_4,2) AS 'Machine Total 4',"
            SQL &= "   Machine_remarks_4 AS 'Machine Remarks 4',"
            SQL &= "   FORMAT(A.Machine_area_5,2) AS 'Machine Area 5',"
            SQL &= "   FORMAT(A.Machine_price_5,2) AS 'Machine Price 5',"
            SQL &= "   FORMAT(A.Machine_price_5 * Machine_area_5,2) AS 'Machine Total 5',"
            SQL &= "   Machine_remarks_5 AS 'Machine Remarks 5',"
            SQL &= "   Improvement,"
            SQL &= "   FORMAT(A.Improvement_area,2) AS 'Improvement Area',"
            SQL &= "   FORMAT(A.Improvement_price,2) AS 'Improvement Price',"
            SQL &= "   FORMAT(A.Improvement_price * Improvement_area,2) AS 'Improvement Total',"
            SQL &= "   Improvement_remarks_1 AS 'Improvement Remarks',"
            SQL &= "   FORMAT(A.Improvement_area_2,2) AS 'Improvement Area 2',"
            SQL &= "   FORMAT(A.Improvement_price_2,2) AS 'Improvement Price 2',"
            SQL &= "   FORMAT(A.Improvement_price_2 * Improvement_area_2,2) AS 'Improvement Total 2',"
            SQL &= "   Improvement_remarks_2 AS 'Improvement Remarks 2',"
            SQL &= "   FORMAT(A.Improvement_area_3,2) AS 'Improvement Area 3',"
            SQL &= "   FORMAT(A.Improvement_price_3,2) AS 'Improvement Price 3',"
            SQL &= "   FORMAT(A.Improvement_price_3 * Improvement_area_3,2) AS 'Improvement Total 3',"
            SQL &= "   Improvement_remarks_3 AS 'Improvement Remarks 3',"
            SQL &= "   FORMAT(A.Improvement_area_4,2) AS 'Improvement Area 4',"
            SQL &= "   FORMAT(A.Improvement_price_4,2) AS 'Improvement Price 4',"
            SQL &= "   FORMAT(A.Improvement_price_4 * Improvement_area_4,2) AS 'Improvement Total 4',"
            SQL &= "   Improvement_remarks_4 AS 'Improvement Remarks 4',"
            SQL &= "   FORMAT(A.Improvement_area_5,2) AS 'Improvement Area 5',"
            SQL &= "   FORMAT(A.Improvement_price_5,2) AS 'Improvement Price 5',"
            SQL &= "   FORMAT(A.Improvement_price_5 * Improvement_area_5,2) AS 'Improvement Total 5',"
            SQL &= "   Improvement_remarks_5 AS 'Improvement Remarks 5',"
            SQL &= "   FORMAT((A.land_price * A.land_area) + (A.land_price_2 * land_area_2) + (A.land_price_3 * land_area_3) + (A.land_price_4 * land_area_4) + (A.land_price_5 * land_area_5) + (A.machine_price * A.machine_area) + (A.machine_price_2 * machine_area_2) + (A.machine_price_3 * machine_area_3) + (A.machine_price_4 * machine_area_4) + (A.machine_price_5 * machine_area_5) + (A.improvement_price * A.improvement_area) + (A.improvement_price_2 * improvement_area_2) + (A.improvement_price_3 * improvement_area_3) + (A.improvement_price_4 * improvement_area_4) + (A.improvement_price_5 * improvement_area_5),2) AS 'Total',"
            SQL &= "   FORMAT(A.prevailing_selling,2) AS 'Prevailing Selling Price',"
            SQL &= "   FORMAT(A.rounded_to,2) AS 'Zonal Valuation',"
            SQL &= "   A.TCT               AS 'TCT No.',"
            SQL &= "   A.lot_block         AS 'Lot / Block No.',"
            SQL &= "   FORMAT(A.area_sqm,2) AS 'Area SQ.M.',"
            SQL &= "   A.registered_owner  AS 'Registered Owner',"
            SQL &= "   A.registry_deeds    AS 'Registry of Deeds',"
            SQL &= "   A.Location,"
            SQL &= "   A.Coordinates,"
            SQL &= "   A.vacant_lot        AS 'Vacant Lot',"
            SQL &= "   A.Classification,"
            SQL &= "   A.Storey_R          AS 'Storey',"
            SQL &= "   A.Roofing_R         AS 'Roofing',"
            SQL &= "   A.FLooring_R        AS 'Flooring',"
            SQL &= "   A.TandB_R           AS 'T and B',"
            SQL &= "   A.Frame_R           AS 'Frame',"
            SQL &= "   A.Beams_R           AS 'Beams',"
            SQL &= "   A.Doors_R           AS 'Door',"
            SQL &= "   A.YearConstructed_R AS 'Year Constructed',"
            SQL &= "   A.Walling_R         AS 'Walling',"
            SQL &= "   A.Ceiling_R         AS 'Ceiling',"
            SQL &= "   A.Windows_R         AS 'Windows',"
            SQL &= "   A.FloorArea_R       AS 'Floor Area',"
            SQL &= "   A.Partitions_R      AS 'Partitions',"
            SQL &= "   A.Remarks           AS 'Remarks',"
            SQL &= "   FORMAT(A.market_value,2) AS 'Market Value',"
            SQL &= "   FORMAT(A.appraised_value,2) AS 'Appraised Value',"
            SQL &= "   A.as_of             AS 'As of',"
            SQL &= "   FORMAT(A.loanable_value,2) AS 'Loanable Value',"
            SQL &= "   FORMAT(A.loanable_percent,2) AS 'Loanable Percent', Attach"
            SQL &= " FROM appraise_re A"
            SQL &= String.Format("   WHERE A.appraise = 'Credit Investigation' AND A.appraise_num = '{1}' AND CollateralNumber = '{0}'", GridView2.GetFocusedRowCellValue("Col_ID"), GridView2.GetFocusedRowCellValue("ID"))
            Dim DT As DataTable = DataSource(SQL)
            If DT.Rows.Count > 0 Then
                .btnSave.Text = "&Save"
                .vAppraised = DT(0)("Appraised By")
                .cbxAppraiseFor.Text = "Credit Investigation"

                .txtLand.Text = DT(0)("Land")
                .txtLand.Tag = DT(0)("Land")

                .dLandArea.Value = DT(0)("Land Area")
                .dLandArea.Tag = DT(0)("Land Area")
                .dLandPrice_1.Value = DT(0)("Land Price")
                .dLandPrice_1.Tag = DT(0)("Land Price")
                .dLandTotal_1.Value = DT(0)("Land Total")
                .dLandTotal_1.Tag = DT(0)("Land Total")
                .txtLandRemarks_1.Text = DT(0)("Land Remarks")
                .txtLandRemarks_1.Tag = DT(0)("Land Remarks")

                If CDbl(DT(0)("Land Total 2")) > 0 Then
                    .dLandArea_2.Visible = True
                    .lblLandSQM_2.Visible = True
                    .dLandPrice_2.Visible = True
                    .lblLandCons_2.Visible = True
                    .lblLandPhp_2.Visible = True
                    .dLandTotal_2.Visible = True
                    .txtLandRemarks_2.Visible = True
                    .btnAddLand_2.Visible = True
                    .btnRemoveLand_2.Visible = True
                End If
                .dLandArea_2.Value = DT(0)("Land Area 2")
                .dLandArea_2.Tag = DT(0)("Land Area 2")
                .dLandPrice_2.Value = DT(0)("Land Price 2")
                .dLandPrice_2.Tag = DT(0)("Land Price 2")
                .dLandTotal_2.Value = DT(0)("Land Total 2")
                .dLandTotal_2.Tag = DT(0)("Land Total 2")
                .txtLandRemarks_2.Text = DT(0)("Land Remarks 2")
                .txtLandRemarks_2.Tag = DT(0)("Land Remarks 2")

                If CDbl(DT(0)("Land Total 3")) > 0 Then
                    .dLandArea_3.Visible = True
                    .lblLandSQM_3.Visible = True
                    .dLandPrice_3.Visible = True
                    .lblLandCons_3.Visible = True
                    .lblLandPhp_3.Visible = True
                    .dLandTotal_3.Visible = True
                    .txtLandRemarks_3.Visible = True
                    .btnAddLand_3.Visible = True
                    .btnRemoveLand_3.Visible = True
                End If
                .dLandArea_3.Value = DT(0)("Land Area 3")
                .dLandArea_3.Tag = DT(0)("Land Area 3")
                .dLandPrice_3.Value = DT(0)("Land Price 3")
                .dLandPrice_3.Tag = DT(0)("Land Price 3")
                .dLandTotal_3.Value = DT(0)("Land Total 3")
                .dLandTotal_3.Tag = DT(0)("Land Total 3")
                .txtLandRemarks_3.Text = DT(0)("Land Remarks 3")
                .txtLandRemarks_3.Tag = DT(0)("Land Remarks 3")

                If CDbl(DT(0)("Land Total 4")) > 0 Then
                    .dLandArea_4.Visible = True
                    .lblLandSQM_4.Visible = True
                    .dLandPrice_4.Visible = True
                    .lblLandCons_4.Visible = True
                    .lblLandPhp_4.Visible = True
                    .dLandTotal_4.Visible = True
                    .txtLandRemarks_4.Visible = True
                    .btnAddLand_4.Visible = True
                    .btnRemoveLand_4.Visible = True
                End If
                .dLandArea_4.Value = DT(0)("Land Area 4")
                .dLandArea_4.Tag = DT(0)("Land Area 4")
                .dLandPrice_4.Value = DT(0)("Land Price 4")
                .dLandPrice_4.Tag = DT(0)("Land Price 4")
                .dLandTotal_4.Value = DT(0)("Land Total 4")
                .dLandTotal_4.Tag = DT(0)("Land Total 4")
                .txtLandRemarks_4.Text = DT(0)("Land Remarks 4")
                .txtLandRemarks_4.Tag = DT(0)("Land Remarks 4")

                If CDbl(DT(0)("Land Total 5")) > 0 Then
                    .dLandArea_5.Visible = True
                    .lblLandSQM_5.Visible = True
                    .dLandPrice_5.Visible = True
                    .lblLandCons_5.Visible = True
                    .lblLandPhp_5.Visible = True
                    .dLandTotal_5.Visible = True
                    .txtLandRemarks_5.Visible = True
                    .btnRemoveLand_5.Visible = True
                End If
                .dLandArea_5.Value = DT(0)("Land Area 5")
                .dLandArea_5.Tag = DT(0)("Land Area 5")
                .dLandPrice_5.Value = DT(0)("Land Price 5")
                .dLandPrice_5.Tag = DT(0)("Land Price 5")
                .dLandTotal_5.Value = DT(0)("Land Total 5")
                .dLandTotal_5.Tag = DT(0)("Land Total 5")
                .txtLandRemarks_5.Text = DT(0)("Land Remarks 5")
                .txtLandRemarks_5.Tag = DT(0)("Land Remarks 5")

                .txtMachine.Text = DT(0)("Machine")
                .txtMachine.Tag = DT(0)("Machine")

                .dMachineArea_1.Value = DT(0)("Machine Area")
                .dMachineArea_1.Tag = DT(0)("Machine Area")
                .dMachinePrice_1.Value = DT(0)("Machine Price")
                .dMachinePrice_1.Tag = DT(0)("Machine Price")
                .dMachineTotal_1.Value = DT(0)("Machine Total")
                .dMachineTotal_1.Tag = DT(0)("Machine Total")
                .txtMachineRemarks_1.Text = DT(0)("Machine Remarks")
                .txtMachineRemarks_1.Tag = DT(0)("Machine Remarks")

                If CDbl(DT(0)("Machine Total 2")) > 0 Then
                    .dMachineArea_2.Visible = True
                    .lblMachineSQM_2.Visible = True
                    .dMachinePrice_2.Visible = True
                    .lblMachineCons_2.Visible = True
                    .lblMachinePhp_2.Visible = True
                    .dMachineTotal_2.Visible = True
                    .txtMachineRemarks_2.Visible = True
                    .btnAddMachine_2.Visible = True
                    .btnRemoveMachine_2.Visible = True
                End If
                .dMachineArea_2.Value = DT(0)("Machine Area 2")
                .dMachineArea_2.Tag = DT(0)("Machine Area 2")
                .dMachinePrice_2.Value = DT(0)("Machine Price 2")
                .dMachinePrice_2.Tag = DT(0)("Machine Price 2")
                .dMachineTotal_2.Value = DT(0)("Machine Total 2")
                .dMachineTotal_2.Tag = DT(0)("Machine Total 2")
                .txtMachineRemarks_2.Text = DT(0)("Machine Remarks 2")
                .txtMachineRemarks_2.Tag = DT(0)("Machine Remarks 2")

                If CDbl(DT(0)("Machine Total 3")) > 0 Then
                    .dMachineArea_3.Visible = True
                    .lblMachineSQM_3.Visible = True
                    .dMachinePrice_3.Visible = True
                    .lblMachineCons_3.Visible = True
                    .lblMachinePhp_3.Visible = True
                    .dMachineTotal_3.Visible = True
                    .txtMachineRemarks_3.Visible = True
                    .btnAddMachine_3.Visible = True
                    .btnRemoveMachine_3.Visible = True
                End If
                .dMachineArea_3.Value = DT(0)("Machine Area 3")
                .dMachineArea_3.Tag = DT(0)("Machine Area 3")
                .dMachinePrice_3.Value = DT(0)("Machine Price 3")
                .dMachinePrice_3.Tag = DT(0)("Machine Price 3")
                .dMachineTotal_3.Value = DT(0)("Machine Total 3")
                .dMachineTotal_3.Tag = DT(0)("Machine Total 3")
                .txtMachineRemarks_3.Text = DT(0)("Machine Remarks 3")
                .txtMachineRemarks_3.Tag = DT(0)("Machine Remarks 3")

                If CDbl(DT(0)("Machine Total 4")) > 0 Then
                    .dMachineArea_4.Visible = True
                    .lblMachineSQM_4.Visible = True
                    .dMachinePrice_4.Visible = True
                    .lblMachineCons_4.Visible = True
                    .lblMachinePhp_4.Visible = True
                    .dMachineTotal_4.Visible = True
                    .txtMachineRemarks_4.Visible = True
                    .btnAddMachine_4.Visible = True
                    .btnRemoveMachine_4.Visible = True
                End If
                .dMachineArea_4.Value = DT(0)("Machine Area 4")
                .dMachineArea_4.Tag = DT(0)("Machine Area 4")
                .dMachinePrice_4.Value = DT(0)("Machine Price 4")
                .dMachinePrice_4.Tag = DT(0)("Machine Price 4")
                .dMachineTotal_4.Value = DT(0)("Machine Total 4")
                .dMachineTotal_4.Tag = DT(0)("Machine Total 4")
                .txtMachineRemarks_4.Text = DT(0)("Machine Remarks 4")
                .txtMachineRemarks_4.Tag = DT(0)("Machine Remarks 4")

                If CDbl(DT(0)("Machine Total 5")) > 0 Then
                    .dMachineArea_5.Visible = True
                    .lblMachineSQM_5.Visible = True
                    .dMachinePrice_5.Visible = True
                    .lblMachineCons_5.Visible = True
                    .lblMachinePhp_5.Visible = True
                    .dMachineTotal_5.Visible = True
                    .txtMachineRemarks_5.Visible = True
                    .btnRemoveMachine_5.Visible = True
                End If
                .dMachineArea_5.Value = DT(0)("Machine Area 5")
                .dMachineArea_5.Tag = DT(0)("Machine Area 5")
                .dMachinePrice_5.Value = DT(0)("Machine Price 5")
                .dMachinePrice_5.Tag = DT(0)("Machine Price 5")
                .dMachineTotal_5.Value = DT(0)("Machine Total 5")
                .dMachineTotal_5.Tag = DT(0)("Machine Total 5")
                .txtMachineRemarks_5.Text = DT(0)("Machine Remarks 5")
                .txtMachineRemarks_5.Tag = DT(0)("Machine Remarks 5")

                .txtImprovements.Text = DT(0)("Improvement")
                .txtImprovements.Tag = DT(0)("Improvement")

                .dImprovementArea_1.Value = DT(0)("Improvement Area")
                .dImprovementArea_1.Tag = DT(0)("Improvement Area")
                .dImprovementPrice_1.Value = DT(0)("Improvement Price")
                .dImprovementPrice_1.Tag = DT(0)("Improvement Price")
                .dImprovementTotal_1.Value = DT(0)("Improvement Total")
                .dImprovementTotal_1.Tag = DT(0)("Improvement Total")
                .txtImprovementRemarks_1.Text = DT(0)("Improvement Remarks")
                .txtImprovementRemarks_1.Tag = DT(0)("Improvement Remarks")

                If CDbl(DT(0)("Improvement Total 2")) > 0 Then
                    .dImprovementArea_2.Visible = True
                    .lblImprovementSQM_2.Visible = True
                    .dImprovementPrice_2.Visible = True
                    .lblImprovementCons_2.Visible = True
                    .lblImprovementPhp_2.Visible = True
                    .dImprovementTotal_2.Visible = True
                    .txtImprovementRemarks_2.Visible = True
                    .btnAddImprovement_2.Visible = True
                    .btnRemoveImprovement_2.Visible = True
                End If
                .dImprovementArea_2.Value = DT(0)("Improvement Area 2")
                .dImprovementArea_2.Tag = DT(0)("Improvement Area 2")
                .dImprovementPrice_2.Value = DT(0)("Improvement Price 2")
                .dImprovementPrice_2.Tag = DT(0)("Improvement Price 2")
                .dImprovementTotal_2.Value = DT(0)("Improvement Total 2")
                .dImprovementTotal_2.Tag = DT(0)("Improvement Total 2")
                .txtImprovementRemarks_2.Text = DT(0)("Improvement Remarks 2")
                .txtImprovementRemarks_2.Tag = DT(0)("Improvement Remarks 2")

                If CDbl(DT(0)("Improvement Total 3")) > 0 Then
                    .dImprovementArea_3.Visible = True
                    .lblImprovementSQM_3.Visible = True
                    .dImprovementPrice_3.Visible = True
                    .lblImprovementCons_3.Visible = True
                    .lblImprovementPhp_3.Visible = True
                    .dImprovementTotal_3.Visible = True
                    .txtImprovementRemarks_3.Visible = True
                    .btnAddImprovement_3.Visible = True
                    .btnRemoveImprovement_3.Visible = True
                End If
                .dImprovementArea_3.Value = DT(0)("Improvement Area 3")
                .dImprovementArea_3.Tag = DT(0)("Improvement Area 3")
                .dImprovementPrice_3.Value = DT(0)("Improvement Price 3")
                .dImprovementPrice_3.Tag = DT(0)("Improvement Price 3")
                .dImprovementTotal_3.Value = DT(0)("Improvement Total 3")
                .dImprovementTotal_3.Tag = DT(0)("Improvement Total 3")
                .txtImprovementRemarks_3.Text = DT(0)("Improvement Remarks 3")
                .txtImprovementRemarks_3.Tag = DT(0)("Improvement Remarks 3")

                If CDbl(DT(0)("Improvement Total 4")) > 0 Then
                    .dImprovementArea_4.Visible = True
                    .lblImprovementSQM_4.Visible = True
                    .dImprovementPrice_4.Visible = True
                    .lblImprovementCons_4.Visible = True
                    .lblImprovementPhp_4.Visible = True
                    .dImprovementTotal_4.Visible = True
                    .txtImprovementRemarks_4.Visible = True
                    .btnAddImprovement_4.Visible = True
                    .btnRemoveImprovement_4.Visible = True
                End If
                .dImprovementArea_4.Value = DT(0)("Improvement Area 4")
                .dImprovementArea_4.Tag = DT(0)("Improvement Area 4")
                .dImprovementPrice_4.Value = DT(0)("Improvement Price 4")
                .dImprovementPrice_4.Tag = DT(0)("Improvement Price 4")
                .dImprovementTotal_4.Value = DT(0)("Improvement Total 4")
                .dImprovementTotal_4.Tag = DT(0)("Improvement Total 4")
                .txtImprovementRemarks_4.Text = DT(0)("Improvement Remarks 4")
                .txtImprovementRemarks_4.Tag = DT(0)("Improvement Remarks 4")

                If CDbl(DT(0)("Improvement Total 5")) > 0 Then
                    .dImprovementArea_5.Visible = True
                    .lblImprovementSQM_5.Visible = True
                    .dImprovementPrice_5.Visible = True
                    .lblImprovementCons_5.Visible = True
                    .lblImprovementPhp_5.Visible = True
                    .dImprovementTotal_5.Visible = True
                    .txtImprovementRemarks_5.Visible = True
                    .btnRemoveImprovement_5.Visible = True
                End If
                .dImprovementArea_5.Value = DT(0)("Improvement Area 5")
                .dImprovementArea_5.Tag = DT(0)("Improvement Area 5")
                .dImprovementPrice_5.Value = DT(0)("Improvement Price 5")
                .dImprovementPrice_5.Tag = DT(0)("Improvement Price 5")
                .dImprovementTotal_5.Value = DT(0)("Improvement Total 5")
                .dImprovementTotal_5.Tag = DT(0)("Improvement Total 5")
                .txtImprovementRemarks_5.Text = DT(0)("Improvement Remarks 5")
                .txtImprovementRemarks_5.Tag = DT(0)("Improvement Remarks 5")

                .dTotalAmount.Value = DT(0)("Total")
                .dTotalAmount.Tag = DT(0)("Total")
                .dPrevailingSellingPrice.Value = DT(0)("Prevailing Selling Price")
                .dPrevailingSellingPrice.Tag = DT(0)("Prevailing Selling Price")
                .dZonalValuation.Value = DT(0)("Zonal Valuation")
                .dZonalValuation.Tag = DT(0)("Zonal Valuation")

                .txtTCT.Text = DT(0)("TCT No.")
                .txtTCT.Tag = DT(0)("TCT No.")
                .txtLot.Text = DT(0)("Lot / Block No.")
                .txtLot.Tag = DT(0)("Lot / Block No.")
                .dArea.Value = DT(0)("Area SQ.M.")
                .dArea.Tag = DT(0)("Area SQ.M.")
                .txtRegisteredOwner.Text = DT(0)("Registered Owner")
                .txtRegisteredOwner.Tag = DT(0)("Registered Owner")
                .txtRegistryOfDeeds.Text = DT(0)("Registry of Deeds")
                .txtRegistryOfDeeds.Tag = DT(0)("Registry of Deeds")
                .rLocation.Text = DT(0)("Location")
                .rLocation.Tag = DT(0)("Location")
                .txtCoordinates.Text = DT(0)("Coordinates")
                .txtCoordinates.Tag = DT(0)("Coordinates")
                .cbxVacant.Checked = If(DT(0)("Vacant Lot") = "YES", True, False)
                .cbxVacant.Tag = If(DT(0)("Vacant Lot") = "YES", True, False)
                If DT(0)("Classification") = "Residential" Then
                    .cbxResidential.Checked = True
                ElseIf DT(0)("Classification") = "Commercial" Then
                    .cbxCommercial.Checked = True
                ElseIf DT(0)("Classification") = "Agricultural" Then
                    .cbxAgricultural.Checked = True
                ElseIf DT(0)("Classification") = "Tourism" Then
                    .cbxTourism.Checked = True
                ElseIf DT(0)("Classification") = "Industrial" Then
                    .cbxIndustrial.Checked = True
                ElseIf DT(0)("Classification") = "Condominium" Then
                    .cbxCondominium.Checked = True
                Else
                    .cbxOthers.Checked = True
                    .txtOthers.Text = DT(0)("Classification")
                End If
                .cbxResidential.Tag = DT(0)("Classification")
                .cbxCommercial.Tag = DT(0)("Classification")
                .cbxAgricultural.Tag = DT(0)("Classification")
                .cbxTourism.Tag = DT(0)("Classification")
                .cbxIndustrial.Tag = DT(0)("Classification")
                .cbxCondominium.Tag = DT(0)("Classification")
                .cbxOthers.Tag = DT(0)("Classification")

                .txtStorey.Text = DT(0)("Storey")
                .txtStorey.Tag = DT(0)("Storey")
                .txtRoofings.Text = DT(0)("Roofing")
                .txtRoofings.Tag = DT(0)("Roofing")
                .txtFlooring.Text = DT(0)("Flooring")
                .txtFlooring.Tag = DT(0)("Flooring")
                .txtTandB.Text = DT(0)("T and B")
                .txtTandB.Tag = DT(0)("T and B")
                .txtFrame.Text = DT(0)("Frame")
                .txtFrame.Tag = DT(0)("Frame")
                .txtBeams.Text = DT(0)("Beams")
                .txtBeams.Tag = DT(0)("Beams")
                .txtDoors.Text = DT(0)("Door")
                .txtDoors.Tag = DT(0)("Door")
                .txtYearConstructed.Text = DT(0)("Year Constructed")
                .txtYearConstructed.Tag = DT(0)("Year Constructed")
                .txtWalling.Text = DT(0)("Walling")
                .txtWalling.Tag = DT(0)("Walling")
                .txtCeilings.Text = DT(0)("Ceiling")
                .txtCeilings.Tag = DT(0)("Ceiling")
                .txtWindows.Text = DT(0)("Windows")
                .txtWindows.Tag = DT(0)("Windows")
                .txtFloorArea.Text = DT(0)("Floor Area")
                .txtFloorArea.Tag = DT(0)("Floor Area")
                .txtPartitions.Text = DT(0)("Partitions")
                .txtPartitions.Tag = DT(0)("Partitions")
                .rRemarks.Text = DT(0)("Remarks")
                .rRemarks.Tag = DT(0)("Remarks")
                .dFairMarketValue.Value = DT(0)("Market Value")
                .dFairMarketValue.Tag = DT(0)("Market Value")
                .dAppraisedValue.Value = DT(0)("Appraised Value")
                .dAppraisedValue.Tag = DT(0)("Appraised Value")
                If DT(0)("As of") = "" Then
                    .dtpAsOf.CustomFormat = ""
                Else
                    .dtpAsOf.CustomFormat = "MMMM dd, yyyy"
                    .dtpAsOf.Value = CDate(DT(0)("As of"))
                End If
                .dtpAsOf.Tag = DT(0)("As of")
                .dRecommendedAmount.Value = DT(0)("Loanable Value")
                .dRecommendedAmount.Tag = DT(0)("Loanable Value")
                .dRecommendedPercent.Value = DT(0)("Loanable Percent")
                .dRecommendedPercent.Tag = DT(0)("Loanable Percent")
                .TotalImage = DT(0)("Attach")

                .txtTCT.Enabled = False
                .txtLot.Enabled = False
                .dArea.Enabled = False
                .txtRegisteredOwner.Enabled = False
                .txtRegistryOfDeeds.Enabled = False
                .rLocation.Enabled = False
                .txtCoordinates.Enabled = False
            End If

            Dim Result As DialogResult
            Result = .ShowDialog
            If Result = DialogResult.OK Then
                GridView2.SetFocusedRowCellValue("ID", .txtAppraiseNumber.Text)
                GridView2.SetFocusedRowCellValue("Collateral", .txtTCT.Text & " of the Registry of " & .txtRegistryOfDeeds.Text)
                GridView2.SetFocusedRowCellValue("Market Value", .dFairMarketValue.Text)
                GridView2.SetFocusedRowCellValue("AppraisedValue", .dAppraisedValue.Text)
                GridView2.SetFocusedRowCellValue("LoanableValue", .dRecommendedAmount.Text)
                GridView2.SetFocusedRowCellValue("LoanPercent", .dRecommendedPercent.Text)
            End If

            If GridView2.RowCount = 0 Then
                btnModifyRealEstate.Enabled = False
                btnPrintRealEstate.Enabled = False
            Else
                btnModifyRealEstate.Enabled = True
                btnPrintRealEstate.Enabled = True
            End If
            .Dispose()
        End With
    End Sub

    Private Sub DCapitalP_ValueChanged(sender As Object, e As EventArgs) Handles dCapitalP.ValueChanged
        If UpdateAmount Then
            Exit Sub
        End If
        UpdatePercent = True
        If dCapitalP.Value = 0 Then
            dCapital.Value = dBusinessNet.Value * (dCapitalP.Value / 100)
        Else
            dCapital.Value = dBusinessNet.Value * (dCapitalP.Value / 100)
        End If
        UpdatePercent = False
    End Sub

    Private Sub DFuelMaintenanceP_ValueChanged(sender As Object, e As EventArgs) Handles dFuelMaintenanceP.ValueChanged
        If UpdateAmount Then
            Exit Sub
        End If
        UpdatePercent = True
        If dFuelMaintenanceP.Value = 0 Then
            dFuelMaintenance.Value = dBusinessNet.Value * (dFuelMaintenanceP.Value / 100)
        Else
            dFuelMaintenance.Value = dBusinessNet.Value * (dFuelMaintenanceP.Value / 100)
        End If
        UpdatePercent = False
    End Sub

    Private Sub DUtilitiesP_ValueChanged(sender As Object, e As EventArgs) Handles dUtilitiesP.ValueChanged
        If UpdateAmount Then
            Exit Sub
        End If
        UpdatePercent = True
        If dUtilitiesP.Value = 0 Then
            dUtilities.Value = dBusinessNet.Value * (dUtilitiesP.Value / 100)
        Else
            dUtilities.Value = dBusinessNet.Value * (dUtilitiesP.Value / 100)
        End If
        UpdatePercent = False
    End Sub

    Private Sub DSalariesWagesP_ValueChanged(sender As Object, e As EventArgs) Handles dSalariesWagesP.ValueChanged
        If UpdateAmount Then
            Exit Sub
        End If
        UpdatePercent = True
        If dSalariesWagesP.Value = 0 Then
            dSalariesWages.Value = dBusinessNet.Value * (dSalariesWagesP.Value / 100)
        Else
            dSalariesWages.Value = dBusinessNet.Value * (dSalariesWagesP.Value / 100)
        End If
        UpdatePercent = False
    End Sub

    Private Sub DBMiscellaneousP_ValueChanged(sender As Object, e As EventArgs) Handles dBMiscellaneousP.ValueChanged
        If UpdateAmount Then
            Exit Sub
        End If
        UpdatePercent = True
        If dBMiscellaneousP.Value = 0 Then
            dBMiscellaneous.Value = dBusinessNet.Value * (dBMiscellaneousP.Value / 100)
        Else
            dBMiscellaneous.Value = dBusinessNet.Value * (dBMiscellaneousP.Value / 100)
        End If
        UpdatePercent = False
    End Sub

    Private Sub DBOthersP_ValueChanged(sender As Object, e As EventArgs) Handles dBOthersP.ValueChanged
        If UpdateAmount Then
            Exit Sub
        End If
        UpdatePercent = True
        If dBOthersP.Value = 0 Then
            dBOthers.Value = dBusinessNet.Value * (dBOthersP.Value / 100)
        Else
            dBOthers.Value = dBusinessNet.Value * (dBOthersP.Value / 100)
        End If
        UpdatePercent = False
    End Sub

    Private Sub BExpense_ValueChanged(sender As Object, e As EventArgs) Handles dCapital.ValueChanged, dFuelMaintenance.ValueChanged, dUtilities.ValueChanged, dSalariesWages.ValueChanged, dBMiscellaneous.ValueChanged, dBOthers.ValueChanged
        dTotalBExpense.Value = dCapital.Value + dFuelMaintenance.Value + dUtilities.Value + dSalariesWages.Value + dBMiscellaneous.Value + dBOthers.Value
        dTotalIncome.Value = dSalary_B.Value + dSalary_S.Value + (dBusinessNet.Value - (dCapital.Value + dFuelMaintenance.Value + dUtilities.Value + dSalariesWages.Value + dBMiscellaneous.Value + dBOthers.Value)) + If(cbxIncludeC1.Checked, dSalary_C1.Value, 0) + If(cbxIncludeC2.Checked, dSalary_C2.Value, 0) + If(cbxIncludeC3.Checked, dSalary_C3.Value, 0) + If(cbxIncludeC4.Checked, dSalary_C4.Value, 0)
    End Sub

    Private Sub DCapital_ValueChanged(sender As Object, e As EventArgs) Handles dCapital.ValueChanged
        If UpdatePercent Then
            Exit Sub
        End If
        UpdateAmount = True
        If dCapital.Value = 0 And dBusinessNet.Value = 0 Then
        Else
            dCapitalP.Value = (dCapital.Value / dBusinessNet.Value) * 100
        End If
        UpdateAmount = False
    End Sub

    Private Sub DFuelMaintenance_ValueChanged(sender As Object, e As EventArgs) Handles dFuelMaintenance.ValueChanged
        If UpdatePercent Then
            Exit Sub
        End If
        UpdateAmount = True
        If dFuelMaintenance.Value = 0 And dBusinessNet.Value = 0 Then
        Else
            dFuelMaintenanceP.Value = (dFuelMaintenance.Value / dBusinessNet.Value) * 100
        End If
        UpdateAmount = False
    End Sub

    Private Sub DUtilities_ValueChanged(sender As Object, e As EventArgs) Handles dUtilities.ValueChanged
        If UpdatePercent Then
            Exit Sub
        End If
        UpdateAmount = True
        If dUtilities.Value = 0 And dBusinessNet.Value = 0 Then
        Else
            dUtilitiesP.Value = (dUtilities.Value / dBusinessNet.Value) * 100
        End If
        UpdateAmount = False
    End Sub

    Private Sub DBMiscellaneous_ValueChanged(sender As Object, e As EventArgs) Handles dBMiscellaneous.ValueChanged
        If UpdatePercent Then
            Exit Sub
        End If
        UpdateAmount = True
        If dBMiscellaneous.Value = 0 And dBusinessNet.Value = 0 Then
        Else
            dBMiscellaneousP.Value = (dBMiscellaneous.Value / dBusinessNet.Value) * 100
        End If
        UpdateAmount = False
    End Sub

    Private Sub DSalariesWages_ValueChanged(sender As Object, e As EventArgs) Handles dSalariesWages.ValueChanged
        If UpdatePercent Then
            Exit Sub
        End If
        UpdateAmount = True
        If dSalariesWages.Value = 0 And dBusinessNet.Value = 0 Then
        Else
            dSalariesWagesP.Value = (dSalariesWages.Value / dBusinessNet.Value) * 100
        End If
        UpdateAmount = False
    End Sub

    Private Sub DBOthers_ValueChanged(sender As Object, e As EventArgs) Handles dBOthers.ValueChanged
        If UpdatePercent Then
            Exit Sub
        End If
        UpdateAmount = True
        If dBOthers.Value = 0 And dBusinessNet.Value = 0 Then
        Else
            dBOthersP.Value = (dBOthers.Value / dBusinessNet.Value) * 100
        End If
        UpdateAmount = False
    End Sub

    Private Sub BtnCalculator_Click(sender As Object, e As EventArgs) Handles btnCalculator.Click
        If MsgBoxYes("Are you sure you want to view computation?") = MsgBoxResult.Yes Then
            If FrmMain.lblDate.Text.Contains("Disconnected") Then
                MsgBox(String.Format("Disconnected from the server {0}", _ServerName), MsgBoxStyle.Information, "Info")
                Exit Sub
            End If

            Dim Calculator As New FrmLoanApplication
            With Calculator
                .Tag = 26
                FormRestriction(.Tag)
                If allow_Access Then
                    .vSave = allow_Save
                    .vUpdate = allow_Update
                    .vDelete = allow_Delete
                    .vPrint = allow_Print
                Else
                    MsgBox(mBox_Access, MsgBoxStyle.Information, "Info")
                    Exit Sub
                End If

                Logs("Credit Investigation", "View Computation", "Amortization Calculators", "", "", "", CreditNumber)
                .lblTitle.Text = "AMORTIZATION CALCULATOR"
                .ControlBox = False
                .FormBorderStyle = FormBorderStyle.FixedDialog
                .WindowState = FormWindowState.Normal
                .From_CI = True
                .From_Request = True
                .From_SOA = True
                .CreditNumber = CreditNumber
                .btnOpen.Visible = True

                .ShowDialog()
                .Dispose()
            End With
        End If
    End Sub

    Private Sub CbxSpouse_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxSpouse_B.CheckedChanged
        If cbxSpouse_B.Checked Then
            If TxtFirstN_S.Text = "" Then
                MsgBox("Please fill spouse information first.", MsgBoxStyle.Information, "Info")
                cbxSpouse_B.Checked = False
            End If
        End If
    End Sub

    Private Sub CbxCoMaker1_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCoMaker1_B.CheckedChanged
        If cbxCoMaker1_B.Checked Then
            If TxtFirstN_C1.Text = "" Then
                MsgBox("Please fill comaker information first.", MsgBoxStyle.Information, "Info")
                cbxCoMaker1_B.Checked = False
            End If
        End If
    End Sub

    Private Sub CbxCoMaker2_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCoMaker2_B.CheckedChanged
        If cbxCoMaker2_B.Checked Then
            If TxtFirstN_C2.Text = "" Then
                MsgBox("Please fill comaker information first.", MsgBoxStyle.Information, "Info")
                cbxCoMaker2_B.Checked = False
            End If
        End If
    End Sub

    Private Sub CbxCoMaker3_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCoMaker3_B.CheckedChanged
        If cbxCoMaker3_B.Checked Then
            If TxtFirstN_C3.Text = "" Then
                MsgBox("Please fill comaker information first.", MsgBoxStyle.Information, "Info")
                cbxCoMaker3_B.Checked = False
            End If
        End If
    End Sub

    Private Sub CbxCoMaker4_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCoMaker4_B.CheckedChanged
        If cbxCoMaker4_B.Checked Then
            If TxtFirstN_C4.Text = "" Then
                MsgBox("Please fill comaker information first.", MsgBoxStyle.Information, "Info")
                cbxCoMaker4_B.Checked = False
            End If
        End If
    End Sub

    Private Sub IReapprove_Click(sender As Object, e As EventArgs) Handles iReapprove.Click
        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Then
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("ApproveStatus") = "For ReApprove" Then
                MsgBox("Credit Application is already For ReApprove.", MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("ci_status") = "PENDING" Then
                MsgBox("Credit Application is not yet APPROVED/DISAPPROVED", MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("Application Status") = "BOOKED" Or GridView5.GetFocusedRowCellValue("Application Status") = "CLOSED ACCOUNT" Or GridView5.GetFocusedRowCellValue("Application Status") = "CV FOR APPROVAL" Or GridView5.GetFocusedRowCellValue("Application Status") = "FOR RELEASING" Or GridView5.GetFocusedRowCellValue("Application Status") = "FOR CRECOMM APPROVAL" Or GridView5.GetFocusedRowCellValue("Application Status") = "CV FOR CHECKING" Then
                MsgBox("Credit Application is already " & GridView5.GetFocusedRowCellValue("Application Status"), MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("ApprovedAmount_President") > 0 Then
                MsgBox("Special Approval is already made, re-approval is not applicable.", MsgBoxStyle.Information, "Info")
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        If MsgBoxYes("Are you sure you want to set this application for reapproval?") = MsgBoxResult.Yes Then
            Dim Reason As String 'Reason for change
            If FrmReason.ShowDialog = DialogResult.OK Then
                Reason = FrmReason.txtReason.Text
            Else
                Exit Sub
            End If

            Dim SQL As String = String.Format("UPDATE credit_application SET ApproveStatus = 'For ReApprove' WHERE CreditNumber = '{0}';", GridView5.GetFocusedRowCellValue("Credit Number"))
            DataObject(SQL)
            Logs("Credit Investigation", "For ReApprove", Reason, "", "", "", "")
            LoadData()
            MsgBox("Successfully Updated!", MsgBoxStyle.Information, "Info")
        End If
    End Sub

    Private Sub ISpecialApproval_Click(sender As Object, e As EventArgs) Handles iSpecialApproval.Click
        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Then
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("ApproveStatus") = "For Special" Then
                MsgBox("Credit Application is already For Special Approval.", MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("ci_status") = "PENDING" Then
                MsgBox("Credit Application is not yet APPROVED/DISAPPROVED", MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("Application Status") = "BOOKED" Or GridView5.GetFocusedRowCellValue("Application Status") = "CLOSED ACCOUNT" Or GridView5.GetFocusedRowCellValue("Application Status") = "CV FOR APPROVAL" Or GridView5.GetFocusedRowCellValue("Application Status") = "FOR RELEASING" Or GridView5.GetFocusedRowCellValue("Application Status") = "FOR CRECOMM APPROVAL" Or GridView5.GetFocusedRowCellValue("Application Status") = "CV FOR CHECKING" Then
                MsgBox("Credit Application is already " & GridView5.GetFocusedRowCellValue("Application Status"), MsgBoxStyle.Information, "Info")
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        If MsgBoxYes("Are you sure you want to set this application for special approval?") = MsgBoxResult.Yes Then
            Dim Reason As String 'Reason for change
            If FrmReason.ShowDialog = DialogResult.OK Then
                Reason = FrmReason.txtReason.Text
            Else
                Exit Sub
            End If

            Dim SQL As String = String.Format("UPDATE credit_application SET ApproveStatus = 'For Special' WHERE CreditNumber = '{0}';", GridView5.GetFocusedRowCellValue("Credit Number"))
            DataObject(SQL)
            Logs("Credit Investigation", "For Special Approval", Reason, "", "", "", "")
            LoadData()
            MsgBox("Successfully Updated!", MsgBoxStyle.Information, "Info")
        End If
    End Sub

    Private Sub IChangeCollateral_Click(sender As Object, e As EventArgs) Handles iChangeCollateral.Click
        If GridView5.GetFocusedRowCellValue("ID").ToString = "" Then
            Exit Sub
        ElseIf GridView5.GetFocusedRowCellValue("ChangeCollateral") = 1 Then
            MsgBox(String.Format("Credit Investigation already requested for Change of Collateral.", GridView5.GetFocusedRowCellValue("Application Status")), MsgBoxStyle.Information, "Info")
            Exit Sub
        Else
            If GridView5.GetFocusedRowCellValue("Application Status") = "FOR CHECK PREPARATION" Or GridView5.GetFocusedRowCellValue("Application Status") = "FOR CRECOMM APPROVAL" Then
            ElseIf GridView5.GetFocusedRowCellValue("Application Status") = "CREDIT INVESTIGATION STARTED" Then
                MsgBox(String.Format("Credit Investigation is still {0}.", GridView5.GetFocusedRowCellValue("Application Status")), MsgBoxStyle.Information, "Info")
                Exit Sub
            Else
                MsgBox(String.Format("Credit Investigation is already {0}.", GridView5.GetFocusedRowCellValue("Application Status")), MsgBoxStyle.Information, "Info")
                Exit Sub
            End If
        End If

        If MsgBoxYes("Are you sure you want to Change Collateral this credit investigation?") = MsgBoxResult.Yes Then
            Cursor = Cursors.WaitCursor
            Dim Reason As String 'Reason for change
            If FrmReason.ShowDialog = DialogResult.OK Then
                Reason = FrmReason.txtReason.Text
            Else
                Exit Sub
            End If

            Dim SQL As String = String.Format("UPDATE credit_investigation SET ChangeCollateral = 1 WHERE CINumber = '{0}';", GridView5.GetFocusedRowCellValue("CI Number"))
            DataObject(SQL)
            Logs("Credit Investigation", "Change Collateral", Reason, String.Format("Request for Change of Collateral for Credit Investigation {0} of {1}.", GridView5.GetFocusedRowCellValue("CI Number"), GridView5.GetFocusedRowCellValue("Borrower")), "", "", GridView5.GetFocusedRowCellValue("Credit Number"))
            MsgBox("Successfully Request for Change Collateral!", MsgBoxStyle.Information, "Info")
            GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "ChangeCollateral", 1)
            Cursor = Cursors.Default
        End If
    End Sub

    Private Sub CbxIncludeSpouseBusiness_CheckedChanged(sender As Object, e As EventArgs) Handles cbxIncludeSpouseBusiness.CheckedChanged
        dSalary_S.Value = vSalary_S + If(cbxIncludeSpouseBusiness.Checked And txtBusinessName_B.Text <> vBusinessName_S, vBusinessIncome_S, 0) + If(cbxIncludeSpouseBusiness.Checked And txtOtherIncome_B.Text <> vOtherIncome_S, vOtherIncomeD_S, 0)
    End Sub

    Private Sub CbxYearHired_CheckedChanged(sender As Object, e As EventArgs) Handles cbxYearHired.CheckedChanged
        If cbxYearHired.Checked Then
            dtpHired_B.CustomFormat = "yyyy"
        Else
            dtpHired_B.CustomFormat = "MMM. dd, yyyy"
        End If
    End Sub
End Class