Imports System.Drawing.Imaging
Imports DevExpress.XtraReports.UI
Public Class FrmLoanApplication
    Dim ManualAmortization As Boolean
    Dim AssignedCI As Integer
    Dim RestructureDeductionUDI As Double
    Dim RestructureDeductionRPPD As Double
    Dim PrevTagTrigger As Boolean
    Dim UpdateAmount As Boolean
    Dim UpdatePercent As Boolean
    Dim Product_Payment As String
    Dim Product_UDI As String
    Dim Product_LastPrincipal As String
    Dim Product_AdvancePayment As String
    Dim Product_ForCI As String
    Dim MortgageID As Integer
    Dim BorrowerLoading As Boolean
    Dim For_CI As String
    Dim Flag As Boolean
    Dim AssetNumber_1 As String
    Dim AssetNumber_2 As String
    Dim AssetNumber_3 As String
    Dim AssetNumber_4 As String
    Dim AssetNumber_5 As String
    Dim AssetSelling_1 As Double
    Dim AssetSelling_2 As Double
    Dim AssetSelling_3 As Double
    Dim AssetSelling_4 As Double
    Dim AssetSelling_5 As Double
    Dim Description_1 As String
    Dim Description_2 As String
    Dim Description_3 As String
    Dim Description_4 As String
    Dim Description_5 As String

    Dim ApproveStatus As String
    Dim ApprovedAmount_Crecomm As Double
    Dim ApprovedTerm_Crecomm As Integer
    Dim ApprovedInterest_Crecomm As Double
    Dim ApprovedSC_Crecomm As Double

    Dim PD_BankID As Integer
    Dim PD_AccountNumber As String
    Dim PD_CardNumber As String
    Dim PD_ATM As Boolean

    Dim ChangeBorrowerPic As Boolean
    Dim FileName As String
    Public From_CI As Boolean
    Public From_CI_Print As Boolean
    Public CompareFromBorrower As Boolean
    Public From_CV_VerifySchedule As Boolean
    Public PrintName As String
    Public From_SOA As Boolean
    Public From_Request As Boolean
    Public For_Schedule As Boolean
    Public CreditNumber As String
    Dim Code As String
    Dim Old_Code As String

    Public TotalImageC1 As Integer
    Public TotalImageC2 As Integer
    Public TotalImageC3 As Integer
    Public TotalImageC4 As Integer
    Public TotalImageS As Integer
    Public TotalImage As Integer
    Public TotalImage_Crecomm As Integer
    Public TotalImage_Approval As Integer

    '*** I D E N T I F I C A T I O N ***
    Public GSIS As String
    Public PhilHealth As String
    Public Senior As String
    Public UMID As String
    Public SEC As String
    Public DTI As String
    Public CDA As String
    Public Cooperative As String
    Public Drivers As String
    Public dDrivers As String
    Public VIN As String
    Public dVIN As String
    Public Passport As String
    Public dPassport As String
    Public PRC As String
    Public dPRC As String
    Public NBI As String
    Public dNBI As String
    Public Police As String
    Public dPolice As String
    Public Postal As String
    Public dPostal As String
    Public Barangay As String
    Public dBarangay As String
    Public OWWA As String
    Public dOWWA As String
    Public OFW As String
    Public dOFW As String
    Public Seaman As String
    Public dSeaman As String
    Public PNP As String
    Public dPNP As String
    Public AFP As String
    Public dAFP As String
    Public HDMF As String
    Public dHDMF As String
    Public PWD As String
    Public dPWD As String
    Public DSWD As String
    Public dDSWD As String
    Public ACR As String
    Public dACR As String
    Public DTI_Business As String
    Public dDTI_Business As String
    Public IBP As String
    Public dIBP As String
    Public FireArms As String
    Public dFireArms As String
    Public Government As String
    Public dGovernment As String
    Public Diplomat As String
    Public dDiplomat As String
    Public National As String
    Public dNational As String
    Public Work As String
    Public dWork As String
    Public GOCC As String
    Public dGOCC As String
    Public PLRA As String
    Public dPLRA As String
    Public Major As String
    Public dMajor As String
    Public Media As String
    Public dMedia As String
    Public Student As String
    Public dStudent As String
    Public SIRV As String
    Public dSIRV As String

    Public TIN_S As String
    Public SSS_S As String
    Public GSIS_S As String
    Public PhilHealth_S As String
    Public Senior_S As String
    Public UMID_S As String
    Public SEC_S As String
    Public DTI_S As String
    Public CDA_S As String
    Public Cooperative_S As String
    Public Drivers_S As String
    Public dDrivers_S As String
    Public VIN_S As String
    Public dVIN_S As String
    Public Passport_S As String
    Public dPassport_S As String
    Public PRC_S As String
    Public dPRC_S As String
    Public NBI_S As String
    Public dNBI_S As String
    Public Police_S As String
    Public dPolice_S As String
    Public Postal_S As String
    Public dPostal_S As String
    Public Barangay_S As String
    Public dBarangay_S As String
    Public OWWA_S As String
    Public dOWWA_S As String
    Public OFW_S As String
    Public dOFW_S As String
    Public Seaman_S As String
    Public dSeaman_S As String
    Public PNP_S As String
    Public dPNP_S As String
    Public AFP_S As String
    Public dAFP_S As String
    Public HDMF_S As String
    Public dHDMF_S As String
    Public PWD_S As String
    Public dPWD_S As String
    Public DSWD_S As String
    Public dDSWD_S As String
    Public ACR_S As String
    Public dACR_S As String
    Public DTI_Business_S As String
    Public dDTI_Business_S As String
    Public IBP_S As String
    Public dIBP_S As String
    Public FireArms_S As String
    Public dFireArms_S As String
    Public Government_S As String
    Public dGovernment_S As String
    Public Diplomat_S As String
    Public dDiplomat_S As String
    Public National_S As String
    Public dNational_S As String
    Public Work_S As String
    Public dWork_S As String
    Public GOCC_S As String
    Public dGOCC_S As String
    Public PLRA_S As String
    Public dPLRA_S As String
    Public Major_S As String
    Public dMajor_S As String
    Public Media_S As String
    Public dMedia_S As String
    Public Student_S As String
    Public dStudent_S As String
    Public SIRV_S As String
    Public dSIRV_S As String
    '*** I D E N T I F I C A T I O N ***

    '*** D A T A   S T O R A G E ***'
    'Personal Information
    Dim vMiddleN_1 As String
    Dim vLastN_1 As String
    Dim vSuffix_1 As String
    Dim vGrade_1 As String
    Dim vSchool_1 As String
    Dim vSchoolAddress_1 As String

    Dim vPrefix_2 As String
    Dim vFirstN_2 As String
    Dim vMiddleN_2 As String
    Dim vLastN_2 As String
    Dim vSuffix_2 As String
    Dim vGrade_2 As String
    Dim vSchool_2 As String
    Dim vSchoolAddress_2 As String

    Dim vPrefix_3 As String
    Dim vFirstN_3 As String
    Dim vMiddleN_3 As String
    Dim vLastN_3 As String
    Dim vSuffix_3 As String
    Dim vGrade_3 As String
    Dim vSchool_3 As String
    Dim vSchoolAddress_3 As String

    Dim vPrefix_4 As String
    Dim vFirstN_4 As String
    Dim vMiddleN_4 As String
    Dim vLastN_4 As String
    Dim vSuffix_4 As String
    Dim vGrade_4 As String
    Dim vSchool_4 As String
    Dim vSchoolAddress_4 As String

    'Borrower Info
    Dim vRent_B As Double

    Dim vEmpAddress_B As String
    Dim vEmpTelephone_B As String
    Dim vPosition_B As String
    Dim vCasual_B As Boolean
    Dim vTemporary_B As Boolean
    Dim vPermanent_B As Boolean
    Dim vSupervisor_B As String
    Dim vSalary_B As Double

    Dim vBusinessAddress_B As String
    Dim vBusinessTelephone_B As String
    Dim vNatureBusiness_B As String
    Dim vYrsOperation_B As Integer
    Dim vBusinessIncome_B As Double
    Dim vNoEmployees_B As Integer
    Dim vCapital_B As Double
    Dim vArea_B As String
    Dim vOutlet_B As Integer
    Dim vOtherIncome_B As String

    Dim vOtherIncomeD_B As Double

    'Financial Info
    Dim vNatureLoan_1 As String
    Dim vAmountGranted_1 As Double
    Dim vTerm_1 As Double
    Dim vBalance_1 As Double
    Dim vCreditRemarks_1 As String
    Dim vCreditor_2 As String
    Dim vNatureLoan_2 As String
    Dim vAmountGranted_2 As Double
    Dim vTerm_2 As Double
    Dim vBalance_2 As Double
    Dim vCreditRemarks_2 As String
    Dim vCreditor_3 As String
    Dim vNatureLoan_3 As String
    Dim vAmountGranted_3 As Double
    Dim vTerm_3 As Double
    Dim vBalance_3 As Double
    Dim vCreditRemarks_3 As String

    Dim vBranch_1 As String
    Dim vcSA_1 As Boolean
    Dim vcCA_1 As Boolean
    Dim vSA_1 As String
    Dim vAverageBalance_1 As Double
    Dim vPresentBalance_1 As Double
    Dim vBankRemarks_1 As String
    Dim vBank_2 As String
    Dim vBranch_2 As String
    Dim vcSA_2 As Boolean
    Dim vcCA_2 As Boolean
    Dim vSA_2 As String
    Dim vAverageBalance_2 As Double
    Dim vPresentBalance_2 As Double
    Dim vBankRemarks_2 As String
    Dim vBank_3 As String
    Dim vBranch_3 As String
    Dim vcSA_3 As Boolean
    Dim vcCA_3 As Boolean
    Dim vSA_3 As String
    Dim vAverageBalance_3 As Double
    Dim vPresentBalance_3 As Double
    Dim vBankRemarks_3 As String

    Dim vTCT_1 As String
    Dim vArea_1 As Double
    Dim vAcquired_1 As String
    Dim vPropertiesRemarks_1 As String
    Dim vLocation_2 As String
    Dim vTCT_2 As String
    Dim vArea_2 As Double
    Dim vAcquired_2 As String
    Dim vPropertiesRemarks_2 As String
    Dim vLocation_3 As String
    ReadOnly vTCT_3 As String
    ReadOnly vArea_3 As Double
    ReadOnly vAcquired_3 As String
    ReadOnly vPropertiesRemarks_3 As String

    Dim vWhomAcquired_1 As String
    Dim vVehicleRemarks_1 As String
    Dim vVehicle_2 As String
    Dim vWhomAcquired_2 As String
    Dim vVehicleRemarks_2 As String
    Dim vVehicle_3 As String
    Dim vWhomAcquired_3 As String
    Dim vVehicleRemarks_3 As String

    Dim vHomeAppliances_2 As String
    Dim vReferenceAddress_1 As String
    Dim vReferenceContact_1 As String
    Dim vReference_2 As String
    Dim vReferenceAddress_2 As String
    Dim vReferenceContact_2 As String
    Dim vReference_3 As String
    Dim vReferenceAddress_3 As String
    Dim vReferenceContact_3 As String

    Dim vPlaceIssue As String
    '*** D A T A   S T O R A G E ***'
    Dim FirstLoad As Boolean = True
    Dim Interest_UDI As Double
    Public Interest_RPPD As Double = 3
    Public RPPD_Start As Integer = 7
    'Dim Renewal As Boolean
    'Dim vTariff As Double
    Public vSave As Boolean
    Public vUpdate As Boolean
    Public vDelete As Boolean
    Public vPrint As Boolean
    Public vCheck As Boolean
    Public vApprove As Boolean
    Dim Puwake_UDI As Double
    Dim UDI_F As Double
    Dim FA_F As Double
    Dim Puwake_MR As Double
    Dim RPPD_F As Double
    Dim Product_Interest As Double
    Dim Last_RPPD As Double
    Public DefaultImage As New DevExpress.XtraEditors.PictureEdit
    Dim BorrowerID As String
    Dim Borrower_Branch As String
    Dim Borrower_BranchID As String
    Dim CoMakerID As String
    Dim SpouseID As String
    Dim Status As String = "PENDING"
    Dim Draft_Status As String = "DRAFT"
    Public CoMakerShift As Boolean

    Public ReferenceID_1 As String
    Public ReferenceID_2 As String
    Public ReferenceID_3 As String
    Public ReferenceID_4 As String
    '*** C O M A K E R   I N F O ***
    Public ChangePic1 As Boolean
    Public vPrefix_C1 As String
    Public vFirstN_C1 As String
    Public vMiddleN_C1 As String
    Public vLastN_C1 As String
    Public vSuffix_C1 As String
    Public vNoC_C1 As String
    Public vStreetC_C1 As String
    Public vBarangayC_C1 As String
    Public vAddressC_C1 As String
    Public vAddressC_C1_ID As Integer
    Public vNoP_C1 As String
    Public vStreetP_C1 As String
    Public vBarangayP_C1 As String
    Public vAddressP_C1 As String
    Public vAddressP_C1_ID As Integer
    Public vBirth_C1 As String
    Public vPlaceBirth_C1 As String
    Public vPlaceBirth_C1_ID As Integer
    Public vMale_C1 As Boolean
    Public vFemale_C1 As Boolean
    Public vSingle_C1 As Boolean
    Public vMarried_C1 As Boolean
    Public vSeparated_C1 As Boolean
    Public vWidowed_C1 As Boolean
    Public vCitizenship_C1 As String
    Public vTelephone_C1 As String
    Public vMobile_C1 As String
    Public vTIN_C1 As String
    Public vSSS_C1 As String
    Public vEmail_C1 As String
    Public vOwned_C1 As Boolean
    Public vFree_C1 As Boolean
    Public vRented_C1 As Boolean
    Public vRent_C1 As Double
    Public vRelationship_C1 As String
    Public vRelationship_C1_ID As Integer
    Public vEmployer_C1 As String
    Public vEmpAddress_C1 As String
    Public vEmpTelephone_C1 As String
    Public vPosition_C1 As String
    Public vCasual_C1 As Boolean
    Public vTemporary_C1 As Boolean
    Public vPermanent_C1 As Boolean
    Public vHired_C1 As String
    Public vYearHired_C1 As Boolean
    Public vSupervisor_C1 As String
    Public vSalary_C1 As Double
    Public vBusinessName_C1 As String
    Public vBusinessAddress_C1 As String
    Public vBusinessTelephone_C1 As String
    Public vNatureBusiness_C1 As String
    Public vYrsOperation_C1 As Integer
    Public vBusinessIncome_C1 As Double
    Public vNoEmployees_C1 As Integer
    Public vCapital_C1 As Double
    Public vArea_C1 As String
    Public vExpiry_C1 As String
    Public vOutlet_C1 As Integer
    Public vOtherIncome_C1 As String
    Public vOtherIncomeD_C1 As Double
    Public Industry_C1 As New DevExpress.XtraEditors.CheckedComboBoxEdit

    Public ChangePic2 As Boolean
    Public vPrefix_C2 As String
    Public vFirstN_C2 As String
    Public vMiddleN_C2 As String
    Public vLastN_C2 As String
    Public vSuffix_C2 As String
    Public vNoC_C2 As String
    Public vStreetC_C2 As String
    Public vBarangayC_C2 As String
    Public vAddressC_C2 As String
    Public vAddressC_C2_ID As Integer
    Public vNoP_C2 As String
    Public vStreetP_C2 As String
    Public vBarangayP_C2 As String
    Public vAddressP_C2 As String
    Public vAddressP_C2_ID As Integer
    Public vBirth_C2 As String
    Public vPlaceBirth_C2 As String
    Public vPlaceBirth_C2_ID As Integer
    Public vMale_C2 As Boolean
    Public vFemale_C2 As Boolean
    Public vSingle_C2 As Boolean
    Public vMarried_C2 As Boolean
    Public vSeparated_C2 As Boolean
    Public vWidowed_C2 As Boolean
    Public vCitizenship_C2 As String
    Public vTelephone_C2 As String
    Public vMobile_C2 As String
    Public vTIN_C2 As String
    Public vSSS_C2 As String
    Public vEmail_C2 As String
    Public vOwned_C2 As Boolean
    Public vFree_C2 As Boolean
    Public vRented_C2 As Boolean
    Public vRent_C2 As Double
    Public vRelationship_C2 As String
    Public vRelationship_C2_ID As Integer
    Public vEmployer_C2 As String
    Public vEmpAddress_C2 As String
    Public vEmpTelephone_C2 As String
    Public vPosition_C2 As String
    Public vCasual_C2 As Boolean
    Public vTemporary_C2 As Boolean
    Public vPermanent_C2 As Boolean
    Public vHired_C2 As String
    Public vYearHired_C2 As Boolean
    Public vSupervisor_C2 As String
    Public vSalary_C2 As Double
    Public vBusinessName_C2 As String
    Public vBusinessAddress_C2 As String
    Public vBusinessTelephone_C2 As String
    Public vNatureBusiness_C2 As String
    Public vYrsOperation_C2 As Integer
    Public vBusinessIncome_C2 As Double
    Public vNoEmployees_C2 As Integer
    Public vCapital_C2 As Double
    Public vArea_C2 As String
    Public vExpiry_C2 As String
    Public vOutlet_C2 As Integer
    Public vOtherIncome_C2 As String
    Public vOtherIncomeD_C2 As Double
    Public Industry_C2 As New DevExpress.XtraEditors.CheckedComboBoxEdit

    Public ChangePic3 As Boolean
    Public vPrefix_C3 As String
    Public vFirstN_C3 As String
    Public vMiddleN_C3 As String
    Public vLastN_C3 As String
    Public vSuffix_C3 As String
    Public vNoC_C3 As String
    Public vStreetC_C3 As String
    Public vBarangayC_C3 As String
    Public vAddressC_C3 As String
    Public vAddressC_C3_ID As Integer
    Public vNoP_C3 As String
    Public vStreetP_C3 As String
    Public vBarangayP_C3 As String
    Public vAddressP_C3 As String
    Public vAddressP_C3_ID As Integer
    Public vBirth_C3 As String
    Public vPlaceBirth_C3 As String
    Public vPlaceBirth_C3_ID As Integer
    Public vMale_C3 As Boolean
    Public vFemale_C3 As Boolean
    Public vSingle_C3 As Boolean
    Public vMarried_C3 As Boolean
    Public vSeparated_C3 As Boolean
    Public vWidowed_C3 As Boolean
    Public vCitizenship_C3 As String
    Public vTelephone_C3 As String
    Public vMobile_C3 As String
    Public vTIN_C3 As String
    Public vSSS_C3 As String
    Public vEmail_C3 As String
    Public vOwned_C3 As Boolean
    Public vFree_C3 As Boolean
    Public vRented_C3 As Boolean
    Public vRent_C3 As Double
    Public vRelationship_C3 As String
    Public vRelationship_C3_ID As Integer
    Public vEmployer_C3 As String
    Public vEmpAddress_C3 As String
    Public vEmpTelephone_C3 As String
    Public vPosition_C3 As String
    Public vCasual_C3 As Boolean
    Public vTemporary_C3 As Boolean
    Public vPermanent_C3 As Boolean
    Public vHired_C3 As String
    Public vYearHired_C3 As Boolean
    Public vSupervisor_C3 As String
    Public vSalary_C3 As Double
    Public vBusinessName_C3 As String
    Public vBusinessAddress_C3 As String
    Public vBusinessTelephone_C3 As String
    Public vNatureBusiness_C3 As String
    Public vYrsOperation_C3 As Integer
    Public vBusinessIncome_C3 As Double
    Public vNoEmployees_C3 As Integer
    Public vCapital_C3 As Double
    Public vArea_C3 As String
    Public vExpiry_C3 As String
    Public vOutlet_C3 As Integer
    Public vOtherIncome_C3 As String
    Public vOtherIncomeD_C3 As Double
    Public Industry_C3 As New DevExpress.XtraEditors.CheckedComboBoxEdit

    Public ChangePic4 As Boolean
    Public vPrefix_C4 As String
    Public vFirstN_C4 As String
    Public vMiddleN_C4 As String
    Public vLastN_C4 As String
    Public vSuffix_C4 As String
    Public vNoC_C4 As String
    Public vStreetC_C4 As String
    Public vBarangayC_C4 As String
    Public vAddressC_C4 As String
    Public vAddressC_C4_ID As Integer
    Public vNoP_C4 As String
    Public vStreetP_C4 As String
    Public vBarangayP_C4 As String
    Public vAddressP_C4 As String
    Public vAddressP_C4_ID As Integer
    Public vBirth_C4 As String
    Public vPlaceBirth_C4 As String
    Public vPlaceBirth_C4_ID As Integer
    Public vMale_C4 As Boolean
    Public vFemale_C4 As Boolean
    Public vSingle_C4 As Boolean
    Public vMarried_C4 As Boolean
    Public vSeparated_C4 As Boolean
    Public vWidowed_C4 As Boolean
    Public vCitizenship_C4 As String
    Public vTelephone_C4 As String
    Public vMobile_C4 As String
    Public vTIN_C4 As String
    Public vSSS_C4 As String
    Public vEmail_C4 As String
    Public vOwned_C4 As Boolean
    Public vFree_C4 As Boolean
    Public vRented_C4 As Boolean
    Public vRent_C4 As Double
    Public vRelationship_C4 As String
    Public vRelationship_C4_ID As Integer
    Public vEmployer_C4 As String
    Public vEmpAddress_C4 As String
    Public vEmpTelephone_C4 As String
    Public vPosition_C4 As String
    Public vCasual_C4 As Boolean
    Public vTemporary_C4 As Boolean
    Public vPermanent_C4 As Boolean
    Public vHired_C4 As String
    Public vYearHired_C4 As Boolean
    Public vSupervisor_C4 As String
    Public vSalary_C4 As Double
    Public vBusinessName_C4 As String
    Public vBusinessAddress_C4 As String
    Public vBusinessTelephone_C4 As String
    Public vNatureBusiness_C4 As String
    Public vYrsOperation_C4 As Integer
    Public vBusinessIncome_C4 As Double
    Public vNoEmployees_C4 As Integer
    Public vCapital_C4 As Double
    Public vArea_C4 As String
    Public vExpiry_C4 As String
    Public vOutlet_C4 As Integer
    Public vOtherIncome_C4 As String
    Public vOtherIncomeD_C4 As Double
    Public Industry_C4 As New DevExpress.XtraEditors.CheckedComboBoxEdit
    '*** C O M A K E R   I N F O ***

    '*** S P O U S E   I N F O ***
    Public ChangePicS As Boolean
    Public vPrefix_S As String
    Public vFirstN_S As String
    Public vMiddleN_S As String
    Public vLastN_S As String
    Public vSuffix_S As String
    Public vPrefix_M As String
    Public vFirstN_M As String
    Public vMiddleN_M As String
    Public vLastN_M As String
    Public vSuffix_M As String
    Public vNoC_S As String
    Public vStreetC_S As String
    Public vBarangayC_S As String
    Public vAddressC_S As String
    Public vAddressC_S_ID As Integer
    Public vNoP_S As String
    Public vStreetP_S As String
    Public vBarangayP_S As String
    Public vAddressP_S As String
    Public vAddressP_S_ID As Integer
    Public vBirth_S As String
    Public vPlaceBirth_S As String
    Public vPlaceBirth_S_ID As Integer
    Public vMale_S As Boolean
    Public vFemale_S As Boolean
    Public vCitizenship_S As String
    Public vTelephone_S As String
    Public vMobile_S As String
    Public vTIN_S As String
    Public vSSS_S As String
    Public vEmail_S As String
    Public vOwned_S As Boolean
    Public vFree_S As Boolean
    Public vRented_S As Boolean
    Public vRent_S As Double
    Public vEmployer_S As String
    Public vEmpAddress_S As String
    Public vEmpTelephone_S As String
    Public vPosition_S As String
    Public vCasual_S As Boolean
    Public vTemporary_S As Boolean
    Public vPermanent_S As Boolean
    Public vHired_S As String
    Public vYearHired_S As Boolean
    Public vSupervisor_S As String
    Public vSalary_S As Double
    Public vBusinessName_S As String
    Public vBusinessAddress_S As String
    Public vBusinessTelephone_S As String
    Public vNatureBusiness_S As String
    Public vYrsOperation_S As Integer
    Public vBusinessIncome_S As Double
    Public vNoEmployees_S As Integer
    Public vCapital_S As Double
    Public vArea_S As String
    Public vExpiry_S As String
    Public vOutlet_S As Integer
    Public vOtherIncome_S As String
    Public vOtherIncomeD_S As Double
    Public Industry_S As New DevExpress.XtraEditors.CheckedComboBoxEdit
    Dim DueDate As Date
    Public DT_Account As New DataTable
    Dim From_Migrated As Boolean
    ReadOnly Temp_DT As New DataTable
    '*** S P O U S E   I N F O ***
    Private Sub FrmLoanApplication_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        GetGridAppearance({GridView1, GridView2, GridView3, GridView4, GridView5})
        FixUI(AllowStandardUI)
        Icon = My.Resources.iLoanWorkX_ico
        FixPictureEdit(PictureEdit1, 263, 64, 9, 1, True)
        FixPictureEdit(pb_B, 238, 227, 892, 35, False)
        cbxNatureBusiness_B2.Size = New Point(196, 24)
        cbxNatureBusiness_B2.Location = New Point(143, 125)
        cbxDisplay.SelectedIndex = 0
        FirstLoad = True
        If Multiple_ID.Contains(",") Then
            GridColumn54.Visible = True
            GridColumn55.Visible = True
        End If

        If tabList.Visible Then
            SuperTabControl1.SelectedTab = tabList
        Else
            SuperTabControl1.SelectedTab = tabComputation
        End If

        If User_Type = "ADMIN" Or ComparePosition({"REGIONAL MANAGER", "BRANCH MANAGER", "OPERATIONS MANAGER", "MICROFINANCE LOAN MANAGER", "OFFICER-IN-CHARGE", "OFFICE SUPERVISOR", "ASSISTANT BRANCH MANAGER"}, False) Then
            cbxCI.Visible = True
            cbxCI.Checked = True
        Else
            cbxCI.Visible = False
        End If

        GridColumn15.VisibleIndex = 0
        GridColumn16.VisibleIndex = 1
        GridColumn17.VisibleIndex = 2
        GridColumn18.VisibleIndex = 3
        GridColumn19.VisibleIndex = 4
        GridColumn20.VisibleIndex = 5
        GridColumn21.VisibleIndex = 6
        GridColumn23.VisibleIndex = 7
        GridColumn22.VisibleIndex = 8
        GridColumn24.VisibleIndex = 9
        LoadCompanyMode()
        Borrower_Branch = Branch_Code
        If tabBorrower.Visible Or From_Request Then
            dDeductBalance_C.Enabled = False
            dDeductBalance_C.Size = New Point(98, 23)
            btnAddDB.Visible = True
        End If

        DefaultImage.Image = pb_B.Image.Clone
        CoMaker1.Image = DefaultImage.Image.Clone
        CoMaker2.Image = DefaultImage.Image.Clone
        dAmountApplied.Value = 0
        iTerms.Value = 0

        With Temp_DT
            .Columns.Add("No")
            .Columns.Add("Due Date")
            .Columns.Add("Monthly")
            .Columns.Add("Interest Income")
            .Columns.Add("RPPD")
            .Columns.Add("Principal Allocation")
            .Columns.Add("Outstanding Principal")
            .Columns.Add("Unearn Income")
            .Columns.Add("Total_RPPD")
            .Columns.Add("Loans Receivable")
            .Columns.Add("Penalty")
            .Columns.Add("Penalty Balance")
        End With

        With cbxTerms
            .DisplayMember = "Terms"
            .DataSource = Terms.Copy
            .SelectedIndex = 0
        End With

        With cbxProduct
            .ValueMember = "ID"
            .DisplayMember = "Product"
            .DataSource = Products.Copy
            .SelectedIndex = -1
        End With

        Dim DT_Status As DataTable = DataSource("SELECT 'Draft' AS 'Status' UNION SELECT 'For Approval' UNION SELECT 'For Credit Investigation' UNION SELECT 'Credit Investigation Started' UNION SELECT 'For Crecomm Approval' UNION SELECT 'For Reapproval' UNION SELECT 'For Special Approval' UNION SELECT 'For Payment Request' UNION SELECT 'For Check Preparation' UNION SELECT 'CV For Checking' UNION SELECT 'CV For Approval' UNION SELECT 'For Journal Voucher' UNION SELECT 'Currently at JV' UNION SELECT 'For Releasing' UNION SELECT 'Booked' UNION SELECT 'Closed Account' UNION SELECT 'Cancelled'")
        With cbxStatus
            .Location = New Point(553, 6)
            .Size = New Point(183, 26)
            .Properties.PopupFormSize = New Point(183, 350)
            .Properties.LookAndFeel.SkinName = "Blue"
            .Properties.Items.Clear()
            For x As Integer = 0 To DT_Status.Rows.Count - 1
                .Properties.Items.Add(DT_Status(x)("Status"), DT_Status(x)("Status"), If(DT_Status(x)("Status") = "Cancelled", CheckState.Unchecked, CheckState.Checked), True)
            Next
            .Properties.SeparatorChar = ";"
        End With

        DT_Account = DataSource("SELECT  0 AS ID, '' AS 'Account Number', '' AS 'Credit Number', '' AS 'Loans Receivable', '' AS 'UDI Discount', '' AS 'UDI Percent', '' AS 'Availed RPPD', '' AS 'Accounts Receivable', '' AS 'Penalty', '' AS 'As Of', '' AS 'Net Payable', 0.00 AS 'Amount' LIMIT 0")

        If For_Schedule = False Then
            With cbxCollateral
                .ValueMember = "ID"
                .DisplayMember = "Collateral"
                .DataSource = Collateral.Copy
                .SelectedIndex = -1
            End With

            LoadBorrower()

            dtpFDD.Value = Date.Now
            dtpDate.Value = Date.Now
            DtpBirth_B.Value = Date.Now
            dtpHired_B.Value = Date.Now
            dtpHired_B.CustomFormat = ""
            dtpExpiry_B.Value = Date.Now
            dtpExpiry_B.CustomFormat = ""
            dtpYear_1.Value = Date.Now
            dtpYear_1.CustomFormat = ""
            dtpYear_2.Value = Date.Now
            dtpYear_2.CustomFormat = ""
            dtpYear_3.Value = Date.Now
            dtpYear_3.CustomFormat = ""
            dtpIssue.Value = Date.Now
            dtpIssue.CustomFormat = ""

            'BusinessCenter
            With cbxBusinessCenter
                .ValueMember = "ID"
                .DisplayMember = "BusinessCenter"
                .DataSource = DT_BusinessCenter.Copy
                .SelectedIndex = -1
            End With

            'Borrower
            With CbxPrefix_B
                .ValueMember = "ID"
                .DisplayMember = "Prefix"
                .DataSource = Prefix.Copy
                .SelectedIndex = -1
            End With

            With cbxSuffix_B
                .DisplayMember = "Suffix"
                .DataSource = Suffix.Copy
                .SelectedIndex = -1
            End With

            'Dependents 
            With CbxPrefix_1
                .ValueMember = "ID"
                .DisplayMember = "Prefix"
                .DataSource = Prefix.Copy
                .SelectedIndex = -1
            End With

            With cbxSuffix_1
                .DisplayMember = "Suffix"
                .DataSource = Suffix.Copy
                .SelectedIndex = -1
            End With

            With CbxPrefix_2
                .ValueMember = "ID"
                .DisplayMember = "Prefix"
                .DataSource = Prefix.Copy
                .SelectedIndex = -1
            End With

            With cbxSuffix_2
                .DisplayMember = "Suffix"
                .DataSource = Suffix.Copy
                .SelectedIndex = -1
            End With

            With CbxPrefix_3
                .ValueMember = "ID"
                .DisplayMember = "Prefix"
                .DataSource = Prefix.Copy
                .SelectedIndex = -1
            End With

            With cbxSuffix_3
                .DisplayMember = "Suffix"
                .DataSource = Suffix.Copy
                .SelectedIndex = -1
            End With

            With CbxPrefix_4
                .ValueMember = "ID"
                .DisplayMember = "Prefix"
                .DataSource = Prefix.Copy
                .SelectedIndex = -1
            End With

            With cbxSuffix_4
                .DisplayMember = "Suffix"
                .DataSource = Suffix.Copy
                .SelectedIndex = -1
            End With

            With cbxAddressC_B
                .ValueMember = "City ID"
                .DisplayMember = "City"
                .DataSource = City.Copy
                .SelectedIndex = -1
            End With

            With cbxAddressP_B
                .ValueMember = "City ID"
                .DisplayMember = "City"
                .DataSource = City.Copy
                .SelectedIndex = -1
            End With

            With cbxPlaceBirth_B
                .ValueMember = "City ID"
                .DisplayMember = "City"
                .DataSource = City.Copy
                .SelectedIndex = -1
            End With

            With cbxCitizenship_B
                .ValueMember = "ID"
                .DisplayMember = "Nationality"
                .DataSource = Nationality.Copy
                .SelectedIndex = -1
            End With

            With cbxPosition_B
                .DisplayMember = "Position"
                .DataSource = DT_Position.Copy
                .SelectedIndex = -1
            End With

            With cbxEmployer_B
                .ValueMember = "ID"
                .DisplayMember = "Employer"
                .DataSource = DT_Employer.Copy
                .SelectedIndex = -1
            End With

            cbxNatureBusiness_B2.Properties.LookAndFeel.SkinName = "Blue"
            Industry_C1.Properties.LookAndFeel.SkinName = "Blue"
            Industry_C2.Properties.LookAndFeel.SkinName = "Blue"
            Industry_C3.Properties.LookAndFeel.SkinName = "Blue"
            Industry_C4.Properties.LookAndFeel.SkinName = "Blue"
            For x As Integer = 0 To DT_Industry.Rows.Count - 1
                cbxNatureBusiness_B2.Properties.Items.Add(DT_Industry(x)("ID"), DT_Industry(x)("Nature"), CheckState.Unchecked, True)
                Industry_C1.Properties.Items.Add(DT_Industry(x)("ID"), DT_Industry(x)("Nature"), CheckState.Unchecked, True)
                Industry_C2.Properties.Items.Add(DT_Industry(x)("ID"), DT_Industry(x)("Nature"), CheckState.Unchecked, True)
                Industry_C3.Properties.Items.Add(DT_Industry(x)("ID"), DT_Industry(x)("Nature"), CheckState.Unchecked, True)
                Industry_C4.Properties.Items.Add(DT_Industry(x)("ID"), DT_Industry(x)("Nature"), CheckState.Unchecked, True)
            Next
            cbxNatureBusiness_B2.Properties.SeparatorChar = ";"
            Industry_C1.Properties.SeparatorChar = ";"
            Industry_C2.Properties.SeparatorChar = ";"
            Industry_C3.Properties.SeparatorChar = ";"
            Industry_C4.Properties.SeparatorChar = ";"

            With cbxAgentName
                .ValueMember = "AgentID"
                .DisplayMember = "Name"
                .DataSource = DataSource(String.Format("SELECT AgentID, CONCAT(IF(FirstN = '','',CONCAT(FirstN, ' ')), IF(MiddleN = '','',CONCAT(MiddleN, ' ')), IF(LastN = '','',LastN)) AS 'Name', IF(Telephone = '',Mobile,CONCAT(Telephone,'/',Mobile)) AS 'Contact' FROM profile_agent WHERE `status` = 'ACTIVE' AND Branch_ID = '{0}' ORDER BY `Name` DESC;", Branch_ID))
                .SelectedIndex = -1
            End With

            With cbxAgentNameV2
                .ValueMember = "AgentID"
                .DisplayMember = "Name"
                .DataSource = DataSource(String.Format("SELECT AgentID, CONCAT(IF(FirstN = '','',CONCAT(FirstN, ' ')), IF(MiddleN = '','',CONCAT(MiddleN, ' ')), IF(LastN = '','',LastN)) AS 'Name', IF(Telephone = '',Mobile,CONCAT(Telephone,'/',Mobile)) AS 'Contact' FROM profile_agent WHERE `status` = 'ACTIVE' AND Branch_ID = '{0}' ORDER BY `Name` DESC;", Branch_ID))
                .SelectedIndex = -1
            End With

            With cbxMarketingName
                .ValueMember = "emp_code"
                .DisplayMember = "Name"
                .DataSource = DataSource(String.Format("SELECT ID, emp_code, CONCAT(IF(First_Name = '','',CONCAT(First_Name, ' ')), IF(Middle_Name = '','',CONCAT(Middle_Name, ' ')), IF(Last_Name = '','',Last_Name)) AS 'Name', Phone FROM employee_setup WHERE `status` = 'ACTIVE' AND Branch_ID = '{0}' AND department_id = 9 ORDER BY `Name`;", Branch_ID))
                .SelectedIndex = -1
            End With

            With cbxWalkInType
                .ValueMember = "ID"
                .DisplayMember = "Type"
                .DataSource = DataSource("SELECT ID, `Type` FROM walkin_type WHERE `status` = 'ACTIVE' ORDER BY `Type`;")
                .SelectedIndex = -1
            End With

            With cbxDealerName
                .ValueMember = "DealerID"
                .DisplayMember = "Name"
                .DataSource = DataSource(String.Format("SELECT DealerID, CONCAT(IF(FirstN = '','',CONCAT(FirstN, ' ')), IF(MiddleN = '','',CONCAT(MiddleN, ' ')), IF(LastN = '','',LastN)) AS 'Name', IF(Telephone = '',Mobile,CONCAT(Telephone,'/',Mobile)) AS 'Contact' FROM profile_dealer WHERE `status` = 'ACTIVE' AND Branch_ID IN ({0}) ORDER BY `Name` DESC;", If(Multiple_ID = "", Branch_ID, Multiple_ID)))
                .SelectedIndex = -1
            End With
        End If

        GeneralRequirements()

        cbxRoundUp.Checked = Round_Up

        If CompanyMode = 0 Then
            dRPPDRate_C.Value = 0
            dRPPDRate_T.Value = 0
        Else
            dRPPDRate_C.Value = Interest_RPPD
            dRPPDRate_T.Value = Interest_RPPD
        End If
        Last_RPPD = Interest_RPPD
        cbxRoundUp.Enabled = True

        If For_Schedule = False Then
            LoadData()
        End If
        Timer_Date.Start()
        FirstLoad = False

        If From_CI Then
            tabBorrower.Visible = False
            tabFinancial_1.Visible = False
            tabFinancial_2.Visible = False
            tabRequirements.Visible = False
            tabList.Visible = False
            SuperTabControl1.SelectedTabIndex = 5
            cbxAll.Checked = True
            LoadData()
            Dim i As Integer = 0
            With GridView5
                For x As Integer = 0 To .RowCount - 1
                    If .GetRowCellValue(x, "Credit Number") = CreditNumber Then
                        i = x
                        Exit For
                    End If
                Next
                .OptionsSelection.MultiSelect = False
                .FocusedRowHandle = i
            End With
            GridView5_DoubleClick(sender, e)
            If From_SOA Then
                btnModify.Enabled = False
            Else
                btnModify.Enabled = True
            End If
        ElseIf From_CV_VerifySchedule Then
            tabBorrower.Visible = False
            tabFinancial_1.Visible = False
            tabFinancial_2.Visible = False
            tabRequirements.Visible = False
            tabComputation.Visible = False
            tabList.Visible = False
            SuperTabControl1.SelectedTabIndex = 5
            cbxAll.Checked = True
            LoadData()
            Dim i As Integer = 0
            With GridView5
                For x As Integer = 0 To .RowCount - 1
                    If .GetRowCellValue(x, "Credit Number") = CreditNumber Then
                        i = x
                        Exit For
                    End If
                Next
                .OptionsSelection.MultiSelect = False
                .FocusedRowHandle = i
            End With
            GridView5_DoubleClick(sender, e)
            PanelEx21.Enabled = True
            GridControl3.Enabled = True

            GridColumn16.OptionsColumn.AllowEdit = True
            GridColumn17.OptionsColumn.AllowEdit = True
            GridColumn18.OptionsColumn.AllowEdit = True
            GridColumn19.OptionsColumn.AllowEdit = True
            GridColumn20.OptionsColumn.AllowEdit = True
            GridColumn21.OptionsColumn.AllowEdit = True
            GridColumn22.OptionsColumn.AllowEdit = True
            GridColumn23.OptionsColumn.AllowEdit = True
            GridColumn24.OptionsColumn.AllowEdit = True
            btnManual.Enabled = False
            btnVerify.Enabled = True

            cbxAuto.Visible = True
            btnSave.Enabled = False
            btnSave_F.Enabled = False
        End If

        If PanelEx3.Enabled = False And From_Request Then
            MsgBox("Please check the credit schedule and computation before saving.", MsgBoxStyle.Information, "Info")
        End If
    End Sub

    Private Sub BtnLogs_Click(sender As Object, e As EventArgs) Handles btnLogs.Click
        LblTitle_Click(sender, e)
    End Sub

    Private Sub FixUI(ApplyUI As Boolean)
        Try
            If ApplyUI = False Then
                Exit Sub
            End If
            GetComboBoxWinFormFontSettings({cbxOptions})

            GetLabelHeaderFontSettings({lblTitle})

            GetLabelFontSettings({LabelX2})

            GetLabelFontSettingsDefaultSize({LabelX100})

            GetLabelFontSettings({LabelX102, LabelX155, LabelX4, LabelX3, LabelX5, LabelX6, LabelX79, LabelX43, LabelX21, LabelX77, LabelX78, LabelX109, LabelX93, LabelX42, LabelX41, LabelX10, LabelX14, LabelX13, LabelX8, LabelX9, LabelX114, LabelX142, LabelX11, LabelX12, LabelX15, LabelX16, LabelX17, LabelX39, LabelX112, LabelX22, LabelX45, LabelX47, LabelX26, LabelX29, LabelX31, LabelX38, LabelX35, LabelX23, LabelX46, LabelX44, LabelX27, LabelX30, LabelX32, LabelX37, LabelX34, LabelX24, LabelX25, LabelX28, LabelX33, LabelX36, lblFDD, LabelX81, LabelX82, lblRPPDRate_C, LabelX88, LabelX89, lblRPPD_C, LabelX91, LabelX92, lblMR_C, LabelX94, LabelX104, LabelX128, LabelX96, LabelX106, LabelX98, LabelX107, LabelX95, LabelX97, LabelX103, LabelX10, LabelX99, LabelX85, LabelX87, LabelX86, LabelX90})

            GetLabelFontSettings({LabelX40, LabelX83, lblRPPDRate_Percent, lblInterest, lblRPPDRate_T, LabelX84, lblMR_Slash, LabelX101, LabelX105, LabelX115})

            GetLabelWithBackgroundFontSettings({LabelX113, LabelX19, LabelX18, LabelX7, LabelX20, LabelX48, LabelX49, LabelX50, LabelX51, LabelX52, LabelX53, LabelX54, LabelX55, LabelX108, LabelX57, LabelX59, LabelX58, LabelX60, LabelX56, LabelX61, LabelX68, LabelX70, LabelX72, LabelX71, LabelX69, LabelX62, LabelX64, LabelX66, LabelX65, LabelX63, LabelX67, LabelX73, LabelX74, LabelX75, LabelX76, LabelX185, LabelX186, LabelX187, LabelX110, LabelX111, LabelX188, LabelX80, lblLoanRequirements})

            GetTextBoxFontSettings({txtPurpose, txtCreditNumber, TxtFirstN_B, TxtMiddleN_B, TxtLastN_B, TxtFirstN_S, TxtMiddleN_S, TxtLastN_S, TxtFirstN_C1, TxtMiddleN_C1, TxtLastN_C1, TxtFirstN_C2, TxtMiddleN_C2, TxtLastN_C2, TxtFirstN_C3, TxtMiddleN_C3, TxtLastN_C3, TxtFirstN_C4, TxtMiddleN_C4, TxtLastN_C4, txtNoC_B, txtStreetC_B, txtBarangayC_B, txtNoP_B, txtStreetP_B, txtBarangayP_B, txtPath_B, txtPath_S, txtTelephone_B, txtPlus63, txtMobile_B, TextBoxX1, txtMobile_B2, txtTIN_B, txtSSS_B, txtEmail_B, TxtFirstN_1, TxtMiddleN_1, TxtLastN_1, txtGrade_1, txtSchool_1, txtSchoolAddress_1, TxtFirstN_2, TxtMiddleN_2, TxtLastN_2, txtGrade_2, txtSchool_2, txtSchoolAddress_2, TxtFirstN_3, TxtMiddleN_3, TxtLastN_3, txtGrade_3, txtSchool_3, txtSchoolAddress_3, TxtFirstN_4, TxtMiddleN_4, TxtLastN_4, txtGrade_4, txtSchool_4, txtSchoolAddress_4, txtEmployerAddress_B, txtEmployerTelephone_B, txtSupervisor_B, txtBusinessName_B, txtBusinessAddress_B, txtBusinessTelephone_B, txtArea_B, txtOtherIncome_B, txtCreditor_1, txtNatureLoan_1, txtCreditRemarks_1, txtCreditor_2, txtNatureLoan_2, txtCreditRemarks_2, txtCreditor_3, txtNatureLoan_3, txtCreditRemarks_3, txtBank_1, txtBranch_1, txtSA_1, txtOpened_1, txtBankRemarks_1, txtBank_2, txtBranch_2, txtSA_2, txtOpened_2, txtBankRemarks_2, txtBank_3, txtBranch_3, txtSA_3, txtOpened_3, txtBankRemarks_3, txtLocation_1, txtTCT_1, txtAcquired_1, txtPropertiesRemarks_1, txtLocation_2, txtTCT_2, txtAcquired_2, txtPropertiesRemarks_2, txtLocation_3, txtTCT_3, txtAcquired_3, txtPropertiesRemarks_3, txtVehicle_1, txtWhomAcquired_1, txtWhenAcquired_1, txtVehicleRemarks_1, txtVehicle_2, txtWhomAcquired_2, txtWhenAcquired_2, txtVehicleRemarks_2, txtVehicle_3, txtWhomAcquired_3, txtWhenAcquired_3, txtVehicleRemarks_3, txtHomeAppliances_1, txtHomeAppliances_2, txtReference_1, txtReferenceAddress_1, txtReferenceContact_1, txtReference_2, txtReferenceAddress_2, txtReferenceContact_2, txtReference_3, txtReferenceAddress_3, txtReferenceContact_3, txtCertificateNo, txtPlaceIssue, txtAgentContact, txtAgentContactV2, txtMarketingContact, txtWalkInOthers, txtDealersContact})

            GetButtonFontSettings({btnFromROPA, btnATM, btnBrowse_B, btnDefault, btnAttachB, btnID, btnSave, btnSave_F, btnRefresh, btnCancel, btnModify, btnDelete, btnAttach, btnPrint, btnPrint_II, btnEarly, btnApprove, btnManual, btnVerify, btnTariff, btnOpen, btnServiceCharge, btnSearch, btnMigrated, btnAddDB})

            GetComboBoxFontSettings({cbxTerms, cbxProduct, cbxCollateral, cbxBorrower, cbxAccountNo, CbxPrefix_B, cbxSuffix_B, CbxPrefix_S, cbxSuffix_S, CbxPrefix_C1, cbxSuffix_C1, CbxPrefix_C2, cbxSuffix_C2, CbxPrefix_C3, cbxSuffix_C3, CbxPrefix_C4, cbxSuffix_C4, cbxAddressC_B, cbxAddressP_B, cbxPlaceBirth_B, cbxCitizenship_B, CbxPrefix_1, cbxSuffix_1, CbxPrefix_2, cbxSuffix_2, CbxPrefix_3, cbxSuffix_3, CbxPrefix_4, cbxSuffix_4, cbxEmployer_B, cbxPosition_B, cbxNatureBusiness_B, cbxAgentName, cbxAgentNameV2, cbxMarketingName, cbxWalkInType, cbxDealerName, cbxBusinessCenter, cbxDisplay})

            GetContextMenuBarFontSettings({ContextMenuBar4, ContextMenuBar3, ContextMenuBar1, ContextMenuBar2})

            GetCheckBoxFontSettings({cbxOtherBranch, cbxCorporate, cbxSpouse_B, cbxCoMaker1_B, cbxCoMaker2_B, cbxCoMaker3_B, cbxCoMaker4_B, cbxMale_B, cbxFemale_B, cbxSingle_B, cbxMarried_B, cbxSeparated_B, cbxWidowed_B, cbxOwned_B, cbxFree_B, cbxRented_B, cbxCasual_B, cbxTemporary_B, cbxPermanent_B, cbxYearHired, cbxYearFranchise, cbxSA_1, cbxCA_1, cbxSA_2, cbxCA_2, cbxSA_3, cbxCA_3, cbxAgent, cbxAgentV2, cbxMarketing, cbxWalkIn, cbxDealer, cbxAuto, cbxAll, cbxCI, cbxA, cbxB, cbxC, cbxD, cbxRoundUp})

            GetCheckBoxFontSettingsDefaultColor({cbxCI})

            GetCheckBoxFontSettingsRed({cbxBill, cbxAdvancePayment})

            GetDateTimeInputFontSettings({dtpDate, DtpBirth_B, dtpHired_B, dtpExpiry_B, dtpYear_1, dtpYear_2, dtpYear_3, dtpIssue, dtpFDD, dtpFrom, dtpTo})

            GetDoubleInputFontSettings({dAmountApplied, dRent_B, dMonthly_B, dBusinessIncome_B, dOtherIncome_B, dCapital_B, dAmountGranted_1, dBalance_1, dAmountGranted_2, dBalance_2, dAmountGranted_3, dBalance_3, dAverageBalance_1, dPresentBalance_1, dAverageBalance_2, dPresentBalance_2, dAverageBalance_3, dPresentBalance_3, dArea_1, dArea_2, dArea_3, dInterest_C, dInterest_T, dRPPDRate_C, dRPPDRate_T, dPA_C, dUDI_C, dRPPD_C, dFA_C, dGMA_C, dGMA_C2, dMR_C, dMR_C2, dNMA_C, dNMA_C2, dSC_Rate, dSC_C, dCIFee_C, dInsurance_C, dAppraisalFee_C, dTPF_C, dMiscellaneous_C, dAdvancePayment_C, dDeductBalance_C, dTD_C})

            GetDoubleInputFontSettingsDefault({dNetProceeds_C})

            GetCheckComboBoxFontSettings({cbxNatureBusiness_B2})

            GetIntegerInputFontSettings({iTerms, iCollateral, iAge_D1, iAge_D2, iAge_D3, iAge_D4, iNoEmployees_B, iYrsOperation_B, iOutlet_B, dTerm_1, dTerm_2, dTerm_3, iTerms_C, iAdvancePayment})

            GetRickTextBoxFontSettings({rRemarks, rNote})

            GetTabControlFontSettings({SuperTabControl1})

            GetCheckComboBoxFontSettings({cbxStatus})
        Catch ex As Exception
            TriggerBugReport("Credit Application - FixUI", ex.Message.ToString)
        End Try
    End Sub

    Private Sub LblTitle_MouseEnter(sender As Object, e As EventArgs) Handles lblTitle.MouseEnter
        lblTitle.ForeColor = OfficialColor1
    End Sub

    Private Sub LblTitle_MouseLeave(sender As Object, e As EventArgs) Handles lblTitle.MouseLeave
        lblTitle.ForeColor = Color.Black
    End Sub

    Private Sub LblTitle_Click(sender As Object, e As EventArgs) Handles lblTitle.Click
        OpenFormHistory("Credit Application", lblTitle.Text)
    End Sub

    Private Sub LoadBorrower()
        BorrowerLoading = True
        cbxBorrower.ValueMember = "BorrowerID"
        cbxBorrower.DisplayMember = "Name"
        Dim SQL As String
        If cbxCorporate.Checked Then
            SQL = "SELECT"
            SQL &= " CONCAT('[ ', B.BorrowerID, ' ] - ', TradeName) AS 'Name',"
            SQL &= " B.*, IFNULL((SELECT BusinessCenter FROM business_center WHERE ID = B.BusinessID),'') AS 'BusinessCenter'"
            SQL &= " FROM profile_corporation B"
            If cbxOtherBranch.Checked Then
                SQL &= " WHERE B.`status` IN ('ACTIVE','BLOCKED') GROUP BY B.BorrowerID ORDER BY B.TradeName;"
            Else
                SQL &= String.Format("    WHERE FIND_IN_SET(B.Branch_ID,'{0}') AND B.`status` IN ('ACTIVE','BLOCKED') GROUP BY B.BorrowerID ORDER BY B.TradeName;", If(Multiple_ID = "", Branch_ID, Multiple_ID))
            End If
        Else
            SQL = "SELECT"
            SQL &= "   CONCAT('[ ', B.BorrowerID, ' ] - ', IF(FirstN_B = '','',CONCAT(FirstN_B, ' ')), IF(MiddleN_B = '','',CONCAT(MiddleN_B, ' ')),  IF(LastN_B = '','',CONCAT(LastN_B, ' ')), Suffix_B) AS 'Name',"
            SQL &= "   B.*, IF(BusinessID = 0,(SELECT CONCAT(Branch,' [Main]') FROM branch WHERE ID = B.Branch_ID),(SELECT BusinessCenter FROM business_center WHERE ID = B.BusinessID)) AS 'BusinessCenter',"
            SQL &= "   S.*,"
            SQL &= "   IFNULL(D1.Prefix_D,'') AS 'Prefix_D1',   "
            SQL &= "   IFNULL(D1.FirstN_D,'') AS 'FirstN_D1',   "
            SQL &= "   IFNULL(D1.MiddleN_D,'') AS 'MiddleN_D1',   "
            SQL &= "   IFNULL(D1.LastN_D,'') AS 'LastN_D1',   "
            SQL &= "   IFNULL(D1.Suffix_D,'') AS 'Suffix_D1',   "
            SQL &= "   IFNULL(D1.Age_D,0) AS 'Age_D1',   "
            SQL &= "   IFNULL(D1.Grade_D,'') AS 'Grade_D1',   "
            SQL &= "   IFNULL(D1.School_D,'') AS 'School_D1',   "
            SQL &= "   IFNULL(D1.SchoolAddress_D,'') AS 'SchoolAddress_D1',   "
            SQL &= "   IFNULL(D2.Prefix_D,'') AS 'Prefix_D2',   "
            SQL &= "   IFNULL(D2.FirstN_D,'') AS 'FirstN_D2',   "
            SQL &= "   IFNULL(D2.MiddleN_D,'') AS 'MiddleN_D2',   "
            SQL &= "   IFNULL(D2.LastN_D,'') AS 'LastN_D2',   "
            SQL &= "   IFNULL(D2.Suffix_D,'') AS 'Suffix_D2',   "
            SQL &= "   IFNULL(D2.Age_D,0) AS 'Age_D2',   "
            SQL &= "   IFNULL(D2.Grade_D,'') AS 'Grade_D2',   "
            SQL &= "   IFNULL(D2.School_D,'') AS 'School_D2',   "
            SQL &= "   IFNULL(D2.SchoolAddress_D,'') AS 'SchoolAddress_D2',   "
            SQL &= "   IFNULL(D3.Prefix_D,'') AS 'Prefix_D3',   "
            SQL &= "   IFNULL(D3.FirstN_D,'') AS 'FirstN_D3',   "
            SQL &= "   IFNULL(D3.MiddleN_D,'') AS 'MiddleN_D3',   "
            SQL &= "   IFNULL(D3.LastN_D,'') AS 'LastN_D3',   "
            SQL &= "   IFNULL(D3.Suffix_D,'') AS 'Suffix_D3',   "
            SQL &= "   IFNULL(D3.Age_D,0) AS 'Age_D3',   "
            SQL &= "   IFNULL(D3.Grade_D,'') AS 'Grade_D3',   "
            SQL &= "   IFNULL(D3.School_D,'') AS 'School_D3',   "
            SQL &= "   IFNULL(D3.SchoolAddress_D,'') AS 'SchoolAddress_D3',   "
            SQL &= "   IFNULL(D4.Prefix_D,'') AS 'Prefix_D4',   "
            SQL &= "   IFNULL(D4.FirstN_D,'') AS 'FirstN_D4',   "
            SQL &= "   IFNULL(D4.MiddleN_D,'') AS 'MiddleN_D4',   "
            SQL &= "   IFNULL(D4.LastN_D,'') AS 'LastN_D4',   "
            SQL &= "   IFNULL(D4.Suffix_D,'') AS 'Suffix_D4',   "
            SQL &= "   IFNULL(D4.Age_D,0) AS 'Age_D4',   "
            SQL &= "   IFNULL(D4.Grade_D,'') AS 'Grade_D4',   "
            SQL &= "   IFNULL(D4.School_D,'') AS 'School_D4',   "
            SQL &= "   IFNULL(D4.SchoolAddress_D,'') AS 'SchoolAddress_D4' "
            SQL &= " FROM profile_borrower B"
            SQL &= " LEFT JOIN profile_spouse S"
            SQL &= "    ON B.BorrowerID = S.BorrowerID AND S.`status` = 'ACTIVE'"
            SQL &= " LEFT JOIN (SELECT ID, DependentID, BorrowerID, Prefix_D, FirstN_D, MiddleN_D, LastN_D, Suffix_D, Age_D, Grade_D, School_D, SchoolAddress_D FROM profile_dependent WHERE `status` = 'ACTIVE' AND `Rank` = 1) D1    "
            SQL &= "    ON B.BorrowerID = D1.BorrowerID "
            SQL &= " LEFT JOIN (SELECT ID, DependentID, BorrowerID, Prefix_D, FirstN_D, MiddleN_D, LastN_D, Suffix_D, Age_D, Grade_D, School_D, SchoolAddress_D FROM profile_dependent WHERE `status` = 'ACTIVE' AND `Rank` = 2) D2    "
            SQL &= "    ON B.BorrowerID = D2.BorrowerID "
            SQL &= " LEFT JOIN (SELECT ID, DependentID, BorrowerID, Prefix_D, FirstN_D, MiddleN_D, LastN_D, Suffix_D, Age_D, Grade_D, School_D, SchoolAddress_D FROM profile_dependent WHERE `status` = 'ACTIVE' AND `Rank` = 3) D3    "
            SQL &= "    ON B.BorrowerID = D3.BorrowerID "
            SQL &= " LEFT JOIN (SELECT ID, DependentID, BorrowerID, Prefix_D, FirstN_D, MiddleN_D, LastN_D, Suffix_D, Age_D, Grade_D, School_D, SchoolAddress_D FROM profile_dependent WHERE `status` = 'ACTIVE' AND `Rank` = 4) D4    "
            SQL &= "    ON B.BorrowerID = D4.BorrowerID "
            If cbxOtherBranch.Checked Then
                SQL &= " WHERE B.`status` IN ('ACTIVE','BLOCKED') GROUP BY B.BorrowerID ORDER BY `Name`;"
            Else
                SQL &= String.Format("    WHERE FIND_IN_SET(B.Branch_ID,'{0}') AND B.`status` IN ('ACTIVE','BLOCKED') GROUP BY B.BorrowerID ORDER BY `Name`;", If(Multiple_ID = "", Branch_ID, Multiple_ID))
            End If
        End If
        cbxBorrower.DataSource = DataSource(SQL)
        cbxBorrower.SelectedIndex = -1
        BorrowerLoading = False
    End Sub

    Public Sub BtnPrint_Click(sender As Object, e As EventArgs)
        If vPrint Then
        Else
            MsgBox(mBox_Print, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Cursor = Cursors.WaitCursor
        If SuperTabControl1.SelectedTabIndex = 5 Then
            Dim Report2 As New RptAmortizationCalculator
            With Report2
                .Name = "Amortization Calculator " & cbxProduct.Text
                '***PAGE I
                .lblCreditNumber.Text = If(cbxBorrower.Enabled, "", txtCreditNumber.Text)
                .tAmount.Text = dAmountApplied.Text
                .tTerms.Text = iTerms.Text & " " & cbxTerms.Text
                .tCollateral.Text = cbxProduct.Text
                .lblTerms.Text = iTerms_C.Text & " " & cbxTerms.Text
                .lblInterest_Rate.Text = dInterest_C.Value & "% (" & dInterest_T.Value & lblInterest.Text & ")"
                .lblRPPD_Rate.Text = dRPPDRate_C.Value & "% (" & dRPPDRate_T.Value & lblRPPDRate_T.Text & ")"
                .lblPA.Text = dPA_C.Text
                .lblUDI.Text = dUDI_C.Text
                .lblRPPD.Text = dRPPD_C.Text
                .lblFA.Text = dFA_C.Text
                .lblGMA.Text = dGMA_C.Text & If(dGMA_C2.Visible, "/" & dGMA_C2.Text, "")
                .lblMR.Text = dMR_C.Text & If(dMR_C2.Visible, "/" & dMR_C2.Text, "")
                .lblNMA.Text = dNMA_C.Text & If(dNMA_C2.Visible, "/" & dNMA_C2.Text, "")
                If cbxProduct.Text.ToUpper.ToUpper.Contains("DEALER") Or cbxProduct.Text.ToUpper.Contains("AGRICULTURE") Or cbxProduct.Text.ToUpper.Contains("FARM EQUIPMENT") Or cbxProduct.Text.ToUpper.Contains("CREDIT LINE") Then
                    .XrLabel17.Text = "Monthly Int. :"
                    .XrLabel19.Text = LabelX94.Text
                    .XrLabel15.Visible = False
                    .lblGMA.Visible = False
                    .XrLabel11.Visible = False
                    .lblRPPD.Visible = False
                    .XrLabel4.Visible = False
                    .lblRPPD_Rate.Visible = False
                Else
                    If dRPPDRate_C.Visible = False Then
                        '***HIDE REBATE
                        .XrLabel4.Visible = False
                        .lblRPPD_Rate.Visible = False
                        .XrLabel11.Visible = False
                        .lblRPPD.Visible = False
                        .XrLabel17.Visible = False
                        .lblMR.Visible = False
                    Else
                        .XrLabel15.Visible = True
                        .lblGMA.Visible = True
                        .XrLabel11.Visible = True
                        .lblRPPD.Visible = True
                        .XrLabel4.Visible = True
                        .lblRPPD_Rate.Visible = True
                    End If
                    .XrLabel17.Text = "Monthly Rebate :"
                    .XrLabel19.Text = "NMA :"
                End If
                .rNote.Text = rNote.Text
                .lblTotalPF.Text = dTPF_C.Text
                .lblSC.Text = dSC_C.Text
                .XrLabel25.Text = LabelX97.Text
                .lblAppraisal.Text = dAppraisalFee_C.Text
                .lblCI.Text = dCIFee_C.Text
                .lblPFandSC.Text = dMiscellaneous_C.Text
                .lblAdvancePayment.Text = dAdvancePayment_C.Text
                .lblDeductBalance.Text = dDeductBalance_C.Text
                .lblInsurance.Text = dInsurance_C.Text
                .lblTotalDeductions.Text = dTD_C.Text
                .lblNetProceeds.Text = dNetProceeds_C.Text

                .XrTable3.Rows.Clear()
                Dim R As New XRTableRow With {.Weight = 105}
                Dim PF_Cell As New XRTableCell With {.Weight = 105, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
                Dim Amount_Cell As New XRTableCell With {.Weight = 70, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
                PF_Cell.Text = "Processing Fee"
                Amount_Cell.Text = "Amount"
                R.Cells.Add(PF_Cell)
                R.Cells.Add(Amount_Cell)
                .XrTable3.Rows.Add(R)
                For x As Integer = 0 To GridView4.RowCount - 1
                    Dim R_2 As New XRTableRow With {.Weight = 105}
                    Dim PF_Cell_2 As New XRTableCell With {.Weight = 105, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid))}
                    Dim Amount_Cell_2 As New XRTableCell With {.Weight = 70, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid))}
                    PF_Cell_2.Text = GridView4.GetRowCellValue(x, "Processing Fee")
                    Amount_Cell_2.Text = FormatNumber(CDbl(GridView4.GetRowCellValue(x, "Amount")), 2)
                    If CDbl(GridView4.GetRowCellValue(x, "Amount")) > 0 Then
                        R_2.Cells.Add(PF_Cell_2)
                        R_2.Cells.Add(Amount_Cell_2)
                        .XrTable3.Rows.Add(R_2)
                    End If
                Next
                If .XrTable3.Rows.Count < 12 Then
                    For x As Integer = 0 To 12 - .XrTable3.Rows.Count
                        Dim R_4 As New XRTableRow With {.Weight = 105}
                        Dim PF_Cell_4 As New XRTableCell With {.Weight = 105, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid))}
                        Dim Amount_Cell_4 As New XRTableCell With {.Weight = 70, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid))}
                        PF_Cell_4.Text = ""
                        Amount_Cell_4.Text = ""
                        R_4.Cells.Add(PF_Cell_4)
                        R_4.Cells.Add(Amount_Cell_4)
                        .XrTable3.Rows.Add(R_4)
                    Next
                End If
                '***PAGE II
                .lblCreditNumber_2.Text = If(cbxBorrower.Enabled, "", txtCreditNumber.Text)
                .tAmount_2.Text = dAmountApplied.Text
                .tTerms_2.Text = iTerms.Text & " " & cbxTerms.Text
                .tCollateral_2.Text = cbxProduct.Text
                .lblTerms_2.Text = iTerms_C.Text & " " & cbxTerms.Text
                .lblInterest_Rate_2.Text = dInterest_C.Value & "% (" & dInterest_T.Value & lblInterest.Text & ")"
                .lblRPPD_Rate_2.Text = dRPPDRate_C.Value & "% (" & dRPPDRate_T.Value & lblRPPDRate_T.Text & ")"
                .lblPA_2.Text = dPA_C.Text
                .lblUDI_2.Text = dUDI_C.Text
                .lblRPPD_2.Text = dRPPD_C.Text
                .lblFA_2.Text = dFA_C.Text
                .lblGMA_2.Text = dGMA_C.Text & If(dGMA_C2.Visible, "/" & dGMA_C2.Text, "")
                .lblMR_2.Text = dMR_C.Text & If(dMR_C2.Visible, "/" & dMR_C2.Text, "")
                .lblNMA_2.Text = dNMA_C.Text & If(dNMA_C2.Visible, "/" & dNMA_C2.Text, "")
                If cbxProduct.Text.ToUpper.ToUpper.Contains("DEALER") Or cbxProduct.Text.ToUpper.Contains("AGRICULTURE") Or cbxProduct.Text.ToUpper.Contains("FARM EQUIPMENT") Or cbxProduct.Text.ToUpper.Contains("CREDIT LINE") Then
                    .XrLabel49.Text = "Monthly Int. :"
                    .XrLabel19.Text = LabelX94.Text
                    .XrLabel37.Visible = False
                    .lblRPPD_Rate_2.Visible = False
                    .XrLabel43.Visible = False
                    .lblRPPD_2.Visible = False
                    .XrLabel47.Visible = False
                    .lblGMA_2.Visible = False
                Else
                    If dRPPDRate_C.Visible = False Then
                        '***HIDE REBATE
                        .XrLabel37.Visible = False
                        .lblRPPD_Rate_2.Visible = False
                        .XrLabel43.Visible = False
                        .lblRPPD_2.Visible = False
                        .XrLabel49.Visible = False
                        .lblMR_2.Visible = False
                    Else
                        .XrLabel37.Visible = True
                        .lblRPPD_Rate_2.Visible = True
                        .XrLabel43.Visible = True
                        .lblRPPD_2.Visible = True
                        .XrLabel47.Visible = True
                        .lblGMA_2.Visible = True
                    End If
                    .XrLabel49.Text = "Monthly Rebate :"
                    .XrLabel51.Text = "NMA :"
                End If
                .rNote_2.Text = rNote.Text
                .lblTotalPF_2.Text = dTPF_C.Text
                .lblSC_2.Text = dSC_C.Text
                .XrLabel57.Text = LabelX97.Text
                .lblAppraisal_2.Text = dAppraisalFee_C.Text
                .lblCI_2.Text = dCIFee_C.Text
                .lblPFandSC_2.Text = dMiscellaneous_C.Text
                .lblAdvancePayment_2.Text = dAdvancePayment_C.Text
                .lblDeductBalance_2.Text = dDeductBalance_C.Text
                .lblInsurance_2.Text = dInsurance_C.Text
                .lblTotalDeductions_2.Text = dTD_C.Text
                .lblNetProceeds_2.Text = dNetProceeds_C.Text

                .XrTable6.Rows.Clear()
                Dim RT2 As New XRTableRow With {.Weight = 105}
                Dim PF_CellT2 As New XRTableCell With {.Weight = 105, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
                Dim Amount_CellT2 As New XRTableCell With {.Weight = 70, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
                PF_CellT2.Text = "Processing Fee"
                Amount_CellT2.Text = "Amount"
                RT2.Cells.Add(PF_CellT2)
                RT2.Cells.Add(Amount_CellT2)
                .XrTable6.Rows.Add(RT2)
                For x As Integer = 0 To GridView4.RowCount - 1
                    Dim R_2T2 As New XRTableRow With {.Weight = 105}
                    Dim PF_Cell_2T2 As New XRTableCell With {.Weight = 105, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid))}
                    Dim Amount_Cell_2T2 As New XRTableCell With {.Weight = 70, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid))}
                    PF_Cell_2T2.Text = GridView4.GetRowCellValue(x, "Processing Fee")
                    Amount_Cell_2T2.Text = FormatNumber(CDbl(GridView4.GetRowCellValue(x, "Amount")), 2)
                    If CDbl(GridView4.GetRowCellValue(x, "Amount")) > 0 Then
                        R_2T2.Cells.Add(PF_Cell_2T2)
                        R_2T2.Cells.Add(Amount_Cell_2T2)
                        .XrTable6.Rows.Add(R_2T2)
                    End If
                Next
                If .XrTable6.Rows.Count < 12 Then
                    For x As Integer = 0 To 12 - .XrTable6.Rows.Count
                        Dim R_4T2 As New XRTableRow With {.Weight = 105}
                        Dim PF_Cell_4T2 As New XRTableCell With {.Weight = 105, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
                        Dim Amount_Cell_4T2 As New XRTableCell With {.Weight = 70, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
                        PF_Cell_4T2.Text = ""
                        Amount_Cell_4T2.Text = ""
                        R_4T2.Cells.Add(PF_Cell_4T2)
                        R_4T2.Cells.Add(Amount_Cell_4T2)
                        .XrTable6.Rows.Add(R_4T2)
                    Next
                End If
                If CompanyMode = 0 Then
                    .XrLabel25.Visible = False
                    .lblPFandSC.Visible = False

                    .XrLabel57.Visible = False
                    .lblPFandSC_2.Visible = False
                End If
                Logs("Credit Application", "Print", String.Format("[SENSITIVE] Print Calculator Amount Applied: {0}, Terms: {1} {2}, Product: {3}, Interest Rate: {4}% per annum, RPPD Rate: {5}% per annum, Total Processing Fee: {6}, Total Deduction: {7}, Net Proceeds: {8}", dAmountApplied.Text, iTerms.Text, cbxTerms.Text, cbxProduct.Text, dInterest_T.Text, dRPPDRate_T.Text, dTPF_C.Text, dTD_C.Text, dNetProceeds_C.Text), "", "", "", txtCreditNumber.Text)
                If From_CI_Print Then
                    Try
                        .ExportToPdf(PrintName)
                    Catch ex As Exception
                    End Try
                Else
                    .ShowPreview()
                End If
            End With
        ElseIf SuperTabControl1.SelectedTabIndex = 4 Then 'AMORTIZATION SCHEDULE
            Dim Report As New RptAmortizationSchedule
            With Report
                .Name = "Amortization Scheduling"
                .lblAmountApplied.Text = dAmountApplied.Text
                .lblTerms.Text = iTerms.Value & " " & cbxTerms.Text
                .lblProduct.Text = cbxProduct.Text & " [" & cbxCollateral.Text & "]"
                .lblPurpose.Text = txtPurpose.Text
                .lblDate.Text = Format(dtpDate.Value, "MM.dd.yyyy")

                .DataSource = GridControl3.DataSource
                .lblNo.DataBindings.Add("Text", GridControl3.DataSource, "No")
                .lblDue.DataBindings.Add("Text", GridControl3.DataSource, "Due Date")
                .lblMonthly.DataBindings.Add("Text", GridControl3.DataSource, "Monthly")
                .lblInterest.DataBindings.Add("Text", GridControl3.DataSource, "Interest Income")
                .lblRPPD.DataBindings.Add("Text", GridControl3.DataSource, "RPPD")
                .lblPrincipal.DataBindings.Add("Text", GridControl3.DataSource, "Principal Allocation")
                .lblOutstanding.DataBindings.Add("Text", GridControl3.DataSource, "Outstanding Principal")
                .lblUnearn.DataBindings.Add("Text", GridControl3.DataSource, "Unearn Income")
                .lblRPPD_2.DataBindings.Add("Text", GridControl3.DataSource, "Total_RPPD")
                .lblLoansReceivable.DataBindings.Add("Text", GridControl3.DataSource, "Loans Receivable")
                If CompanyMode = 0 Then
                    .XrLabel15.Text = "Interest"
                    .XrLabel11.Visible = False
                    .XrLabel14.Visible = False

                    .lblRPPD.Visible = False
                    .lblRPPD_2.Visible = False

                    .XrLabel9.SizeF = New SizeF(115 + 45, 30)
                    .XrLabel10.SizeF = New SizeF(115 + 35, 30)
                    .XrLabel12.SizeF = New SizeF(115 + 35, 30)
                    .XrLabel13.SizeF = New SizeF(115 + 35, 30)
                    .XrLabel15.SizeF = New SizeF(115 + 35, 30)
                    .XrLabel16.SizeF = New SizeF(115 + 45, 30)

                    .XrLabel10.Location = New Point(130 + 160, 135)
                    .XrLabel12.Location = New Point(130 + 310, 135)
                    .XrLabel13.Location = New Point(130 + 460, 135)
                    .XrLabel15.Location = New Point(130 + 610, 135)
                    .XrLabel16.Location = New Point(130 + 760, 135)

                    .lblMonthly.SizeF = New SizeF(115 + 45, 30)
                    .lblInterest.SizeF = New SizeF(115 + 35, 30)
                    .lblPrincipal.SizeF = New SizeF(115 + 35, 30)
                    .lblOutstanding.SizeF = New SizeF(115 + 35, 30)
                    .lblUnearn.SizeF = New SizeF(115 + 35, 30)
                    .lblLoansReceivable.SizeF = New SizeF(115 + 45, 30)

                    .lblInterest.Location = New Point(130 + 160, 0)
                    .lblPrincipal.Location = New Point(130 + 310, 0)
                    .lblOutstanding.Location = New Point(130 + 460, 0)
                    .lblUnearn.Location = New Point(130 + 610, 0)
                    .lblLoansReceivable.Location = New Point(130 + 760, 0)
                End If
                .ShowPreview()
                Logs("Credit Application", "Print", "[SENSITIVE] Print Schedule", "", "", "", txtCreditNumber.Text)
            End With
        Else 'LOAN APPLICATION FORM
            Dim Report As New RptLoanApplication
            With Report
                If TxtFirstN_B.Text = "" And TxtLastN_B.Text = "" Then
                    .ShowPreview()
                    Exit Sub
                    Cursor = Cursors.WaitCursor
                End If
                .CompareFromBorrower = CompareFromBorrower
                If cbxCorporate.Checked Then
                    .XrLabel8.Text = "Representative 1 :"
                    .XrLabel10.Text = "Representative 2 :"
                    .XrLabel12.Text = "Representative 3 :"
                    .XrLabel18.Text = "Incorporation Date :"
                End If
                .Name = txtCreditNumber.Text
                .tAmount.Text = dAmountApplied.Text
                .tTerms.Text = iTerms.Value & " " & cbxTerms.Text
                .tCollateral.Text = cbxProduct.Text & " [" & cbxCollateral.Text & "]"
                .tPurpose.Text = txtPurpose.Text
                .tDate.Text = dtpDate.Text
                .p_Borrower.Image = pb_B.Image.Clone
                .lblLoanNumber.Text = txtCreditNumber.Text
                .lblBorrowerID.Text = cbxBorrower.Text
                .lblBorrower.Text = If(CbxPrefix_B.Text.Trim = "", "", CbxPrefix_B.Text.Trim & " ") & If(TxtFirstN_B.Text.Trim = "", "", TxtFirstN_B.Text.Trim & " ") & If(TxtMiddleN_B.Text.Trim = "", "", TxtMiddleN_B.Text.Trim & " ") & If(TxtLastN_B.Text.Trim = "", "", TxtLastN_B.Text.Trim & " ") & If(cbxSuffix_B.Text.Trim = "", "", cbxSuffix_B.Text.Trim)
                .lblSpouse.Text = If(CbxPrefix_S.Text.Trim = "", "", CbxPrefix_S.Text.Trim & " ") & If(TxtFirstN_S.Text.Trim = "", "", TxtFirstN_S.Text.Trim & " ") & If(TxtMiddleN_S.Text.Trim = "", "", TxtMiddleN_S.Text.Trim & " ") & If(TxtLastN_S.Text.Trim = "", "", TxtLastN_S.Text.Trim & " ") & If(cbxSuffix_S.Text.Trim = "", "", cbxSuffix_S.Text.Trim)
                .lblCoMaker1.Text = If(CbxPrefix_C1.Text.Trim = "", "", CbxPrefix_C1.Text.Trim & " ") & If(TxtFirstN_C1.Text.Trim = "", "", TxtFirstN_C1.Text.Trim & " ") & If(TxtMiddleN_C1.Text.Trim = "", "", TxtMiddleN_C1.Text.Trim & " ") & If(TxtLastN_C1.Text.Trim = "", "", TxtLastN_C1.Text.Trim & " ") & If(cbxSuffix_C1.Text.Trim = "", "", cbxSuffix_C1.Text.Trim)
                .lblCoMakerII.Text = If(CbxPrefix_C2.Text.Trim = "", "", CbxPrefix_C2.Text.Trim & " ") & If(TxtFirstN_C2.Text.Trim = "", "", TxtFirstN_C2.Text.Trim & " ") & If(TxtMiddleN_C2.Text.Trim = "", "", TxtMiddleN_C2.Text.Trim & " ") & If(TxtLastN_C2.Text.Trim = "", "", TxtLastN_C2.Text.Trim & " ") & If(cbxSuffix_C2.Text.Trim = "", "", cbxSuffix_C2.Text.Trim)
                .lblCompleteAdd.Text = If(txtNoC_B.Text.Trim = "", "", txtNoC_B.Text.Trim & " ") & If(txtStreetC_B.Text.Trim = "", "", txtStreetC_B.Text.Trim & " ") & If(txtBarangayC_B.Text.Trim = "", "", txtBarangayC_B.Text.Trim & " ") & If(cbxAddressC_B.Text.Trim = "", "", cbxAddressC_B.Text.Trim)
                .lblProvincialAdd.Text = If(txtNoP_B.Text.Trim = "", "", txtNoP_B.Text.Trim & " ") & If(txtStreetP_B.Text.Trim = "", "", txtStreetP_B.Text.Trim & " ") & If(txtBarangayP_B.Text.Trim = "", "", txtBarangayP_B.Text.Trim & " ") & If(cbxAddressP_B.Text.Trim = "", "", cbxAddressP_B.Text.Trim)
                .lblBirthDate.Text = DtpBirth_B.Text
                .lblBirthPlace.Text = cbxPlaceBirth_B.Text
                .cbxMale.Checked = cbxMale_B.Checked
                .cbxFemale.Checked = cbxFemale_B.Checked
                .cbxSingle.Checked = cbxSingle_B.Checked
                .cbxMarried.Checked = cbxMarried_B.Checked
                .cbxSeparated.Checked = cbxSeparated_B.Checked
                .cbxWidowed.Checked = cbxWidowed_B.Checked
                .lblCitizenship.Text = cbxCitizenship_B.Text
                .lblTIN.Text = txtTIN_B.Text
                .lblTelephone.Text = txtTelephone_B.Text
                .lblSSS.Text = txtSSS_B.Text
                .lblMobile.Text = txtMobile_B.Text
                .lblEmail.Text = txtEmail_B.Text
                .cbxOwned.Checked = cbxOwned_B.Checked
                .cbxFree.Checked = cbxFree_B.Checked
                .cbxRented.Checked = cbxRented_B.Checked
                .lblRent.Text = If(cbxRented_B.Checked, dRent_B.Text & " / month", "")
                .lblDependent_1.Text = If(CbxPrefix_1.Text.Trim = "", "", CbxPrefix_1.Text.Trim & " ") & If(TxtFirstN_1.Text.Trim = "", "", TxtFirstN_1.Text.Trim & " ") & If(TxtMiddleN_1.Text.Trim = "", "", TxtMiddleN_1.Text.Trim & " ") & If(TxtLastN_1.Text.Trim = "", "", TxtLastN_1.Text.Trim & " ") & If(cbxSuffix_1.Text.Trim = "", "", cbxSuffix_1.Text.Trim)
                .lblBirthDate_1.Text = iAge_D1.Value
                .lblGrade_1.Text = If(txtGrade_1.Text.Trim = "", "", txtGrade_1.Text.Trim & " ") & If(txtSchool_1.Text.Trim = "", "", txtSchool_1.Text.Trim & " ") & If(txtSchoolAddress_1.Text.Trim = "", "", txtSchoolAddress_1.Text.Trim)
                .lblDependent_2.Text = If(CbxPrefix_2.Text.Trim = "", "", CbxPrefix_2.Text.Trim & " ") & If(TxtFirstN_2.Text.Trim = "", "", TxtFirstN_2.Text.Trim & " ") & If(TxtMiddleN_2.Text.Trim = "", "", TxtMiddleN_2.Text.Trim & " ") & If(TxtLastN_2.Text.Trim = "", "", TxtLastN_2.Text.Trim & " ") & If(cbxSuffix_2.Text.Trim = "", "", cbxSuffix_2.Text.Trim)
                .lblBirthDate_2.Text = iAge_D2.Value
                .lblGrade_2.Text = If(txtGrade_2.Text.Trim = "", "", txtGrade_2.Text.Trim & " ") & If(txtSchool_2.Text.Trim = "", "", txtSchool_2.Text.Trim & " ") & If(txtSchoolAddress_2.Text.Trim = "", "", txtSchoolAddress_2.Text.Trim)
                .lblDependent_3.Text = If(CbxPrefix_3.Text.Trim = "", "", CbxPrefix_3.Text.Trim & " ") & If(TxtFirstN_3.Text.Trim = "", "", TxtFirstN_3.Text.Trim & " ") & If(TxtMiddleN_3.Text.Trim = "", "", TxtMiddleN_3.Text.Trim & " ") & If(TxtLastN_3.Text.Trim = "", "", TxtLastN_3.Text.Trim & " ") & If(cbxSuffix_3.Text.Trim = "", "", cbxSuffix_3.Text.Trim)
                .lblBirthDate_3.Text = iAge_D3.Value
                .lblGrade_3.Text = If(txtGrade_3.Text.Trim = "", "", txtGrade_3.Text.Trim & " ") & If(txtSchool_3.Text.Trim = "", "", txtSchool_3.Text.Trim & " ") & If(txtSchoolAddress_3.Text.Trim = "", "", txtSchoolAddress_3.Text.Trim)
                .lblDependent_4.Text = If(CbxPrefix_4.Text.Trim = "", "", CbxPrefix_4.Text.Trim & " ") & If(TxtFirstN_4.Text.Trim = "", "", TxtFirstN_4.Text.Trim & " ") & If(TxtMiddleN_4.Text.Trim = "", "", TxtMiddleN_4.Text.Trim & " ") & If(TxtLastN_4.Text.Trim = "", "", TxtLastN_4.Text.Trim & " ") & If(cbxSuffix_4.Text.Trim = "", "", cbxSuffix_4.Text.Trim)
                .lblBirthDate_4.Text = iAge_D4.Value
                .lblGrade_4.Text = If(txtGrade_4.Text.Trim = "", "", txtGrade_4.Text.Trim & " ") & If(txtSchool_4.Text.Trim = "", "", txtSchool_4.Text.Trim & " ") & If(txtSchoolAddress_4.Text.Trim = "", "", txtSchoolAddress_4.Text.Trim)
                .lblEmployer.Text = cbxEmployer_B.Text
                .lblEmployerAddress.Text = txtEmployerAddress_B.Text
                .lblEmployerTel.Text = txtEmployerTelephone_B.Text
                .lblPosition.Text = cbxPosition_B.Text
                .cbxCasual.Checked = cbxCasual_B.Checked
                .cbxTemporary.Checked = cbxTemporary_B.Checked
                .cbxPermanent.Checked = cbxPermanent_B.Checked
                .lblDateHired.Text = dtpHired_B.Text
                .lblSupervisor.Text = txtSupervisor_B.Text
                .lblMonthlyIncome.Text = dMonthly_B.Text

                .lblBusiness.Text = txtBusinessName_B.Text
                .lblBusinessAddress.Text = txtBusinessAddress_B.Text
                .lblBusinessTel.Text = txtBusinessTelephone_B.Text
                .lblNature.Text = cbxNatureBusiness_B.Text
                .lblYearsOperation.Text = iYrsOperation_B.Text
                .lblBusinessIncome.Text = dBusinessIncome_B.Text
                .lblNoEmployees.Text = iNoEmployees_B.Text
                .lblCapital.Text = dCapital_B.Text
                .lblCoverageArea.Text = txtArea_B.Text
                .lblExpiry.Text = dtpExpiry_B.Text
                .lblOutlet.Text = iOutlet_B.Text
                .lblOtherIncome.Text = txtOtherIncome_B.Text
                .lblOtherMonthlyIncome.Text = dOtherIncome_B.Text

                If CompareFromBorrower Then
                    'TAGS TO COMPARE
                    Dim BorrowerP As DataTable = DataSource(String.Format("SELECT * FROM profile_borrower WHERE BorrowerID = '{0}'", BorrowerID))
                    If BorrowerP.Rows.Count > 0 Then
                        .lblBorrower.Tag = If(BorrowerP(0)("Prefix_B") = "", "", BorrowerP(0)("Prefix_B") & " ") & If(BorrowerP(0)("FirstN_B") = "", "", BorrowerP(0)("FirstN_B") & " ") & If(BorrowerP(0)("MiddleN_B") = "", "", BorrowerP(0)("MiddleN_B") & " ") & If(BorrowerP(0)("LastN_B") = "", "", BorrowerP(0)("LastN_B") & " ") & If(BorrowerP(0)("Suffix_B") = "", "", BorrowerP(0)("Suffix_B"))
                        .lblSpouse.Tag = If(BorrowerP(0)("Prefix_S") = "", "", BorrowerP(0)("Prefix_S") & " ") & If(BorrowerP(0)("FirstN_S") = "", "", BorrowerP(0)("FirstN_S") & " ") & If(BorrowerP(0)("MiddleN_S") = "", "", BorrowerP(0)("MiddleN_S") & " ") & If(BorrowerP(0)("LastN_S") = "", "", BorrowerP(0)("LastN_S") & " ") & If(BorrowerP(0)("Suffix_S") = "", "", BorrowerP(0)("Suffix_S"))
                        .lblCompleteAdd.Tag = If(BorrowerP(0)("NoC_B") = "", "", BorrowerP(0)("NoC_B") & " ") & If(BorrowerP(0)("StreetC_B") = "", "", BorrowerP(0)("StreetC_B") & " ") & If(BorrowerP(0)("BarangayC_B") = "", "", BorrowerP(0)("BarangayC_B") & " ") & If(BorrowerP(0)("AddressC_B") = "", "", BorrowerP(0)("AddressC_B"))
                        .lblProvincialAdd.Tag = If(BorrowerP(0)("NoP_B") = "", "", BorrowerP(0)("NoP_B") & " ") & If(BorrowerP(0)("StreetP_B") = "", "", BorrowerP(0)("StreetP_B") & " ") & If(BorrowerP(0)("BarangayP_B") = "", "", BorrowerP(0)("BarangayP_B") & " ") & If(BorrowerP(0)("AddressP_B") = "", "", BorrowerP(0)("AddressP_B"))
                        If BorrowerP(0)("Birth_B") = "0001-01-01" Or BorrowerP(0)("Birth_B") = "" Then
                        Else
                            .lblBirthDate.Tag = Format(CDate(BorrowerP(0)("Birth_B")), "MMMM dd, yyyy")
                        End If
                        .lblBirthPlace.Tag = BorrowerP(0)("PlaceBirth_B")
                        .cbxMale.Tag = False
                        .cbxFemale.Tag = False
                        If BorrowerP(0)("Gender_B") = "Male" Then
                            .cbxMale.Tag = True
                        ElseIf BorrowerP(0)("Gender_B") = "Female" Then
                            .cbxFemale.Tag = True
                        End If
                        .cbxSingle.Tag = False
                        .cbxMarried.Tag = False
                        .cbxSeparated.Tag = False
                        .cbxWidowed.Tag = False
                        If BorrowerP(0)("Civil_B") = "Single" Then
                            .cbxSingle.Tag = True
                        ElseIf BorrowerP(0)("Civil_B") = "Married" Then
                            .cbxMarried.Tag = True
                        ElseIf BorrowerP(0)("Civil_B") = "Separated" Then
                            .cbxSeparated.Tag = True
                        ElseIf BorrowerP(0)("Civil_B") = "Widowed" Then
                            .cbxWidowed.Tag = True
                        End If
                        .lblCitizenship.Tag = BorrowerP(0)("Citizenship_B")
                        .lblTIN.Tag = BorrowerP(0)("TIN_B")
                        .lblTelephone.Tag = BorrowerP(0)("Telephone_B")
                        .lblSSS.Tag = BorrowerP(0)("SSS_B")
                        .lblMobile.Tag = BorrowerP(0)("Mobile_B")
                        .lblEmail.Tag = BorrowerP(0)("Email_B")
                        .cbxOwned.Tag = False
                        .cbxFree.Tag = False
                        .cbxRented.Tag = False
                        If BorrowerP(0)("House_B") = "Owned" Then
                            .cbxOwned.Tag = True
                        ElseIf BorrowerP(0)("House_B") = "Free" Then
                            .cbxFree.Tag = True
                        ElseIf BorrowerP(0)("House_B") = "Rented" Then
                            .cbxRented.Tag = True
                        End If
                        .lblEmployer.Tag = BorrowerP(0)("Employer_B")
                        .lblEmployerAddress.Tag = BorrowerP(0)("EmployerAddress_B")
                        .lblEmployerTel.Tag = BorrowerP(0)("EmployerTelephone_B")
                        .lblPosition.Tag = BorrowerP(0)("Position_B")
                        .cbxCasual.Tag = False
                        .cbxTemporary.Tag = False
                        .cbxPermanent.Tag = False
                        If BorrowerP(0)("EmploymentStat_B") = "Casual" Then
                            .cbxCasual.Tag = True
                        ElseIf BorrowerP(0)("EmploymentStat_B") = "Temporary" Then
                            .cbxTemporary.Tag = True
                        ElseIf BorrowerP(0)("EmploymentStat_B") = "Permanent" Then
                            .cbxPermanent.Tag = True
                        End If
                        .lblDateHired.Tag = BorrowerP(0)("Hired_B")
                        .lblSupervisor.Tag = BorrowerP(0)("Supervisor_B")
                        .lblMonthlyIncome.Tag = BorrowerP(0)("Monthly_B")

                        .lblBusiness.Tag = BorrowerP(0)("BusinessName_B")
                        .lblBusinessAddress.Tag = BorrowerP(0)("BusinessAddress_B")
                        .lblBusinessTel.Tag = BorrowerP(0)("BusinessTelephone_B")
                        .lblNature.Tag = BorrowerP(0)("NatureBusiness_B")
                        .lblYearsOperation.Tag = BorrowerP(0)("YrsOperation_B")
                        .lblBusinessIncome.Tag = BorrowerP(0)("BusinessIncome_B")
                        .lblNoEmployees.Tag = BorrowerP(0)("NoEmployees_B")
                        .lblCapital.Tag = BorrowerP(0)("Capital_B")
                        .lblCoverageArea.Tag = BorrowerP(0)("Area_B")
                        .lblExpiry.Tag = BorrowerP(0)("Expiry_B")
                        .lblOutlet.Tag = BorrowerP(0)("Outlet_B")
                        .lblOtherIncome.Tag = BorrowerP(0)("OtherIncome_B")
                        .lblOtherMonthlyIncome.Tag = BorrowerP(0)("OtherIncome_B-Amount")
                    End If
                End If

                .lblCreditor_1.Text = txtCreditor_1.Text
                .lblNature_1.Text = txtNatureLoan_1.Text
                .lblAmount_1.Text = dAmountGranted_1.Text
                .lblTerm_1.Text = dTerm_1.Text
                .lblBalance_1.Text = dBalance_1.Text
                .lblRemarks_1.Text = txtCreditRemarks_1.Text
                .lblCreditor_2.Text = txtCreditor_2.Text
                .lblNature_2.Text = txtNatureLoan_2.Text
                .lblAmount_2.Text = dAmountGranted_2.Text
                .lblTerm_2.Text = dTerm_2.Text
                .lblBalance_2.Text = dBalance_2.Text
                .lblRemarks_2.Text = txtCreditRemarks_2.Text
                .lblCreditor_3.Text = txtCreditor_3.Text
                .lblNature_3.Text = txtNatureLoan_3.Text
                .lblAmount_3.Text = dAmountGranted_3.Text
                .lblTerm_3.Text = dTerm_3.Text
                .lblBalance_3.Text = dBalance_3.Text
                .lblRemarks_3.Text = txtCreditRemarks_3.Text
                .lblBank_1.Text = txtBank_1.Text
                .lblSA_1.Text = txtSA_1.Text
                .lblAverage_1.Text = dAverageBalance_1.Text
                .lblPresent_1.Text = dPresentBalance_1.Text
                .lblDateOpened_1.Text = txtOpened_1.Text
                .lblBankRemarks_1.Text = txtBankRemarks_1.Text
                .lblBank_2.Text = txtBank_2.Text
                .lblSA_2.Text = txtSA_2.Text
                .lblAverage_2.Text = dAverageBalance_2.Text
                .lblPresent_2.Text = dPresentBalance_2.Text
                .lblDateOpened_2.Text = txtOpened_2.Text
                .lblBankRemarks_2.Text = txtBankRemarks_2.Text
                .lblBank_3.Text = txtBank_3.Text
                .lblSA_3.Text = txtSA_3.Text
                .lblAverage_3.Text = dAverageBalance_3.Text
                .lblPresent_3.Text = dPresentBalance_3.Text
                .lblDateOpened_3.Text = txtOpened_3.Text
                .lblBankRemarks_3.Text = txtBankRemarks_3.Text
                .lblLocation_1.Text = txtLocation_1.Text
                .lblTCT_1.Text = txtTCT_1.Text
                .lblArea_1.Text = dArea_1.Text
                .lblAcquired_1.Text = txtAcquired_1.Text
                .lblEstateRemarks_1.Text = txtPropertiesRemarks_1.Text
                .lblLocation_2.Text = txtLocation_2.Text
                .lblTCT_2.Text = txtTCT_2.Text
                .lblArea_2.Text = dArea_2.Text
                .lblAcquired_2.Text = txtAcquired_2.Text
                .lblEstateRemarks_2.Text = txtPropertiesRemarks_2.Text
                .lblLocation_3.Text = txtLocation_3.Text
                .lblTCT_3.Text = txtTCT_3.Text
                .lblArea_3.Text = dArea_3.Text
                .lblAcquired_3.Text = txtAcquired_3.Text
                .lblEstateRemarks_3.Text = txtPropertiesRemarks_3.Text
                .lblVehicle_1.Text = txtVehicle_1.Text
                .lblYear_1.Text = dtpYear_1.Text
                .lblWhom_1.Text = txtWhomAcquired_1.Text
                .lblWhen_1.Text = txtWhenAcquired_1.Text
                .lblVehicleRemarks_1.Text = txtVehicleRemarks_1.Text
                .lblVehicle_2.Text = txtVehicle_2.Text
                .lblYear_2.Text = dtpYear_2.Text
                .lblWhom_2.Text = txtWhomAcquired_2.Text
                .lblWhen_2.Text = txtWhenAcquired_2.Text
                .lblVehicleRemarks_2.Text = txtVehicleRemarks_2.Text
                .lblVehicle_3.Text = txtVehicle_3.Text
                .lblYear_3.Text = dtpYear_3.Text
                .lblWhom_3.Text = txtWhomAcquired_3.Text
                .lblWhen_3.Text = txtWhenAcquired_3.Text
                .lblVehicleRemarks_3.Text = txtVehicleRemarks_3.Text
                .lblAppliances_1.Text = txtHomeAppliances_1.Text
                .lblAppliances_2.Text = txtHomeAppliances_2.Text
                .lblReference_1.Text = txtReference_1.Text
                .lblReferenceAdd_1.Text = txtReferenceAddress_1.Text
                .lblReferenceTel_1.Text = txtReferenceContact_1.Text
                .lblReference_2.Text = txtReference_2.Text
                .lblReferenceAdd_2.Text = txtReferenceAddress_2.Text
                .lblReferenceTel_2.Text = txtReferenceContact_2.Text
                .lblReference_3.Text = txtReference_3.Text
                .lblReferenceAdd_3.Text = txtReferenceAddress_3.Text
                .lblReferenceTel_3.Text = txtReferenceContact_3.Text
                .lblDateSigned.Text = ""
                .lblSignature_1.Text = ""
                .lblSignature_2.Text = ""
                .tResidence.Text = txtCertificateNo.Text
                .tPlaceIssue.Text = txtPlaceIssue.Text
                .tDateIssue.Text = dtpIssue.Text
                .cbxAgent.Checked = cbxAgent.Checked
                .txtAgent.Text = cbxAgentName.Text & " " & If(txtAgentContact.Text = "", "", "(" & txtAgentContact.Text & ")")
                .cbxMarketing.Checked = cbxMarketing.Checked
                .txtMarketing.Text = cbxMarketingName.Text & " " & If(txtMarketingContact.Text = "", "", "(" & txtMarketingContact.Text & ")")
                .cbxWalkIn.Checked = cbxWalkIn.Checked
                .txtWalkIn.Text = cbxWalkInType.Text & " " & If(txtWalkInOthers.Text = "", "", "(" & txtWalkInOthers.Text & ")")
                .lblRemarks.Text = rRemarks.Text
                Logs("Credit Application", "Print", String.Format("[SENSITIVE] Print Credit Application of {0}", If(CbxPrefix_B.Text = "", "", CbxPrefix_B.Text & " ") & If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & cbxSuffix_B.Text), "", "", "", txtCreditNumber.Text)
                If From_CI_Print Then
                    Try
                        .ExportToPdf(PrintName)
                    Catch ex As Exception
                    End Try
                Else
                    .ShowPreview()
                End If
            End With
        End If
        Cursor = Cursors.Default
    End Sub

    Private Sub BtnNext_Click(sender As Object, e As EventArgs) Handles btnNext.Click
        If SuperTabControl1.SelectedTabIndex = 0 Then
            SuperTabControl1.SelectedTab = tabFinancial_1
        ElseIf SuperTabControl1.SelectedTabIndex = 1 Then
            SuperTabControl1.SelectedTab = tabFinancial_2
        ElseIf SuperTabControl1.SelectedTabIndex = 2 Then
            SuperTabControl1.SelectedTab = tabRequirements
        ElseIf SuperTabControl1.SelectedTabIndex = 3 Then
            SuperTabControl1.SelectedTab = tabAmortization
        ElseIf SuperTabControl1.SelectedTabIndex = 4 Then
            SuperTabControl1.SelectedTab = tabComputation
        ElseIf SuperTabControl1.SelectedTabIndex = 5 Then
            SuperTabControl1.SelectedTab = tabList
        End If
    End Sub

    Private Sub BtnBack_Click(sender As Object, e As EventArgs) Handles btnBack.Click
        If SuperTabControl1.SelectedTabIndex = 6 Then
            SuperTabControl1.SelectedTab = tabComputation
        ElseIf SuperTabControl1.SelectedTabIndex = 5 Then
            SuperTabControl1.SelectedTab = tabAmortization
        ElseIf SuperTabControl1.SelectedTabIndex = 4 Then
            SuperTabControl1.SelectedTab = tabRequirements
        ElseIf SuperTabControl1.SelectedTabIndex = 3 Then
            SuperTabControl1.SelectedTab = tabFinancial_2
        ElseIf SuperTabControl1.SelectedTabIndex = 2 Then
            SuperTabControl1.SelectedTab = tabFinancial_1
        ElseIf SuperTabControl1.SelectedTabIndex = 1 Then
            SuperTabControl1.SelectedTab = tabBorrower
            btnBack.Enabled = False
        End If
    End Sub

    Private Sub SuperTabControl1_SelectedTabChanged(sender As Object, e As DevComponents.DotNetBar.SuperTabStripSelectedTabChangedEventArgs) Handles SuperTabControl1.SelectedTabChanged
        If SuperTabControl1.SelectedTabIndex = 0 Then
            btnBack.Enabled = False
            btnNext.Enabled = True

            btnPrint_II.Enabled = False
            btnEarly.Enabled = False

            If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" And PanelEx10.Enabled = True Then
                btnDelete.Enabled = False
                btnModify.Enabled = False
                btnSave.Enabled = True
                btnSave_F.Enabled = True
            Else
                btnAttach.Enabled = True
                If PanelEx10.Enabled = True Then
                    If Draft_Status = "DRAFT" Then
                        btnSave.Enabled = True
                    Else
                        btnSave.Enabled = False
                    End If
                    btnSave_F.Enabled = True
                    btnModify.Enabled = False
                    btnDelete.Enabled = True
                Else
                    btnSave.Enabled = False
                    btnSave_F.Enabled = False
                    If btnModify.Enabled = False Then
                    Else
                        btnModify.Enabled = True
                    End If
                    btnDelete.Enabled = False
                End If
            End If
        ElseIf SuperTabControl1.SelectedTabIndex = 1 Then
            btnBack.Enabled = True
            btnNext.Enabled = True

            btnPrint_II.Enabled = False
            btnEarly.Enabled = False

            If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" And PanelEx10.Enabled = True Then
                btnDelete.Enabled = False
                btnModify.Enabled = False
                btnSave.Enabled = True
                btnSave_F.Enabled = True
            Else
                btnAttach.Enabled = True
                If PanelEx10.Enabled = True Then
                    If Draft_Status = "DRAFT" Then
                        btnSave.Enabled = True
                    Else
                        btnSave.Enabled = False
                    End If
                    btnSave_F.Enabled = True
                    btnModify.Enabled = False
                    btnDelete.Enabled = True
                Else
                    btnSave.Enabled = False
                    btnSave_F.Enabled = False
                    If btnModify.Enabled = False Then
                    Else
                        btnModify.Enabled = True
                    End If
                    btnDelete.Enabled = False
                End If
            End If
        ElseIf SuperTabControl1.SelectedTabIndex = 2 Then
            btnBack.Enabled = True
            btnNext.Enabled = True

            btnPrint_II.Enabled = False
            btnEarly.Enabled = False

            If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" And PanelEx10.Enabled = True Then
                btnDelete.Enabled = False
                btnModify.Enabled = False
                btnSave.Enabled = True
                btnSave_F.Enabled = True
            Else
                btnAttach.Enabled = True
                If PanelEx10.Enabled = True Then
                    If Draft_Status = "DRAFT" Then
                        btnSave.Enabled = True
                    Else
                        btnSave.Enabled = False
                    End If
                    btnSave_F.Enabled = True
                    btnModify.Enabled = False
                    btnDelete.Enabled = True
                Else
                    btnSave.Enabled = False
                    btnSave_F.Enabled = False
                    If btnModify.Enabled = False Then
                    Else
                        btnModify.Enabled = True
                    End If
                    btnDelete.Enabled = False
                End If
            End If
        ElseIf SuperTabControl1.SelectedTabIndex = 3 Then
            btnBack.Enabled = True
            btnNext.Enabled = True

            btnPrint_II.Enabled = False
            btnEarly.Enabled = False

            If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" And PanelEx10.Enabled = True Then
                btnDelete.Enabled = False
                btnModify.Enabled = False
                btnSave.Enabled = True
                btnSave_F.Enabled = True
            Else
                btnAttach.Enabled = True
                If PanelEx10.Enabled = True Then
                    If Draft_Status = "DRAFT" Then
                        btnSave.Enabled = True
                    Else
                        btnSave.Enabled = False
                    End If
                    btnSave_F.Enabled = True
                    btnModify.Enabled = False
                    btnDelete.Enabled = True
                Else
                    btnSave.Enabled = False
                    btnSave_F.Enabled = False
                    If btnModify.Enabled = False Then
                    Else
                        btnModify.Enabled = True
                    End If
                    btnDelete.Enabled = False
                End If
            End If
        ElseIf SuperTabControl1.SelectedTabIndex = 4 Then
            btnBack.Enabled = True
            btnNext.Enabled = True

            btnPrint_II.Enabled = True
            If GridView3.RowCount > 3 And (btnSave_F.Text <> "&Save" Or btnSave_F.Visible = False) Then
                btnEarly.Enabled = True
            Else
                btnEarly.Enabled = False
            End If

            If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" And PanelEx10.Enabled = True Then
                btnDelete.Enabled = False
                btnModify.Enabled = False
                btnSave.Enabled = True
                btnSave_F.Enabled = True
            Else
                btnAttach.Enabled = True
                If PanelEx10.Enabled = True Then
                    If Draft_Status = "DRAFT" Then
                        btnSave.Enabled = True
                    Else
                        btnSave.Enabled = False
                    End If
                    btnSave_F.Enabled = True
                    btnModify.Enabled = False
                    If From_CI = False Then
                        btnDelete.Enabled = True
                    End If
                Else
                    btnSave.Enabled = False
                    btnSave_F.Enabled = False
                    If btnModify.Enabled = False Then
                    Else
                        btnModify.Enabled = True
                    End If
                    btnDelete.Enabled = False
                End If
            End If
        ElseIf SuperTabControl1.SelectedTabIndex = 5 Then
            btnBack.Enabled = True
            btnNext.Enabled = True

            btnPrint_II.Enabled = True
            If GridView3.RowCount > 3 And (btnSave_F.Text <> "&Save" Or btnSave_F.Visible = False) Then
                btnEarly.Enabled = True
            Else
                btnEarly.Enabled = False
            End If

            If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" And PanelEx10.Enabled = True Then
                btnDelete.Enabled = False
                btnModify.Enabled = False
                btnSave.Enabled = True
                btnSave_F.Enabled = True
            Else
                btnAttach.Enabled = True
                If PanelEx10.Enabled = True Then
                    If Draft_Status = "DRAFT" Then
                        btnSave.Enabled = True
                    Else
                        btnSave.Enabled = False
                    End If
                    btnSave_F.Enabled = True
                    btnModify.Enabled = False
                    If From_CI = False Then
                        btnDelete.Enabled = True
                    End If
                Else
                    btnSave.Enabled = False
                    btnSave_F.Enabled = False
                    If btnModify.Enabled = False Then
                    Else
                        btnModify.Enabled = True
                    End If
                    btnDelete.Enabled = False
                End If
            End If
        ElseIf SuperTabControl1.SelectedTabIndex = 6 Then
            btnBack.Enabled = True
            btnNext.Enabled = False
            btnAttach.Enabled = False

            btnPrint_II.Enabled = False
            btnEarly.Enabled = False

            If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" And PanelEx10.Enabled = True Then
                btnDelete.Enabled = False
                btnModify.Enabled = False
                btnSave.Enabled = False
                btnSave_F.Enabled = False
            Else
                If PanelEx10.Enabled = True Then
                    If Draft_Status = "DRAFT" Then
                        btnSave.Enabled = True
                    Else
                        btnSave.Enabled = False
                    End If
                    btnSave_F.Enabled = True
                    btnModify.Enabled = False
                    btnDelete.Enabled = True
                Else
                    btnSave.Enabled = False
                    btnSave_F.Enabled = False
                    If btnModify.Enabled = False Then
                    Else
                        btnModify.Enabled = True
                    End If
                    btnDelete.Enabled = False
                End If
            End If
        End If

        If btnVerify.Enabled Then
            btnSave.Enabled = False
            btnSave_F.Enabled = False
        End If
    End Sub

    Private Sub GeneralRequirements()
        Dim SQL As String = "SELECT "
        If cbxBorrower.Enabled = True Then
            SQL &= "    D.ID AS 'ID',"
            SQL &= "    IFNULL(S.ID,0) AS 'S_ID',"
            SQL &= "    IF(S.doc_id IS NOT NULL AND S.is_complete = 'YES','True','False') AS 'RECEIVED',"
            SQL &= "    D.doc_name AS 'DOCUMENT NAME',"
        Else
            SQL &= "    S.doc_ID AS 'ID',"
            SQL &= "    IFNULL(S.ID,0) AS 'S_ID',"
            SQL &= "    IF(S.doc_id IS NOT NULL AND S.is_complete = 'YES','True','False') AS 'RECEIVED',"
            SQL &= "    S.document AS 'DOCUMENT NAME',"
        End If
        SQL &= "    IFNULL(DATE_FORMAT(S.date_received,'%b.%d.%Y'),'') AS 'DATE RECEIVED',"
        SQL &= "    IFNULL(S.received_by,'') AS 'RECEIVED BY',"
        SQL &= "    IFNULL(S.remarks,'') AS 'REMARKS',"
        SQL &= "    IFNULL(S.Attach,0) AS 'ATTACH'"
        If cbxBorrower.Enabled = True Then
            SQL &= " FROM document_setup D"
            SQL &= " LEFT JOIN (SELECT ID, BorrowerID, CreditNumber, doc_id, date_received, received_by, is_complete, remarks, Attach FROM submit_documents WHERE `status` = 'ACTIVE') S"
            SQL &= String.Format("    ON D.ID = S.doc_ID AND S.CreditNumber = '{0}' AND S.BorrowerID = '{1}' WHERE D.is_genreq = 'YES' AND D.status = 'ACTIVE'", txtCreditNumber.Text, BorrowerID)
            If cbxMarried_B.Checked = True Then
                SQL &= " AND (is_married = 'YES' OR is_married = 'NO')"
            Else
                SQL &= " AND is_married = 'NO'"
            End If
        Else
            SQL &= " FROM submit_documents S"
            SQL &= String.Format("    WHERE S.is_genreq = 'YES' AND S.CreditNumber = '{0}' AND S.BorrowerID = '{1}' AND S.status = 'ACTIVE'", txtCreditNumber.Text, BorrowerID)
        End If
        GridControl1.DataSource = DataSource(SQL)
    End Sub

    Private Sub LoadRequirements()
        If cbxProduct.SelectedIndex <> -1 Then
            Dim SQL As String = "SELECT "
            If cbxBorrower.Enabled = True Then
                SQL &= "    D.ID AS 'ID',"
                SQL &= "    IFNULL(S.ID,0) AS 'S_ID',"
                SQL &= "    IF(S.doc_id IS NOT NULL AND S.is_complete = 'YES','True','False') AS 'RECEIVED',"
                SQL &= "    D.doc_name AS 'DOCUMENT NAME',"
            Else
                SQL &= "    S.doc_ID AS 'ID',"
                SQL &= "    IFNULL(S.ID,0) AS 'S_ID',"
                SQL &= "    IF(S.doc_id IS NOT NULL AND S.is_complete = 'YES','True','False') AS 'RECEIVED',"
                SQL &= "    S.document AS 'DOCUMENT NAME',"
            End If
            SQL &= "    IFNULL(DATE_FORMAT(S.date_received,'%b.%d.%Y'),'') AS 'DATE RECEIVED',"
            SQL &= "    IFNULL(S.received_by,'') AS 'RECEIVED BY',"
            SQL &= "    IFNULL(S.remarks,'') AS 'REMARKS',"
            SQL &= "    IFNULL(S.Attach,0) AS 'ATTACH'"
            If cbxBorrower.Enabled = True Then
                SQL &= " FROM document_setup D"
                SQL &= " LEFT JOIN (SELECT ID, BorrowerID, CreditNumber, doc_id, date_received, received_by, is_complete, remarks, Attach FROM submit_documents WHERE `status` = 'ACTIVE') S"
                SQL &= String.Format("    ON D.ID = S.doc_ID AND S.CreditNumber = '{0}' AND S.BorrowerID = '{1}' WHERE D.is_genreq = 'NO' AND D.status = 'ACTIVE'", txtCreditNumber.Text, BorrowerID)
                If cbxMarried_B.Checked = True Then
                    SQL &= " AND (is_married = 'YES' OR is_married = 'NO')"
                Else
                    SQL &= " AND is_married = 'NO'"
                End If
                SQL &= String.Format(" AND product_code = '{0}'", cbxProduct.Text)
            Else
                SQL &= " FROM submit_documents S"
                SQL &= String.Format("    WHERE S.is_genreq = 'NO' AND S.CreditNumber = '{0}' AND S.BorrowerID = '{1}' AND S.status = 'ACTIVE'", txtCreditNumber.Text, BorrowerID)
            End If
            GridControl2.DataSource = DataSource(SQL)

            If GridView2.RowCount > 7 Then
                GridView2.Columns("REMARKS").Width = 373
            Else
                GridView2.Columns("REMARKS").Width = 390
            End If
        End If
    End Sub

    Private Sub CbxProduct_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbxProduct.SelectedIndexChanged
        If FirstLoad Or cbxProduct.SelectedIndex = -1 Then
            Exit Sub
        End If
        Dim drv As DataRowView = DirectCast(cbxProduct.SelectedItem, DataRowView)
        If drv("mortgage_id") <> 1 And drv("mortgage_id") <> 2 And cbxCorporate.Checked Then
            MsgBox("Please select a collateralized product for corporate application.", MsgBoxStyle.Information, "Info")
            cbxProduct.Text = ""
            Exit Sub
        End If
        If drv("mortgage_id") = 1 Or drv("mortgage_id") = 2 Then
            btnFromROPA.Visible = True
        Else
            btnFromROPA.Visible = False
        End If

        PD_BankID = 0
        PD_AccountNumber = ""
        PD_CardNumber = ""
        PD_ATM = False
        For_CI = drv("CI")
        Product_Payment = drv("payment")
        Product_UDI = drv("UDI")
        Product_LastPrincipal = drv("last_principal")
        Product_AdvancePayment = drv("advance_payment")
        Product_ForCI = drv("CI")
        cbxTerms.Text = drv("payment")
        MortgageID = drv("mortgage_id")
        If cbxProduct.Text.Contains("CHECK REDISCOUNTING") And For_Schedule = False And cbxBorrower.Enabled Then
            Dim Due As New FrmCheckDate
            With Due
                If .ShowDialog() = DialogResult.OK Then
                    DueDate = .dtpCheck.Value
                    iTerms.Value = DateDiff(DateInterval.Day, dtpDate.Value, DueDate)
                    cbxTerms.Text = "Daily"
                    FormatN4(dInterest_C)
                    FormatN4(dRPPDRate_C)
                End If
            End With
        End If
        iTerms.Increment = 1
        cbxA.Visible = True
        cbxB.Visible = True
        cbxC.Visible = True
        cbxD.Visible = True
        If cbxProduct.Text.ToUpper.Contains("AGRICULTURE") Then
            cbxB.Checked = True
        ElseIf cbxProduct.Text.ToUpper.Contains("FARM EQUIPMENT") Or cbxProduct.Text.ToUpper.Contains("CREDIT LINE") Then
            If cbxProduct.Text.ToUpper.Contains("FARM EQUIPMENT") And Branch_Code = "KOR" Then
                cbxD.Checked = True
                iTerms.Increment = 6
            Else
                cbxA.Checked = True
            End If
        Else
            cbxB.Checked = True
        End If
        If Product_AdvancePayment = "Yes" Then
            cbxA.Visible = True
            cbxB.Visible = True
            cbxC.Visible = True
            cbxD.Visible = True
        Else
            cbxA.Visible = False
            cbxB.Visible = False
            cbxC.Visible = False
            cbxD.Visible = False
        End If
        If Product_UDI = "No" Then
            cbxA.Visible = False
            cbxB.Visible = False
            cbxC.Visible = False
            cbxD.Visible = False
        End If

        If Product_AdvancePayment = "Yes" Then
            LabelX104.Visible = True
            iAdvancePayment.Visible = True
            If cbxProduct.Text.ToUpper.Contains("FARM EQUIPMENT") Or cbxProduct.Text.ToUpper.Contains("CREDIT LINE") Then
            Else
                iAdvancePayment.Value = 1
            End If
            LabelX105.Visible = True

            LabelX128.Location = New Point(6, 376)
            rNote.Location = New Point(139, 376)
        Else
            LabelX104.Visible = False
            iAdvancePayment.Visible = False
            LabelX105.Visible = False

            LabelX128.Location = LabelX104.Location
            rNote.Location = iAdvancePayment.Location
        End If

        If Product_LastPrincipal = "Yes" Then 'CAR DEALERSHIP LOANS
            If cbxProduct.Text.ToUpper.Contains("DEALER") Then
                lblRPPDRate_C.Visible = False
                lblRPPDRate_Percent.Visible = False
                lblRPPDRate_T.Visible = False
                dRPPDRate_C.Visible = False
                dRPPDRate_T.Visible = False
                lblRPPD_C.Visible = False
                dRPPD_C.Visible = False
            ElseIf cbxProduct.Text.Contains("CHECK REDISCOUNTING") Then
                lblInterest.Text = "% / month"
                lblRPPDRate_T.Text = "% / month"
            End If
            LabelX92.Visible = False
            dGMA_C.Visible = False
            lblMR_C.Text = "Monthly Interest :"
            LabelX94.Text = "Last Month Amort :"
            If cbxProduct.Text.ToUpper.Contains("FARM EQUIPMENT") And Branch_Code = "KOR" Then
                LabelX94.Text = "Semi Annual Pay :"
            End If
        Else
            If CompanyMode = 0 Then
            Else
                lblRPPDRate_C.Visible = True
                lblRPPDRate_Percent.Visible = True
                lblRPPDRate_T.Visible = True
                If cbxProduct.Text.Contains("CHECK REDISCOUNTING") Then
                    lblInterest.Text = "% / month"
                    lblRPPDRate_T.Text = "% / month"
                Else
                    lblInterest.Text = "% / annum"
                    lblRPPDRate_T.Text = "% / annum"
                End If
                dRPPDRate_C.Visible = True
                dRPPDRate_T.Visible = True
                lblRPPD_C.Visible = True
                dRPPD_C.Visible = True

                If dMR_C.Visible = False Then
                    lblMR_C.Visible = True
                    dMR_C.Visible = True
                End If
            End If
            LabelX92.Visible = True
            dGMA_C.Visible = True
            lblMR_C.Text = "Monthly Rebate :"
            LabelX94.Text = "Net Monthly Amort :"
        End If

        If Product_Payment = "Monthly" Or Product_Payment = "Daily" Or Product_Payment = "Weekly" Then
            dGMA_C2.Visible = False
            dMR_C2.Visible = False
            dNMA_C2.Visible = False
            LabelX84.Visible = False
            lblMR_Slash.Visible = False
            LabelX101.Visible = False
            lblFDD.Visible = False
            dtpFDD.Visible = False
        Else 'Salary and Payday Loan - Kinsinas bayad.
            dGMA_C2.Visible = True
            dMR_C2.Visible = True
            dNMA_C2.Visible = True
            LabelX84.Visible = True
            lblMR_Slash.Visible = True
            LabelX101.Visible = True
            lblFDD.Visible = True
            dtpFDD.Visible = True
        End If

        If drv("with_collateral") = "YES" Then
            iCollateral.Enabled = True
            cbxCollateral.Enabled = True
            iCollateral.Value = 1
            cbxCollateral.SelectedValue = drv("collateral_id")
        Else
            iCollateral.Enabled = False
            cbxCollateral.Enabled = False
            iCollateral.Value = 0
            cbxCollateral.SelectedIndex = -1
        End If
        If drv("max_terms") > 0 Then
            'iTerms.MaxValue = drv("max_terms")
        Else
            iTerms.MaxValue = 1000
        End If
        If cbxProduct.Text.Contains("SHOWMONEY") And cbxAgent.Checked = True Then
            Product_Interest = drv("interest") + 0.5
            lblLoanRequirements.Text = cbxProduct.Text
            dInterest_T.Value = Product_Interest * 12
            Interest_UDI = (drv("interest") + 0.5) * Identify_Terms(iTerms.Value)
            dInterest_C.Value = Interest_UDI
        ElseIf cbxProduct.Text.Contains("CHECK REDISCOUNTING") Then
            Product_Interest = drv("interest")
            lblLoanRequirements.Text = cbxProduct.Text
            dInterest_T.Value = Product_Interest
            Interest_UDI = dInterest_T.Value
            dInterest_C.Value = Product_Interest * Identify_Terms(iTerms_C.Value)
        Else
            Product_Interest = drv("interest")
            lblLoanRequirements.Text = cbxProduct.Text
            dInterest_T.Value = Product_Interest * 12
            Interest_UDI = drv("interest") * Identify_Terms(iTerms.Value)
            dInterest_C.Value = Interest_UDI
        End If
        If cbxProduct.Text.Contains("SHOWMONEY") Then
            LabelX99.Text = "Total Payables :"
        Else
            LabelX99.Text = "Total Deductions :"
        End If

        GridControl4.DataSource = DataSource(String.Format("SELECT ID, Fee AS 'Processing Fee', Amount, add_tariff AS 'Tariff', `Amount` AS 'Amount 2' FROM processing_setup WHERE `status` = 'ACTIVE' AND product_id = '{0}' ORDER BY `Processing Fee`", ValidateComboBox(cbxProduct)))
        If GridView4.RowCount > 11 Then
            GridColumn26.Width = 400
        Else
            GridColumn26.Width = 400 + 17
        End If
        If cbxProduct.Text.Contains("PAYDAY") Then
            For x As Integer = 0 To GridView4.RowCount - 1
                If GridView4.GetRowCellValue(x, "Processing Fee").Contains("Advance Interest") Then
                    GridView4.SetRowCellValue(x, "Amount", dUDI_C.Value)
                End If
            Next
        End If

        LoadRequirements()
        ComputeNMA()

        If Product_Payment = "Bimonthly" Then 'For Payday and Salary Loan
            If cbxProduct.Text.Contains("PAYDAY") And Identify_Terms(iTerms_C.Value) > 2 Then
                dSC_C.Value = 100
            Else
                dSC_C.Value = 0
            End If
            dAppraisalFee_C.Value = 0
            dCIFee_C.Value = 0
            dDeductBalance_C.Value = 0
            dInsurance_C.Value = 0

            If cbxProduct.Text.Contains("FSFC") Then
                cbxEmployer_B.DataSource = DataSource("SELECT ID, CONCAT('FSFC ', Branch) AS 'Employer', Address AS 'EmployerAddress_B', ContactN1 AS 'EmployerTelephone_B' FROM branch WHERE `status` = 'ACTIVE' ORDER BY BranchID;")
                cbxEmployer_B.SelectedIndex = -1
            ElseIf cbxProduct.Text.Contains("SISTER") Then
                cbxEmployer_B.DataSource = DataSource("SELECT ID, CONCAT((SELECT company_code FROM company WHERE ID = SisterID), ' ', Branch) AS 'Employer', CONCAT(IF(`No` = '','',CONCAT(`No`, ', ')), IF(Street = '','',CONCAT(Street, ', ')), IF(Brgy = '','',CONCAT(Brgy, ', ')), IF(City = '','',CONCAT(City, ', ')), IF(Province = '','',Province), '') AS 'EmployerAddress_B', Telephone AS 'EmployerTelephone_B' FROM sister_company WHERE `status` = 'ACTIVE' ORDER BY `Employer`;")
                cbxEmployer_B.SelectedIndex = -1
            End If
        Else
            cbxEmployer_B.Tag = cbxEmployer_B.Text
            txtEmployerAddress_B.Tag = txtEmployerAddress_B.Text
            txtEmployerTelephone_B.Tag = txtEmployerTelephone_B.Text
            cbxPosition_B.Tag = cbxPosition_B.Text
            dtpHired_B.Tag = If(dtpHired_B.CustomFormat = "", "", dtpHired_B.Value)
            cbxCasual_B.Tag = cbxCasual_B.Checked
            cbxTemporary_B.Tag = cbxTemporary_B.Checked
            cbxPermanent_B.Tag = cbxPermanent_B.Checked
            txtSupervisor_B.Tag = txtSupervisor_B.Text
            dMonthly_B.Tag = dMonthly_B.Value

            cbxEmployer_B.DataSource = DT_Employer.Copy
            cbxEmployer_B.SelectedIndex = -1

            If cbxBorrower.SelectedIndex = -1 Or cbxBorrower.Text = "" Then
                cbxEmployer_B.Text = cbxEmployer_B.Tag
                txtEmployerAddress_B.Text = txtEmployerAddress_B.Tag
                txtEmployerTelephone_B.Text = txtEmployerTelephone_B.Tag
                cbxPosition_B.Text = cbxPosition_B.Tag
                dtpHired_B.Value = If(dtpHired_B.Tag.ToString = "", Format(Date.Now, "yyyy-MM-dd"), dtpHired_B.Tag)
                cbxCasual_B.Checked = cbxCasual_B.Tag
                cbxTemporary_B.Checked = cbxTemporary_B.Tag
                cbxPermanent_B.Checked = cbxPermanent_B.Tag
                txtSupervisor_B.Text = txtSupervisor_B.Tag
                dMonthly_B.Value = dMonthly_B.Tag
            Else
                If cbxCorporate.Checked = False Then
                    Dim drv_B As DataRowView = DirectCast(cbxBorrower.SelectedItem, DataRowView)
                    cbxEmployer_B.Text = drv_B("Employer_B")
                    txtEmployerAddress_B.Text = drv_B("EmployerAddress_B")
                    txtEmployerTelephone_B.Text = drv_B("EmployerTelephone_B")
                    cbxPosition_B.Text = drv_B("Position_B")
                    If drv_B("EmploymentStat_B") = "Casual" Then
                        cbxCasual_B.Checked = True
                    ElseIf drv_B("EmploymentStat_B") = "Temporary" Then
                        cbxTemporary_B.Checked = True
                    ElseIf drv_B("EmploymentStat_B") = "Permanent" Then
                        cbxPermanent_B.Checked = True
                    End If
                    dtpHired_B.Text = drv_B("Hired_B")
                    txtSupervisor_B.Text = drv_B("Supervisor_B")
                    dMonthly_B.Value = drv_B("Monthly_B")
                End If
            End If
            dDeductBalance_C.Value = 0
            dInsurance_C.Value = 0
            dSC_C.Value = 0
            dAppraisalFee_C.Value = 0
            dCIFee_C.Value = 0
            If Product_AdvancePayment = "Yes" Then 'For Real Estate
                iAdvancePayment.Visible = True
                If Product_LastPrincipal = "Yes" Then
                    If cbxProduct.Text.ToUpper.Contains("FARM EQUIPMENT") Or cbxProduct.Text.ToUpper.Contains("CREDIT LINE") Then
                    Else
                        iAdvancePayment.Value = 0
                    End If
                    dAdvancePayment_C.Value = dMR_C.Value * iAdvancePayment.Value
                Else
                    dAdvancePayment_C.Value = dNMA_C.Value * iAdvancePayment.Value
                End If
            Else
                iAdvancePayment.Visible = False
                dAdvancePayment_C.Value = 0
            End If
        End If

        dMiscellaneous_C.Tag = dMiscellaneous_C.Value
        dSC_C.Tag = dSC_C.Value
        dAppraisalFee_C.Tag = dAppraisalFee_C.Value
        dAdvancePayment_C.Tag = dAdvancePayment_C.Value
        dCIFee_C.Tag = dCIFee_C.Value
        dInsurance_C.Tag = dInsurance_C.Value
    End Sub

    Private Sub IAttach_Click(sender As Object, e As EventArgs) Handles iAttach.Click
        Try
            If GridView1.GetFocusedRowCellValue("ID").ToString = "" Or GridView1.RowCount = 0 Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
            MsgBox("Please save or draft the application first before attaching a scan copy of the document. Thank you.", MsgBoxStyle.Information, "Info")
            Exit Sub
        End If
        Dim Requirement As New FrmRequirements
        With Requirement
            .vSave = vSave
            .vUpdate = vUpdate
            .vDelete = vDelete
            .vPrint = vPrint
            .txtDocument.Text = GridView1.Columns.View.GetFocusedRow("DOCUMENT NAME")
            .txtRemarks.Text = GridView1.Columns.View.GetFocusedRow("REMARKS")
            .CreditNumber = txtCreditNumber.Text
            .BorrowerID = BorrowerID
            .DocID = GridView1.Columns.View.GetFocusedRow("ID")
            .ID = GridView1.Columns.View.GetFocusedRow("S_ID")
            If GridView1.GetFocusedRow("ATTACH") > 0 Then
                .btnSave.Enabled = True
            End If
            If GridView1.GetFocusedRow("RECEIVED") = True Then
                .cbxComplete.Checked = True
            Else
                .cbxComplete.Checked = False
            End If
            .TotalImage = GridView1.Columns.View.GetFocusedRow("ATTACH")
            If .ShowDialog = DialogResult.OK Then
                If .cbxComplete.Checked = True Then
                    GridView1.SetFocusedRowCellValue("RECEIVED", True)
                Else
                    GridView1.SetFocusedRowCellValue("RECEIVED", False)
                End If
                GridView1.SetFocusedRowCellValue("DATE RECEIVED", Format(.dtpReceived.Value, "MMM.dd.yyyy"))
                GridView1.SetFocusedRowCellValue("RECEIVED BY", Empl_Name)
                GridView1.SetFocusedRowCellValue("REMARKS", .txtRemarks.Text)
                GridView1.SetFocusedRowCellValue("ATTACH", .TotalImage)
            End If
            .Dispose()
        End With
    End Sub

    Private Sub IView_Click(sender As Object, e As EventArgs) Handles iView.Click
        Dim Attach As New FrmAttachFileV2
        With Attach
            .FolderName = "Requirements-" & GridView1.Columns.View.GetFocusedRow("ID")
            .Type = GridView1.Columns.View.GetFocusedRow("ID")
            .TotalImage = GridView1.Columns.View.GetFocusedRow("ATTACH")
            .CreditNumber = txtCreditNumber.Text
            .ID = txtCreditNumber.Text
            .btnBrowse.Enabled = False
            Dim Result = .ShowDialog
            .Dispose()
        End With
    End Sub

    Private Sub IView_2_Click(sender As Object, e As EventArgs) Handles iView_2.Click
        Dim Attach As New FrmAttachFileV2
        With Attach
            .FolderName = "Requirements-" & GridView2.Columns.View.GetFocusedRow("ID")
            .Type = GridView2.Columns.View.GetFocusedRow("ID")
            .TotalImage = GridView2.Columns.View.GetFocusedRow("ATTACH")
            .CreditNumber = txtCreditNumber.Text
            .ID = txtCreditNumber.Text
            .btnBrowse.Enabled = False
            Dim Result = .ShowDialog
            .Dispose()
        End With
    End Sub

    Private Sub IAddReq_Click(sender As Object, e As EventArgs) Handles iAddReq.Click
        Dim AddR As New FrmAddRequirement
        If AddR.ShowDialog = DialogResult.OK Then
            For x As Integer = 0 To GridView1.RowCount - 1
                If AddR.cbxDocument.Text = GridView1.GetRowCellValue(x, "DOCUMENT NAME") Then
                    MsgBox(String.Format("Document {0} already exist in the requirements, please check your data.", AddR.cbxDocument.Text), MsgBoxStyle.Information, "Info")
                    Exit Sub
                End If
            Next
            If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
                Dim DT As DataTable = GridControl1.DataSource
                DT.Rows.Add(AddR.cbxDocument.SelectedValue, 0, "False", AddR.cbxDocument.Text, "", "", "", 0)
                GridControl1.DataSource = DT
            Else
                Dim SQL As String = "INSERT INTO submit_documents SET "
                SQL &= String.Format("BorrowerID = '{0}', ", BorrowerID)
                SQL &= String.Format("CreditNumber = '{0}', ", txtCreditNumber.Text)
                SQL &= String.Format("doc_id = '{0}', ", AddR.cbxDocument.SelectedValue)
                SQL &= String.Format("document = '{0}', ", AddR.cbxDocument.Text)
                SQL &= String.Format("date_received = '{0}', ", "")
                SQL &= String.Format("received_code = '{0}', ", "")
                SQL &= String.Format("received_by = '{0}', ", "")
                SQL &= String.Format("is_complete = '{0}', ", "NO")
                SQL &= String.Format("remarks = '{0}', ", "")
                SQL &= String.Format("branch_id = '{0}', ", Branch_ID)
                SQL &= String.Format("Attach = '{0}', ", 0)
                SQL &= "is_genreq = 'YES', "
                SQL &= String.Format("Branch_Code = '{0}';", Branch_Code)
                DataObject(SQL)
                GeneralRequirements()
            End If
            MsgBox("Successfully Added!", MsgBoxStyle.Information, "Info")
        End If
    End Sub

    Private Sub IRemoveReq_Click(sender As Object, e As EventArgs) Handles iRemoveReq.Click
        Try
            If GridView1.GetFocusedRowCellValue("ID").ToString = "" Or GridView1.RowCount = 0 Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        If GridView1.GetFocusedRowCellValue("S_ID") = 0 Then
            Dim DT As DataTable = GridControl1.DataSource
            Dim Rows As New ArrayList()
            Dim selectedRowHandles As Integer() = GridView1.GetSelectedRows()
            If selectedRowHandles.Length > 1 Then
                Dim I As Integer
                For I = 0 To selectedRowHandles.Length - 1
                    Dim selectedRowHandle As Integer = selectedRowHandles(I)
                    If (selectedRowHandle >= 0) Then
                        DT.Rows.RemoveAt(selectedRowHandle - I)
                    End If
                Next
            Else
                DT.Rows.RemoveAt(GridView1.FocusedRowHandle)
            End If
            GridControl1.DataSource = DT
            MsgBox("Successfully Removed", MsgBoxStyle.Information, "Info")
        Else
            If MsgBoxYes("Are you sure you want to remove this requirement?") = MsgBoxResult.Yes Then
                If GridView1.GetFocusedRow("RECEIVED") = True Then
                    If MsgBoxYes("Requirement is already received completely, would you really want to remove this requirement?") = MsgBoxResult.Yes Then
                    Else
                        Exit Sub
                    End If
                End If
                Dim Reason As String 'Reason for change
                If FrmReason.ShowDialog = DialogResult.OK Then
                    Reason = FrmReason.txtReason.Text
                Else
                    Exit Sub
                End If

                Dim DT As DataTable = GridControl1.DataSource
                Dim Rows As New ArrayList()
                Dim selectedRowHandles As Integer() = GridView1.GetSelectedRows()
                If selectedRowHandles.Length > 1 Then
                    Dim I As Integer
                    For I = 0 To selectedRowHandles.Length - 1
                        Dim selectedRowHandle As Integer = selectedRowHandles(I)
                        If (selectedRowHandle >= 0) Then
                            DataObject(String.Format("UPDATE submit_documents SET `status` = 'DELETED' WHERE ID = '{0}'", DT(selectedRowHandle)("S_ID")))
                        End If
                    Next
                Else
                    DataObject(String.Format("UPDATE submit_documents SET `status` = 'DELETED' WHERE ID = '{0}'", GridView1.GetFocusedRowCellValue("S_ID")))
                End If
                Logs("Requirement", "Remove", Reason, String.Format("Remove Requirement for Credit Number {0}", txtCreditNumber.Text), "", "", txtCreditNumber.Text)
                GeneralRequirements()
                MsgBox("Successfully Removed", MsgBoxStyle.Information, "Info")
            End If
        End If
    End Sub

    Private Sub IAttach_2_Click(sender As Object, e As EventArgs) Handles iAttach_2.Click
        Try
            If GridView2.GetFocusedRowCellValue("ID").ToString = "" Or GridView1.RowCount = 0 Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
            MsgBox("Please save or draft the application first before attaching a scan copy of the document. Thank you.", MsgBoxStyle.Information, "Info")
            Exit Sub
        End If
        Dim Requirement As New FrmRequirements
        With Requirement
            .vSave = vSave
            .vUpdate = vUpdate
            .vDelete = vDelete
            .vPrint = vPrint
            .txtDocument.Text = GridView2.Columns.View.GetFocusedRow("DOCUMENT NAME")
            .txtRemarks.Text = GridView2.Columns.View.GetFocusedRow("REMARKS")
            .CreditNumber = txtCreditNumber.Text
            .BorrowerID = BorrowerID
            .DocID = GridView2.Columns.View.GetFocusedRow("ID")
            .ID = GridView2.Columns.View.GetFocusedRow("S_ID")
            If GridView2.GetFocusedRow("ATTACH") > 0 Then
                .btnSave.Enabled = True
            End If
            If GridView2.GetFocusedRow("RECEIVED") = True Then
                .cbxComplete.Checked = True
            Else
                .cbxComplete.Checked = False
            End If
            .TotalImage = GridView2.Columns.View.GetFocusedRow("ATTACH")
            If .ShowDialog = DialogResult.OK Then
                If .cbxComplete.Checked = True Then
                    GridView2.SetFocusedRowCellValue("RECEIVED", True)
                Else
                    GridView2.SetFocusedRowCellValue("RECEIVED", False)
                End If
                GridView2.SetFocusedRowCellValue("DATE RECEIVED", Format(.dtpReceived.Value, "MMM.dd.yyyy"))
                GridView2.SetFocusedRowCellValue("RECEIVED BY", Empl_Name)
                GridView2.SetFocusedRowCellValue("REMARKS", .txtRemarks.Text)
                GridView2.SetFocusedRowCellValue("ATTACH", .TotalImage)
            End If
            .Dispose()
        End With
    End Sub

    Private Sub IAddReq_2_Click(sender As Object, e As EventArgs) Handles iAddReq_2.Click
        Dim AddR As New FrmAddRequirement
        If AddR.ShowDialog = DialogResult.OK Then
            For x As Integer = 0 To GridView2.RowCount - 1
                If AddR.cbxDocument.Text = GridView2.GetRowCellValue(x, "DOCUMENT NAME") Then
                    MsgBox(String.Format("Document {0} already exist in the requirements, please check your data.", AddR.cbxDocument.Text), MsgBoxStyle.Information, "Info")
                    Exit Sub
                End If
            Next
            If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
                Dim DT As DataTable = GridControl2.DataSource
                DT.Rows.Add(AddR.cbxDocument.SelectedValue, 0, "False", AddR.cbxDocument.Text, "", "", "", 0)
                GridControl2.DataSource = DT
            Else
                Dim SQL As String = "INSERT INTO submit_documents SET "
                SQL &= String.Format("BorrowerID = '{0}', ", BorrowerID)
                SQL &= String.Format("CreditNumber = '{0}', ", txtCreditNumber.Text)
                SQL &= String.Format("doc_id = '{0}', ", AddR.cbxDocument.SelectedValue)
                SQL &= String.Format("document = '{0}', ", AddR.cbxDocument.Text)
                SQL &= String.Format("date_received = '{0}', ", "")
                SQL &= String.Format("received_code = '{0}', ", "")
                SQL &= String.Format("received_by = '{0}', ", "")
                SQL &= String.Format("is_complete = '{0}', ", "NO")
                SQL &= String.Format("remarks = '{0}', ", "")
                SQL &= String.Format("branch_id = '{0}', ", Branch_ID)
                SQL &= String.Format("Attach = '{0}', ", 0)
                SQL &= "is_genreq = 'NO', "
                SQL &= String.Format("Branch_Code = '{0}';", Branch_Code)
                DataObject(SQL)
                LoadRequirements()
            End If
            MsgBox("Successfully Added!", MsgBoxStyle.Information, "Info")
        End If
    End Sub

    Private Sub IRemoveReq_2_Click(sender As Object, e As EventArgs) Handles iRemoveReq_2.Click
        Try
            If GridView2.GetFocusedRowCellValue("ID").ToString = "" Or GridView2.RowCount = 0 Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        If GridView2.GetFocusedRowCellValue("S_ID") = 0 Then
            Dim DT As DataTable = GridControl2.DataSource
            Dim Rows As New ArrayList()
            Dim selectedRowHandles As Integer() = GridView2.GetSelectedRows()
            If selectedRowHandles.Length > 1 Then
                Dim I As Integer
                For I = 0 To selectedRowHandles.Length - 1
                    Dim selectedRowHandle As Integer = selectedRowHandles(I)
                    If (selectedRowHandle >= 0) Then
                        DT.Rows.RemoveAt(selectedRowHandle - I)
                    End If
                Next
            Else
                DT.Rows.RemoveAt(GridView2.FocusedRowHandle)
            End If
            GridControl2.DataSource = DT
            MsgBox("Successfully Removed", MsgBoxStyle.Information, "Info")
        Else
            If MsgBoxYes("Are you sure you want to remove this requirement?") = MsgBoxResult.Yes Then
                If GridView2.GetFocusedRow("RECEIVED") = True Then
                    If MsgBoxYes("Requirement is already received completely, would you really want to remove this requirement?") = MsgBoxResult.Yes Then
                    Else
                        Exit Sub
                    End If
                End If
                Dim Reason As String 'Reason for change
                If FrmReason.ShowDialog = DialogResult.OK Then
                    Reason = FrmReason.txtReason.Text
                Else
                    Exit Sub
                End If

                Dim DT As DataTable = GridControl2.DataSource
                Dim Rows As New ArrayList()
                Dim selectedRowHandles As Integer() = GridView2.GetSelectedRows()
                If selectedRowHandles.Length > 1 Then
                    Dim I As Integer
                    For I = 0 To selectedRowHandles.Length - 1
                        Dim selectedRowHandle As Integer = selectedRowHandles(I)
                        If (selectedRowHandle >= 0) Then
                            DataObject(String.Format("UPDATE submit_documents SET `status` = 'DELETED' WHERE ID = '{0}'", DT(selectedRowHandle)("S_ID")))
                        End If
                    Next
                Else
                    DataObject(String.Format("UPDATE submit_documents SET `status` = 'DELETED' WHERE ID = '{0}'", GridView2.GetFocusedRowCellValue("S_ID")))
                End If
                Logs("Requirement", "Remove", Reason, String.Format("Remove Requirement for Credit Number {0}", txtCreditNumber.Text), "", "", txtCreditNumber.Text)
                LoadRequirements()
                MsgBox("Successfully Removed", MsgBoxStyle.Information, "Info")
            End If
        End If
    End Sub

    Private Sub BtnRefresh_Click(sender As Object, e As EventArgs) Handles btnRefresh.Click
        If SuperTabControl1.SelectedTabIndex = 6 Then
            LoadData()
        Else
            If MsgBoxYes(mRefresh) = MsgBoxResult.Yes Then
                Clear()
            End If
        End If
    End Sub

    Private Sub DtpDate_Enter(sender As Object, e As EventArgs) Handles dtpDate.Enter
        dtpDate.CustomFormat = "MMM dd, yyyy"
    End Sub

    Public Sub Clear()
        AssignedCI = 0
        cbxProduct.Enabled = True
        For_CI = ""
        cbxBill.Checked = False
        cbxAdvancePayment.Checked = False
        cbxOtherBranch.Enabled = True
        TotalImageC1 = 0
        TotalImageC2 = 0
        TotalImageC3 = 0
        TotalImageC4 = 0
        AssetNumber_1 = ""
        AssetNumber_2 = ""
        AssetNumber_3 = ""
        AssetNumber_4 = ""
        AssetNumber_5 = ""
        AssetSelling_1 = 0
        AssetSelling_2 = 0
        AssetSelling_3 = 0
        AssetSelling_4 = 0
        AssetSelling_5 = 0
        Description_1 = ""
        Description_2 = ""
        Description_3 = ""
        Description_4 = ""
        Description_5 = ""
        TotalImageS = 0
        TotalImage = 0
        TotalImage_Approval = 0
        TotalImage_Crecomm = 0
        PD_BankID = 0
        PD_AccountNumber = ""
        PD_CardNumber = ""
        PD_ATM = False
        rNote.Text = ""
        cbxSpouse_B.Checked = False
        cbxCoMaker1_B.Checked = False
        cbxCoMaker2_B.Checked = False
        cbxCoMaker3_B.Checked = False
        cbxCoMaker4_B.Checked = False
        dtpDate.CustomFormat = ""
        dtpFDD.CustomFormat = ""
        dtpFDD.Value = Date.Now
        PanelEx21.Enabled = True

        GridColumn16.OptionsColumn.AllowEdit = False
        GridColumn17.OptionsColumn.AllowEdit = False
        GridColumn18.OptionsColumn.AllowEdit = False
        GridColumn19.OptionsColumn.AllowEdit = False
        GridColumn20.OptionsColumn.AllowEdit = False
        GridColumn21.OptionsColumn.AllowEdit = False
        GridColumn22.OptionsColumn.AllowEdit = False
        GridColumn23.OptionsColumn.AllowEdit = False
        GridColumn24.OptionsColumn.AllowEdit = False
        btnManual.Enabled = True
        cbxAuto.Visible = False
        cbxAuto.Checked = False
        btnVerify.Enabled = False
        btnSave.Enabled = True
        btnSave_F.Enabled = True

        RestructureDeductionUDI = 0
        RestructureDeductionRPPD = 0
        dSC_Rate.Value = 0
        cbxOptions.SelectedIndex = 0
        cbxAccountNo.Text = ""
        cbxAccountNo.DataSource = Nothing
        rRemarks.Text = ""
        Borrower_Branch = Branch_Code
        BorrowerID = ""
        SpouseID = ""
        CoMakerID = ""
        Draft_Status = "DRAFT"
        Status = "PENDING"
        PanelEx4.Enabled = True
        PanelEx5.Enabled = True
        PanelEx6.Enabled = True
        PanelEx7.Enabled = True
        PanelEx15.Enabled = True
        PanelEx10.Enabled = True
        PanelEx9.Enabled = True
        PanelEx11.Enabled = True
        PanelEx12.Enabled = True
        PanelEx13.Enabled = True
        PanelEx14.Enabled = True
        GridControl3.Enabled = True
        PanelEx18.Enabled = True
        btnSave.Enabled = True
        btnSave_F.Enabled = True
        btnModify.Enabled = False
        btnDelete.Enabled = False
        btnAttachB.Enabled = False
        btnID.Enabled = False
        btnApprove.Enabled = False
        GridControl1.Enabled = True
        GridControl2.Enabled = True
        GeneralRequirements()
        LoadRequirements()
        btnEmailCrecom.Visible = False
        btnCreComm.Visible = False
        dDeductBalance_C.Value = 0
        DT_Account = DataSource("SELECT  0 AS ID, '' AS 'Account Number', '' AS 'Credit Number', '' AS 'Loans Receivable', '' AS 'UDI Discount', '' AS 'UDI Percent', '' AS 'Availed RPPD', '' AS 'Accounts Receivable', '' AS 'Penalty', '' AS 'As Of', '' AS 'Net Payable', 0 AS 'Amount' LIMIT 0")
        cbxBusinessCenter.Text = ""
        CbxPrefix_B.Enabled = False
        TxtFirstN_B.Enabled = False
        TxtMiddleN_B.Enabled = False
        TxtLastN_B.Enabled = False
        cbxSuffix_B.Enabled = False
        btnSN.Enabled = False
        btnCM_1.Enabled = False
        btnCM_2.Enabled = False
        btnCM_3.Enabled = False
        btnCM_4.Enabled = False

        cbxPosition_B.DisplayMember = "Position"
        cbxPosition_B.DataSource = DT_Position.Copy
        cbxPosition_B.SelectedIndex = -1

        btnSave.Text = "D&raft"
        btnSave_F.Text = "&Save"

        dAmountApplied.Value = 0
        iTerms.Value = 0
        txtPurpose.Text = ""
        dtpDate.Value = Date.Now

        dtpDate.Value = Date.Now
        cbxBorrower.Enabled = True
        dtpDate.Enabled = True
        cbxBorrower.SelectedIndex = -1
        GetCreditApplication()
        cbxOptions.Text = ""
        CbxPrefix_B.Text = ""
        TxtFirstN_B.Text = ""
        TxtMiddleN_B.Text = ""
        TxtLastN_B.Text = ""
        cbxSuffix_B.Text = ""
        CbxPrefix_S.Text = ""
        TxtFirstN_S.Text = ""
        TxtMiddleN_S.Text = ""
        TxtLastN_S.Text = ""
        cbxSuffix_S.Text = ""
        CbxPrefix_C1.Text = ""
        TxtFirstN_C1.Text = ""
        TxtMiddleN_C1.Text = ""
        TxtLastN_C1.Text = ""
        cbxSuffix_C1.Text = ""
        CbxPrefix_C2.Text = ""
        TxtFirstN_C2.Text = ""
        TxtMiddleN_C2.Text = ""
        TxtLastN_C2.Text = ""
        cbxSuffix_C2.Text = ""
        CbxPrefix_C3.Text = ""
        TxtFirstN_C3.Text = ""
        TxtMiddleN_C3.Text = ""
        TxtLastN_C3.Text = ""
        cbxSuffix_C3.Text = ""
        CbxPrefix_C4.Text = ""
        TxtFirstN_C4.Text = ""
        TxtMiddleN_C4.Text = ""
        TxtLastN_C4.Text = ""
        cbxSuffix_C4.Text = ""

        txtNoC_B.Text = ""
        txtStreetC_B.Text = ""
        txtBarangayC_B.Text = ""
        cbxAddressC_B.Text = ""
        txtNoP_B.Text = ""
        txtStreetP_B.Text = ""
        txtBarangayP_B.Text = ""
        cbxAddressP_B.Text = ""
        DtpBirth_B.CustomFormat = ""
        cbxPlaceBirth_B.Text = ""
        cbxMale_B.Checked = False
        cbxFemale_B.Checked = False
        cbxSingle_B.Checked = False
        cbxMarried_B.Checked = False
        cbxSeparated_B.Checked = False
        cbxWidowed_B.Checked = False
        cbxCitizenship_B.Text = ""
        txtTIN_B.Text = ""
        txtTelephone_B.Text = ""
        txtSSS_B.Text = ""
        txtMobile_B.Text = ""
        txtMobile_B2.Text = ""
        txtEmail_B.Text = ""
        cbxOwned_B.Checked = False
        cbxFree_B.Checked = False
        cbxRented_B.Checked = False

        btnCM_1.BackColor = Color.Transparent
        btnCM_2.BackColor = Color.Transparent

        '1st Row
        TxtFirstN_1.Text = ""
        TxtMiddleN_1.Text = ""
        TxtLastN_1.Text = ""
        cbxSuffix_1.Text = ""
        txtGrade_1.Text = ""
        txtSchool_1.Text = ""
        txtSchoolAddress_1.Text = ""
        '2nd Row
        TxtFirstN_2.Text = ""
        TxtMiddleN_2.Text = ""
        TxtLastN_2.Text = ""
        cbxSuffix_2.Text = ""
        txtGrade_2.Text = ""
        txtSchool_2.Text = ""
        txtSchoolAddress_2.Text = ""
        '3rd Row
        TxtFirstN_3.Text = ""
        TxtMiddleN_3.Text = ""
        TxtLastN_3.Text = ""
        cbxSuffix_3.Text = ""
        txtGrade_3.Text = ""
        txtSchool_3.Text = ""
        txtSchoolAddress_3.Text = ""
        '4th Row
        TxtFirstN_4.Text = ""
        TxtMiddleN_4.Text = ""
        TxtLastN_4.Text = ""
        cbxSuffix_4.Text = ""
        txtGrade_4.Text = ""
        txtSchool_4.Text = ""
        txtSchoolAddress_4.Text = ""

        Try
            pb_B.Image = DefaultImage.Image.Clone
        Catch ex As Exception
            pb_B.Image = Nothing
        End Try
        txtPath_B.Text = ""
        txtPath_S.Text = ""
        cbxEmployer_B.Text = ""
        txtBusinessName_B.Text = ""
        txtCreditor_1.Text = ""
        txtBank_1.Text = ""
        txtLocation_1.Text = ""
        txtVehicle_1.Text = ""
        txtHomeAppliances_1.Text = ""
        txtReference_1.Text = ""
        txtCertificateNo.Text = ""
        cbxAgent.Checked = False
        cbxMarketing.Checked = False
        cbxWalkIn.Checked = False
        cbxDealer.Checked = False

        '*** COMAKER
        ChangePic1 = False
        CoMaker1.Image = DefaultImage.Image.Clone
        vPrefix_C1 = ""
        vFirstN_C1 = ""
        vMiddleN_C1 = ""
        vLastN_C1 = ""
        vSuffix_C1 = ""
        vNoC_C1 = ""
        vStreetC_C1 = ""
        vBarangayC_C1 = ""
        vAddressC_C1 = ""
        vAddressC_C1_ID = 0
        vNoP_C1 = ""
        vStreetP_C1 = ""
        vBarangayP_C1 = ""
        vAddressP_C1 = ""
        vAddressP_C1_ID = 0
        vBirth_C1 = ""
        vPlaceBirth_C1 = ""
        vPlaceBirth_C1_ID = 0
        vMale_C1 = False
        vFemale_C1 = False
        vSingle_C1 = False
        vMarried_C1 = False
        vSeparated_C1 = False
        vWidowed_C1 = False
        vCitizenship_C1 = ""
        vTelephone_C1 = ""
        vMobile_C1 = ""
        vTIN_C1 = ""
        vSSS_C1 = ""
        vEmail_C1 = ""
        vOwned_C1 = False
        vFree_C1 = False
        vRented_C1 = False
        vRent_C1 = 0
        vRelationship_C1 = ""
        vRelationship_C1_ID = 0
        vEmployer_C1 = ""
        vEmpAddress_C1 = ""
        vEmpTelephone_C1 = ""
        vPosition_C1 = ""
        vCasual_C1 = False
        vTemporary_C1 = False
        vPermanent_C1 = False
        vHired_C1 = ""
        vYearHired_C1 = False
        vSupervisor_C1 = ""
        vSalary_C1 = 0
        vBusinessName_C1 = ""
        vBusinessAddress_C1 = ""
        vBusinessTelephone_C1 = ""
        vNatureBusiness_C1 = ""
        vYrsOperation_C1 = 0
        vBusinessIncome_C1 = 0
        vNoEmployees_C1 = 0
        vCapital_C1 = 0
        vArea_C1 = ""
        vExpiry_C1 = ""
        vOutlet_C1 = 0
        vOtherIncome_C1 = ""
        vOtherIncomeD_C1 = 0

        ChangePic2 = False
        CoMaker2.Image = DefaultImage.Image.Clone
        vPrefix_C2 = ""
        vFirstN_C2 = ""
        vMiddleN_C2 = ""
        vLastN_C2 = ""
        vSuffix_C2 = ""
        vNoC_C2 = ""
        vStreetC_C2 = ""
        vBarangayC_C2 = ""
        vAddressC_C2 = ""
        vAddressC_C2_ID = 0
        vNoP_C2 = ""
        vStreetP_C2 = ""
        vBarangayP_C2 = ""
        vAddressP_C2 = ""
        vAddressP_C2_ID = 0
        vBirth_C2 = ""
        vPlaceBirth_C2 = ""
        vPlaceBirth_C2_ID = 0
        vMale_C2 = False
        vFemale_C2 = False
        vSingle_C2 = False
        vMarried_C2 = False
        vSeparated_C2 = False
        vWidowed_C2 = False
        vCitizenship_C2 = ""
        vTelephone_C2 = ""
        vMobile_C2 = ""
        vTIN_C2 = ""
        vSSS_C2 = ""
        vEmail_C2 = ""
        vOwned_C2 = False
        vFree_C2 = False
        vRented_C2 = False
        vRent_C2 = 0
        vRelationship_C2 = ""
        vRelationship_C2_ID = 0
        vEmployer_C2 = ""
        vEmpAddress_C2 = ""
        vEmpTelephone_C2 = ""
        vPosition_C2 = ""
        vCasual_C2 = False
        vTemporary_C2 = False
        vPermanent_C2 = False
        vHired_C2 = ""
        vYearHired_C2 = False
        vSupervisor_C2 = ""
        vSalary_C2 = 0
        vBusinessName_C2 = ""
        vBusinessAddress_C2 = ""
        vBusinessTelephone_C2 = ""
        vNatureBusiness_C2 = ""
        vYrsOperation_C2 = 0
        vBusinessIncome_C2 = 0
        vNoEmployees_C2 = 0
        vCapital_C2 = 0
        vArea_C2 = ""
        vExpiry_C2 = ""
        vOutlet_C2 = 0
        vOtherIncome_C2 = ""
        vOtherIncomeD_C2 = 0

        ChangePic3 = False
        CoMaker3.Image = DefaultImage.Image.Clone
        vPrefix_C3 = ""
        vFirstN_C3 = ""
        vMiddleN_C3 = ""
        vLastN_C3 = ""
        vSuffix_C3 = ""
        vNoC_C3 = ""
        vStreetC_C3 = ""
        vBarangayC_C3 = ""
        vAddressC_C3 = ""
        vAddressC_C3_ID = 0
        vNoP_C3 = ""
        vStreetP_C3 = ""
        vBarangayP_C3 = ""
        vAddressP_C3 = ""
        vAddressP_C3_ID = 0
        vBirth_C3 = ""
        vPlaceBirth_C3 = ""
        vPlaceBirth_C3_ID = 0
        vMale_C3 = False
        vFemale_C3 = False
        vSingle_C3 = False
        vMarried_C3 = False
        vSeparated_C3 = False
        vWidowed_C3 = False
        vCitizenship_C3 = ""
        vTelephone_C3 = ""
        vMobile_C3 = ""
        vTIN_C3 = ""
        vSSS_C3 = ""
        vEmail_C3 = ""
        vOwned_C3 = False
        vFree_C3 = False
        vRented_C3 = False
        vRent_C3 = 0
        vRelationship_C3 = ""
        vRelationship_C3_ID = 0
        vEmployer_C3 = ""
        vEmpAddress_C3 = ""
        vEmpTelephone_C3 = ""
        vPosition_C3 = ""
        vCasual_C3 = False
        vTemporary_C3 = False
        vPermanent_C3 = False
        vHired_C3 = ""
        vYearHired_C3 = False
        vSupervisor_C3 = ""
        vSalary_C3 = 0
        vBusinessName_C3 = ""
        vBusinessAddress_C3 = ""
        vBusinessTelephone_C3 = ""
        vNatureBusiness_C3 = ""
        vYrsOperation_C3 = 0
        vBusinessIncome_C3 = 0
        vNoEmployees_C3 = 0
        vCapital_C3 = 0
        vArea_C3 = ""
        vExpiry_C3 = ""
        vOutlet_C3 = 0
        vOtherIncome_C3 = ""
        vOtherIncomeD_C3 = 0

        ChangePic4 = False
        CoMaker4.Image = DefaultImage.Image.Clone
        vPrefix_C4 = ""
        vFirstN_C4 = ""
        vMiddleN_C4 = ""
        vLastN_C4 = ""
        vSuffix_C4 = ""
        vNoC_C4 = ""
        vStreetC_C4 = ""
        vBarangayC_C4 = ""
        vAddressC_C4 = ""
        vAddressC_C4_ID = 0
        vNoP_C4 = ""
        vStreetP_C4 = ""
        vBarangayP_C4 = ""
        vAddressP_C4 = ""
        vAddressP_C4_ID = 0
        vBirth_C4 = ""
        vPlaceBirth_C4 = ""
        vPlaceBirth_C4_ID = 0
        vMale_C4 = False
        vFemale_C4 = False
        vSingle_C4 = False
        vMarried_C4 = False
        vSeparated_C4 = False
        vWidowed_C4 = False
        vCitizenship_C4 = ""
        vTelephone_C4 = ""
        vMobile_C4 = ""
        vTIN_C4 = ""
        vSSS_C4 = ""
        vEmail_C4 = ""
        vOwned_C4 = False
        vFree_C4 = False
        vRented_C4 = False
        vRent_C4 = 0
        vRelationship_C4 = ""
        vRelationship_C4_ID = 0
        vEmployer_C4 = ""
        vEmpAddress_C4 = ""
        vEmpTelephone_C4 = ""
        vPosition_C4 = ""
        vCasual_C4 = False
        vTemporary_C4 = False
        vPermanent_C4 = False
        vHired_C4 = ""
        vYearHired_C4 = False
        vSupervisor_C4 = ""
        vSalary_C4 = 0
        vBusinessName_C4 = ""
        vBusinessAddress_C4 = ""
        vBusinessTelephone_C4 = ""
        vNatureBusiness_C4 = ""
        vYrsOperation_C4 = 0
        vBusinessIncome_C4 = 0
        vNoEmployees_C4 = 0
        vCapital_C4 = 0
        vArea_C4 = ""
        vExpiry_C4 = ""
        vOutlet_C4 = 0
        vOtherIncome_C4 = ""
        vOtherIncomeD_C4 = 0
        CoMakerShift = False
        '*** COMAKER

        '*** SPOUSE
        ChangePicS = False
        pb_Spouse.Image = DefaultImage.Image.Clone
        vPrefix_S = ""
        vFirstN_S = ""
        vMiddleN_S = ""
        vLastN_S = ""
        vSuffix_S = ""
        vNoC_S = ""
        vStreetC_S = ""
        vBarangayC_S = ""
        vAddressC_S = ""
        vAddressC_S_ID = 0
        vNoP_S = ""
        vStreetP_S = ""
        vBarangayP_S = ""
        vAddressP_S = ""
        vAddressP_S_ID = 0
        vBirth_S = ""
        vPlaceBirth_S = ""
        vPlaceBirth_S_ID = 0
        vMale_S = False
        vFemale_S = False
        vCitizenship_S = ""
        vTelephone_S = ""
        vMobile_S = ""
        vTIN_S = ""
        vSSS_S = ""
        vEmail_S = ""
        vOwned_S = False
        vFree_S = False
        vRented_S = False
        vRent_S = 0
        vEmployer_S = ""
        vEmpAddress_S = ""
        vEmpTelephone_S = ""
        vPosition_S = ""
        vCasual_S = False
        vTemporary_S = False
        vPermanent_S = False
        vHired_S = ""
        vYearHired_S = False
        vSupervisor_S = ""
        vSalary_S = 0
        vBusinessName_S = ""
        vBusinessAddress_S = ""
        vBusinessTelephone_S = ""
        vNatureBusiness_S = ""
        vYrsOperation_S = 0
        vBusinessIncome_S = 0
        vNoEmployees_S = 0
        vCapital_S = 0
        vArea_S = ""
        vExpiry_S = ""
        vOutlet_S = 0
        vOtherIncome_S = ""
        vOtherIncomeD_S = 0
        '*** SPOUSE

        '*** I D E N T I F I C A T I O N ***
        GSIS = ""
        PhilHealth = ""
        Senior = ""
        UMID = ""
        SEC = ""
        DTI = ""
        CDA = ""
        Cooperative = ""
        Drivers = ""
        dDrivers = ""
        VIN = ""
        dVIN = ""
        Passport = ""
        dPassport = ""
        PRC = ""
        dPRC = ""
        NBI = ""
        dNBI = ""
        Police = ""
        dPolice = ""
        Postal = ""
        dPostal = ""
        Barangay = ""
        dBarangay = ""
        OWWA = ""
        dOWWA = ""
        OFW = ""
        dOFW = ""
        Seaman = ""
        dSeaman = ""
        PNP = ""
        dPNP = ""
        AFP = ""
        dAFP = ""
        HDMF = ""
        dHDMF = ""
        PWD = ""
        dPWD = ""
        DSWD = ""
        dDSWD = ""
        ACR = ""
        dACR = ""
        DTI_Business = ""
        dDTI_Business = ""
        IBP = ""
        dIBP = ""
        FireArms = ""
        dFireArms = ""
        Government = ""
        dGovernment = ""
        Diplomat = ""
        dDiplomat = ""
        National = ""
        dNational = ""
        Work = ""
        dWork = ""
        GOCC = ""
        dGOCC = ""
        PLRA = ""
        dPLRA = ""
        Major = ""
        dMajor = ""
        Media = ""
        dMedia = ""
        Student = ""
        dStudent = ""
        SIRV = ""
        dSIRV = ""

        TIN_S = ""
        SSS_S = ""
        GSIS_S = ""
        PhilHealth_S = ""
        Senior_S = ""
        UMID_S = ""
        SEC_S = ""
        DTI_S = ""
        CDA_S = ""
        Cooperative_S = ""
        Drivers_S = ""
        dDrivers_S = ""
        VIN_S = ""
        dVIN_S = ""
        Passport_S = ""
        dPassport_S = ""
        PRC_S = ""
        dPRC_S = ""
        NBI_S = ""
        dNBI_S = ""
        Police_S = ""
        dPolice_S = ""
        Postal_S = ""
        dPostal_S = ""
        Barangay_S = ""
        dBarangay_S = ""
        OWWA_S = ""
        dOWWA_S = ""
        OFW_S = ""
        dOFW_S = ""
        Seaman_S = ""
        dSeaman_S = ""
        PNP_S = ""
        dPNP_S = ""
        AFP_S = ""
        dAFP_S = ""
        HDMF_S = ""
        dHDMF_S = ""
        PWD_S = ""
        dPWD_S = ""
        DSWD_S = ""
        dDSWD_S = ""
        ACR_S = ""
        dACR_S = ""
        DTI_Business_S = ""
        dDTI_Business_S = ""
        IBP_S = ""
        dIBP_S = ""
        FireArms_S = ""
        dFireArms_S = ""
        Government_S = ""
        dGovernment_S = ""
        Diplomat_S = ""
        dDiplomat_S = ""
        National_S = ""
        dNational_S = ""
        Work_S = ""
        dWork_S = ""
        GOCC_S = ""
        dGOCC_S = ""
        PLRA_S = ""
        dPLRA_S = ""
        Major_S = ""
        dMajor_S = ""
        Media_S = ""
        dMedia_S = ""
        Student_S = ""
        dStudent_S = ""
        SIRV_S = ""
        dSIRV_S = ""
        '*** I D E N T I F I C A T I O N ***

        For x As Integer = 0 To cbxNatureBusiness_B2.Properties.Items.Count - 1
            cbxNatureBusiness_B2.Properties.Items.Item(x).CheckState = CheckState.Unchecked
        Next
        For x As Integer = 0 To Industry_C1.Properties.Items.Count - 1
            Industry_C1.Properties.Items.Item(x).CheckState = CheckState.Unchecked
        Next
        For x As Integer = 0 To Industry_C2.Properties.Items.Count - 1
            Industry_C2.Properties.Items.Item(x).CheckState = CheckState.Unchecked
        Next
        For x As Integer = 0 To Industry_C3.Properties.Items.Count - 1
            Industry_C3.Properties.Items.Item(x).CheckState = CheckState.Unchecked
        Next
        For x As Integer = 0 To Industry_C4.Properties.Items.Count - 1
            Industry_C4.Properties.Items.Item(x).CheckState = CheckState.Unchecked
        Next
        For x As Integer = 0 To Industry_S.Properties.Items.Count - 1
            Industry_S.Properties.Items.Item(x).CheckState = CheckState.Unchecked
        Next

        FirstLoad = True

        LoadBorrower()
        GeneralRequirements()
        LoadRequirements()

        FirstLoad = False
    End Sub

    Private Sub BtnCancel_Click(sender As Object, e As EventArgs) Handles btnCancel.Click
        If MsgBoxYes(mClose) = MsgBoxResult.Yes Then
            Close()
        End If
    End Sub

#Region "Leaves"
    '*** PERSONAL INFORMATION 
    Private Sub CbxPrefix_B_Leave(sender As Object, e As EventArgs) Handles CbxPrefix_B.Leave
        CbxPrefix_B.Text = ReplaceText(CbxPrefix_B.Text.Trim)
    End Sub

    Private Sub TxtFirstN_B_Leave(sender As Object, e As EventArgs) Handles TxtFirstN_B.Leave
        TxtFirstN_B.Text = ReplaceText(TxtFirstN_B.Text.Trim)
    End Sub

    Private Sub TxtMiddleN_B_Leave(sender As Object, e As EventArgs) Handles TxtMiddleN_B.Leave
        TxtMiddleN_B.Text = ReplaceText(TxtMiddleN_B.Text.Trim)
    End Sub

    Private Sub TxtLastN_B_Leave(sender As Object, e As EventArgs) Handles TxtLastN_B.Leave
        TxtLastN_B.Text = ReplaceText(TxtLastN_B.Text.Trim)
    End Sub

    Private Sub CbxSuffix_B_Leave(sender As Object, e As EventArgs) Handles cbxSuffix_B.Leave
        cbxSuffix_B.Text = ReplaceText(cbxSuffix_B.Text.Trim)
    End Sub

    Private Sub TxtNoC_B_Leave(sender As Object, e As EventArgs) Handles txtNoC_B.Leave
        txtNoC_B.Text = ReplaceText(txtNoC_B.Text.Trim)
    End Sub

    Private Sub TxtStreetC_B_Leave(sender As Object, e As EventArgs) Handles txtStreetC_B.Leave
        txtStreetC_B.Text = ReplaceText(txtStreetC_B.Text.Trim)
    End Sub

    Private Sub TxtBarangayC_B_Leave(sender As Object, e As EventArgs) Handles txtBarangayC_B.Leave
        txtBarangayC_B.Text = ReplaceText(txtBarangayC_B.Text.Trim)
    End Sub

    Private Sub CbxAddressC_B_Leave(sender As Object, e As EventArgs) Handles cbxAddressC_B.Leave
        cbxAddressC_B.Text = ReplaceText(cbxAddressC_B.Text.Trim)
    End Sub

    Private Sub TxtNoP_B_Leave(sender As Object, e As EventArgs) Handles txtNoP_B.Leave
        txtNoP_B.Text = ReplaceText(txtNoP_B.Text.Trim)
    End Sub

    Private Sub TxtStreetP_B_Leave(sender As Object, e As EventArgs) Handles txtStreetP_B.Leave
        txtStreetP_B.Text = ReplaceText(txtStreetP_B.Text.Trim)
    End Sub

    Private Sub TxtBarangayP_B_Leave(sender As Object, e As EventArgs) Handles txtBarangayP_B.Leave
        txtBarangayP_B.Text = ReplaceText(txtBarangayP_B.Text.Trim)
    End Sub

    Private Sub CbxAddressP_B_Leave(sender As Object, e As EventArgs) Handles cbxAddressP_B.Leave
        cbxAddressP_B.Text = ReplaceText(cbxAddressP_B.Text.Trim)
    End Sub

    Private Sub CbxCitizenship_B_Leave(sender As Object, e As EventArgs) Handles cbxCitizenship_B.Leave
        cbxCitizenship_B.Text = ReplaceText(cbxCitizenship_B.Text.Trim)
    End Sub

    Private Sub TxtTIN_B_Leave(sender As Object, e As EventArgs) Handles txtTIN_B.Leave
        txtTIN_B.Text = ReplaceText(txtTIN_B.Text.Trim)
        If (txtTIN_B.Text.Length <> 9 And txtTIN_B.Text.Length > 0) Or (Not IsNumeric(txtTIN_B.Text) And txtTIN_B.Text.Length > 0) Then
            MsgBox("Incorrect TIN format, should be 9 digit with no special characters and space.", MsgBoxStyle.Information, "Info")
            txtTIN_B.Focus()
        End If
    End Sub

    Private Sub TxtTelephone_B_Leave(sender As Object, e As EventArgs) Handles txtTelephone_B.Leave
        txtTelephone_B.Text = ReplaceText(txtTelephone_B.Text.Trim)
    End Sub

    Private Sub TxtSSS_B_Leave(sender As Object, e As EventArgs) Handles txtSSS_B.Leave
        txtSSS_B.Text = ReplaceText(txtSSS_B.Text.Trim)
        If (txtSSS_B.Text.Length <> 10 And txtSSS_B.Text.Length > 0) Or (Not IsNumeric(txtSSS_B.Text) And txtSSS_B.Text.Length > 0) Then
            MsgBox("Incorrect SSS format, should be 10 digit with no special characters and space.", MsgBoxStyle.Information, "Info")
            txtSSS_B.Focus()
        End If
    End Sub

    Private Sub TxtMobile_B_Leave(sender As Object, e As EventArgs) Handles txtMobile_B.Leave
        txtMobile_B.Text = ReplaceText(txtMobile_B.Text.Trim)
    End Sub

    Private Sub TxtMobile_B2_Leave(sender As Object, e As EventArgs) Handles txtMobile_B2.Leave
        txtMobile_B2.Text = ReplaceText(txtMobile_B2.Text.Trim)
    End Sub

    Private Sub TxtEmail_B_Leave(sender As Object, e As EventArgs) Handles txtEmail_B.Leave
        txtEmail_B.Text = ReplaceText(txtEmail_B.Text.Trim)
    End Sub

    Private Sub CbxPrefix_1_Leave(sender As Object, e As EventArgs) Handles CbxPrefix_1.Leave
        CbxPrefix_1.Text = ReplaceText(CbxPrefix_1.Text.Trim)
    End Sub

    Private Sub TxtFirstN_1_Leave(sender As Object, e As EventArgs) Handles TxtFirstN_1.Leave
        TxtFirstN_1.Text = ReplaceText(TxtFirstN_1.Text.Trim)
    End Sub

    Private Sub TxtMiddleN_1_Leave(sender As Object, e As EventArgs) Handles TxtMiddleN_1.Leave
        TxtMiddleN_1.Text = ReplaceText(TxtMiddleN_1.Text.Trim)
    End Sub

    Private Sub TxtLastN_1_Leave(sender As Object, e As EventArgs) Handles TxtLastN_1.Leave
        TxtLastN_1.Text = ReplaceText(TxtLastN_1.Text.Trim)
    End Sub

    Private Sub CbxSuffix_1_Leave(sender As Object, e As EventArgs) Handles cbxSuffix_1.Leave
        cbxSuffix_1.Text = ReplaceText(cbxSuffix_1.Text.Trim)
    End Sub

    Private Sub TxtGrade_1_Leave(sender As Object, e As EventArgs) Handles txtGrade_1.Leave
        txtGrade_1.Text = ReplaceText(txtGrade_1.Text.Trim)
    End Sub

    Private Sub TxtSchool_1_Leave(sender As Object, e As EventArgs) Handles txtSchool_1.Leave
        txtSchool_1.Text = ReplaceText(txtSchool_1.Text.Trim)
    End Sub

    Private Sub TxtSchoolAddress_1_Leave(sender As Object, e As EventArgs) Handles txtSchoolAddress_1.Leave
        txtSchoolAddress_1.Text = ReplaceText(txtSchoolAddress_1.Text.Trim)
    End Sub

    Private Sub CbxPrefix_2_Leave(sender As Object, e As EventArgs) Handles CbxPrefix_2.Leave
        CbxPrefix_2.Text = ReplaceText(CbxPrefix_2.Text.Trim)
    End Sub

    Private Sub TxtFirstN_2_Leave(sender As Object, e As EventArgs) Handles TxtFirstN_2.Leave
        TxtFirstN_2.Text = ReplaceText(TxtFirstN_2.Text.Trim)
    End Sub

    Private Sub TxtMiddleN_2_Leave(sender As Object, e As EventArgs) Handles TxtMiddleN_2.Leave
        TxtMiddleN_2.Text = ReplaceText(TxtMiddleN_2.Text.Trim)
    End Sub

    Private Sub TxtLastN_2_Leave(sender As Object, e As EventArgs) Handles TxtLastN_2.Leave
        TxtLastN_2.Text = ReplaceText(TxtLastN_2.Text.Trim)
    End Sub

    Private Sub CbxSuffix_2_Leave(sender As Object, e As EventArgs) Handles cbxSuffix_2.Leave
        cbxSuffix_2.Text = ReplaceText(cbxSuffix_2.Text.Trim)
    End Sub

    Private Sub TxtGrade_2_Leave(sender As Object, e As EventArgs) Handles txtGrade_2.Leave
        txtGrade_2.Text = ReplaceText(txtGrade_2.Text.Trim)
    End Sub

    Private Sub TxtSchool_2_Leave(sender As Object, e As EventArgs) Handles txtSchool_2.Leave
        txtSchool_2.Text = ReplaceText(txtSchool_2.Text.Trim)
    End Sub

    Private Sub TxtSchoolAddress_2_Leave(sender As Object, e As EventArgs) Handles txtSchoolAddress_2.Leave
        txtSchoolAddress_2.Text = ReplaceText(txtSchoolAddress_2.Text.Trim)
    End Sub

    Private Sub CbxPrefix_3_Leave(sender As Object, e As EventArgs) Handles CbxPrefix_3.Leave
        CbxPrefix_3.Text = ReplaceText(CbxPrefix_3.Text.Trim)
    End Sub

    Private Sub TxtFirstN_3_Leave(sender As Object, e As EventArgs) Handles TxtFirstN_3.Leave
        TxtFirstN_3.Text = ReplaceText(TxtFirstN_3.Text.Trim)
    End Sub

    Private Sub TxtMiddleN_3_Leave(sender As Object, e As EventArgs) Handles TxtMiddleN_3.Leave
        TxtMiddleN_3.Text = ReplaceText(TxtMiddleN_3.Text.Trim)
    End Sub

    Private Sub TxtLastN_3_Leave(sender As Object, e As EventArgs) Handles TxtLastN_3.Leave
        TxtLastN_3.Text = ReplaceText(TxtLastN_3.Text.Trim)
    End Sub

    Private Sub CbxSuffix_3_Leave(sender As Object, e As EventArgs) Handles cbxSuffix_3.Leave
        cbxSuffix_3.Text = ReplaceText(cbxSuffix_3.Text.Trim)
    End Sub

    Private Sub TxtGrade_3_Leave(sender As Object, e As EventArgs) Handles txtGrade_3.Leave
        txtGrade_3.Text = ReplaceText(txtGrade_3.Text.Trim)
    End Sub

    Private Sub TxtSchool_3_Leave(sender As Object, e As EventArgs) Handles txtSchool_3.Leave
        txtSchool_3.Text = ReplaceText(txtSchool_3.Text.Trim)
    End Sub

    Private Sub TxtSchoolAddress_3_Leave(sender As Object, e As EventArgs) Handles txtSchoolAddress_3.Leave
        txtSchoolAddress_3.Text = ReplaceText(txtSchoolAddress_3.Text.Trim)
    End Sub

    Private Sub CbxPrefix_4_Leave(sender As Object, e As EventArgs) Handles CbxPrefix_4.Leave
        CbxPrefix_4.Text = ReplaceText(CbxPrefix_4.Text.Trim)
    End Sub

    Private Sub TxtFirstN_4_Leave(sender As Object, e As EventArgs) Handles TxtFirstN_4.Leave
        TxtFirstN_4.Text = ReplaceText(TxtFirstN_4.Text.Trim)
    End Sub

    Private Sub TxtMiddleN_4_Leave(sender As Object, e As EventArgs) Handles TxtMiddleN_4.Leave
        TxtMiddleN_4.Text = ReplaceText(TxtMiddleN_4.Text.Trim)
    End Sub

    Private Sub TxtLastN_4_Leave(sender As Object, e As EventArgs) Handles TxtLastN_4.Leave
        TxtLastN_4.Text = ReplaceText(TxtLastN_4.Text.Trim)
    End Sub

    Private Sub CbxSuffix_4_Leave(sender As Object, e As EventArgs) Handles cbxSuffix_4.Leave
        cbxSuffix_4.Text = ReplaceText(cbxSuffix_4.Text.Trim)
    End Sub

    Private Sub TxtGrade_4_Leave(sender As Object, e As EventArgs) Handles txtGrade_4.Leave
        txtGrade_4.Text = ReplaceText(txtGrade_4.Text.Trim)
    End Sub

    Private Sub TxtSchool_4_Leave(sender As Object, e As EventArgs) Handles txtSchool_4.Leave
        txtSchool_4.Text = ReplaceText(txtSchool_4.Text.Trim)
    End Sub

    Private Sub TxtSchoolAddress_4_Leave(sender As Object, e As EventArgs) Handles txtSchoolAddress_4.Leave
        txtSchoolAddress_4.Text = ReplaceText(txtSchoolAddress_4.Text.Trim)
    End Sub

    '***FINANCIAL
    Private Sub CbxEmployer_B_Leave(sender As Object, e As EventArgs) Handles cbxEmployer_B.Leave
        cbxEmployer_B.Text = ReplaceText(cbxEmployer_B.Text.Trim)
    End Sub

    Private Sub TxtEmployerAddress_B_Leave(sender As Object, e As EventArgs) Handles txtEmployerAddress_B.Leave
        txtEmployerAddress_B.Text = ReplaceText(txtEmployerAddress_B.Text.Trim)
    End Sub

    Private Sub TxtEmployerTelephone_B_Leave(sender As Object, e As EventArgs) Handles txtEmployerTelephone_B.Leave
        txtEmployerTelephone_B.Text = ReplaceText(txtEmployerTelephone_B.Text.Trim)
    End Sub

    Private Sub CbxPosition_B_Leave(sender As Object, e As EventArgs) Handles cbxPosition_B.Leave
        cbxPosition_B.Text = ReplaceText(cbxPosition_B.Text.Trim)
    End Sub

    Private Sub TxtSupervisor_B_Leave(sender As Object, e As EventArgs) Handles txtSupervisor_B.Leave
        txtSupervisor_B.Text = ReplaceText(txtSupervisor_B.Text.Trim)
    End Sub

    Private Sub TxtBusinessName_B_Leave(sender As Object, e As EventArgs) Handles txtBusinessName_B.Leave
        txtBusinessName_B.Text = ReplaceText(txtBusinessName_B.Text.Trim)
    End Sub

    Private Sub TxtBusinessAddress_B_Leave(sender As Object, e As EventArgs) Handles txtBusinessAddress_B.Leave
        txtBusinessAddress_B.Text = ReplaceText(txtBusinessAddress_B.Text.Trim)
    End Sub

    Private Sub TxtBusinessTelephone_B_Leave(sender As Object, e As EventArgs) Handles txtBusinessTelephone_B.Leave
        txtBusinessTelephone_B.Text = ReplaceText(txtBusinessTelephone_B.Text.Trim)
    End Sub

    Private Sub CbxNatureBusiness_B_Leave(sender As Object, e As EventArgs) Handles cbxNatureBusiness_B.Leave
        cbxNatureBusiness_B.Text = ReplaceText(cbxNatureBusiness_B.Text.Trim)
    End Sub

    Private Sub TxtArea_B_Leave(sender As Object, e As EventArgs) Handles txtArea_B.Leave
        txtArea_B.Text = ReplaceText(txtArea_B.Text.Trim)
    End Sub

    Private Sub TxtOtherIncome_B_Leave(sender As Object, e As EventArgs) Handles txtOtherIncome_B.Leave
        txtOtherIncome_B.Text = ReplaceText(txtOtherIncome_B.Text.Trim)
    End Sub

    Private Sub TxtCreditor_1_Leave(sender As Object, e As EventArgs) Handles txtCreditor_1.Leave
        txtCreditor_1.Text = ReplaceText(txtCreditor_1.Text.Trim)
    End Sub

    Private Sub TxtNatureLoan_1_Leave(sender As Object, e As EventArgs) Handles txtNatureLoan_1.Leave
        txtNatureLoan_1.Text = ReplaceText(txtNatureLoan_1.Text.Trim)
    End Sub

    Private Sub DCreditRemarks_1_Leave(sender As Object, e As EventArgs) Handles txtCreditRemarks_1.Leave
        txtCreditRemarks_1.Text = ReplaceText(txtCreditRemarks_1.Text.Trim)
    End Sub

    Private Sub TxtCreditor_2_Leave(sender As Object, e As EventArgs) Handles txtCreditor_2.Leave
        txtCreditor_2.Text = ReplaceText(txtCreditor_2.Text.Trim)
    End Sub

    Private Sub TxtNatureLoan_2_Leave(sender As Object, e As EventArgs) Handles txtNatureLoan_2.Leave
        txtNatureLoan_2.Text = ReplaceText(txtNatureLoan_2.Text.Trim)
    End Sub

    Private Sub DCreditRemarks_2_Leave(sender As Object, e As EventArgs) Handles txtCreditRemarks_2.Leave
        txtCreditRemarks_2.Text = ReplaceText(txtCreditRemarks_2.Text.Trim)
    End Sub

    Private Sub TxtCreditor_3_Leave(sender As Object, e As EventArgs) Handles txtCreditor_3.Leave
        txtCreditor_3.Text = ReplaceText(txtCreditor_3.Text.Trim)
    End Sub

    Private Sub TxtNatureLoan_3_Leave(sender As Object, e As EventArgs) Handles txtNatureLoan_3.Leave
        txtNatureLoan_3.Text = ReplaceText(txtNatureLoan_3.Text.Trim)
    End Sub

    Private Sub DCreditRemarks_3_Leave(sender As Object, e As EventArgs) Handles txtCreditRemarks_3.Leave
        txtCreditRemarks_3.Text = ReplaceText(txtCreditRemarks_3.Text.Trim)
    End Sub

    Private Sub TxtBank_1_Leave(sender As Object, e As EventArgs) Handles txtBank_1.Leave
        txtBank_1.Text = ReplaceText(txtBank_1.Text.Trim)
    End Sub

    Private Sub TxtBranch_1_Leave(sender As Object, e As EventArgs) Handles txtBranch_1.Leave
        txtBranch_1.Text = ReplaceText(txtBranch_1.Text.Trim)
    End Sub

    Private Sub TxtSA_1_Leave(sender As Object, e As EventArgs) Handles txtSA_1.Leave
        txtSA_1.Text = ReplaceText(txtSA_1.Text.Trim)
    End Sub

    Private Sub TxtBankRemarks_1_Leave(sender As Object, e As EventArgs) Handles txtBankRemarks_1.Leave
        txtBankRemarks_1.Text = ReplaceText(txtBankRemarks_1.Text.Trim)
    End Sub

    Private Sub TxtBank_2_Leave(sender As Object, e As EventArgs) Handles txtBank_2.Leave
        txtBank_2.Text = ReplaceText(txtBank_2.Text.Trim)
    End Sub

    Private Sub TxtBranch_2_Leave(sender As Object, e As EventArgs) Handles txtBranch_2.Leave
        txtBranch_2.Text = ReplaceText(txtBranch_2.Text.Trim)
    End Sub

    Private Sub TxtSA_2_Leave(sender As Object, e As EventArgs) Handles txtSA_2.Leave
        txtSA_2.Text = ReplaceText(txtSA_2.Text.Trim)
    End Sub

    Private Sub TxtBankRemarks_2_Leave(sender As Object, e As EventArgs) Handles txtBankRemarks_2.Leave
        txtBankRemarks_2.Text = ReplaceText(txtBankRemarks_2.Text.Trim)
    End Sub

    Private Sub TxtBank_3_Leave(sender As Object, e As EventArgs) Handles txtBank_3.Leave
        txtBank_3.Text = ReplaceText(txtBank_3.Text.Trim)
    End Sub

    Private Sub TxtBranch_3_Leave(sender As Object, e As EventArgs) Handles txtBranch_3.Leave
        txtBranch_3.Text = ReplaceText(txtBranch_3.Text.Trim)
    End Sub

    Private Sub TxtSA_3_Leave(sender As Object, e As EventArgs) Handles txtSA_3.Leave
        txtSA_3.Text = ReplaceText(txtSA_3.Text.Trim)
    End Sub

    Private Sub TxtBankRemarks_3_Leave(sender As Object, e As EventArgs) Handles txtBankRemarks_3.Leave
        txtBankRemarks_3.Text = ReplaceText(txtBankRemarks_3.Text.Trim)
    End Sub

    Private Sub TxtLocation_1_Leave(sender As Object, e As EventArgs) Handles txtLocation_1.Leave
        txtLocation_1.Text = ReplaceText(txtLocation_1.Text.Trim)
    End Sub

    Private Sub TxtTCT_1_Leave(sender As Object, e As EventArgs) Handles txtTCT_1.Leave
        txtTCT_1.Text = ReplaceText(txtTCT_1.Text.Trim)
    End Sub

    Private Sub TxtAcquired_1_Leave(sender As Object, e As EventArgs) Handles txtAcquired_1.Leave
        txtAcquired_1.Text = ReplaceText(txtAcquired_1.Text.Trim)
    End Sub

    Private Sub TxtPropertiesRemarks_1_Leave(sender As Object, e As EventArgs) Handles txtPropertiesRemarks_1.Leave
        txtPropertiesRemarks_1.Text = ReplaceText(txtPropertiesRemarks_1.Text.Trim)
    End Sub

    Private Sub TxtLocation_2_Leave(sender As Object, e As EventArgs) Handles txtLocation_2.Leave
        txtLocation_2.Text = ReplaceText(txtLocation_2.Text.Trim)
    End Sub

    Private Sub TxtTCT_2_Leave(sender As Object, e As EventArgs) Handles txtTCT_2.Leave
        txtTCT_2.Text = ReplaceText(txtTCT_2.Text.Trim)
    End Sub

    Private Sub TxtAcquired_2_Leave(sender As Object, e As EventArgs) Handles txtAcquired_2.Leave
        txtAcquired_2.Text = ReplaceText(txtAcquired_2.Text.Trim)
    End Sub

    Private Sub TxtPropertiesRemarks_2_Leave(sender As Object, e As EventArgs) Handles txtPropertiesRemarks_2.Leave
        txtPropertiesRemarks_2.Text = ReplaceText(txtPropertiesRemarks_2.Text.Trim)
    End Sub

    Private Sub TxtLocation_3_Leave(sender As Object, e As EventArgs) Handles txtLocation_3.Leave
        txtLocation_3.Text = ReplaceText(txtLocation_3.Text.Trim)
    End Sub

    Private Sub TxtTCT_3_Leave(sender As Object, e As EventArgs) Handles txtTCT_3.Leave
        txtTCT_3.Text = ReplaceText(txtTCT_3.Text.Trim)
    End Sub

    Private Sub TxtAcquired_3_Leave(sender As Object, e As EventArgs) Handles txtAcquired_3.Leave
        txtAcquired_3.Text = ReplaceText(txtAcquired_3.Text.Trim)
    End Sub

    Private Sub TxtPropertiesRemarks_3_Leave(sender As Object, e As EventArgs) Handles txtPropertiesRemarks_3.Leave
        txtPropertiesRemarks_3.Text = ReplaceText(txtPropertiesRemarks_3.Text.Trim)
    End Sub

    Private Sub TxtVehicle_1_Leave(sender As Object, e As EventArgs) Handles txtVehicle_1.Leave
        txtVehicle_1.Text = ReplaceText(txtVehicle_1.Text.Trim)
    End Sub

    Private Sub TxtWhomAcquired_1_Leave(sender As Object, e As EventArgs) Handles txtWhomAcquired_1.Leave
        txtWhomAcquired_1.Text = ReplaceText(txtWhomAcquired_1.Text.Trim)
    End Sub

    Private Sub TxtVehicleRemarks_1_Leave(sender As Object, e As EventArgs) Handles txtVehicleRemarks_1.Leave
        txtVehicleRemarks_1.Text = ReplaceText(txtVehicleRemarks_1.Text.Trim)
    End Sub

    Private Sub TxtVehicle_2_Leave(sender As Object, e As EventArgs) Handles txtVehicle_2.Leave
        txtVehicle_2.Text = ReplaceText(txtVehicle_2.Text.Trim)
    End Sub

    Private Sub TxtWhomAcquired_2_Leave(sender As Object, e As EventArgs) Handles txtWhomAcquired_2.Leave
        txtWhomAcquired_2.Text = ReplaceText(txtWhomAcquired_2.Text.Trim)
    End Sub

    Private Sub TxtVehicleRemarks_2_Leave(sender As Object, e As EventArgs) Handles txtVehicleRemarks_2.Leave
        txtVehicleRemarks_2.Text = ReplaceText(txtVehicleRemarks_2.Text.Trim)
    End Sub

    Private Sub TxtVehicle_3_Leave(sender As Object, e As EventArgs) Handles txtVehicle_3.Leave
        txtVehicle_3.Text = ReplaceText(txtVehicle_3.Text.Trim)
    End Sub

    Private Sub TxtWhomAcquired_3_Leave(sender As Object, e As EventArgs) Handles txtWhomAcquired_3.Leave
        txtWhomAcquired_3.Text = ReplaceText(txtWhomAcquired_3.Text.Trim)
    End Sub

    Private Sub TxtVehicleRemarks_3_Leave(sender As Object, e As EventArgs) Handles txtVehicleRemarks_3.Leave
        txtVehicleRemarks_3.Text = ReplaceText(txtVehicleRemarks_3.Text.Trim)
    End Sub

    Private Sub TxtHomeAppliances_1_Leave(sender As Object, e As EventArgs) Handles txtHomeAppliances_1.Leave
        txtHomeAppliances_1.Text = ReplaceText(txtHomeAppliances_1.Text.Trim)
    End Sub

    Private Sub TxtHomeAppliances_2_Leave(sender As Object, e As EventArgs) Handles txtHomeAppliances_2.Leave
        txtHomeAppliances_2.Text = ReplaceText(txtHomeAppliances_2.Text.Trim)
    End Sub

    Private Sub TxtReference_1_Leave(sender As Object, e As EventArgs) Handles txtReference_1.Leave
        txtReference_1.Text = ReplaceText(txtReference_1.Text.Trim)
    End Sub

    Private Sub TxtReferenceAddress_1_Leave(sender As Object, e As EventArgs) Handles txtReferenceAddress_1.Leave
        txtReferenceAddress_1.Text = ReplaceText(txtReferenceAddress_1.Text.Trim)
    End Sub

    Private Sub TxtReferenceContact_1_Leave(sender As Object, e As EventArgs) Handles txtReferenceContact_1.Leave
        txtReferenceContact_1.Text = ReplaceText(txtReferenceContact_1.Text.Trim)
    End Sub

    Private Sub TxtReference_2_Leave(sender As Object, e As EventArgs) Handles txtReference_2.Leave
        txtReference_2.Text = ReplaceText(txtReference_2.Text.Trim)
    End Sub

    Private Sub TxtReferenceAddress_2_Leave(sender As Object, e As EventArgs) Handles txtReferenceAddress_2.Leave
        txtReferenceAddress_2.Text = ReplaceText(txtReferenceAddress_2.Text.Trim)
    End Sub

    Private Sub TxtReferenceContact_2_Leave(sender As Object, e As EventArgs) Handles txtReferenceContact_2.Leave
        txtReferenceContact_2.Text = ReplaceText(txtReferenceContact_2.Text.Trim)
    End Sub

    Private Sub TxtReference_3_Leave(sender As Object, e As EventArgs) Handles txtReference_3.Leave
        txtReference_3.Text = ReplaceText(txtReference_3.Text.Trim)
    End Sub

    Private Sub TxtReferenceAddress_3_Leave(sender As Object, e As EventArgs) Handles txtReferenceAddress_3.Leave
        txtReferenceAddress_3.Text = ReplaceText(txtReferenceAddress_3.Text.Trim)
    End Sub

    Private Sub TxtReferenceContact_3_Leave(sender As Object, e As EventArgs) Handles txtReferenceContact_3.Leave
        txtReferenceContact_3.Text = ReplaceText(txtReferenceContact_3.Text.Trim)
    End Sub

    Private Sub TxtCertificateNo_Leave(sender As Object, e As EventArgs) Handles txtCertificateNo.Leave
        txtCertificateNo.Text = ReplaceText(txtCertificateNo.Text.Trim)
    End Sub

    Private Sub TxtPlaceIssue_Leave(sender As Object, e As EventArgs) Handles txtPlaceIssue.Leave
        txtPlaceIssue.Text = ReplaceText(txtPlaceIssue.Text.Trim)
    End Sub

    Private Sub CbxAgentName_Leave(sender As Object, e As EventArgs) Handles cbxAgentName.Leave
        cbxAgentName.Text = ReplaceText(cbxAgentName.Text.Trim)
    End Sub

    Private Sub CbxAgentNamev2_Leave(sender As Object, e As EventArgs) Handles cbxAgentNameV2.Leave
        cbxAgentNameV2.Text = ReplaceText(cbxAgentNameV2.Text.Trim)
    End Sub

    Private Sub TxtAgentContact_Leave(sender As Object, e As EventArgs) Handles txtAgentContact.Leave
        txtAgentContact.Text = ReplaceText(txtAgentContact.Text.Trim)
    End Sub

    Private Sub CbxMarketingName_Leave(sender As Object, e As EventArgs) Handles cbxMarketingName.Leave
        cbxMarketingName.Text = ReplaceText(cbxMarketingName.Text.Trim)
    End Sub

    Private Sub TxtMarketingContact_Leave(sender As Object, e As EventArgs) Handles txtMarketingContact.Leave
        txtMarketingContact.Text = ReplaceText(txtMarketingContact.Text.Trim)
    End Sub

    Private Sub CbxWalkInType_Leave(sender As Object, e As EventArgs) Handles cbxWalkInType.Leave
        cbxWalkInType.Text = ReplaceText(cbxWalkInType.Text.Trim)
    End Sub

    Private Sub TxtWalkInOthers_Leave(sender As Object, e As EventArgs) Handles txtWalkInOthers.Leave
        txtWalkInOthers.Text = ReplaceText(txtWalkInOthers.Text.Trim)
    End Sub

    Private Sub CbxDealerName_Leave(sender As Object, e As EventArgs) Handles cbxDealerName.Leave
        cbxDealerName.Text = ReplaceText(cbxDealerName.Text.Trim)
    End Sub

    Private Sub TxtDealersContact_Leave(sender As Object, e As EventArgs) Handles txtDealersContact.Leave
        txtDealersContact.Text = ReplaceText(txtDealersContact.Text.Trim)
    End Sub
#End Region

#Region "Keydown"
    Private Sub DAmountApplied_KeyDown(sender As Object, e As KeyEventArgs) Handles dAmountApplied.KeyDown
        If e.KeyCode = Keys.Enter Then
            iTerms.Focus()
        End If
    End Sub

    Private Sub DTerms_KeyDown(sender As Object, e As KeyEventArgs) Handles iTerms.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxTerms.Focus()
        End If
    End Sub

    Private Sub CbxTerms_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxTerms.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxProduct.Focus()
        End If
    End Sub

    Private Sub CbxProduct_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxProduct.KeyDown
        If e.KeyCode = Keys.Enter Then
            iCollateral.Focus()
        End If
    End Sub

    Private Sub ICollateral_KeyDown(sender As Object, e As KeyEventArgs) Handles iCollateral.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxCollateral.Focus()
        End If
    End Sub

    Private Sub CbxCollateral_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxCollateral.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtPurpose.Focus()
        End If
    End Sub

    Private Sub TxtPurpose_KeyDown(sender As Object, e As KeyEventArgs) Handles txtPurpose.KeyDown
        If e.KeyCode = Keys.Enter Then
            dtpDate.Focus()
        End If
    End Sub

    Private Sub DtpDate_KeyDown(sender As Object, e As KeyEventArgs) Handles dtpDate.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxBorrower.Focus()
        End If
    End Sub

    Private Sub CbxBorrower_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxBorrower.KeyDown
        If e.KeyCode = Keys.Enter Then
            CbxPrefix_B.Focus()
        End If
    End Sub

    Private Sub CbxPrefix_B_KeyDown(sender As Object, e As KeyEventArgs) Handles CbxPrefix_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtFirstN_B.Focus()
        End If
    End Sub

    Private Sub TxtFirstN_B_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtFirstN_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtMiddleN_B.Focus()
        End If
    End Sub

    Private Sub TxtMiddleN_B_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtMiddleN_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtLastN_B.Focus()
        End If
    End Sub

    Private Sub TxtLastN_B_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtLastN_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSuffix_B.Focus()
        End If
    End Sub

    Private Sub CbxSuffix_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSuffix_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtNoC_B.Focus()
        End If
    End Sub

    Private Sub TxtNoC_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtNoC_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtStreetC_B.Focus()
        End If
    End Sub

    Private Sub TxtStreetC_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtStreetC_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBarangayC_B.Focus()
        End If
    End Sub

    Private Sub TxtBarangayC_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBarangayC_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxAddressC_B.Focus()
        End If
    End Sub

    Private Sub CbxAddressC_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxAddressC_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtNoP_B.Focus()
        End If
    End Sub

    Private Sub TxtNoP_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtNoP_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtStreetP_B.Focus()
        End If
    End Sub

    Private Sub TxtStreetP_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtStreetP_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBarangayP_B.Focus()
        End If
    End Sub

    Private Sub TxtBarangayP_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBarangayP_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxAddressP_B.Focus()
        End If
    End Sub

    Private Sub CbxAddressP_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxAddressP_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            DtpBirth_B.Focus()
        End If
    End Sub

    Private Sub DtpBirth_B_KeyDown(sender As Object, e As KeyEventArgs) Handles DtpBirth_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxPlaceBirth_B.Focus()
        End If
    End Sub

    Private Sub CbxPlaceBirth_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxPlaceBirth_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxMale_B.Focus()
        End If
    End Sub

    Private Sub CbxMale_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxMale_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxFemale_B.Focus()
        End If
    End Sub

    Private Sub CbxFemale_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxFemale_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSingle_B.Focus()
        End If
    End Sub

    Private Sub CbxSingle_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSingle_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxMarried_B.Focus()
        End If
    End Sub

    Private Sub CbxMarried_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxMarried_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSeparated_B.Focus()
        End If
    End Sub

    Private Sub CbxSeparated_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSeparated_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxWidowed_B.Focus()
        End If
    End Sub

    Private Sub CbxWidowed_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxWidowed_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxCitizenship_B.Focus()
        End If
    End Sub

    Private Sub CbxCitizenship_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxCitizenship_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtTIN_B.Focus()
        End If
    End Sub

    Private Sub TxtTIN_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtTIN_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtTelephone_B.Focus()
        End If
    End Sub

    Private Sub TxtTelephone_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtTelephone_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSSS_B.Focus()
        End If
    End Sub

    Private Sub TxtSSS_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSSS_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtMobile_B.Focus()
        End If
    End Sub

    Private Sub TxtMobile_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtMobile_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtEmail_B.Focus()
        End If
    End Sub

    Private Sub TxtEmail_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtEmail_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtMobile_B2.Focus()
        End If
    End Sub

    Private Sub TxtMobile_B2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtMobile_B2.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxOwned_B.Focus()
        End If
    End Sub

    Private Sub CbxOwned_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxOwned_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxFree_B.Focus()
        End If
    End Sub

    Private Sub CbxFree_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxFree_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxRented_B.Focus()
        End If
    End Sub

    Private Sub CbxRented_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxRented_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dRent_B.Focus()
        End If
    End Sub

    Private Sub DRent_B_KeyDown(sender As Object, e As KeyEventArgs) Handles dRent_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            CbxPrefix_1.Focus()
        End If
    End Sub

    Private Sub CbxPrefix_1_KeyDown(sender As Object, e As KeyEventArgs) Handles CbxPrefix_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtFirstN_1.Focus()
        End If
    End Sub

    Private Sub TxtFirstN_1_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtFirstN_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtMiddleN_1.Focus()
        End If
    End Sub

    Private Sub TxtMiddleN_1_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtMiddleN_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtLastN_1.Focus()
        End If
    End Sub

    Private Sub TxtLastN_1_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtLastN_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSuffix_1.Focus()
        End If
    End Sub

    Private Sub CbxSuffix_1_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSuffix_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            iAge_D1.Focus()
        End If
    End Sub

    Private Sub IAge_D1_KeyDown(sender As Object, e As KeyEventArgs) Handles iAge_D1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtGrade_1.Focus()
        End If
    End Sub

    Private Sub TxtGrade_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtGrade_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchool_1.Focus()
        End If
    End Sub

    Private Sub TxtSchool_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchool_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchoolAddress_1.Focus()
        End If
    End Sub

    Private Sub TxtSchoolAddress_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchoolAddress_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            CbxPrefix_2.Focus()
        End If
    End Sub

    Private Sub CbxPrefix_2_KeyDown(sender As Object, e As KeyEventArgs) Handles CbxPrefix_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtFirstN_2.Focus()
        End If
    End Sub

    Private Sub TxtFirstN_2_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtFirstN_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtMiddleN_2.Focus()
        End If
    End Sub

    Private Sub TxtMiddleN_2_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtMiddleN_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtLastN_2.Focus()
        End If
    End Sub

    Private Sub TxtLastN_2_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtLastN_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSuffix_2.Focus()
        End If
    End Sub

    Private Sub CbxSuffix_2_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSuffix_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            iAge_D2.Focus()
        End If
    End Sub

    Private Sub IAge_D2_KeyDown(sender As Object, e As KeyEventArgs) Handles iAge_D2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtGrade_2.Focus()
        End If
    End Sub

    Private Sub TxtGrade_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtGrade_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchool_2.Focus()
        End If
    End Sub

    Private Sub TxtSchool_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchool_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchoolAddress_2.Focus()
        End If
    End Sub

    Private Sub TxtSchoolAddress_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchoolAddress_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            CbxPrefix_3.Focus()
        End If
    End Sub

    Private Sub CbxPrefix_3_KeyDown(sender As Object, e As KeyEventArgs) Handles CbxPrefix_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtFirstN_3.Focus()
        End If
    End Sub

    Private Sub TxtFirstN_3_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtFirstN_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtMiddleN_3.Focus()
        End If
    End Sub

    Private Sub TxtMiddleN_3_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtMiddleN_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtLastN_3.Focus()
        End If
    End Sub

    Private Sub TxtLastN_3_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtLastN_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSuffix_3.Focus()
        End If
    End Sub

    Private Sub CbxSuffix_3_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSuffix_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            iAge_D3.Focus()
        End If
    End Sub

    Private Sub IAge_D3_KeyDown(sender As Object, e As KeyEventArgs) Handles iAge_D3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtGrade_3.Focus()
        End If
    End Sub

    Private Sub TxtGrade_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtGrade_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchool_3.Focus()
        End If
    End Sub

    Private Sub TxtSchool_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchool_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchoolAddress_3.Focus()
        End If
    End Sub

    Private Sub TxtSchoolAddress_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchoolAddress_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            CbxPrefix_4.Focus()
        End If
    End Sub

    Private Sub CbxPrefix_4_KeyDown(sender As Object, e As KeyEventArgs) Handles CbxPrefix_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtFirstN_4.Focus()
        End If
    End Sub

    Private Sub TxtFirstN_4_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtFirstN_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtMiddleN_4.Focus()
        End If
    End Sub

    Private Sub TxtMiddleN_4_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtMiddleN_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            TxtLastN_4.Focus()
        End If
    End Sub

    Private Sub TxtLastN_4_KeyDown(sender As Object, e As KeyEventArgs) Handles TxtLastN_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSuffix_4.Focus()
        End If
    End Sub

    Private Sub CbxSuffix_4_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSuffix_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            iAge_D4.Focus()
        End If
    End Sub

    Private Sub IAge_D4_KeyDown(sender As Object, e As KeyEventArgs) Handles iAge_D4.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtGrade_4.Focus()
        End If
    End Sub

    Private Sub TxtGrade_4_KeyDown(sender As Object, e As KeyEventArgs) Handles txtGrade_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchool_4.Focus()
        End If
    End Sub

    Private Sub TxtSchool_4_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchool_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSchoolAddress_4.Focus()
        End If
    End Sub

    Private Sub TxtSchoolAddress_4_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSchoolAddress_4.KeyDown
        If e.KeyCode = Keys.Enter Then
            rRemarks.Focus()
        End If
    End Sub

    Private Sub RRemarks_KeyDown(sender As Object, e As KeyEventArgs) Handles rRemarks.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxEmployer_B.Focus()
            SuperTabControl1.SelectedTab = tabFinancial_1
        End If
    End Sub

    Private Sub CbxEmployer_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxEmployer_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtEmployerAddress_B.Focus()
        End If
    End Sub

    Private Sub TxtEmployerAddress_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtEmployerAddress_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtEmployerTelephone_B.Focus()
        End If
    End Sub

    Private Sub TxtEmployerTelephone_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtEmployerTelephone_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxPosition_B.Focus()
        End If
    End Sub

    Private Sub CbxPosition_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxPosition_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxCasual_B.Focus()
        End If
    End Sub

    Private Sub CbxCasual_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxCasual_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxTemporary_B.Focus()
        End If
    End Sub

    Private Sub CbxTemporary_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxTemporary_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxPermanent_B.Focus()
        End If
    End Sub

    Private Sub CbxPermanent_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxPermanent_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dtpHired_B.Focus()
        End If
    End Sub

    Private Sub DtpHired_B_KeyDown(sender As Object, e As KeyEventArgs) Handles dtpHired_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSupervisor_B.Focus()
        End If
    End Sub

    Private Sub TxtSupervisor_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSupervisor_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dMonthly_B.Focus()
        End If
    End Sub

    Private Sub DMonthly_B_KeyDown(sender As Object, e As KeyEventArgs) Handles dMonthly_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBusinessName_B.Focus()
        End If
    End Sub

    Private Sub TxtBusinessName_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBusinessName_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBusinessAddress_B.Focus()
        End If
    End Sub

    Private Sub TxtBusinessAddress_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBusinessAddress_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBusinessTelephone_B.Focus()
        End If
    End Sub

    Private Sub TxtBusinessTelephone_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBusinessTelephone_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxNatureBusiness_B.Focus()
        End If
    End Sub

    Private Sub CbxNatureBusiness_B_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxNatureBusiness_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            iYrsOperation_B.Focus()
        End If
    End Sub

    Private Sub IYrsOperation_B_KeyDown(sender As Object, e As KeyEventArgs) Handles iYrsOperation_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dBusinessIncome_B.Focus()
        End If
    End Sub

    Private Sub DBusinessIncome_B_KeyDown(sender As Object, e As KeyEventArgs) Handles dBusinessIncome_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            iNoEmployees_B.Focus()
        End If
    End Sub

    Private Sub INoEmployees_B_KeyDown(sender As Object, e As KeyEventArgs) Handles iNoEmployees_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dCapital_B.Focus()
        End If
    End Sub

    Private Sub DCapital_B_KeyDown(sender As Object, e As KeyEventArgs) Handles dCapital_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtArea_B.Focus()
        End If
    End Sub

    Private Sub TxtArea_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtArea_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dtpExpiry_B.Focus()
        End If
    End Sub

    Private Sub DtpExpiry_B_KeyDown(sender As Object, e As KeyEventArgs) Handles dtpExpiry_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            iOutlet_B.Focus()
        End If
    End Sub

    Private Sub IOutlet_B_KeyDown(sender As Object, e As KeyEventArgs) Handles iOutlet_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtOtherIncome_B.Focus()
        End If
    End Sub

    Private Sub TxtOtherIncome_B_KeyDown(sender As Object, e As KeyEventArgs) Handles txtOtherIncome_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            dOtherIncome_B.Focus()
        End If
    End Sub

    Private Sub DOtherIncome_B_KeyDown(sender As Object, e As KeyEventArgs) Handles dOtherIncome_B.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCreditor_1.Focus()
        End If
    End Sub

    Private Sub TxtCreditor_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtCreditor_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtNatureLoan_1.Focus()
        End If
    End Sub

    Private Sub TxtNatureLoan_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtNatureLoan_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            dAmountGranted_1.Focus()
        End If
    End Sub

    Private Sub DAmountGranted_1_KeyDown(sender As Object, e As KeyEventArgs) Handles dAmountGranted_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            dTerm_1.Focus()
        End If
    End Sub

    Private Sub DTerm_1_KeyDown(sender As Object, e As KeyEventArgs) Handles dTerm_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            dBalance_1.Focus()
        End If
    End Sub

    Private Sub DBalance_1_KeyDown(sender As Object, e As KeyEventArgs) Handles dBalance_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCreditRemarks_1.Focus()
        End If
    End Sub

    Private Sub DCreditRemarks_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtCreditRemarks_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCreditor_2.Focus()
        End If
    End Sub

    Private Sub TxtCreditor_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtCreditor_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtNatureLoan_2.Focus()
        End If
    End Sub

    Private Sub TxtNatureLoan_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtNatureLoan_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            dAmountGranted_2.Focus()
        End If
    End Sub

    Private Sub DAmountGranted_2_KeyDown(sender As Object, e As KeyEventArgs) Handles dAmountGranted_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            dTerm_2.Focus()
        End If
    End Sub

    Private Sub DTerm_2_KeyDown(sender As Object, e As KeyEventArgs) Handles dTerm_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            dBalance_2.Focus()
        End If
    End Sub

    Private Sub DBalance_2_KeyDown(sender As Object, e As KeyEventArgs) Handles dBalance_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCreditRemarks_2.Focus()
        End If
    End Sub

    Private Sub DCreditRemarks_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtCreditRemarks_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCreditor_3.Focus()
        End If
    End Sub

    Private Sub TxtCreditor_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtCreditor_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtNatureLoan_3.Focus()
        End If
    End Sub

    Private Sub TxtNatureLoan_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtNatureLoan_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            dAmountGranted_3.Focus()
        End If
    End Sub

    Private Sub DAmountGranted_3_KeyDown(sender As Object, e As KeyEventArgs) Handles dAmountGranted_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            dTerm_3.Focus()
        End If
    End Sub

    Private Sub DTerm_3_KeyDown(sender As Object, e As KeyEventArgs) Handles dTerm_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            dBalance_3.Focus()
        End If
    End Sub

    Private Sub DBalance_3_KeyDown(sender As Object, e As KeyEventArgs) Handles dBalance_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCreditRemarks_3.Focus()
        End If
    End Sub

    Private Sub DCreditRemarks_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtCreditRemarks_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBank_1.Focus()
        End If
    End Sub

    Private Sub TxtBank_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBank_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBranch_1.Focus()
        End If
    End Sub

    Private Sub TxtBranch_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBranch_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSA_1.Focus()
        End If
    End Sub

    Private Sub CbxSA_1_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSA_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxCA_1.Focus()
        End If
    End Sub

    Private Sub CbxCA_1_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxCA_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSA_1.Focus()
        End If
    End Sub

    Private Sub TxtSA_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSA_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            dAverageBalance_1.Focus()
        End If
    End Sub

    Private Sub DAverageBalance_1_KeyDown(sender As Object, e As KeyEventArgs) Handles dAverageBalance_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            dPresentBalance_1.Focus()
        End If
    End Sub

    Private Sub DPresentBalance_1_KeyDown(sender As Object, e As KeyEventArgs) Handles dPresentBalance_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtOpened_1.Focus()
        End If
    End Sub

    Private Sub DtpOpened_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtOpened_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBankRemarks_1.Focus()
        End If
    End Sub

    Private Sub TxtBankRemarks_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBankRemarks_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBank_2.Focus()
        End If
    End Sub

    Private Sub TxtBank_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBank_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBranch_2.Focus()
        End If
    End Sub

    Private Sub TxtBranch_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBranch_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSA_2.Focus()
        End If
    End Sub

    Private Sub CbxSA_2_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSA_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxCA_2.Focus()
        End If
    End Sub

    Private Sub CbxCA_2_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxCA_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSA_2.Focus()
        End If
    End Sub

    Private Sub TxtSA_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSA_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            dAverageBalance_2.Focus()
        End If
    End Sub

    Private Sub DAverageBalance_2_KeyDown(sender As Object, e As KeyEventArgs) Handles dAverageBalance_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            dPresentBalance_2.Focus()
        End If
    End Sub

    Private Sub DPresentBalance_2_KeyDown(sender As Object, e As KeyEventArgs) Handles dPresentBalance_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtOpened_2.Focus()
        End If
    End Sub

    Private Sub DtpOpened_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtOpened_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBankRemarks_2.Focus()
        End If
    End Sub

    Private Sub TxtBankRemarks_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBankRemarks_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBank_3.Focus()
        End If
    End Sub

    Private Sub TxtBank_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBank_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBranch_3.Focus()
        End If
    End Sub

    Private Sub TxtBranch_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBranch_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxSA_3.Focus()
        End If
    End Sub

    Private Sub CbxSA_3_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxSA_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxCA_3.Focus()
        End If
    End Sub

    Private Sub CbxCA_3_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxCA_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtSA_3.Focus()
        End If
    End Sub

    Private Sub TxtSA_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtSA_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            dAverageBalance_3.Focus()
        End If
    End Sub

    Private Sub DAverageBalance_3_KeyDown(sender As Object, e As KeyEventArgs) Handles dAverageBalance_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            dPresentBalance_3.Focus()
        End If
    End Sub

    Private Sub DPresentBalance_3_KeyDown(sender As Object, e As KeyEventArgs) Handles dPresentBalance_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtOpened_3.Focus()
        End If
    End Sub

    Private Sub DtpOpened_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtOpened_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtBankRemarks_3.Focus()
        End If
    End Sub

    Private Sub TxtBankRemarks_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtBankRemarks_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtLocation_1.Focus()
            SuperTabControl1.SelectedTab = tabFinancial_2
        End If
    End Sub

    Private Sub TxtLocation_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtLocation_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtTCT_1.Focus()
        End If
    End Sub

    Private Sub TxtTCT_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtTCT_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            dArea_1.Focus()
        End If
    End Sub

    Private Sub DArea_1_KeyDown(sender As Object, e As KeyEventArgs) Handles dArea_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtAcquired_1.Focus()
        End If
    End Sub

    Private Sub TxtAcquired_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtAcquired_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtPropertiesRemarks_1.Focus()
        End If
    End Sub

    Private Sub TxtPropertiesRemarks_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtPropertiesRemarks_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtLocation_2.Focus()
        End If
    End Sub

    Private Sub TxtLocation_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtLocation_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtTCT_2.Focus()
        End If
    End Sub

    Private Sub TxtTCT_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtTCT_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            dArea_2.Focus()
        End If
    End Sub

    Private Sub DArea_2_KeyDown(sender As Object, e As KeyEventArgs) Handles dArea_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtAcquired_2.Focus()
        End If
    End Sub

    Private Sub TxtAcquired_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtAcquired_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtPropertiesRemarks_2.Focus()
        End If
    End Sub

    Private Sub TxtPropertiesRemarks_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtPropertiesRemarks_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtLocation_3.Focus()
        End If
    End Sub

    Private Sub TxtLocation_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtLocation_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtTCT_3.Focus()
        End If
    End Sub

    Private Sub TxtTCT_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtTCT_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            dArea_3.Focus()
        End If
    End Sub

    Private Sub DArea_3_KeyDown(sender As Object, e As KeyEventArgs) Handles dArea_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtAcquired_3.Focus()
        End If
    End Sub

    Private Sub TxtAcquired_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtAcquired_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtPropertiesRemarks_3.Focus()
        End If
    End Sub

    Private Sub TxtPropertiesRemarks_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtPropertiesRemarks_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtVehicle_1.Focus()
        End If
    End Sub

    Private Sub TxtVehicle_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtVehicle_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            dtpYear_1.Focus()
        End If
    End Sub

    Private Sub DtpYear_1_KeyDown(sender As Object, e As KeyEventArgs) Handles dtpYear_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtWhomAcquired_1.Focus()
        End If
    End Sub

    Private Sub TxtWhomAcquired_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtWhomAcquired_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtWhenAcquired_1.Focus()
        End If
    End Sub

    Private Sub DtpWhenAcquired_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtWhenAcquired_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtVehicleRemarks_1.Focus()
        End If
    End Sub

    Private Sub TxtVehicleRemarks_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtVehicleRemarks_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtVehicle_2.Focus()
        End If
    End Sub

    Private Sub TxtVehicle_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtVehicle_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            dtpYear_2.Focus()
        End If
    End Sub

    Private Sub DtpYear_2_KeyDown(sender As Object, e As KeyEventArgs) Handles dtpYear_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtWhomAcquired_2.Focus()
        End If
    End Sub

    Private Sub TxtWhomAcquired_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtWhomAcquired_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtWhenAcquired_2.Focus()
        End If
    End Sub

    Private Sub DtpWhenAcquired_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtWhenAcquired_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtVehicleRemarks_2.Focus()
        End If
    End Sub

    Private Sub TxtVehicleRemarks_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtVehicleRemarks_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtVehicle_3.Focus()
        End If
    End Sub

    Private Sub TxtVehicle_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtVehicle_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            dtpYear_3.Focus()
        End If
    End Sub

    Private Sub DtpYear_3_KeyDown(sender As Object, e As KeyEventArgs) Handles dtpYear_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtWhomAcquired_3.Focus()
        End If
    End Sub

    Private Sub TxtWhomAcquired_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtWhomAcquired_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtWhenAcquired_3.Focus()
        End If
    End Sub

    Private Sub DtpWhenAcquired_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtWhenAcquired_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtVehicleRemarks_3.Focus()
        End If
    End Sub

    Private Sub TxtVehicleRemarks_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtVehicleRemarks_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtHomeAppliances_1.Focus()
        End If
    End Sub

    Private Sub TxtHomeAppliances_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtHomeAppliances_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtHomeAppliances_2.Focus()
        End If
    End Sub

    Private Sub TxtHomeAppliances_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtHomeAppliances_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtReference_1.Focus()
        End If
    End Sub

    Private Sub TxtReference_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtReference_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtReferenceAddress_1.Focus()
        End If
    End Sub

    Private Sub TxtReferenceAddress_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtReferenceAddress_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtReferenceContact_1.Focus()
        End If
    End Sub

    Private Sub TxtReferenceContact_1_KeyDown(sender As Object, e As KeyEventArgs) Handles txtReferenceContact_1.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtReference_2.Focus()
        End If
    End Sub

    Private Sub TxtReference_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtReference_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtReferenceAddress_2.Focus()
        End If
    End Sub

    Private Sub TxtReferenceAddress_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtReferenceAddress_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtReferenceContact_2.Focus()
        End If
    End Sub

    Private Sub TxtReferenceContact_2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtReferenceContact_2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtReference_3.Focus()
        End If
    End Sub

    Private Sub TxtReference_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtReference_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtReferenceAddress_3.Focus()
        End If
    End Sub

    Private Sub TxtReferenceAddress_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtReferenceAddress_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtReferenceContact_3.Focus()
        End If
    End Sub

    Private Sub TxtReferenceContact_3_KeyDown(sender As Object, e As KeyEventArgs) Handles txtReferenceContact_3.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtCertificateNo.Focus()
        End If
    End Sub

    Private Sub TxtCertificateNo_KeyDown(sender As Object, e As KeyEventArgs) Handles txtCertificateNo.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtPlaceIssue.Focus()
        End If
    End Sub

    Private Sub TxtPlaceIssue_KeyDown(sender As Object, e As KeyEventArgs) Handles txtPlaceIssue.KeyDown
        If e.KeyCode = Keys.Enter Then
            dtpIssue.Focus()
        End If
    End Sub

    Private Sub DtpIssue_KeyDown(sender As Object, e As KeyEventArgs) Handles dtpIssue.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxAgent.Focus()
        End If
    End Sub

    Private Sub CbxAgent_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxAgent.KeyDown
        If e.KeyCode = Keys.Enter Then
            If cbxAgent.Checked = True Then
                cbxAgentName.Focus()
            Else
                cbxMarketing.Focus()
            End If
        End If
    End Sub

    Private Sub CbxAgentV2_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxAgentV2.KeyDown
        If e.KeyCode = Keys.Enter Then
            If cbxAgentV2.Checked = True Then
                cbxAgentNameV2.Focus()
            Else
                cbxMarketing.Focus()
            End If
        End If
    End Sub

    Private Sub CbxAgentName_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxAgentName.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtAgentContact.Focus()
        End If
    End Sub

    Private Sub CbxAgentNameV2_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxAgentNameV2.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtAgentContactV2.Focus()
        End If
    End Sub

    Private Sub TxtAgentContact_KeyDown(sender As Object, e As KeyEventArgs) Handles txtAgentContact.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxMarketing.Focus()
        End If
    End Sub

    Private Sub TxtAgentContactV2_KeyDown(sender As Object, e As KeyEventArgs) Handles txtAgentContactV2.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxMarketing.Focus()
        End If
    End Sub

    Private Sub CbxMarketing_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxMarketing.KeyDown
        If e.KeyCode = Keys.Enter Then
            If cbxMarketing.Checked = True Then
                cbxMarketingName.Focus()
            Else
                cbxWalkIn.Focus()
            End If
        End If
    End Sub

    Private Sub CbxMarketingName_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxMarketingName.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtMarketingContact.Focus()
        End If
    End Sub

    Private Sub TxtMarketingContact_KeyDown(sender As Object, e As KeyEventArgs) Handles txtMarketingContact.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxWalkIn.Focus()
        End If
    End Sub

    Private Sub CbxWalkIn_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxWalkIn.KeyDown
        If e.KeyCode = Keys.Enter Then
            If cbxWalkIn.Checked = True Then
                cbxWalkInType.Focus()
            Else
                cbxDealer.Focus()
            End If
        End If
    End Sub

    Private Sub TxtWalkInOthers_KeyDown(sender As Object, e As KeyEventArgs) Handles txtWalkInOthers.KeyDown
        If e.KeyCode = Keys.Enter Then
            cbxDealer.Focus()
        End If
    End Sub

    Private Sub CbxDealer_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxDealer.KeyDown
        If e.KeyCode = Keys.Enter Then
            If cbxDealer.Checked = True Then
                cbxDealerName.Focus()
            Else
                SuperTabControl1.SelectedTab = tabRequirements
            End If
        End If
    End Sub

    Private Sub CbxDealerName_KeyDown(sender As Object, e As KeyEventArgs) Handles cbxDealerName.KeyDown
        If e.KeyCode = Keys.Enter Then
            txtDealersContact.Focus()
        End If
    End Sub

    Private Sub TxtDealersContact_KeyDown(sender As Object, e As KeyEventArgs) Handles txtDealersContact.KeyDown
        If e.KeyCode = Keys.Enter Then
            SuperTabControl1.SelectedTab = tabRequirements
        End If
    End Sub

    Private Sub ITerms_C_KeyDown(sender As Object, e As KeyEventArgs) Handles iTerms_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            dInterest_C.Focus()
        End If
    End Sub

    Private Sub DInterest_C_KeyDown(sender As Object, e As KeyEventArgs) Handles dInterest_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            dInterest_T.Focus()
        End If
    End Sub

    Private Sub DInterest_T_KeyDown(sender As Object, e As KeyEventArgs) Handles dInterest_T.KeyDown
        If e.KeyCode = Keys.Enter Then
            dRPPDRate_C.Focus()
        End If
    End Sub

    Private Sub DRPPDRate_C_KeyDown(sender As Object, e As KeyEventArgs) Handles dRPPDRate_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            dRPPDRate_T.Focus()
        End If
    End Sub

    Private Sub DRPPDRate_T_KeyDown(sender As Object, e As KeyEventArgs) Handles dRPPDRate_T.KeyDown
        If e.KeyCode = Keys.Enter Then
            dPA_C.Focus()
        End If
    End Sub

    Private Sub DPA_C_KeyDown(sender As Object, e As KeyEventArgs) Handles dPA_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            dUDI_C.Focus()
        End If
    End Sub

    Private Sub DUDI_C_KeyDown(sender As Object, e As KeyEventArgs) Handles dUDI_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            dRPPD_C.Focus()
        End If
    End Sub

    Private Sub DRPPD_C_KeyDown(sender As Object, e As KeyEventArgs) Handles dRPPD_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            dFA_C.Focus()
        End If
    End Sub

    Private Sub DFA_C_KeyDown(sender As Object, e As KeyEventArgs) Handles dFA_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            dGMA_C.Focus()
        End If
    End Sub

    Private Sub DGMA_C_KeyDown(sender As Object, e As KeyEventArgs) Handles dGMA_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            dMR_C.Focus()
        End If
    End Sub

    Private Sub DMR_C_KeyDown(sender As Object, e As KeyEventArgs) Handles dMR_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            dNMA_C.Focus()
        End If
    End Sub

    Private Sub DNMA_C_KeyDown(sender As Object, e As KeyEventArgs) Handles dNMA_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            If iAdvancePayment.Visible Then
                iAdvancePayment.Focus()
            Else
                rNote.Focus()
            End If
        End If
    End Sub

    Private Sub IAdvancePayment_KeyDown(sender As Object, e As KeyEventArgs) Handles iAdvancePayment.KeyDown
        If e.KeyCode = Keys.Enter Then
            rNote.Focus()
        End If
    End Sub

    Private Sub RNote_KeyDown(sender As Object, e As KeyEventArgs) Handles rNote.KeyDown
        If e.KeyCode = Keys.Enter Then
            'dSC_C.Focus()
        End If
    End Sub

    Private Sub DSC_C_KeyDown(sender As Object, e As KeyEventArgs) Handles dSC_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            dAppraisalFee_C.Focus()
        End If
    End Sub

    Private Sub DAppraisalFee_C_KeyDown(sender As Object, e As KeyEventArgs) Handles dAppraisalFee_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            dCIFee_C.Focus()
        End If
    End Sub

    Private Sub DCIFee_C_KeyDown(sender As Object, e As KeyEventArgs) Handles dCIFee_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            dInsurance_C.Focus()
        End If
    End Sub

    Private Sub DMiscellaneous_C_KeyDown(sender As Object, e As KeyEventArgs) Handles dMiscellaneous_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            dAdvancePayment_C.Focus()
        End If
    End Sub

    Private Sub DAdvancePayment_C_KeyDown(sender As Object, e As KeyEventArgs) Handles dAdvancePayment_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            dDeductBalance_C.Focus()
        End If
    End Sub

    Private Sub DDeductBalance_KeyDown(sender As Object, e As KeyEventArgs) Handles dDeductBalance_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            btnPrint.Focus()
        End If
    End Sub

    Private Sub DInsurance_C_KeyDown(sender As Object, e As KeyEventArgs) Handles dInsurance_C.KeyDown
        If e.KeyCode = Keys.Enter Then
            dMiscellaneous_C.Focus()
        End If
    End Sub
#End Region

    Private Sub CbxSingle_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxSingle_B.CheckedChanged
        If cbxSingle_B.Checked = True Then
            cbxMarried_B.Checked = False
            cbxSeparated_B.Checked = False
            cbxWidowed_B.Checked = False
            btnSN.Enabled = False
        End If
    End Sub

    Private Sub CbxMarried_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxMarried_B.CheckedChanged
        If cbxMarried_B.Checked = True Then
            cbxSingle_B.Checked = False
            cbxSeparated_B.Checked = False
            cbxWidowed_B.Checked = False

            btnSN.Enabled = True
        Else
            btnSN.Enabled = False
        End If
        GeneralRequirements()
    End Sub

    Private Sub CbxSeparated_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxSeparated_B.CheckedChanged
        If cbxSeparated_B.Checked = True Then
            cbxSingle_B.Checked = False
            cbxMarried_B.Checked = False
            cbxWidowed_B.Checked = False

            btnSN.Enabled = True
        Else
            btnSN.Enabled = False
        End If
    End Sub

    Private Sub CbxWidowed_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxWidowed_B.CheckedChanged
        If cbxWidowed_B.Checked = True Then
            cbxSingle_B.Checked = False
            cbxMarried_B.Checked = False
            cbxSeparated_B.Checked = False
            btnSN.Enabled = False
        End If
    End Sub

    Private Sub CbxMale_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxMale_B.CheckedChanged
        If cbxMale_B.Checked = True Then
            cbxFemale_B.Checked = False
        End If
    End Sub

    Private Sub CbxFemale_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxFemale_B.CheckedChanged
        If cbxFemale_B.Checked = True Then
            cbxMale_B.Checked = False
        End If
    End Sub

    Private Sub CbxOwned_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxOwned_B.CheckedChanged
        If cbxOwned_B.Checked = True Then
            cbxFree_B.Checked = False
            cbxRented_B.Checked = False

            dRent_B.Enabled = False
        End If
    End Sub

    Private Sub CbxFree_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxFree_B.CheckedChanged
        If cbxFree_B.Checked = True Then
            cbxOwned_B.Checked = False
            cbxRented_B.Checked = False

            dRent_B.Enabled = False
        End If
    End Sub

    Private Sub CbxRented_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxRented_B.CheckedChanged
        If cbxRented_B.Checked = True Then
            cbxFree_B.Checked = False
            cbxOwned_B.Checked = False

            dRent_B.Enabled = True

            dRent_B.Value = vRent_B
        Else
            dRent_B.Enabled = False
            vRent_B = dRent_B.Value
            dRent_B.Value = 0
        End If
    End Sub

    Private Sub CbxCasual_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCasual_B.CheckedChanged
        If cbxCasual_B.Checked = True Then
            cbxTemporary_B.Checked = False
            cbxPermanent_B.Checked = False
        End If
    End Sub

    Private Sub CbxTemporary_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxTemporary_B.CheckedChanged
        If cbxTemporary_B.Checked = True Then
            cbxCasual_B.Checked = False
            cbxPermanent_B.Checked = False
        End If
    End Sub

    Private Sub CbxPermanent_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxPermanent_B.CheckedChanged
        If cbxPermanent_B.Checked = True Then
            cbxCasual_B.Checked = False
            cbxTemporary_B.Checked = False
        End If
    End Sub

    'ERROR PREVENTION
    '***BORROWER
    Private Sub CbxEmployer_B_TextChanged(sender As Object, e As EventArgs) Handles cbxEmployer_B.TextChanged
        If cbxEmployer_B.Text.Trim = "" Then
            txtEmployerAddress_B.Enabled = False
            txtEmployerTelephone_B.Enabled = False
            cbxPosition_B.Enabled = False
            cbxCasual_B.Enabled = False
            cbxTemporary_B.Enabled = False
            cbxPermanent_B.Enabled = False
            dtpHired_B.Enabled = False
            dtpHired_B.CustomFormat = ""
            txtSupervisor_B.Enabled = False
            dMonthly_B.Enabled = False
            cbxYearHired.Enabled = False
            cbxYearHired.Checked = False

            vEmpAddress_B = txtEmployerAddress_B.Text
            vEmpTelephone_B = txtEmployerTelephone_B.Text
            vPosition_B = cbxPosition_B.Text
            vCasual_B = cbxCasual_B.Checked
            vTemporary_B = cbxTemporary_B.Checked
            vPermanent_B = cbxPermanent_B.Checked
            vSupervisor_B = txtSupervisor_B.Text
            vSalary_B = dMonthly_B.Value

            txtEmployerAddress_B.Text = ""
            txtEmployerTelephone_B.Text = ""
            cbxPosition_B.Text = ""
            cbxCasual_B.Checked = False
            cbxTemporary_B.Checked = False
            cbxPermanent_B.Checked = False
            txtSupervisor_B.Text = ""
            dMonthly_B.Value = 0
        Else
            txtEmployerAddress_B.Enabled = True
            txtEmployerTelephone_B.Enabled = True
            cbxPosition_B.Enabled = True
            cbxCasual_B.Enabled = True
            cbxTemporary_B.Enabled = True
            cbxPermanent_B.Enabled = True
            dtpHired_B.Enabled = True
            If cbxYearHired.Checked Then
                dtpHired_B.CustomFormat = "yyyy"
            Else
                dtpHired_B.CustomFormat = "MMMM dd, yyyy"
            End If
            txtSupervisor_B.Enabled = True
            dMonthly_B.Enabled = True
            cbxYearHired.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vEmpAddress_B = "" And vEmpTelephone_B = "" And vPosition_B = "" And vSupervisor_B = "" And vSalary_B = 0 Then
            Else
                If txtEmployerAddress_B.Text = "" Then
                    txtEmployerAddress_B.Text = vEmpAddress_B
                End If
                If txtEmployerTelephone_B.Text = "" Then
                    txtEmployerTelephone_B.Text = vEmpTelephone_B
                End If
                If cbxPosition_B.Text = "" Then
                    cbxPosition_B.Text = vPosition_B
                End If
                If cbxCasual_B.Checked = False Then
                    cbxCasual_B.Checked = vCasual_B
                End If
                If cbxTemporary_B.Checked = False Then
                    cbxTemporary_B.Checked = vTemporary_B
                End If
                If cbxPermanent_B.Checked = False Then
                    cbxPermanent_B.Checked = vPermanent_B
                End If
                If txtSupervisor_B.Text = "" Then
                    txtSupervisor_B.Text = vSupervisor_B
                End If
                If dMonthly_B.Value = 0 Then
                    dMonthly_B.Value = vSalary_B
                End If
            End If
        End If
    End Sub

    Private Sub TxtBusinessName_B_TextChanged(sender As Object, e As EventArgs) Handles txtBusinessName_B.TextChanged
        If txtBusinessName_B.Text.Trim = "" Then
            txtBusinessAddress_B.Enabled = False
            txtBusinessTelephone_B.Enabled = False
            cbxNatureBusiness_B2.Enabled = False
            cbxNatureBusiness_B.Enabled = False
            iYrsOperation_B.Enabled = False
            dBusinessIncome_B.Enabled = False
            iNoEmployees_B.Enabled = False
            dCapital_B.Enabled = False
            txtArea_B.Enabled = False
            dtpExpiry_B.Enabled = False
            dtpExpiry_B.CustomFormat = ""
            iOutlet_B.Enabled = False
            txtOtherIncome_B.Enabled = False
            cbxYearFranchise.Enabled = False
            cbxYearFranchise.Checked = False

            vBusinessAddress_B = txtBusinessAddress_B.Text
            vBusinessTelephone_B = txtBusinessTelephone_B.Text
            vNatureBusiness_B = cbxNatureBusiness_B.Text
            vYrsOperation_B = iYrsOperation_B.Value
            vBusinessIncome_B = dBusinessIncome_B.Value
            vNoEmployees_B = iNoEmployees_B.Value
            vCapital_B = dCapital_B.Value
            vArea_B = txtArea_B.Text
            vOutlet_B = iOutlet_B.Value
            vOtherIncome_B = txtOtherIncome_B.Text

            txtBusinessAddress_B.Text = ""
            txtBusinessTelephone_B.Text = ""
            cbxNatureBusiness_B.Text = ""
            iYrsOperation_B.Value = 0
            dBusinessIncome_B.Value = 0
            iNoEmployees_B.Value = 0
            dCapital_B.Value = 0
            txtArea_B.Text = ""
            iOutlet_B.Value = 0
            txtOtherIncome_B.Text = ""
        Else
            txtBusinessAddress_B.Enabled = True
            txtBusinessTelephone_B.Enabled = True
            cbxNatureBusiness_B.Enabled = True
            cbxNatureBusiness_B2.Enabled = True
            iYrsOperation_B.Enabled = True
            dBusinessIncome_B.Enabled = True
            iNoEmployees_B.Enabled = True
            dCapital_B.Enabled = True
            txtArea_B.Enabled = True
            dtpExpiry_B.Enabled = True
            If cbxYearFranchise.Checked Then
                dtpExpiry_B.CustomFormat = "yyyy"
            Else
                dtpExpiry_B.CustomFormat = "MMMM dd, yyyy"
            End If
            iOutlet_B.Enabled = True
            txtOtherIncome_B.Enabled = True
            cbxYearFranchise.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vBusinessAddress_B = "" And vBusinessTelephone_B = "" And vNatureBusiness_B = "" And vYrsOperation_B = 0 And vBusinessIncome_B = 0 And vNoEmployees_B = 0 And vCapital_B = 0 And vArea_B = "" And vOutlet_B = 0 And vOtherIncome_B = "" Then
            Else
                If txtBusinessAddress_B.Text = "" Then
                    txtBusinessAddress_B.Text = vBusinessAddress_B
                End If
                If txtBusinessTelephone_B.Text = "" Then
                    txtBusinessTelephone_B.Text = vBusinessTelephone_B
                End If
                If cbxNatureBusiness_B.Text = "" Then
                    cbxNatureBusiness_B.Text = vNatureBusiness_B
                End If
                If iYrsOperation_B.Value = 0 Then
                    iYrsOperation_B.Value = vYrsOperation_B
                End If
                If dBusinessIncome_B.Value = 0 Then
                    dBusinessIncome_B.Value = vBusinessIncome_B
                End If
                If iNoEmployees_B.Value = 0 Then
                    iNoEmployees_B.Value = vNoEmployees_B
                End If
                If dCapital_B.Value = 0 Then
                    dCapital_B.Value = vCapital_B
                End If
                If txtArea_B.Text = "" Then
                    txtArea_B.Text = vArea_B
                End If
                If iOutlet_B.Value = 0 Then
                    iOutlet_B.Value = vOutlet_B
                End If
                If txtOtherIncome_B.Text = "" Then
                    txtOtherIncome_B.Text = vOtherIncome_B
                End If
            End If
        End If
    End Sub

    Private Sub TxtOtherIncome_B_TextChanged(sender As Object, e As EventArgs) Handles txtOtherIncome_B.TextChanged
        If txtOtherIncome_B.Text.Trim = "" Then
            dOtherIncome_B.Enabled = False

            vOtherIncomeD_B = dOtherIncome_B.Value

            dOtherIncome_B.Value = 0
        Else
            dOtherIncome_B.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vOtherIncomeD_B = 0 Then
            Else
                If dOtherIncome_B.Value = 0 Then
                    dOtherIncome_B.Value = vOtherIncomeD_B
                End If
            End If
        End If
    End Sub

    Private Sub TxtCreditor_1_TextChanged(sender As Object, e As EventArgs) Handles txtCreditor_1.TextChanged
        If txtCreditor_1.Text.Trim = "" Then
            txtNatureLoan_1.Enabled = False
            dAmountGranted_1.Enabled = False
            dTerm_1.Enabled = False
            dBalance_1.Enabled = False
            txtCreditRemarks_1.Enabled = False
            txtCreditor_2.Enabled = False

            txtNatureLoan_2.Enabled = False
            dAmountGranted_2.Enabled = False
            dTerm_2.Enabled = False
            dBalance_2.Enabled = False
            txtCreditRemarks_2.Enabled = False
            txtCreditor_3.Enabled = False
            txtNatureLoan_3.Enabled = False
            dAmountGranted_3.Enabled = False
            dTerm_3.Enabled = False
            dBalance_3.Enabled = False
            txtCreditRemarks_3.Enabled = False

            vNatureLoan_1 = txtNatureLoan_1.Text
            vAmountGranted_1 = dAmountGranted_1.Value
            vTerm_1 = dTerm_1.Value
            vBalance_1 = dBalance_1.Value
            vCreditRemarks_1 = txtCreditRemarks_1.Text

            vCreditor_2 = txtCreditor_2.Text

            txtNatureLoan_1.Text = ""
            dAmountGranted_1.Value = 0
            dTerm_1.Value = 0
            dBalance_1.Value = 0
            txtCreditRemarks_1.Text = ""

            txtCreditor_2.Text = ""
        Else
            txtNatureLoan_1.Enabled = True
            dAmountGranted_1.Enabled = True
            dTerm_1.Enabled = True
            dBalance_1.Enabled = True
            txtCreditRemarks_1.Enabled = True
            txtCreditor_2.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vNatureLoan_1 = "" And vAmountGranted_1 = 0 And vTerm_1 = 0 And vBalance_1 = 0 And vCreditRemarks_1 = "" And vCreditor_2 = "" Then
            Else
                If txtNatureLoan_1.Text = "" Then
                    txtNatureLoan_1.Text = vNatureLoan_1
                End If
                If dAmountGranted_1.Text = "" Then
                    dAmountGranted_1.Value = vAmountGranted_1
                End If
                If dTerm_1.Value = 0 Then
                    dTerm_1.Value = vTerm_1
                End If
                If dBalance_1.Value = 0 Then
                    dBalance_1.Value = vBalance_1
                End If
                If txtCreditRemarks_1.Text = "" Then
                    txtCreditRemarks_1.Text = vCreditRemarks_1
                End If

                If txtCreditor_2.Text = "" Then
                    txtCreditor_2.Text = vCreditor_2
                End If
            End If
        End If
    End Sub

    Private Sub TxtCreditor_2_TextChanged(sender As Object, e As EventArgs) Handles txtCreditor_2.TextChanged
        If txtCreditor_2.Text.Trim = "" Then
            txtNatureLoan_2.Enabled = False
            dAmountGranted_2.Enabled = False
            dTerm_2.Enabled = False
            dBalance_2.Enabled = False
            txtCreditRemarks_2.Enabled = False
            txtCreditor_3.Enabled = False

            txtNatureLoan_3.Enabled = False
            dAmountGranted_3.Enabled = False
            dTerm_3.Enabled = False
            dBalance_3.Enabled = False
            txtCreditRemarks_3.Enabled = False

            vNatureLoan_2 = txtNatureLoan_2.Text
            vAmountGranted_2 = dAmountGranted_2.Value
            vTerm_2 = dTerm_2.Value
            vBalance_2 = dBalance_2.Value
            vCreditRemarks_2 = txtCreditRemarks_2.Text

            vCreditor_3 = txtCreditor_3.Text

            txtNatureLoan_2.Text = ""
            dAmountGranted_2.Value = 0
            dTerm_2.Value = 0
            dBalance_2.Value = 0
            txtCreditRemarks_2.Text = ""

            txtCreditor_3.Text = ""
        Else
            txtNatureLoan_2.Enabled = True
            dAmountGranted_2.Enabled = True
            dTerm_2.Enabled = True
            dBalance_2.Enabled = True
            txtCreditRemarks_2.Enabled = True
            txtCreditor_3.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vNatureLoan_2 = "" And vAmountGranted_2 = 0 And vTerm_2 = 0 And vBalance_2 = 0 And vCreditRemarks_2 = "" And vCreditor_3 = "" Then
            Else
                If txtNatureLoan_2.Text = "" Then
                    txtNatureLoan_2.Text = vNatureLoan_2
                End If
                If dAmountGranted_2.Text = "" Then
                    dAmountGranted_2.Value = vAmountGranted_2
                End If
                If dTerm_2.Value = 0 Then
                    dTerm_2.Value = vTerm_2
                End If
                If dBalance_2.Value = 0 Then
                    dBalance_2.Value = vBalance_2
                End If
                If txtCreditRemarks_2.Text = "" Then
                    txtCreditRemarks_2.Text = vCreditRemarks_2
                End If

                If txtCreditor_3.Text = "" Then
                    txtCreditor_3.Text = vCreditor_3
                End If
            End If
        End If
    End Sub

    Private Sub TxtCreditor_3_TextChanged(sender As Object, e As EventArgs) Handles txtCreditor_3.TextChanged
        If txtCreditor_3.Text.Trim = "" Then
            txtNatureLoan_3.Enabled = False
            dAmountGranted_3.Enabled = False
            dTerm_3.Enabled = False
            dBalance_3.Enabled = False
            txtCreditRemarks_3.Enabled = False

            vNatureLoan_3 = txtNatureLoan_3.Text
            vAmountGranted_3 = dAmountGranted_3.Value
            vTerm_3 = dTerm_3.Value
            vBalance_3 = dBalance_3.Value
            vCreditRemarks_3 = txtCreditRemarks_3.Text

            txtNatureLoan_3.Text = ""
            dAmountGranted_3.Value = 0
            dTerm_3.Value = 0
            dBalance_3.Value = 0
            txtCreditRemarks_3.Text = ""
        Else
            txtNatureLoan_3.Enabled = True
            dAmountGranted_3.Enabled = True
            dTerm_3.Enabled = True
            dBalance_3.Enabled = True
            txtCreditRemarks_3.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vNatureLoan_3 = "" And vAmountGranted_3 = 0 And vTerm_3 = 0 And vBalance_3 = 0 And vCreditRemarks_3 = "" Then
            Else
                If txtNatureLoan_3.Text = "" Then
                    txtNatureLoan_3.Text = vNatureLoan_3
                End If
                If dAmountGranted_3.Text = "" Then
                    dAmountGranted_3.Value = vAmountGranted_3
                End If
                If dTerm_3.Value = 0 Then
                    dTerm_3.Value = vTerm_3
                End If
                If dBalance_3.Value = 0 Then
                    dBalance_3.Value = vBalance_3
                End If
                If txtCreditRemarks_3.Text = "" Then
                    txtCreditRemarks_3.Text = vCreditRemarks_3
                End If
            End If
        End If
    End Sub

    Private Sub TxtBank_1_TextChanged(sender As Object, e As EventArgs) Handles txtBank_1.TextChanged
        If txtBank_1.Text.Trim = "" Then
            txtBranch_1.Enabled = False
            cbxSA_1.Enabled = False
            cbxCA_1.Enabled = False
            txtSA_1.Enabled = False
            dAverageBalance_1.Enabled = False
            dPresentBalance_1.Enabled = False
            txtOpened_1.Enabled = False
            txtBankRemarks_1.Enabled = False
            txtBank_2.Enabled = False

            txtBranch_2.Enabled = False
            cbxSA_2.Enabled = False
            cbxCA_2.Enabled = False
            txtSA_2.Enabled = False
            dAverageBalance_2.Enabled = False
            dPresentBalance_2.Enabled = False
            txtOpened_2.Enabled = False
            txtBankRemarks_2.Enabled = False
            txtBank_3.Enabled = False
            txtBranch_3.Enabled = False
            cbxSA_3.Enabled = False
            cbxCA_3.Enabled = False
            txtSA_3.Enabled = False
            dAverageBalance_3.Enabled = False
            dPresentBalance_3.Enabled = False
            txtOpened_3.Enabled = False
            txtBankRemarks_3.Enabled = False

            vBranch_1 = txtBranch_1.Text
            vcSA_1 = cbxSA_1.Checked
            vcCA_1 = cbxCA_1.Checked
            vSA_1 = txtSA_1.Text
            vAverageBalance_1 = dAverageBalance_1.Value
            vPresentBalance_1 = dPresentBalance_1.Value
            vBankRemarks_1 = txtBankRemarks_1.Text

            vBank_2 = txtBank_2.Text

            txtBranch_1.Text = ""
            cbxSA_1.Checked = False
            cbxCA_1.Checked = False
            txtSA_1.Text = ""
            dAverageBalance_1.Value = 0
            dPresentBalance_1.Value = 0
            txtBankRemarks_1.Text = ""

            txtBank_2.Text = ""
        Else
            txtBranch_1.Enabled = True
            cbxSA_1.Enabled = True
            cbxCA_1.Enabled = True
            txtSA_1.Enabled = True
            dAverageBalance_1.Enabled = True
            dPresentBalance_1.Enabled = True
            txtOpened_1.Enabled = True
            txtBankRemarks_1.Enabled = True
            txtBank_2.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vBranch_1 = "" And vcSA_1 = False And vcCA_1 = False And vSA_1 = "" And vAverageBalance_1 = 0 And vPresentBalance_1 = 0 And vBankRemarks_1 = "" And vBank_2 = "" Then
            Else
                If txtBranch_1.Text = "" Then
                    txtBranch_1.Text = vBranch_1
                End If
                If cbxSA_1.Checked = False Then
                    cbxSA_1.Checked = vcSA_1
                End If
                If cbxCA_1.Checked = False Then
                    cbxCA_1.Checked = vcCA_1
                End If
                If txtSA_1.Text = "" Then
                    txtSA_1.Text = vSA_1
                End If
                If dAverageBalance_1.Value = 0 Then
                    dAverageBalance_1.Value = vAverageBalance_1
                End If
                If dPresentBalance_1.Value = 0 Then
                    dPresentBalance_1.Value = vPresentBalance_1
                End If
                If txtBankRemarks_1.Text = "" Then
                    txtBankRemarks_1.Text = vBankRemarks_1
                End If

                If txtBank_2.Text = "" Then
                    txtBank_2.Text = vBank_2
                End If
            End If
        End If
    End Sub

    Private Sub TxtBank_2_TextChanged(sender As Object, e As EventArgs) Handles txtBank_2.TextChanged
        If txtBank_2.Text.Trim = "" Then
            txtBranch_2.Enabled = False
            cbxSA_2.Enabled = False
            cbxCA_2.Enabled = False
            txtSA_2.Enabled = False
            dAverageBalance_2.Enabled = False
            dPresentBalance_2.Enabled = False
            txtOpened_2.Enabled = False
            txtBankRemarks_2.Enabled = False
            txtBank_3.Enabled = False

            txtBranch_3.Enabled = False
            cbxSA_3.Enabled = False
            cbxCA_3.Enabled = False
            txtSA_3.Enabled = False
            dAverageBalance_3.Enabled = False
            dPresentBalance_3.Enabled = False
            txtOpened_3.Enabled = False
            txtBankRemarks_3.Enabled = False

            vBranch_2 = txtBranch_2.Text
            vcSA_2 = cbxSA_2.Checked
            vcCA_2 = cbxCA_2.Checked
            vSA_2 = txtSA_2.Text
            vAverageBalance_2 = dAverageBalance_2.Value
            vPresentBalance_2 = dPresentBalance_2.Value
            vBankRemarks_2 = txtBankRemarks_2.Text

            vBank_3 = txtBank_3.Text

            txtBranch_2.Text = ""
            cbxSA_2.Checked = False
            cbxCA_2.Checked = False
            txtSA_2.Text = ""
            dAverageBalance_2.Value = 0
            dPresentBalance_2.Value = 0
            txtBankRemarks_2.Text = ""

            txtBank_3.Text = ""
        Else
            txtBranch_2.Enabled = True
            cbxSA_2.Enabled = True
            cbxCA_2.Enabled = True
            txtSA_2.Enabled = True
            dAverageBalance_2.Enabled = True
            dPresentBalance_2.Enabled = True
            txtOpened_2.Enabled = True
            txtBankRemarks_2.Enabled = True
            txtBank_3.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vBranch_2 = "" And vcSA_2 = False And vcCA_2 = False And vSA_2 = "" And vAverageBalance_2 = 0 And vPresentBalance_2 = 0 And vBankRemarks_2 = "" And vBank_3 = "" Then
            Else
                If txtBranch_2.Text = "" Then
                    txtBranch_2.Text = vBranch_2
                End If
                If cbxSA_2.Checked = False Then
                    cbxSA_2.Checked = vcSA_2
                End If
                If cbxCA_2.Checked = False Then
                    cbxCA_2.Checked = vcCA_2
                End If
                If txtSA_2.Text = "" Then
                    txtSA_2.Text = vSA_2
                End If
                If dAverageBalance_2.Value = 0 Then
                    dAverageBalance_2.Value = vAverageBalance_2
                End If
                If dPresentBalance_2.Value = 0 Then
                    dPresentBalance_2.Value = vPresentBalance_2
                End If
                If txtBankRemarks_2.Text = "" Then
                    txtBankRemarks_2.Text = vBankRemarks_2
                End If

                If txtBank_3.Text = "" Then
                    txtBank_3.Text = vBank_3
                End If
            End If
        End If
    End Sub

    Private Sub TxtBank_3_TextChanged(sender As Object, e As EventArgs) Handles txtBank_3.TextChanged
        If txtBank_3.Text.Trim = "" Then
            txtBranch_3.Enabled = False
            cbxSA_3.Enabled = False
            cbxCA_3.Enabled = False
            txtSA_3.Enabled = False
            dAverageBalance_3.Enabled = False
            dPresentBalance_3.Enabled = False
            txtOpened_3.Enabled = False
            txtBankRemarks_3.Enabled = False

            vBranch_3 = txtBranch_3.Text
            vcSA_3 = cbxSA_3.Checked
            vcCA_3 = cbxCA_3.Checked
            vSA_3 = txtSA_3.Text
            vAverageBalance_3 = dAverageBalance_3.Value
            vPresentBalance_3 = dPresentBalance_3.Value
            vBankRemarks_3 = txtBankRemarks_3.Text

            txtBranch_3.Text = ""
            cbxSA_3.Checked = False
            cbxCA_3.Checked = False
            txtSA_3.Text = ""
            dAverageBalance_3.Value = 0
            dPresentBalance_3.Value = 0
            txtBankRemarks_3.Text = ""
        Else
            txtBranch_3.Enabled = True
            cbxSA_3.Enabled = True
            cbxCA_3.Enabled = True
            txtSA_3.Enabled = True
            dAverageBalance_3.Enabled = True
            dPresentBalance_3.Enabled = True
            txtOpened_3.Enabled = True
            txtBankRemarks_3.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If txtBranch_3.Text = "" And cbxSA_3.Checked = False And cbxCA_3.Checked = False And vSA_3 = "" And vAverageBalance_3 = 0 And vPresentBalance_3 = 0 And vBankRemarks_3 = "" Then
            Else
                If txtBranch_3.Text = "" Then
                    txtBranch_3.Text = vBranch_3
                End If
                If cbxSA_3.Checked = False Then
                    cbxSA_3.Checked = vcSA_3
                End If
                If cbxCA_3.Checked = False Then
                    cbxCA_3.Checked = vcCA_3
                End If
                If txtSA_3.Text = "" Then
                    txtSA_3.Text = vSA_3
                End If
                If dAverageBalance_3.Value = 0 Then
                    dAverageBalance_3.Value = vAverageBalance_3
                End If
                If dPresentBalance_3.Value = 0 Then
                    dPresentBalance_3.Value = vPresentBalance_3
                End If
                If txtBankRemarks_3.Text = "" Then
                    txtBankRemarks_3.Text = vBankRemarks_3
                End If
            End If
        End If
    End Sub

    Private Sub TxtLocation_1_TextChanged(sender As Object, e As EventArgs) Handles txtLocation_1.TextChanged
        If txtLocation_1.Text.Trim = "" Then
            txtTCT_1.Enabled = False
            dArea_1.Enabled = False
            txtAcquired_1.Enabled = False
            txtPropertiesRemarks_1.Enabled = False
            txtLocation_2.Enabled = False

            txtTCT_2.Enabled = False
            dArea_2.Enabled = False
            txtAcquired_2.Enabled = False
            txtPropertiesRemarks_2.Enabled = False
            txtLocation_3.Enabled = False
            txtTCT_3.Enabled = False
            dArea_3.Enabled = False
            txtAcquired_3.Enabled = False
            txtPropertiesRemarks_3.Enabled = False

            vTCT_1 = txtTCT_1.Text
            vArea_1 = dArea_1.Value
            vAcquired_1 = txtAcquired_1.Text
            vPropertiesRemarks_1 = txtPropertiesRemarks_1.Text
            vLocation_2 = txtLocation_2.Text

            txtTCT_1.Text = ""
            dArea_1.Value = 0
            txtAcquired_1.Text = ""
            txtPropertiesRemarks_1.Text = ""
            txtLocation_2.Text = ""
        Else
            txtTCT_1.Enabled = True
            dArea_1.Enabled = True
            txtAcquired_1.Enabled = True
            txtPropertiesRemarks_1.Enabled = True
            txtLocation_2.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vTCT_1 = "" And vArea_1 = 0 And vAcquired_1 = "" And vPropertiesRemarks_1 = "" And vLocation_2 = "" Then
            Else
                If txtTCT_1.Text = "" Then
                    txtTCT_1.Text = vTCT_1
                End If
                If dArea_1.Value = 0 Then
                    dArea_1.Value = vArea_1
                End If
                If txtAcquired_1.Text = "" Then
                    txtAcquired_1.Text = vAcquired_1
                End If
                If txtPropertiesRemarks_1.Text = "" Then
                    txtPropertiesRemarks_1.Text = vPropertiesRemarks_1
                End If
                If txtLocation_2.Text = "" Then
                    txtLocation_2.Text = vLocation_2
                End If
            End If
        End If
    End Sub

    Private Sub TxtLocation_2_TextChanged(sender As Object, e As EventArgs) Handles txtLocation_2.TextChanged
        If txtLocation_2.Text.Trim = "" Then
            txtTCT_2.Enabled = False
            dArea_2.Enabled = False
            txtAcquired_2.Enabled = False
            txtPropertiesRemarks_2.Enabled = False
            txtLocation_3.Enabled = False

            txtTCT_3.Enabled = False
            dArea_3.Enabled = False
            txtAcquired_3.Enabled = False
            txtPropertiesRemarks_3.Enabled = False

            vTCT_2 = txtTCT_2.Text
            vArea_2 = dArea_2.Value
            vAcquired_2 = txtAcquired_2.Text
            vPropertiesRemarks_2 = txtPropertiesRemarks_2.Text
            vLocation_3 = txtLocation_3.Text

            txtTCT_2.Text = ""
            dArea_2.Value = 0
            txtAcquired_2.Text = ""
            txtPropertiesRemarks_2.Text = ""
            txtLocation_3.Text = ""
        Else
            txtTCT_2.Enabled = True
            dArea_2.Enabled = True
            txtAcquired_2.Enabled = True
            txtPropertiesRemarks_2.Enabled = True
            txtLocation_3.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vTCT_2 = "" And vArea_2 = 0 And vAcquired_2 = "" And vPropertiesRemarks_2 = "" And vLocation_3 = "" Then
            Else
                If txtTCT_2.Text = "" Then
                    txtTCT_2.Text = vTCT_2
                End If
                If dArea_2.Value = 0 Then
                    dArea_2.Value = vArea_2
                End If
                If txtAcquired_2.Text = "" Then
                    txtAcquired_2.Text = vAcquired_2
                End If
                If txtPropertiesRemarks_2.Text = "" Then
                    txtPropertiesRemarks_2.Text = vPropertiesRemarks_2
                End If
                If txtLocation_3.Text = "" Then
                    txtLocation_3.Text = vLocation_3
                End If
            End If
        End If
    End Sub

    Private Sub TxtLocation_3_TextChanged(sender As Object, e As EventArgs) Handles txtLocation_3.TextChanged
        If txtLocation_3.Text.Trim = "" Then
            txtTCT_3.Enabled = False
            dArea_3.Enabled = False
            txtAcquired_3.Enabled = False
            txtPropertiesRemarks_3.Enabled = False

            txtTCT_3.Text = ""
            dArea_3.Value = 0
            txtAcquired_3.Text = ""
            txtPropertiesRemarks_3.Text = ""
        Else
            txtTCT_3.Enabled = True
            dArea_3.Enabled = True
            txtAcquired_3.Enabled = True
            txtPropertiesRemarks_3.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vTCT_3 = "" And vArea_3 = 0 And vAcquired_3 = "" And vPropertiesRemarks_3 = "" Then
            Else
                If txtTCT_3.Text = "" Then
                    txtTCT_3.Text = vTCT_3
                End If
                If dArea_3.Value = 0 Then
                    dArea_3.Value = vArea_3
                End If
                If txtAcquired_3.Text = "" Then
                    txtAcquired_3.Text = vAcquired_3
                End If
                If txtPropertiesRemarks_3.Text = "" Then
                    txtPropertiesRemarks_3.Text = vPropertiesRemarks_3
                End If
            End If
        End If
    End Sub

    Private Sub TxtVehicle_1_TextChanged(sender As Object, e As EventArgs) Handles txtVehicle_1.TextChanged
        If txtVehicle_1.Text.Trim = "" Then
            dtpYear_1.Enabled = False
            dtpYear_1.CustomFormat = ""
            txtWhomAcquired_1.Enabled = False
            txtWhenAcquired_1.Enabled = False
            txtVehicleRemarks_1.Enabled = False
            txtVehicle_2.Enabled = False

            dtpYear_2.Enabled = False
            dtpYear_2.CustomFormat = ""
            txtWhomAcquired_2.Enabled = False
            txtWhenAcquired_2.Enabled = False
            txtVehicleRemarks_2.Enabled = False
            txtVehicle_3.Enabled = False
            dtpYear_3.Enabled = False
            dtpYear_3.CustomFormat = ""
            txtWhomAcquired_3.Enabled = False
            txtWhenAcquired_3.Enabled = False
            txtVehicleRemarks_3.Enabled = False

            vWhomAcquired_1 = txtWhomAcquired_1.Text
            vVehicleRemarks_1 = txtVehicleRemarks_1.Text
            vVehicle_2 = txtVehicle_2.Text

            txtWhomAcquired_1.Text = ""
            txtVehicleRemarks_1.Text = ""
            txtVehicle_2.Text = ""
        Else
            dtpYear_1.Enabled = True
            dtpYear_1.CustomFormat = "     yyyy"
            txtWhomAcquired_1.Enabled = True
            txtWhenAcquired_1.Enabled = True
            txtVehicleRemarks_1.Enabled = True
            txtVehicle_2.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vWhomAcquired_1 = "" And vVehicleRemarks_1 = "" And vVehicle_2 = "" Then
            Else
                If txtWhomAcquired_1.Text = "" Then
                    txtWhomAcquired_1.Text = vWhomAcquired_1
                End If
                If txtVehicleRemarks_1.Text = "" Then
                    txtVehicleRemarks_1.Text = vVehicleRemarks_1
                End If
                If txtVehicle_2.Text = "" Then
                    txtVehicle_2.Text = vVehicle_2
                End If
            End If
        End If
    End Sub

    Private Sub TxtVehicle_2_TextChanged(sender As Object, e As EventArgs) Handles txtVehicle_2.TextChanged
        If txtVehicle_2.Text.Trim = "" Then
            dtpYear_2.Enabled = False
            dtpYear_2.CustomFormat = ""
            txtWhomAcquired_2.Enabled = False
            txtWhenAcquired_2.Enabled = False
            txtVehicleRemarks_2.Enabled = False
            txtVehicle_3.Enabled = False

            dtpYear_3.Enabled = False
            dtpYear_3.CustomFormat = ""
            txtWhomAcquired_3.Enabled = False
            txtWhenAcquired_3.Enabled = False
            txtVehicleRemarks_3.Enabled = False

            vWhomAcquired_2 = txtWhomAcquired_2.Text
            vVehicleRemarks_2 = txtVehicleRemarks_2.Text
            vVehicle_3 = txtVehicle_3.Text

            txtWhomAcquired_2.Text = ""
            txtVehicleRemarks_2.Text = ""
            txtVehicle_3.Text = ""
        Else
            dtpYear_2.Enabled = True
            dtpYear_2.CustomFormat = "     yyyy"
            txtWhomAcquired_2.Enabled = True
            txtWhenAcquired_2.Enabled = True
            txtVehicleRemarks_2.Enabled = True
            txtVehicle_3.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vWhomAcquired_2 = "" And vVehicleRemarks_2 = "" And vVehicle_3 = "" Then
            Else
                If txtWhomAcquired_2.Text = "" Then
                    txtWhomAcquired_2.Text = vWhomAcquired_2
                End If
                If txtVehicleRemarks_2.Text = "" Then
                    txtVehicleRemarks_2.Text = vVehicleRemarks_2
                End If
                If txtVehicle_3.Text = "" Then
                    txtVehicle_3.Text = vVehicle_3
                End If
            End If
        End If
    End Sub

    Private Sub TxtVehicle_3_TextChanged(sender As Object, e As EventArgs) Handles txtVehicle_3.TextChanged
        If txtVehicle_3.Text.Trim = "" Then
            dtpYear_3.Enabled = False
            dtpYear_3.CustomFormat = ""
            txtWhomAcquired_3.Enabled = False
            txtWhenAcquired_3.Enabled = False
            txtVehicleRemarks_3.Enabled = False

            vWhomAcquired_3 = txtWhomAcquired_3.Text
            vVehicleRemarks_3 = txtVehicleRemarks_3.Text

            txtWhomAcquired_3.Text = ""
            txtVehicleRemarks_3.Text = ""
        Else
            dtpYear_3.Enabled = True
            dtpYear_3.CustomFormat = "     yyyy"
            txtWhomAcquired_3.Enabled = True
            txtWhenAcquired_3.Enabled = True
            txtVehicleRemarks_3.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vWhomAcquired_3 = "" And vVehicleRemarks_3 = "" Then
            Else
                If txtWhomAcquired_3.Text = "" Then
                    txtWhomAcquired_3.Text = vWhomAcquired_3
                End If
                If txtVehicleRemarks_3.Text = "" Then
                    txtVehicleRemarks_3.Text = vVehicleRemarks_3
                End If
            End If
        End If
    End Sub

    Private Sub TxtHomeAppliances_1_TextChanged(sender As Object, e As EventArgs) Handles txtHomeAppliances_1.TextChanged
        If txtHomeAppliances_1.Text.Trim = "" Then
            txtHomeAppliances_2.Enabled = False

            vHomeAppliances_2 = txtHomeAppliances_2.Text

            txtHomeAppliances_2.Text = ""
        Else
            txtHomeAppliances_2.Enabled = True

            txtHomeAppliances_2.Text = vHomeAppliances_2
        End If
    End Sub

    Private Sub TxtReference_1_TextChanged(sender As Object, e As EventArgs) Handles txtReference_1.TextChanged
        If txtReference_1.Text.Trim = "" Then
            txtReferenceAddress_1.Enabled = False
            txtReferenceContact_1.Enabled = False
            txtReference_2.Enabled = False

            txtReferenceAddress_2.Enabled = False
            txtReferenceContact_2.Enabled = False
            txtReference_3.Enabled = False
            txtReferenceAddress_3.Enabled = False
            txtReferenceContact_3.Enabled = False

            vReferenceAddress_1 = txtReferenceAddress_1.Text
            vReferenceContact_1 = txtReferenceContact_1.Text
            vReference_2 = txtReference_2.Text

            txtReferenceAddress_1.Text = ""
            txtReferenceContact_1.Text = ""
            txtReference_2.Text = ""
        Else
            txtReferenceAddress_1.Enabled = True
            txtReferenceContact_1.Enabled = True
            txtReference_2.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vReferenceAddress_1 = "" And vReferenceContact_1 = "" And vReference_2 = "" Then
            Else
                If txtReferenceAddress_1.Text = "" Then
                    txtReferenceAddress_1.Text = vReferenceAddress_1
                End If
                If txtReferenceContact_1.Text = "" Then
                    txtReferenceContact_1.Text = vReferenceContact_1
                End If
                If txtReference_2.Text = "" Then
                    txtReference_2.Text = vReference_2
                End If
            End If
        End If
    End Sub

    Private Sub TxtReference_2_TextChanged(sender As Object, e As EventArgs) Handles txtReference_2.TextChanged
        If txtReference_2.Text.Trim = "" Then
            txtReferenceAddress_2.Enabled = False
            txtReferenceContact_2.Enabled = False
            txtReference_3.Enabled = False

            txtReferenceAddress_3.Enabled = False
            txtReferenceContact_3.Enabled = False

            vReferenceAddress_2 = txtReferenceAddress_2.Text
            vReferenceContact_2 = txtReferenceContact_2.Text
            vReference_3 = txtReference_3.Text

            txtReferenceAddress_2.Text = ""
            txtReferenceContact_2.Text = ""
            txtReference_3.Text = ""
        Else
            txtReferenceAddress_2.Enabled = True
            txtReferenceContact_2.Enabled = True
            txtReference_3.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vReferenceAddress_2 = "" And vReferenceContact_2 = "" And vReference_3 = "" Then
            Else
                If txtReferenceAddress_2.Text = "" Then
                    txtReferenceAddress_2.Text = vReferenceAddress_2
                End If
                If txtReferenceContact_2.Text = "" Then
                    txtReferenceContact_2.Text = vReferenceContact_2
                End If
                If txtReference_3.Text = "" Then
                    txtReference_3.Text = vReference_3
                End If
            End If
        End If
    End Sub

    Private Sub TxtReference_3_TextChanged(sender As Object, e As EventArgs) Handles txtReference_3.TextChanged
        If txtReference_3.Text.Trim = "" Then
            txtReferenceAddress_3.Enabled = False
            txtReferenceContact_3.Enabled = False

            vReferenceAddress_3 = txtReferenceAddress_3.Text
            vReferenceContact_3 = txtReferenceContact_3.Text

            txtReferenceAddress_3.Text = ""
            txtReferenceContact_3.Text = ""
        Else
            txtReferenceAddress_3.Enabled = True
            txtReferenceContact_3.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vReferenceAddress_3 = "" And vReferenceContact_3 = "" Then
            Else
                If txtReferenceAddress_3.Text = "" Then
                    txtReferenceAddress_3.Text = vReferenceAddress_3
                End If
                If txtReferenceContact_3.Text = "" Then
                    txtReferenceContact_3.Text = vReferenceContact_3
                End If
            End If
        End If
    End Sub

    Private Sub TxtCertificateNo_TextChanged(sender As Object, e As EventArgs) Handles txtCertificateNo.TextChanged
        If txtCertificateNo.Text.Trim = "" Then
            txtPlaceIssue.Enabled = False
            dtpIssue.Enabled = False
            dtpIssue.CustomFormat = ""

            vPlaceIssue = txtPlaceIssue.Text

            txtPlaceIssue.Text = ""
        Else
            txtPlaceIssue.Enabled = True
            dtpIssue.Enabled = True
            dtpIssue.CustomFormat = "MMM. dd, yyyy"

            If RetrieveData Then
            Else
                Exit Sub
            End If
            txtPlaceIssue.Text = vPlaceIssue
        End If
    End Sub

    Private Sub Name_1_TextChanged(sender As Object, e As EventArgs) Handles TxtFirstN_1.TextChanged
        If TxtFirstN_1.Text.Trim = "" Then
            TxtMiddleN_1.Enabled = False
            TxtLastN_1.Enabled = False
            cbxSuffix_1.Enabled = False
            iAge_D1.Enabled = False
            txtGrade_1.Enabled = False
            txtSchool_1.Enabled = False
            txtSchoolAddress_1.Enabled = False
            CbxPrefix_2.Enabled = False
            TxtFirstN_2.Enabled = False

            vMiddleN_1 = TxtMiddleN_1.Text
            vLastN_1 = TxtLastN_1.Text
            vSuffix_1 = cbxSuffix_1.Text
            vGrade_1 = txtGrade_1.Text
            vSchool_1 = txtSchool_1.Text
            vSchoolAddress_1 = txtSchoolAddress_1.Text
            vPrefix_2 = CbxPrefix_2.Text
            vFirstN_2 = TxtFirstN_2.Text

            TxtMiddleN_1.Text = ""
            TxtLastN_1.Text = ""
            cbxSuffix_1.Text = ""
            txtGrade_1.Text = ""
            txtSchool_1.Text = ""
            txtSchoolAddress_1.Text = ""
            CbxPrefix_2.Text = ""
            TxtFirstN_2.Text = ""
        Else
            TxtMiddleN_1.Enabled = True
            TxtLastN_1.Enabled = True
            cbxSuffix_1.Enabled = True
            iAge_D1.Enabled = True
            txtGrade_1.Enabled = True
            txtSchool_1.Enabled = True
            txtSchoolAddress_1.Enabled = True
            CbxPrefix_2.Enabled = True
            TxtFirstN_2.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vMiddleN_1 = "" And vLastN_1 = "" And vSuffix_1 = "" And vGrade_1 = "" And vSchool_1 = "" And vSchoolAddress_1 = "" And vPrefix_2 = "" And vFirstN_2 = "" Then
            Else
                If TxtMiddleN_1.Text = "" Then
                    TxtMiddleN_1.Text = vMiddleN_1
                End If
                If TxtLastN_1.Text = "" Then
                    TxtLastN_1.Text = vLastN_1
                End If
                If cbxSuffix_1.Text = "" Then
                    cbxSuffix_1.Text = vSuffix_1
                End If
                If txtGrade_1.Text = "" Then
                    txtGrade_1.Text = vGrade_1
                End If
                If txtSchool_1.Text = "" Then
                    txtSchool_1.Text = vSchool_1
                End If
                If txtSchoolAddress_1.Text = "" Then
                    txtSchoolAddress_1.Text = vSchoolAddress_1
                End If
                If CbxPrefix_2.Text = "" Then
                    CbxPrefix_2.Text = vPrefix_2
                End If
                If TxtFirstN_2.Text = "" Then
                    TxtFirstN_2.Text = vFirstN_2
                End If
            End If
        End If
    End Sub

    Private Sub Name_2_TextChanged(sender As Object, e As EventArgs) Handles TxtFirstN_2.TextChanged
        If TxtFirstN_2.Text.Trim = "" Then
            TxtMiddleN_2.Enabled = False
            TxtLastN_2.Enabled = False
            cbxSuffix_2.Enabled = False
            iAge_D2.Enabled = False
            txtGrade_2.Enabled = False
            txtSchool_2.Enabled = False
            txtSchoolAddress_2.Enabled = False
            CbxPrefix_3.Enabled = False
            TxtFirstN_3.Enabled = False

            vMiddleN_2 = TxtMiddleN_2.Text
            vLastN_2 = TxtLastN_2.Text
            vSuffix_2 = cbxSuffix_2.Text
            vGrade_2 = txtGrade_2.Text
            vSchool_2 = txtSchool_2.Text
            vSchoolAddress_2 = txtSchoolAddress_2.Text
            vPrefix_3 = CbxPrefix_3.Text
            vFirstN_3 = TxtFirstN_3.Text

            TxtMiddleN_2.Text = ""
            TxtLastN_2.Text = ""
            cbxSuffix_2.Text = ""
            txtGrade_2.Text = ""
            txtSchool_2.Text = ""
            txtSchoolAddress_2.Text = ""
            CbxPrefix_3.Text = ""
            TxtFirstN_3.Text = ""
        Else
            TxtMiddleN_2.Enabled = True
            TxtLastN_2.Enabled = True
            cbxSuffix_2.Enabled = True
            iAge_D2.Enabled = True
            txtGrade_2.Enabled = True
            txtSchool_2.Enabled = True
            txtSchoolAddress_2.Enabled = True
            CbxPrefix_3.Enabled = True
            TxtFirstN_3.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vMiddleN_2 = "" And vLastN_2 = "" And vSuffix_2 = "" And vGrade_2 = "" And vSchool_2 = "" And vSchoolAddress_2 = "" And vPrefix_3 = "" And vFirstN_3 = "" Then
            Else
                If TxtMiddleN_2.Text = "" Then
                    TxtMiddleN_2.Text = vMiddleN_2
                End If
                If TxtLastN_2.Text = "" Then
                    TxtLastN_2.Text = vLastN_2
                End If
                If cbxSuffix_2.Text = "" Then
                    cbxSuffix_2.Text = vSuffix_2
                End If
                If txtGrade_2.Text = "" Then
                    txtGrade_2.Text = vGrade_2
                End If
                If txtSchool_2.Text = "" Then
                    txtSchool_2.Text = vSchool_2
                End If
                If txtSchoolAddress_2.Text = "" Then
                    txtSchoolAddress_2.Text = vSchoolAddress_2
                End If
                If CbxPrefix_3.Text = "" Then
                    CbxPrefix_3.Text = vPrefix_3
                End If
                If TxtFirstN_3.Text = "" Then
                    TxtFirstN_3.Text = vFirstN_3
                End If
            End If
        End If
    End Sub

    Private Sub Name_3_TextChanged(sender As Object, e As EventArgs) Handles TxtFirstN_3.TextChanged
        If TxtFirstN_3.Text.Trim = "" Then
            TxtMiddleN_3.Enabled = False
            TxtLastN_3.Enabled = False
            cbxSuffix_3.Enabled = False
            iAge_D3.Enabled = False
            txtGrade_3.Enabled = False
            txtSchool_3.Enabled = False
            txtSchoolAddress_3.Enabled = False
            CbxPrefix_4.Enabled = False
            TxtFirstN_4.Enabled = False

            vMiddleN_3 = TxtMiddleN_3.Text
            vLastN_3 = TxtLastN_3.Text
            vSuffix_3 = cbxSuffix_3.Text
            vGrade_3 = txtGrade_3.Text
            vSchool_3 = txtSchool_3.Text
            vSchoolAddress_3 = txtSchoolAddress_3.Text
            vPrefix_4 = CbxPrefix_4.Text
            vFirstN_4 = TxtFirstN_4.Text

            TxtMiddleN_3.Text = ""
            TxtLastN_3.Text = ""
            cbxSuffix_3.Text = ""
            txtGrade_3.Text = ""
            txtSchool_3.Text = ""
            txtSchoolAddress_3.Text = ""
            CbxPrefix_4.Text = ""
            TxtFirstN_4.Text = ""
        Else
            TxtMiddleN_3.Enabled = True
            TxtLastN_3.Enabled = True
            cbxSuffix_3.Enabled = True
            iAge_D3.Enabled = True
            txtGrade_3.Enabled = True
            txtSchool_3.Enabled = True
            txtSchoolAddress_3.Enabled = True
            CbxPrefix_4.Enabled = True
            TxtFirstN_4.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vMiddleN_3 = "" And vLastN_3 = "" And vSuffix_3 = "" And vGrade_3 = "" And vSchool_3 = "" And vSchoolAddress_3 = "" And vPrefix_4 = "" And vFirstN_4 = "" Then
            Else
                If TxtMiddleN_3.Text = "" Then
                    TxtMiddleN_3.Text = vMiddleN_3
                End If
                If TxtLastN_3.Text = "" Then
                    TxtLastN_3.Text = vLastN_3
                End If
                If cbxSuffix_3.Text = "" Then
                    cbxSuffix_3.Text = vSuffix_3
                End If
                If txtGrade_3.Text = "" Then
                    txtGrade_3.Text = vGrade_3
                End If
                If txtSchool_3.Text = "" Then
                    txtSchool_3.Text = vSchool_3
                End If
                If txtSchoolAddress_3.Text = "" Then
                    txtSchoolAddress_3.Text = vSchoolAddress_3
                End If
                If CbxPrefix_4.Text = "" Then
                    CbxPrefix_4.Text = vPrefix_4
                End If
                If TxtFirstN_4.Text = "" Then
                    TxtFirstN_4.Text = vFirstN_4
                End If
            End If
        End If
    End Sub

    Private Sub Name_4_TextChanged(sender As Object, e As EventArgs) Handles TxtFirstN_4.TextChanged
        If TxtFirstN_4.Text.Trim = "" Then
            TxtMiddleN_4.Enabled = False
            TxtLastN_4.Enabled = False
            cbxSuffix_4.Enabled = False
            iAge_D4.Enabled = False
            txtGrade_4.Enabled = False
            txtSchool_4.Enabled = False
            txtSchoolAddress_4.Enabled = False

            vMiddleN_4 = TxtMiddleN_4.Text
            vLastN_4 = TxtLastN_4.Text
            vSuffix_4 = cbxSuffix_4.Text
            vGrade_4 = txtGrade_4.Text
            vSchool_4 = txtSchool_4.Text
            vSchoolAddress_4 = txtSchoolAddress_4.Text

            TxtMiddleN_4.Text = ""
            TxtLastN_4.Text = ""
            cbxSuffix_4.Text = ""
            txtGrade_4.Text = ""
            txtSchool_4.Text = ""
            txtSchoolAddress_4.Text = ""
        Else
            TxtMiddleN_4.Enabled = True
            TxtLastN_4.Enabled = True
            cbxSuffix_4.Enabled = True
            iAge_D4.Enabled = True
            txtGrade_4.Enabled = True
            txtSchool_4.Enabled = True
            txtSchoolAddress_4.Enabled = True

            If RetrieveData Then
            Else
                Exit Sub
            End If
            If vMiddleN_4 = "" And vLastN_4 = "" And vSuffix_4 = "" And vGrade_4 = "" And vSchool_4 = "" And vSchoolAddress_4 = "" Then
            Else
                If TxtMiddleN_4.Text = "" Then
                    TxtMiddleN_4.Text = vMiddleN_4
                End If
                If TxtLastN_4.Text = "" Then
                    TxtLastN_4.Text = vLastN_4
                End If
                If cbxSuffix_4.Text = "" Then
                    cbxSuffix_4.Text = vSuffix_4
                End If
                If txtGrade_4.Text = "" Then
                    txtGrade_4.Text = vGrade_4
                End If
                If txtSchool_4.Text = "" Then
                    txtSchool_4.Text = vSchool_4
                End If
                If txtSchoolAddress_4.Text = "" Then
                    txtSchoolAddress_4.Text = vSchoolAddress_4
                End If
            End If
        End If
    End Sub

    Private Sub ITerms_ValueChanged(sender As Object, e As EventArgs) Handles iTerms.ValueChanged
        iTerms_C.Value = iTerms.Value
    End Sub

    Private Sub DAmountApplied_ValueChanged(sender As Object, e As EventArgs) Handles dAmountApplied.ValueChanged
        dPA_C.Value = dAmountApplied.Value
    End Sub

    Public Sub LoadAmortization(Grid As DevExpress.XtraGrid.GridControl, From_Credit As Boolean)
        Try
            Cursor = Cursors.WaitCursor
            Dim UnearnIncome As Double
            Dim TotalRPPD As Double
            Dim LoansReceivable As Double
            Dim Puwake As Double

            TotalRPPD = dRPPD_C.Value
            Puwake = Puwake_UDI
            'Gi zero ang puwake kay ang UnearnIncome naa naman daan puwake na doble na noon mao zero nalang (For Checking ang status ani)
            Puwake = 0
            UnearnIncome = dUDI_C.Value
            LoansReceivable = dFA_C.Value

            With Temp_DT
                .Rows.Clear()
                .Rows.Add("", "", "", "", "", "", dAmountApplied.Text, FormatNumber(UnearnIncome, 2), FormatNumber(TotalRPPD, 2), FormatNumber(LoansReceivable, 2))

                If cbxProduct.Text.Contains("CHECK") Then
                    .Rows.Add(1, Format(dtpDate.Value.AddDays(iTerms.Value), "MM.dd.yy"), FormatNumber(Decimal50V2(dAmountApplied.Value), 2), FormatNumber(Decimal50V2(UnearnIncome - Puwake), 2), FormatNumber(Decimal50V2(TotalRPPD), 2), FormatNumber(Decimal50V2(dAmountApplied.Value), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(1 - 1)("Outstanding Principal")) - Decimal50V2(dAmountApplied.Value)), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(1 - 1)("Unearn Income")) - Decimal50V2(UnearnIncome - Puwake)), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(1 - 1)("Total_RPPD")) - Decimal50V2(TotalRPPD)), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(1 - 1)("Loans Receivable")) - Decimal50V2(dAmountApplied.Value)), 2))
                Else
                    If Product_Payment = "Daily" Then 'Daily For Microfinance
                        For x As Integer = 1 To iTerms.Value
                            'Policy: Basta ang decimal kay .50 dli i Math.Ceiling
                            .Rows.Add(x, If(dtpFDD.CustomFormat = "", Format(dtpDate.Value.AddDays(x), "MM.dd.yy"), dtpFDD.Value.AddDays(x - 1)), FormatNumber(Decimal50V2(LoansReceivable / iTerms.Value), 2), FormatNumber(Decimal50V2((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value), 2), FormatNumber(TotalRPPD / iTerms.Value, 2), FormatNumber(Decimal50V2(dAmountApplied.Value / iTerms.Value), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT((x - 1))("Outstanding Principal")) - Decimal50V2((dAmountApplied.Value / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT((x - 1))("Unearn Income")) - Decimal50V2(((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT((x - 1))("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT((x - 1))("Loans Receivable")) - Decimal50V2((LoansReceivable / iTerms.Value))), 2))
                        Next
                    ElseIf Product_Payment = "Weekly" Then 'Weekly For Microfinance
                        For x As Integer = 1 To iTerms.Value
                            'Policy: Basta ang decimal kay .50 dli i Math.Ceiling
                            .Rows.Add(x, If(dtpFDD.CustomFormat = "", Format(dtpDate.Value.AddDays(x * 7), "MM.dd.yy"), dtpFDD.Value.AddDays((x - 1) * 7)), FormatNumber(Decimal50V2(LoansReceivable / iTerms.Value), 2), FormatNumber(Decimal50V2((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value), 2), FormatNumber(TotalRPPD / iTerms.Value, 2), FormatNumber(Decimal50V2(dAmountApplied.Value / iTerms.Value), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT((x - 1))("Outstanding Principal")) - Decimal50V2((dAmountApplied.Value / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT((x - 1))("Unearn Income")) - Decimal50V2(((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT((x - 1))("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT((x - 1))("Loans Receivable")) - Decimal50V2((LoansReceivable / iTerms.Value))), 2))
                        Next
                    ElseIf Product_Payment = "Bimonthly" Then 'For Microfinance
                        For x As Integer = 1 To iTerms.Value
                            'Policy: Basta ang decimal kay .50 dli i Math.Ceiling
                            .Rows.Add((x * 2) - 1, If(dtpFDD.CustomFormat = "", If(Format(dtpDate.Value, "dd") >= 6 And Format(dtpDate.Value, "dd") <= 20, Format(dtpDate.Value.AddMonths(x - 1), String.Format("MM.{0}.yyyy", Date.DaysInMonth(Format(dtpDate.Value.AddMonths(x - 1), "yyyy"), Format(dtpDate.Value.AddMonths(x - 1), "MM")))), If(Format(dtpDate.Value, "dd") >= 1 And Format(dtpDate.Value, "dd") <= 5, Format(dtpDate.Value.AddMonths(x - 1), "MM.15.yyyy"), Format(dtpDate.Value.AddMonths(x), "MM.15.yyyy"))), Format(dtpFDD.Value.AddMonths(x - 1), "MM.dd.yy")), FormatNumber(Decimal50V2(LoansReceivable / (iTerms.Value * 2)), 2), FormatNumber(Decimal50V2((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / (iTerms.Value * 2)), 2), FormatNumber(TotalRPPD / (iTerms.Value * 2), 2), FormatNumber(Decimal50V2(dAmountApplied.Value / (iTerms.Value * 2)), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT((x - 1) * 2)("Outstanding Principal")) - Decimal50V2((dAmountApplied.Value / (iTerms.Value * 2)))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT((x - 1) * 2)("Unearn Income")) - Decimal50V2(((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / (iTerms.Value * 2)))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT((x - 1) * 2)("Total_RPPD")) - Decimal50V2((TotalRPPD / (iTerms.Value * 2)))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT((x - 1) * 2)("Loans Receivable")) - Decimal50V2((LoansReceivable / (iTerms.Value * 2)))), 2))
                            If x = iTerms.Value Then
                                'Ang reason ani kay ang last row didto i add og minus ang puwake
                                .Rows.Add(x * 2, If(dtpFDD.CustomFormat = "" Or Format(dtpFDD.Value, "dd") = 15 Or Format(dtpFDD.Value, "dd") = 31, If(Format(DateValue(Temp_DT((x * 2) - 1)("Due Date")), "dd") = 15, If(Format(dtpDate.Value, "dd") >= 1 And Format(dtpDate.Value, "dd") <= 5, Format(dtpDate.Value.AddMonths(x - 1), String.Format("MM.{0}.yyyy", Date.DaysInMonth(Format(dtpDate.Value.AddMonths(x - 1), "yyyy"), Format(dtpDate.Value.AddMonths(x - 1), "MM")))), Format(dtpDate.Value.AddMonths(x), String.Format("MM.{0}.yyyy", Date.DaysInMonth(Format(dtpDate.Value.AddMonths(x), "yyyy"), Format(dtpDate.Value.AddMonths(x), "MM"))))), Format(dtpDate.Value.AddMonths(x), "MM.15.yyyy")), If(Format(dtpFDD.Value, "dd") = 20 Or Format(dtpFDD.Value, "dd") = 25, Format(DateValue(Temp_DT((x * 2) - 1)("Due Date")).AddDays(15), String.Format("MM.{0}.yyyy", If(Format(dtpFDD.Value, "dd") = 20, "05", 10))), Format(DateValue(Temp_DT((x * 2) - 1)("Due Date")).AddDays(15), "MM.dd.yy"))), FormatNumber(Decimal50V2(LoansReceivable / (iTerms.Value * 2)), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x + (1 * (x - 1)))("Unearn Income"))), 2), FormatNumber(Decimal50V2(TotalRPPD / (iTerms.Value * 2)), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x + (1 * (x - 1)))("Outstanding Principal"))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x + (1 * (x - 1)))("Outstanding Principal")) - Decimal50V2(CDbl(Temp_DT(x + (1 * (x - 1)))("Outstanding Principal")))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x + (1 * (x - 1)))("Unearn Income")) - Decimal50V2(CDbl(Temp_DT(x + (1 * (x - 1)))("Unearn Income")))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x + (1 * (x - 1)))("Total_RPPD")) - Decimal50V2((TotalRPPD / (iTerms.Value * 2)))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x + (1 * (x - 1)))("Loans Receivable")) - Decimal50V2((LoansReceivable / (iTerms.Value * 2)))), 2))
                            Else
                                .Rows.Add(x * 2, If(dtpFDD.CustomFormat = "" Or Format(dtpFDD.Value, "dd") = 15 Or Format(dtpFDD.Value, "dd") = 31, If(Format(DateValue(Temp_DT((x * 2) - 1)("Due Date")), "dd") = 15, If(Format(dtpDate.Value, "dd") >= 1 And Format(dtpDate.Value, "dd") <= 5, Format(dtpDate.Value.AddMonths(x - 1), String.Format("MM.{0}.yyyy", Date.DaysInMonth(Format(dtpDate.Value.AddMonths(x - 1), "yyyy"), Format(dtpDate.Value.AddMonths(x - 1), "MM")))), Format(dtpDate.Value.AddMonths(x), String.Format("MM.{0}.yyyy", Date.DaysInMonth(Format(dtpDate.Value.AddMonths(x), "yyyy"), Format(dtpDate.Value.AddMonths(x), "MM"))))), Format(dtpDate.Value.AddMonths(x), "MM.15.yyyy")), If(Format(dtpFDD.Value, "dd") = 20 Or Format(dtpFDD.Value, "dd") = 25, Format(DateValue(Temp_DT((x * 2) - 1)("Due Date")).AddDays(15), String.Format("MM.{0}.yyyy", If(Format(dtpFDD.Value, "dd") = 20, "05", 10))), Format(DateValue(Temp_DT((x * 2) - 1)("Due Date")).AddDays(15), "MM.dd.yy"))), FormatNumber(Decimal50V2(LoansReceivable / (iTerms.Value * 2)), 2), FormatNumber(Decimal50V2((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / (iTerms.Value * 2)), 2), FormatNumber(Decimal50V2(TotalRPPD / (iTerms.Value * 2)), 2), FormatNumber(Decimal50V2(dAmountApplied.Value / (iTerms.Value * 2)), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x + (1 * (x - 1)))("Outstanding Principal")) - Decimal50V2((dAmountApplied.Value / (iTerms.Value * 2)))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x + (1 * (x - 1)))("Unearn Income")) - Decimal50V2(((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / (iTerms.Value * 2)))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x + (1 * (x - 1)))("Total_RPPD")) - Decimal50V2((TotalRPPD / (iTerms.Value * 2)))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x + (1 * (x - 1)))("Loans Receivable")) - Decimal50V2((LoansReceivable / (iTerms.Value * 2)))), 2))
                            End If
                        Next
                    Else
                        For x As Integer = 1 To iTerms.Value
                            If Product_LastPrincipal = "Yes" Then 'For Payday and Salary Loans
                                'For Agriculture Loan
                                If cbxProduct.Text.ToUpper.Contains("AGRICULTURE") Or cbxProduct.Text.ToUpper.Contains("FARM EQUIPMENT") Or cbxProduct.Text.ToUpper.Contains("CREDIT LINE") Then ' Agriculture Loan for Surigao and Butuan Branch
                                    'Policy: Basta ang decimal kay .50 dli i Math.Ceiling
                                    If x = iTerms.Value Then
                                        'Ang reason ani kay ang last row didto i add og minus ang puwake
                                        If cbxA.Checked Then 'Deduct all interest
                                            .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(Decimal50V2(dAmountApplied.Value), 2), FormatNumber(0, 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(Decimal50V2(dAmountApplied.Value), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal")) - Decimal50V2(dAmountApplied.Value)), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income"))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(If(Temp_DT.Rows.Count = 1, 0, 1))("Loans Receivable")) - Decimal50V2(dAmountApplied.Value)), 2))
                                        ElseIf cbxD.Checked Then 'FOR KORONADAL FARM EQUIPMENT LOAN KAY EVERY 6TH MONTH ANG BAYAD SA PRINCIPAL
                                            .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(Decimal50V2((LoansReceivable - (UnearnIncome - Puwake)) / (iTerms.Value / 6)), 2), FormatNumber(Decimal50V2((UnearnIncome - Puwake) / iTerms.Value), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(Decimal50V2(dAmountApplied.Value / (iTerms_C.Value / 6)), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal")) - Decimal50V2(dAmountApplied.Value / (iTerms_C.Value / 6))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(((UnearnIncome - Puwake) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable")) - FormatNumber(Decimal50V2((LoansReceivable - (UnearnIncome - Puwake)) / (iTerms.Value / 6)), 2)), 2))
                                        Else
                                            .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(Decimal50V2(dAmountApplied.Value + ((UnearnIncome - Puwake) / iTerms.Value)), 2), FormatNumber(Decimal50V2((UnearnIncome - Puwake) / iTerms.Value), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(Decimal50V2(dAmountApplied.Value), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal")) - Decimal50V2(dAmountApplied.Value)), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(((UnearnIncome - Puwake) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable")) - Decimal50V2(dAmountApplied.Value + ((UnearnIncome - Puwake) / iTerms.Value))), 2))
                                        End If
                                    Else
                                        If cbxA.Checked Then 'Deduct all interest
                                            If x = 1 Then
                                                .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(Decimal50V2((UnearnIncome - Puwake)), 2), FormatNumber(Decimal50V2((UnearnIncome - Puwake)), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(0, 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal"))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(((UnearnIncome - Puwake)))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable")) - FormatNumber(Decimal50V2((UnearnIncome - Puwake)), 2)), 2))
                                            Else
                                                .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(0, 2), FormatNumber(0, 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(0, 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal"))), 2), FormatNumber(0, 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(0, 2))
                                            End If
                                        ElseIf cbxD.Checked Then 'FOR KORONADAL FARM EQUIPMENT LOAN KAY EVERY 6TH MONTH ANG BAYAD SA PRINCIPAL
                                            If x = 1 Then
                                                .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(Decimal50V2((UnearnIncome - Puwake) / iTerms.Value) * 6, 2), FormatNumber(Decimal50V2((UnearnIncome - Puwake) / iTerms.Value), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(0, 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal"))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(((UnearnIncome - Puwake) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable")) - FormatNumber(Decimal50V2((UnearnIncome - Puwake) / iTerms.Value) * 6, 2)), 2))
                                            ElseIf x / 6 = CInt(x / 6) Then
                                                .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(Decimal50V2(LoansReceivable / (iTerms.Value / 6)), 2), FormatNumber(Decimal50V2((UnearnIncome - Puwake) / iTerms.Value), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(Decimal50V2(dAmountApplied.Value / (iTerms_C.Value / 6)), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal")) - Decimal50V2(dAmountApplied.Value / (iTerms_C.Value / 6))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(((UnearnIncome - Puwake) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable")) - FormatNumber(Decimal50V2(LoansReceivable / (iTerms.Value / 6)), 2)), 2))
                                            Else
                                                .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(0, 2), FormatNumber(Decimal50V2((UnearnIncome - Puwake) / iTerms.Value), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(0, 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal"))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(((UnearnIncome - Puwake) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable"))), 2))
                                            End If
                                        Else
                                            .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(Decimal50V2((UnearnIncome - Puwake) / iTerms.Value), 2), FormatNumber(Decimal50V2((UnearnIncome - Puwake) / iTerms.Value), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(0, 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal"))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(((UnearnIncome - Puwake) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable")) - FormatNumber(Decimal50V2((UnearnIncome - Puwake) / iTerms.Value), 2)), 2))
                                        End If
                                    End If
                                Else 'For Payday and Salary Loans
                                    'Policy: Basta ang decimal kay .50 dli i Math.Ceiling
                                    If cbxA.Checked Then 'Deduct all interest
                                        If x = iTerms.Value Then
                                            'Ang reason ani kay ang last row didto i add og minus ang puwake
                                            .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(Decimal50V2((TotalRPPD / iTerms.Value) + dAmountApplied.Value + ((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value)), 2), FormatNumber(Decimal50V2((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(Decimal50V2(dAmountApplied.Value), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal")) - Decimal50V2(dAmountApplied.Value)), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable")) - Decimal50V2((TotalRPPD / iTerms.Value) + dAmountApplied.Value + ((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value))), 2))
                                        Else
                                            .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(Decimal50V2((TotalRPPD / iTerms.Value) + (UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value), 2), FormatNumber(Decimal50V2((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(0, 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal"))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable")) - FormatNumber(Decimal50V2((TotalRPPD / iTerms.Value) + (UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value), 2)), 2))
                                        End If
                                    ElseIf cbxD.Checked Then 'FOR KORONADAL FARM EQUIPMENT LOAN KAY EVERY 6TH MONTH ANG BAYAD SA PRINCIPAL
                                        If x = 1 Then
                                            .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(Decimal50V2((UnearnIncome - Puwake) / iTerms.Value) * 6, 2), FormatNumber(Decimal50V2((UnearnIncome - Puwake) / iTerms.Value), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(0, 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal"))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(((UnearnIncome - Puwake) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable")) - FormatNumber(Decimal50V2((UnearnIncome - Puwake) / iTerms.Value) * 6, 2)), 2))
                                        ElseIf x / 6 = CInt(x / 6) Then
                                            .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(Decimal50V2(LoansReceivable / (iTerms.Value / 6)), 2), FormatNumber(Decimal50V2((UnearnIncome - Puwake) / iTerms.Value), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(Decimal50V2(dAmountApplied.Value / (iTerms_C.Value / 6)), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal")) - Decimal50V2(dAmountApplied.Value / (iTerms_C.Value / 6))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(((UnearnIncome - Puwake) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable")) - FormatNumber(Decimal50V2(LoansReceivable / (iTerms.Value / 6)), 2)), 2))
                                        Else
                                            .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(0, 2), FormatNumber(Decimal50V2((UnearnIncome - Puwake) / iTerms.Value), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(0, 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal"))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(((UnearnIncome - Puwake) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable"))), 2))
                                        End If
                                    Else
                                        If x = iTerms.Value Then
                                            'Ang reason ani kay ang last row didto i add og minus ang puwake
                                            .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(Decimal50V2((TotalRPPD / iTerms.Value) + dAmountApplied.Value + ((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value)), 2), FormatNumber(Decimal50V2((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(Decimal50V2(dAmountApplied.Value), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal")) - Decimal50V2(dAmountApplied.Value)), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable")) - Decimal50V2((TotalRPPD / iTerms.Value) + dAmountApplied.Value + ((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value))), 2))
                                        Else
                                            .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(Decimal50V2((TotalRPPD / iTerms.Value) + (UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value), 2), FormatNumber(Decimal50V2((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(0, 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal"))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable")) - FormatNumber(Decimal50V2((TotalRPPD / iTerms.Value) + (UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value), 2)), 2))
                                        End If
                                    End If
                                End If
                            Else
                                'Policy: Basta ang decimal kay .50 dli i Math.Ceiling
                                If x = iTerms.Value Then
                                    'Ang reason ani kay ang last row didto i add og minus ang puwake
                                    .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(Decimal50V2(LoansReceivable / iTerms.Value), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income"))), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal"))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal")) - Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal")))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable")) - Decimal50V2((LoansReceivable / iTerms.Value))), 2))
                                Else
                                    .Rows.Add(x, Format(dtpDate.Value.AddMonths(x), "MM.dd.yy"), FormatNumber(Decimal50V2(LoansReceivable / iTerms.Value), 2), FormatNumber(Decimal50V2((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value), 2), FormatNumber(Decimal50V2(TotalRPPD / iTerms.Value), 2), FormatNumber(Decimal50V2(dAmountApplied.Value / iTerms.Value), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Outstanding Principal")) - Decimal50V2((dAmountApplied.Value / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Unearn Income")) - Decimal50V2(((UnearnIncome + If(IsRoundUp(dAmountApplied.Value / iTerms.Value), 0, Puwake)) / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Total_RPPD")) - Decimal50V2((TotalRPPD / iTerms.Value))), 2), FormatNumber(Decimal50V2(CDbl(Temp_DT(x - 1)("Loans Receivable")) - Decimal50V2((LoansReceivable / iTerms.Value))), 2))
                                    'End If
                                End If
                            End If
                        Next
                    End If
                End If
            End With

            Dim T_Monthly As Double
            Dim T_Interest As Double
            Dim T_RPPD As Double
            Dim T_Principal As Double
            For x As Integer = 1 To Temp_DT.Rows.Count - 1
                T_Monthly += CDbl(Temp_DT(x)("Monthly"))
                T_Interest += CDbl(Temp_DT(x)("Interest Income"))
                T_RPPD += CDbl(Temp_DT(x)("RPPD"))
                T_Principal += CDbl(Temp_DT(x)("Principal Allocation"))
            Next
            'End If
            'Policy: Basta ang decimal kay .50 dli i Math.Ceiling
            If From_Credit Then
                Temp_DT.Rows.Add("", "TOTAL", FormatNumber(T_Monthly, 2), FormatNumber(T_Interest, 2), FormatNumber(T_RPPD, 2), FormatNumber(T_Principal, 2), "", "", "", "")
            End If
            Grid.DataSource = Temp_DT
            If CompanyMode = 0 Then
            Else
                GridColumn15.VisibleIndex = 0
                GridColumn16.VisibleIndex = 1
                GridColumn17.VisibleIndex = 2
                GridColumn18.VisibleIndex = 3
                GridColumn19.VisibleIndex = 4
                GridColumn20.VisibleIndex = 5
                GridColumn21.VisibleIndex = 6
                GridColumn23.VisibleIndex = 7
                GridColumn22.VisibleIndex = 8
                GridColumn24.VisibleIndex = 9
            End If
            If GridView3.RowCount > 3 And (btnSave_F.Text <> "&Save" Or btnSave_F.Visible = False) Then
                btnEarly.Enabled = True
            Else
                btnEarly.Enabled = False
            End If

            If GridView3.RowCount > 22 Then
                GridColumn16.Width = 92
            Else
                GridColumn16.Width = 109
            End If
            Cursor = Cursors.Default
        Catch ex As Exception
            Cursor = Cursors.Default
            TriggerBugReport("Credit Application - Load Amortization", ex.Message.ToString)
        End Try
    End Sub

    Private Sub DInterest_C_ValueChanged(sender As Object, e As EventArgs) Handles dInterest_C.ValueChanged
        ComputeNMA()
    End Sub

    Private Sub DInterest_T_ValueChanged(sender As Object, e As EventArgs) Handles dInterest_T.ValueChanged
        If cbxProduct.Text.Contains("CHECK REDISCOUNTING") Then
            Interest_UDI = dInterest_T.Value
            Product_Interest = dInterest_T.Value
            dInterest_C.Value = Product_Interest * Identify_Terms(iTerms_C.Value)
        Else
            Interest_UDI = dInterest_T.Value / 12
            Product_Interest = dInterest_T.Value / 12
            dInterest_C.Value = Product_Interest * Identify_Terms(iTerms_C.Value)
        End If
    End Sub

    Private Sub ITerms_C_ValueChanged(sender As Object, e As EventArgs) Handles iTerms_C.ValueChanged
        If iTerms_C.Value > 0 Then
            If cbxA.Checked Then
                iAdvancePayment.MaxValue = iTerms_C.Value
                iAdvancePayment.Value = iTerms_C.Value
            ElseIf cbxB.Checked Then
                iAdvancePayment.MaxValue = iTerms_C.Value - 1
                iAdvancePayment.Value = 0
            ElseIf cbxC.Checked Then
                iAdvancePayment.MaxValue = iTerms_C.Value - 1
                iAdvancePayment.Value = 1
            ElseIf cbxD.Checked Then
                iAdvancePayment.MaxValue = iTerms_C.Value - 1
                iAdvancePayment.Value = 6
            Else
                iAdvancePayment.MaxValue = iTerms_C.Value - 1
            End If
        Else
            iAdvancePayment.MaxValue = 0
        End If
        If Product_AdvancePayment = "Yes" Then
            LabelX104.Visible = True
            iAdvancePayment.Visible = True
            If cbxProduct.Text.ToUpper.Contains("FARM EQUIPMENT") Or cbxProduct.Text.ToUpper.Contains("CREDIT LINE") Then
            Else
                iAdvancePayment.Value = 1
            End If
            LabelX105.Visible = True

            LabelX128.Location = New Point(6, 376)
            rNote.Location = New Point(139, 376)
        Else
            LabelX104.Visible = False
            iAdvancePayment.Visible = False
            LabelX105.Visible = False

            LabelX128.Location = LabelX104.Location
            rNote.Location = iAdvancePayment.Location
        End If

        dInterest_C.Value = Product_Interest * Identify_Terms(iTerms_C.Value)
        If CompanyMode = 0 Then
        Else
            If Math.Ceiling(Identify_Terms(iTerms_C.Value)) < RPPD_Start Then
                'Policy: nga kung 7 ang terms dha ra mag start ang RPPD
                dRPPDRate_C.Value = 0
                dRPPDRate_T.Value = 0
                If Interest_RPPD = 0 Then
                    Interest_RPPD = Last_RPPD
                End If
            ElseIf Math.Ceiling(Identify_Terms(iTerms_C.Value)) < 12 Then
                'Policy: Katong kung 10 ang terms = (3.0 * 10) / 12 = 2.5 (Bag-o nga Interest RPPD)
                If CompanyMode = 0 Then
                    dRPPDRate_C.Value = 0
                    dRPPDRate_T.Value = 0
                Else
                    dRPPDRate_T.Value = Interest_RPPD
                    dRPPDRate_C.Value = (Interest_RPPD * Identify_Terms(iTerms_C.Value)) / 12
                End If
            Else
                If CompanyMode = 0 Then
                    dRPPDRate_C.Value = 0
                    dRPPDRate_T.Value = 0
                Else
                    dRPPDRate_T.Value = Interest_RPPD
                    dRPPDRate_C.Value = (Interest_RPPD * Identify_Terms(iTerms_C.Value)) / 12
                End If
            End If
            If cbxTerms.Text = "Daily" Then
                If dtpDate.Value.AddDays(iTerms.Value) < dtpDate.Value.AddMonths(RPPD_Start) Then
                    dRPPDRate_C.Value = 0
                    dRPPDRate_T.Value = 0
                    If Interest_RPPD = 0 Then
                        Interest_RPPD = Last_RPPD
                    End If
                End If
            End If
            If cbxTerms.Text = "Weekly" Then
                If dtpDate.Value.AddDays(iTerms.Value * 7) < dtpDate.Value.AddMonths(RPPD_Start) Then
                    dRPPDRate_C.Value = 0
                    dRPPDRate_T.Value = 0
                    If Interest_RPPD = 0 Then
                        Interest_RPPD = Last_RPPD
                    End If
                End If
            End If
        End If

        If cbxProduct.Text.Contains("PAYDAY") And Identify_Terms(iTerms_C.Value) > 2 Then
            dSC_C.Value = 100
        Else
            dSC_C.Value = 0
        End If

        ComputeNMA()
    End Sub

    Private Sub DRPPDRate_C_ValueChanged(sender As Object, e As EventArgs) Handles dRPPDRate_C.ValueChanged
        ComputeNMA()
    End Sub

    Private Sub DRPPDRate_T_ValueChanged(sender As Object, e As EventArgs) Handles dRPPDRate_T.ValueChanged
        If FirstLoad Then
            Exit Sub
        End If

        If dRPPDRate_T.Value > 0 Then
            Last_RPPD = dRPPDRate_T.Value
        End If
        Interest_RPPD = dRPPDRate_T.Value
        If cbxProduct.Text.Contains("CHECK REDISCOUNTING") Then
            'dRPPDRate_C.Value = dRPPDRate_T.Value
            dRPPDRate_C.Value = (dRPPDRate_T.Value * Identify_Terms(iTerms_C.Value)) / 12
        Else
            dRPPDRate_C.Value = (dRPPDRate_T.Value * Identify_Terms(iTerms_C.Value)) / 12
        End If
    End Sub

    Private Sub DPA_C_ValueChanged(sender As Object, e As EventArgs) Handles dPA_C.ValueChanged
        ComputeNMA()
        If cbxProduct.Text.Contains("SALARY") Or cbxProduct.Text.Contains("PAYDAY") Then
            dSC_C.Value = 0
            dMiscellaneous_C.Value = 0
            dDeductBalance_C.Value = 0
            dInsurance_C.Value = 0
            dAppraisalFee_C.Value = 0
            dCIFee_C.Value = 0
        End If

        If UpdateAmount Then
            Exit Sub
        End If
        UpdatePercent = True
        dSC_C.Value = dAmountApplied.Value * (dSC_Rate.Value / 100)
        UpdatePercent = False

        If cbxProduct.Text.Contains("SHOWMONEY") Or cbxBill.Checked Then
            dNetProceeds_C.Value = dPA_C.Value - If(cbxAdvancePayment.Checked, 0, dAdvancePayment_C.Value)
        Else
            dNetProceeds_C.Value = dPA_C.Value - dTD_C.Value
        End If
        If cbxOptions.SelectedIndex = 2 Then
            dNetProceeds_C.Value = dPA_C.Value - If(cbxAdvancePayment.Checked, 0, dAdvancePayment_C.Value)
        End If
    End Sub

    Private Function Identify_Terms(d As Double)
        If cbxTerms.Text = "DAY" Or cbxTerms.Text = "Daily" Then
            d /= 30
        End If
        Return d
    End Function

    Private Sub DMR_C_ValueChanged(sender As Object, e As EventArgs) Handles dMR_C.ValueChanged
        dMR_C2.Value = dMR_C.Value / 2
    End Sub

    Private Sub DGMA_C_ValueChanged(sender As Object, e As EventArgs) Handles dGMA_C.ValueChanged
        dGMA_C2.Value = dGMA_C.Value / 2
    End Sub

    Private Sub DNMA_C_ValueChanged(sender As Object, e As EventArgs) Handles dNMA_C.ValueChanged
        dNMA_C2.Value = dNMA_C.Value / 2

        If Product_AdvancePayment = "Yes" Then 'For Real Estate
            iAdvancePayment.Visible = True
            If Product_LastPrincipal = "Yes" Then
                dAdvancePayment_C.Value = dMR_C.Value * iAdvancePayment.Value
            Else
                dAdvancePayment_C.Value = dNMA_C.Value * iAdvancePayment.Value
            End If
        Else
            iAdvancePayment.Visible = False
            dAdvancePayment_C.Value = 0
        End If
    End Sub

    Private Sub ComputeNMA()
        If FirstLoad Or dAmountApplied.Value = 0 Or iTerms.Value = 0 Then 'ADDED 09/02/2021 FIX ON RESULT OF NAN
            Exit Sub
        End If
        Cursor = Cursors.WaitCursor

        ManualAmortization = False
        dUDI_C.Value = dPA_C.Value * (Math.Round(dInterest_C.Value, 4, MidpointRounding.AwayFromZero) / 100)
        UDI_F = dPA_C.Value * (Math.Round(dInterest_C.Value, 4, MidpointRounding.AwayFromZero) / 100)

        dRPPD_C.Value = Math.Round(dPA_C.Value * (dRPPDRate_C.Value / 100), 2, MidpointRounding.AwayFromZero)
        Dim MonthlyRPPD As Double = FormatNumber(Decimal50V2(dRPPD_C.Value / iTerms.Value), 2)
        dRPPD_C.Value = FormatNumber(MonthlyRPPD * iTerms.Value, 2)
        RPPD_F = dPA_C.Value * (dRPPDRate_C.Value / 100)

        If Product_UDI = "No" Then 'For Payday and Showmoney Loans
            dFA_C.Value = dPA_C.Value + dRPPD_C.Value
            FA_F = dPA_C.Value + dRPPD_C.Value
        Else
            dFA_C.Value = dPA_C.Value + dUDI_C.Value + dRPPD_C.Value
            FA_F = dPA_C.Value + UDI_F + dRPPD_C.Value
        End If

        If Product_LastPrincipal = "Yes" Then 'For Car Loans
            dMR_C.Value = Decimal50(dUDI_C.Value / Identify_Terms(iTerms_C.Value))
            If Product_UDI = "No" Then
                dMR_C.Value = 0
            End If
        Else
            If dRPPD_C.Value > 0 Then
                If Product_Payment = "Bimonthly" Then 'For Payday and Salary Loans
                    If (SplitDecimal(dRPPD_C.Value / (Identify_Terms(iTerms_C.Value) * 2)) <> 50 And SplitDecimal(dRPPD_C.Value / (Identify_Terms(iTerms_C.Value) * 2)) > 0) Then
                        Puwake_MR = ((FormatNumber(Decimal50(RPPD_F / (Identify_Terms(iTerms_C.Value) * 2)), 2) * (Identify_Terms(iTerms_C.Value) * 2)) - RPPD_F)
                        If dRPPD_C.Value <> (dPA_C.Value * (dRPPDRate_C.Value / 100)) + If(Puwake_MR > 0, Puwake_MR, 0) Then
                            dRPPD_C.Value = (dPA_C.Value * (dRPPDRate_C.Value / 100)) + If(Puwake_MR > 0, Puwake_MR, 0)
                        End If
                    End If
                Else
                    Puwake_MR = ((FormatNumber(Decimal50(RPPD_F / Identify_Terms(iTerms_C.Value)), 2) * Identify_Terms(iTerms_C.Value)) - RPPD_F)
                    If dRPPD_C.Value <> (dPA_C.Value * (dRPPDRate_C.Value / 100)) + If(Puwake_MR > 0, Puwake_MR, 0) Then
                        dRPPD_C.Value = (dPA_C.Value * (dRPPDRate_C.Value / 100)) + If(Puwake_MR > 0, Puwake_MR, 0)
                    End If
                End If
            End If
            dMR_C.Value = Decimal50(dRPPD_C.Value / Identify_Terms(iTerms_C.Value))
        End If
        If Product_UDI = "No" Then 'For Payday and Showmoney Loans
            dFA_C.Value = dPA_C.Value + dRPPD_C.Value
            FA_F = dPA_C.Value + dRPPD_C.Value
        Else
            dFA_C.Value = dPA_C.Value + dUDI_C.Value + dRPPD_C.Value
            FA_F = dPA_C.Value + UDI_F + dRPPD_C.Value
        End If

        If Product_LastPrincipal = "Yes" Then 'For Car Loans
            If dFA_C.Value > 0 Then
                Puwake_UDI = ((FormatNumber(Decimal50(dUDI_C.Value / (Identify_Terms(iTerms_C.Value))), 2) * (Identify_Terms(iTerms_C.Value))) - dUDI_C.Value)
                dUDI_C.Value = (dPA_C.Value * (Math.Round(dInterest_C.Value, 2, MidpointRounding.AwayFromZero) / 100)) + If(Puwake_UDI > 0, Puwake_UDI, 0)
                dFA_C.Value = dPA_C.Value + dUDI_C.Value + dRPPD_C.Value
            End If
        ElseIf cbxProduct.Text.Contains("CHECK") Then
            dRPPD_C.Value = Math.Ceiling(dRPPD_C.Value)
            dMR_C.Value = dRPPD_C.Value

            dFA_C.Value = dPA_C.Value + dRPPD_C.Value
            FA_F = dPA_C.Value + dRPPD_C.Value
        Else
            If dFA_C.Value > 0 Then
                If Product_Payment = "Bimonthly" Then 'For Payday and Salary Loans
                    Puwake_UDI = ((FormatNumber(Decimal50(FA_F / (Identify_Terms(iTerms_C.Value) * 2)), 2) * (Identify_Terms(iTerms_C.Value) * 2)) - FA_F)
                    If dUDI_C.Value <> (dPA_C.Value * (Math.Round(dInterest_C.Value, 2, MidpointRounding.AwayFromZero) / 100)) + If(Puwake_UDI > 0, Puwake_UDI, 0) Then
                        If Puwake_MR > 0 And (SplitDecimal(dRPPD_C.Value / (Identify_Terms(iTerms_C.Value) * 2)) <> 50 And SplitDecimal(dRPPD_C.Value / (Identify_Terms(iTerms_C.Value) * 2)) > 0) Then
                            dUDI_C.Value = (dPA_C.Value * (Math.Round(dInterest_C.Value, 2, MidpointRounding.AwayFromZero) / 100))
                        Else
                            dUDI_C.Value = (dPA_C.Value * (Math.Round(dInterest_C.Value, 2, MidpointRounding.AwayFromZero) / 100)) + If(Puwake_UDI > 0, Puwake_UDI, 0)
                        End If
                        If Product_UDI = "No" Then 'For Payday and Showmoney Loans
                            dFA_C.Value = dPA_C.Value + dRPPD_C.Value
                        Else
                            dFA_C.Value = dPA_C.Value + dUDI_C.Value + dRPPD_C.Value
                        End If
                    End If
                Else
                    Puwake_UDI = ((FormatNumber(Decimal50(FA_F / Identify_Terms(iTerms_C.Value)), 2) * Identify_Terms(iTerms_C.Value)) - FA_F)
                    If dUDI_C.Value <> (dPA_C.Value * (dInterest_C.Value / 100)) + If(Puwake_UDI > 0, Puwake_UDI, 0) Then
                        If Puwake_MR > 0 And (SplitDecimal(dRPPD_C.Value / Identify_Terms(iTerms_C.Value)) <> 50 And SplitDecimal(dRPPD_C.Value / Identify_Terms(iTerms_C.Value)) > 0) Then
                            dUDI_C.Value = (dPA_C.Value * (Math.Round(dInterest_C.Value, 2, MidpointRounding.AwayFromZero) / 100))
                        Else
                            dUDI_C.Value = (dPA_C.Value * (Math.Round(dInterest_C.Value, 2, MidpointRounding.AwayFromZero) / 100)) + If(Puwake_UDI > 0, Puwake_UDI, 0)
                        End If
                        If Product_UDI = "No" Then 'For Payday and Showmoney Loans
                            dFA_C.Value = dPA_C.Value + dRPPD_C.Value
                        Else
                            dFA_C.Value = dPA_C.Value + dUDI_C.Value + dRPPD_C.Value
                        End If
                    End If
                End If
            End If
        End If

        If Product_UDI = "No" Then 'For Payday and Showmoney Loans
            dMiscellaneous_C.Value = dUDI_C.Value
            LabelX97.Text = "Advance Interest :"
        Else
            dMiscellaneous_C.Value = 0
            LabelX97.Text = "Inspection Fee :"
        End If

        If cbxProduct.Text.Contains("CHECK") Then
            dGMA_C.Value = Decimal50(dFA_C.Value)
        Else
            dGMA_C.Value = Decimal50(dFA_C.Value / Identify_Terms(iTerms_C.Value))
        End If

        If Product_LastPrincipal = "Yes" Then 'For Car Loans
            If cbxProduct.Text.ToUpper.Contains("FARM EQUIPMENT") And Branch_Code = "KOR" And cbxD.Checked Then 'FOR KORONADAL FARM EQUIPMENT LOAN KAY EVERY 6TH MONTH BAYAD
                dNMA_C.Value = dPA_C.Value / (iTerms_C.Value / 6)
            Else
                dNMA_C.Value = Decimal50(dPA_C.Value + dMR_C.Value)
            End If
        Else
            dNMA_C.Value = Decimal50(dGMA_C.Value - dMR_C.Value)
        End If
        LoadAmortization(GridControl3, True)
        Cursor = Cursors.Default
    End Sub

    Private Sub DAppraisalFee_C_ValueChanged(sender As Object, e As EventArgs) Handles dAppraisalFee_C.ValueChanged
        dTD_C.Value = dTPF_C.Value + dSC_C.Value + dMiscellaneous_C.Value + dInsurance_C.Value + dDeductBalance_C.Value + dAdvancePayment_C.Value + dAppraisalFee_C.Value + dCIFee_C.Value
    End Sub

    Private Sub DCIFee_C_ValueChanged(sender As Object, e As EventArgs) Handles dCIFee_C.ValueChanged
        dTD_C.Value = dTPF_C.Value + dSC_C.Value + dMiscellaneous_C.Value + dInsurance_C.Value + dDeductBalance_C.Value + dAdvancePayment_C.Value + dAppraisalFee_C.Value + dCIFee_C.Value
    End Sub

    Private Sub DTPF_C_ValueChanged(sender As Object, e As EventArgs) Handles dTPF_C.ValueChanged
        dTD_C.Value = dTPF_C.Value + dSC_C.Value + dMiscellaneous_C.Value + dInsurance_C.Value + dDeductBalance_C.Value + dAdvancePayment_C.Value + dAppraisalFee_C.Value + dCIFee_C.Value
    End Sub

    Private Sub DAdvancePayment_C_ValueChanged(sender As Object, e As EventArgs) Handles dAdvancePayment_C.ValueChanged
        dTD_C.Value = dTPF_C.Value + dSC_C.Value + dMiscellaneous_C.Value + dInsurance_C.Value + dDeductBalance_C.Value + dAdvancePayment_C.Value + dAppraisalFee_C.Value + dCIFee_C.Value
    End Sub

    Private Sub DSC_C_V2_ValueChanged(sender As Object, e As EventArgs) Handles dSC_C.ValueChanged
        If UpdatePercent Then
            Exit Sub
        End If
        UpdateAmount = True
        dSC_Rate.Value = (dSC_C.Value / dAmountApplied.Value) * 100
        UpdateAmount = False
    End Sub

    Private Sub DSC_C_ValueChanged(sender As Object, e As EventArgs) Handles dSC_C.ValueChanged
        dTD_C.Value = dTPF_C.Value + dSC_C.Value + dMiscellaneous_C.Value + dInsurance_C.Value + dDeductBalance_C.Value + dAdvancePayment_C.Value + dAppraisalFee_C.Value + dCIFee_C.Value
    End Sub

    Private Sub DMiscellaneous_C_ValueChanged(sender As Object, e As EventArgs) Handles dMiscellaneous_C.ValueChanged
        dTD_C.Value = dTPF_C.Value + dSC_C.Value + dMiscellaneous_C.Value + dInsurance_C.Value + dDeductBalance_C.Value + dAdvancePayment_C.Value + dAppraisalFee_C.Value + dCIFee_C.Value
    End Sub

    Private Sub DDeductBalance_C_ValueChanged(sender As Object, e As EventArgs) Handles dDeductBalance_C.ValueChanged
        dTD_C.Value = dTPF_C.Value + dSC_C.Value + dMiscellaneous_C.Value + dInsurance_C.Value + dDeductBalance_C.Value + dAdvancePayment_C.Value + dAppraisalFee_C.Value + dCIFee_C.Value
    End Sub

    Private Sub DInsurance_C_ValueChanged(sender As Object, e As EventArgs) Handles dInsurance_C.ValueChanged
        dTD_C.Value = dTPF_C.Value + dSC_C.Value + dMiscellaneous_C.Value + dInsurance_C.Value + dDeductBalance_C.Value + dAdvancePayment_C.Value + dAppraisalFee_C.Value + dCIFee_C.Value
    End Sub

    Private Sub DTD_C_ValueChanged(sender As Object, e As EventArgs) Handles dTD_C.ValueChanged
        If cbxProduct.Text.Contains("SHOWMONEY") Or cbxBill.Checked Then
            dNetProceeds_C.Value = dPA_C.Value - If(cbxAdvancePayment.Checked, 0, dAdvancePayment_C.Value)
        Else
            dNetProceeds_C.Value = dPA_C.Value - dTD_C.Value
        End If
        If cbxOptions.SelectedIndex = 2 Then
            dNetProceeds_C.Value = dPA_C.Value - If(cbxAdvancePayment.Checked, 0, dAdvancePayment_C.Value)
        End If
    End Sub

    Private Sub GridControl4_DataSourceChanged(sender As Object, e As EventArgs) Handles GridControl4.DataSourceChanged
        Dim TotalPF As Double
        For x As Integer = 0 To GridView4.RowCount - 1
            TotalPF += GridView4.GetRowCellValue(x, "Amount")
        Next
        dTPF_C.Value = TotalPF
    End Sub

    Private Sub BtnTariff_Click(sender As Object, e As EventArgs) Handles btnTariff.Click
        Dim Tariff As New FrmTariff
        With Tariff
            .Principal = dPA_C.Value
            .ShowDialog()
            .Dispose()
        End With
    End Sub

    Private Sub BtnServiceCharge_Click(sender As Object, e As EventArgs) Handles btnServiceCharge.Click
        Dim ServiceC As New FrmServiceCharge
        With ServiceC
            .Principal = dPA_C.Value
            .Renewal = False
            .ShowDialog()
            .Dispose()
        End With
    End Sub

    Private Sub GridView4_CellValueChanged(sender As Object, e As DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs) Handles GridView4.CellValueChanged
        Dim TotalPF As Double
        For x As Integer = 0 To GridView4.RowCount - 1
            If If(IsNumeric(GridView4.GetRowCellValue(x, "Amount")), GridView4.GetRowCellValue(x, "Amount"), 0) < 0 Then
                MsgBox("Negative amount is not allowed in processing fee on row " & x + 1, MsgBoxStyle.Information, "Info")
                GridView4.SetRowCellValue(x, "Amount", 0)
            End If
            TotalPF += If(IsNumeric(GridView4.GetRowCellValue(x, "Amount")), GridView4.GetRowCellValue(x, "Amount"), 0)
        Next
        dTPF_C.Value = TotalPF
    End Sub

    Private Sub GridView4_CustomColumnDisplayText(sender As Object, e As DevExpress.XtraGrid.Views.Base.CustomColumnDisplayTextEventArgs) Handles GridView4.CustomColumnDisplayText
        If e.Column.FieldName = "Amount" AndAlso e.ListSourceRowIndex <> DevExpress.XtraGrid.GridControl.InvalidRowHandle Then
            Try
                e.DisplayText = FormatNumber(Convert.ToDecimal(e.Value), 2)
            Catch ex As Exception
                TriggerBugReport("Loan Application - GridView4_CustomColumnDisplayText", ex.Message.ToString)
            End Try
        End If
    End Sub

    Private Sub DtpDate_ValueChanged(sender As Object, e As EventArgs) Handles dtpDate.ValueChanged
        If cbxProduct.Text.Contains("CHECK") Then
            iTerms.Value = DateDiff(DateInterval.Day, dtpDate.Value, DueDate)
        End If
        LoadAmortization(GridControl3, True)

        GetCreditApplication()
        If cbxOptions.SelectedIndex = 2 And cbxAccountNo.SelectedIndex > -1 Then
            cbxAccountNo_SelectedIndexChanged(sender, e)
        End If
    End Sub

    Private Sub GetCreditApplication()
        txtCreditNumber.Text = DataObject(String.Format("SELECT CONCAT('CA', LPAD({0},3,'0'), {1}, '-', LPAD(COUNT(ID) + 1,4,'0')) FROM credit_application WHERE branch_id = '{0}' AND YEAR(trans_date) = YEAR('{2}') AND MONTH(trans_date) = MONTH('{2}');", Branch_ID, Format(dtpDate.Value, "yyyyMM"), Format(dtpDate.Value, "yyyy-MM-dd")))
    End Sub

    Private Sub IAdvancePayment_ValueChanged(sender As Object, e As EventArgs) Handles iAdvancePayment.ValueChanged
        If Product_AdvancePayment = "Yes" Then 'For Real Estate
            If Product_LastPrincipal = "Yes" Then
                dAdvancePayment_C.Value = dMR_C.Value * iAdvancePayment.Value
            Else
                dAdvancePayment_C.Value = dNMA_C.Value * iAdvancePayment.Value
            End If
        Else
            dAdvancePayment_C.Value = 0
        End If
        LoadAmortization(GridControl3, True)
    End Sub

    Private Sub CbxTerms_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbxTerms.SelectedIndexChanged
        If FirstLoad Then
            Exit Sub
        End If

        Product_Payment = cbxTerms.Text
        If cbxTerms.Text = "DAY" Or cbxTerms.Text = "Daily" Then
            FormatN4(dInterest_C)
            FormatN4(dRPPDRate_C)
        Else
            FormatN2(dInterest_C)
            FormatN2(dRPPDRate_C)
        End If
        ITerms_C_ValueChanged(sender, e)
    End Sub

    Private Sub CbxRoundUp_CheckedChanged(sender As Object, e As EventArgs) Handles cbxRoundUp.CheckedChanged
        If FirstLoad Then
            Exit Sub
        End If

        If cbxRoundUp.Checked Then
            Round_Up = True
        Else
            Round_Up = False
        End If
        ComputeNMA()
    End Sub

    Private Sub BtnEarly_Click(sender As Object, e As EventArgs) Handles btnEarly.Click
        Dim Early As New FrmEarlySettlement
        With Early
            .iTerm.MaxValue = iTerms_C.Value - 1
            .iTerm.MinValue = 1
            If From_SOA Then
                .btnEarly.Enabled = True
            End If
            If .ShowDialog = DialogResult.OK Then
                Close()
            End If
        End With
    End Sub

    Private Sub CbxSA_1_CheckedChanged(sender As Object, e As EventArgs) Handles cbxSA_1.CheckedChanged
        If cbxSA_1.Checked Then
            txtSA_1.Enabled = True
            cbxCA_1.Checked = False
        End If
    End Sub

    Private Sub CbxCA_1_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCA_1.CheckedChanged
        If cbxCA_1.Checked Then
            txtSA_1.Enabled = True
            cbxSA_1.Checked = False
        End If
    End Sub

    Private Sub CbxSA_2_CheckedChanged(sender As Object, e As EventArgs) Handles cbxSA_2.CheckedChanged
        If cbxSA_2.Checked Then
            txtSA_2.Enabled = True
            cbxCA_2.Checked = False
        End If
    End Sub

    Private Sub CbxCA_2_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCA_2.CheckedChanged
        If cbxCA_2.Checked Then
            txtSA_2.Enabled = True
            cbxSA_2.Checked = False
        End If
    End Sub

    Private Sub CbxSA_3_CheckedChanged(sender As Object, e As EventArgs) Handles cbxSA_3.CheckedChanged
        If cbxSA_3.Checked Then
            txtSA_3.Enabled = True
            cbxCA_3.Checked = False
        End If
    End Sub

    Private Sub CbxCA_3_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCA_3.CheckedChanged
        If cbxCA_3.Checked Then
            txtSA_3.Enabled = True
            cbxSA_3.Checked = False
        End If
    End Sub

    Private Sub FrmLoanApplication_KeyDown(sender As Object, e As KeyEventArgs) Handles MyBase.KeyDown
        With FrmMain
            .Keyboard_Press = True
            .Keyboard_Session = .Timer_Session.Interval
        End With
        If e.Control And e.KeyCode = Keys.S Then
            btnSave_F.Focus()
            btnSave_F.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.D1 And User_Type = "ADMIN" Then
            If MsgBoxYes("Are you sure you want to update the amortization schedule?") = MsgBoxResult.Yes Then
                '*************AMORTIZATION SCHEDULE 
                Dim SQL As String = String.Format("UPDATE credit_schedule SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                For x As Integer = 0 To GridView3.RowCount - 2
                    If GridView3.GetRowCellValue(x, "No") = "" Then
                        SQL &= " INSERT INTO credit_schedule SET"
                        SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                        SQL &= String.Format(" `No` = '{0}', ", GridView3.GetRowCellValue(x, "No"))
                        SQL &= String.Format(" DueDate = '{0}', ", "")
                        SQL &= String.Format(" Monthly = '{0}', ", 0)
                        SQL &= String.Format(" InterestIncome = '{0}', ", 0)
                        SQL &= String.Format(" RPPD = '{0}', ", 0)
                        SQL &= String.Format(" PrincipalAllocation = '{0}', ", 0)
                        SQL &= String.Format(" OutstandingPrincipal = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Outstanding Principal")))
                        SQL &= String.Format(" Total_RPPD = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Total_RPPD")))
                        SQL &= String.Format(" UnearnIncome = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Unearn Income")))
                        SQL &= String.Format(" LoansReceivable = '{0}';", CDbl(GridView3.GetRowCellValue(x, "Loans Receivable")))
                    Else
                        SQL &= " INSERT INTO credit_schedule SET"
                        SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                        SQL &= String.Format(" `No` = '{0}', ", GridView3.GetRowCellValue(x, "No"))
                        SQL &= String.Format(" DueDate = '{0}', ", Format(DateValue(GridView3.GetRowCellValue(x, "Due Date")), "yyyy-MM-dd"))
                        SQL &= String.Format(" Monthly = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Monthly")))
                        SQL &= String.Format(" InterestIncome = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Interest Income")))
                        SQL &= String.Format(" RPPD = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "RPPD")))
                        SQL &= String.Format(" PrincipalAllocation = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Principal Allocation")))
                        SQL &= String.Format(" OutstandingPrincipal = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Outstanding Principal")))
                        SQL &= String.Format(" Total_RPPD = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Total_RPPD")))
                        SQL &= String.Format(" UnearnIncome = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Unearn Income")))
                        SQL &= String.Format(" LoansReceivable = '{0}';", CDbl(GridView3.GetRowCellValue(x, "Loans Receivable")))
                    End If
                Next
                '*************AMORTIZATION SCHEDULE 
                DataObject(SQL)
                MsgBox("Successfully Updated!", MsgBoxStyle.Information, "Info")
            End If
        ElseIf e.Control And e.KeyCode = Keys.M Then
            btnModify.Focus()
            btnModify.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.D Then
            btnDelete.Focus()
            btnDelete.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.P Then
            btnPrint.Focus()
            btnPrint.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.F Then
            btnRefresh.Focus()
            btnRefresh.PerformClick()
        ElseIf (e.Control And e.KeyCode = Keys.X) Or ((tabBorrower.Visible = False Or From_CI) And e.KeyCode = Keys.Escape) Then
            If btnCancel.Enabled Then
                btnCancel.Focus()
                btnCancel.PerformClick()
            Else
                Close()
            End If
        ElseIf e.Control And e.KeyCode = Keys.R Then
            btnSave.Focus()
            btnSave.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.E Then
            btnEarly.Focus()
            btnEarly.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.H Then
            lblRPPDRate_C.Visible = False
            dRPPDRate_C.Visible = False
            lblRPPDRate_Percent.Visible = False
            dRPPDRate_T.Visible = False
            lblRPPDRate_T.Visible = False

            lblRPPD_C.Visible = False
            dRPPD_C.Visible = False
            If Product_LastPrincipal = "Yes" Then 'CAR DEALERSHIP LOANS
            Else
                lblMR_C.Visible = False
                dMR_C.Visible = False
                lblMR_Slash.Visible = False
                dMR_C2.Visible = False
            End If
        ElseIf e.Control And e.KeyCode = Keys.U Then
            If Product_LastPrincipal = "Yes" Then 'CAR DEALERSHIP LOANS
            Else
                If CompanyMode = 0 Then
                Else
                    lblRPPDRate_C.Visible = True
                    dRPPDRate_C.Visible = True
                    lblRPPDRate_Percent.Visible = True
                    dRPPDRate_T.Visible = True
                    lblRPPDRate_T.Visible = True

                    lblRPPD_C.Visible = True
                    dRPPD_C.Visible = True
                End If
            End If

            lblMR_C.Visible = True
            dMR_C.Visible = True

            If Product_Payment = "Monthly" Then
            Else 'Salary and Payday Loan - Kinsinas bayad.
                lblMR_Slash.Visible = True
                dMR_C2.Visible = True
            End If
        ElseIf e.Control And e.KeyCode = Keys.N Then
            btnNext.Focus()
            btnNext.PerformClick()
        ElseIf e.Control And e.KeyCode = Keys.B Then
            btnBack.Focus()
            btnBack.PerformClick()
        ElseIf (e.Control And e.KeyCode = Keys.Left) Or (e.Control And e.KeyCode = Keys.Down) Then
            btnBack.Focus()
            btnBack.PerformClick()
        ElseIf (e.Control And e.KeyCode = Keys.Right) Or (e.Control And e.KeyCode = Keys.Up) Then
            btnNext.Focus()
            btnNext.PerformClick()
        ElseIf e.KeyCode = Keys.F12 Then
            FrmMain.BtnReport_Click(sender, e)
        End If
    End Sub

    Private Sub GridView5_KeyDown(sender As Object, e As KeyEventArgs) Handles GridView5.KeyDown
        If e.KeyCode = Keys.Enter Then
            GridView5_DoubleClick(sender, e)
        End If
    End Sub

    Private Sub BtnPrint_II_Click(sender As Object, e As EventArgs) Handles btnPrint_II.Click
        If vPrint Then
        Else
            MsgBox(mBox_Print, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Cursor = Cursors.WaitCursor
        Dim Report2 As New RptAmortizationCalculatorV2
        With Report2
            .Name = "Amortization Calculator " & cbxProduct.Text
            '***PAGE I
            .lblCreditNumber.Text = If(cbxBorrower.Enabled, "", txtCreditNumber.Text)
            .tAmount.Text = dAmountApplied.Text
            .tTerms.Text = iTerms.Text & " " & cbxTerms.Text
            .tCollateral.Text = cbxProduct.Text
            .lblTerms.Text = iTerms_C.Text & " " & cbxTerms.Text
            .lblTerms_2.Text = iTerms_C.Text & " " & cbxTerms.Text
            .lblInterest_Rate.Text = dInterest_C.Value & "% (" & dInterest_T.Value & lblInterest.Text & ")"
            .lblInterest_Rate_2.Text = dInterest_C.Value & "% (" & dInterest_T.Value & lblInterest.Text & ")"
            .lblRPPD_Rate.Text = dRPPDRate_C.Value & "% (" & dRPPDRate_T.Value & lblRPPDRate_T.Text & ")"
            .lblPA.Text = dPA_C.Text
            .lblPA_2.Text = dPA_C.Text
            .lblUDI.Text = dUDI_C.Text
            .lblUDI_2.Text = dUDI_C.Text
            .lblRPPD.Text = dRPPD_C.Text
            .lblFA.Text = dFA_C.Text
            .lblGMA.Text = dGMA_C.Text & If(dGMA_C2.Visible, "/" & dGMA_C2.Text, "")
            .lblGMA_2.Text = dGMA_C.Text & If(dGMA_C2.Visible, "/" & dGMA_C2.Text, "")
            .lblMR.Text = dMR_C.Text & If(dMR_C2.Visible, "/" & dMR_C2.Text, "")
            .lblNMA.Text = dNMA_C.Text & If(dNMA_C2.Visible, "/" & dNMA_C2.Text, "")
            If cbxProduct.Text.ToUpper.ToUpper.Contains("DEALER") Or cbxProduct.Text.ToUpper.Contains("AGRICULTURE") Or cbxProduct.Text.ToUpper.Contains("FARM EQUIPMENT") Or cbxProduct.Text.ToUpper.Contains("CREDIT LINE") Then
                .XrLabel17.Text = "Monthly Int. :"
                .XrLabel19.Text = LabelX94.Text
                .lblMonthlyAmort.Text = LabelX94.Text.ToUpper
                .lblGMA_2.Text = dNMA_C.Text & If(dNMA_C2.Visible, "/" & dNMA_C2.Text, "")
                .XrLabel15.Visible = False
                .lblGMA.Visible = False
                .XrLabel11.Visible = False
                .lblRPPD.Visible = False
                .XrLabel4.Visible = False
                .lblRPPD_Rate.Visible = False
            Else
                If dRPPDRate_C.Visible = False Then
                    '***HIDE REBATE
                    .XrLabel4.Visible = False
                    .lblRPPD_Rate.Visible = False
                    .XrLabel11.Visible = False
                    .lblRPPD.Visible = False
                    .XrLabel17.Visible = False
                    .lblMR.Visible = False
                Else
                    .XrLabel15.Visible = True
                    .lblGMA.Visible = True
                    .XrLabel11.Visible = True
                    .lblRPPD.Visible = True
                    .XrLabel4.Visible = True
                    .lblRPPD_Rate.Visible = True
                End If
                .XrLabel17.Text = "Monthly Rebate :"
                .XrLabel19.Text = "NMA :"
            End If
            .rNote.Text = rNote.Text
            .lblTotalPF.Text = dTPF_C.Text
            .lblTotalPF_2.Text = dTPF_C.Text
            .lblSC.Text = dSC_C.Text
            .lblSC_2.Text = dSC_C.Text
            .XrLabel25.Text = LabelX97.Text
            .lblAppraisal.Text = dAppraisalFee_C.Text
            .lblCI.Text = dCIFee_C.Text
            .lblPFandSC.Text = dMiscellaneous_C.Text
            .lblAdvancePayment.Text = dAdvancePayment_C.Text
            .lblDeductBalance.Text = dDeductBalance_C.Text
            .lblInsurance.Text = dInsurance_C.Text
            .lblInsurance_2.Text = dInsurance_C.Text
            .lblTotalDeductions.Text = dTD_C.Text
            .lblNetProceeds.Text = dNetProceeds_C.Text
            .lblNetProceeds_2.Text = dNetProceeds_C.Text

            .XrTable3.Rows.Clear()
            Dim R As New XRTableRow With {.Weight = 105}
            Dim PF_Cell As New XRTableCell With {.Weight = 105, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
            Dim Amount_Cell As New XRTableCell With {.Weight = 70, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
            PF_Cell.Text = "Processing Fee"
            Amount_Cell.Text = "Amount"
            R.Cells.Add(PF_Cell)
            R.Cells.Add(Amount_Cell)
            .XrTable3.Rows.Add(R)
            For x As Integer = 0 To GridView4.RowCount - 1
                Dim R_2 As New XRTableRow With {.Weight = 105}
                Dim PF_Cell_2 As New XRTableCell With {.Weight = 105, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid))}
                Dim Amount_Cell_2 As New XRTableCell With {.Weight = 70, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid))}
                PF_Cell_2.Text = GridView4.GetRowCellValue(x, "Processing Fee")
                Amount_Cell_2.Text = FormatNumber(CDbl(GridView4.GetRowCellValue(x, "Amount")), 2)
                If CDbl(GridView4.GetRowCellValue(x, "Amount")) > 0 Then
                    R_2.Cells.Add(PF_Cell_2)
                    R_2.Cells.Add(Amount_Cell_2)
                    .XrTable3.Rows.Add(R_2)
                End If
            Next
            If .XrTable3.Rows.Count < 12 Then
                For x As Integer = 0 To 12 - .XrTable3.Rows.Count
                    Dim R_4 As New XRTableRow With {.Weight = 105}
                    Dim PF_Cell_4 As New XRTableCell With {.Weight = 105, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft, .Font = New Font(OfficialFont, OfficialFontSize)}
                    Dim Amount_Cell_4 As New XRTableCell With {.Weight = 70, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight, .Font = New Font(OfficialFont, OfficialFontSize)}
                    PF_Cell_4.Text = ""
                    Amount_Cell_4.Text = ""
                    R_4.Cells.Add(PF_Cell_4)
                    R_4.Cells.Add(Amount_Cell_4)
                    .XrTable3.Rows.Add(R_4)
                Next
            End If
            If CompanyMode = 0 Then
                .XrLabel25.Visible = False
                .lblPFandSC.Visible = False
            End If
            Logs("Credit Application", "Print", String.Format("[SENSITIVE] Print Calculator Amount Applied: {0}, Terms: {1} {2}, Product: {3}, Interest Rate: {4}% per annum, RPPD Rate: {5}% per annum, Total Processing Fee: {6}, Total Deduction: {7}, Net Proceeds: {8}", dAmountApplied.Text, iTerms.Text, cbxTerms.Text, cbxProduct.Text, dInterest_T.Text, dRPPDRate_T.Text, dTPF_C.Text, dTD_C.Text, dNetProceeds_C.Text), "", "", "", txtCreditNumber.Text)
            .ShowPreview()
        End With
        Cursor = Cursors.Default
    End Sub

    Private Sub CbxPlaceBirth_B_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbxPlaceBirth_B.SelectedIndexChanged
        If FirstLoad Then
            Exit Sub
        End If

        Dim drv As DataRowView = DirectCast(cbxPlaceBirth_B.SelectedItem, DataRowView)
        cbxCitizenship_B.SelectedValue = drv("Country ID")
    End Sub

    Private Sub CbxBorrower_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbxBorrower.SelectedIndexChanged
        If FirstLoad Then
            Exit Sub
        End If

        Cursor = Cursors.WaitCursor
        If cbxBorrower.SelectedIndex = -1 Or cbxBorrower.Text = "" Then
            Clear()
        Else
            Dim drv As DataRowView = DirectCast(cbxBorrower.SelectedItem, DataRowView)
            If drv("Status") = "BLOCKED" And BorrowerLoading = False Then
                MsgBox(drv("Name") & " is BLOCKED! Credit Application is not allowed for BLOCKED borrower.", MsgBoxStyle.Information, "Info")
                cbxBorrower.SelectedIndex = -1
                Exit Sub
            End If
            CbxPrefix_B.Enabled = True
            TxtFirstN_B.Enabled = True
            TxtMiddleN_B.Enabled = True
            TxtLastN_B.Enabled = True
            cbxSuffix_B.Enabled = True
            btnSN.Enabled = True
            btnCM_1.Enabled = True
            btnCM_2.Enabled = True
            btnCM_3.Enabled = True
            btnCM_4.Enabled = True
            GridControl1.Enabled = True
            GridControl2.Enabled = True

            If cbxOptions.SelectedIndex < 3 Then
                LoadAccountNumber("", False)
            End If
            BorrowerID = drv("BorrowerID")
            If cbxCorporate.Checked Then '**************** C O R P O R A T E
                cbxEmployer_B.SelectedIndex = -1
                TxtFirstN_B.Text = drv("TradeName")
                TxtFirstN_B.Tag = drv("TradeName")

                CbxPrefix_S.Text = drv("Prefix_R1")
                CbxPrefix_S.Tag = drv("Prefix_R1")

                TxtFirstN_S.Text = drv("FirstN_R1")
                TxtFirstN_S.Tag = drv("FirstN_R1")

                TxtMiddleN_S.Text = drv("MiddleN_R1")
                TxtMiddleN_S.Tag = drv("MiddleN_R1")

                TxtLastN_S.Text = drv("LastN_R1")
                TxtLastN_S.Tag = drv("LastN_R1")

                cbxSuffix_S.Text = drv("Suffix_R1")
                cbxSuffix_S.Tag = drv("Suffix_R1")

                CbxPrefix_C1.Text = drv("Prefix_R2")
                CbxPrefix_C1.Tag = drv("Prefix_R2")

                TxtFirstN_C1.Text = drv("FirstN_R2")
                TxtFirstN_C1.Tag = drv("FirstN_R2")

                TxtMiddleN_C1.Text = drv("MiddleN_R2")
                TxtMiddleN_C1.Tag = drv("MiddleN_R2")

                TxtLastN_C1.Text = drv("LastN_R2")
                TxtLastN_C1.Tag = drv("LastN_R2")

                cbxSuffix_C1.Text = drv("Suffix_R2")
                cbxSuffix_C1.Tag = drv("Suffix_R2")

                CbxPrefix_C2.Text = drv("Prefix_R3")
                CbxPrefix_C2.Tag = drv("Prefix_R3")

                TxtFirstN_C2.Text = drv("FirstN_R3")
                TxtFirstN_C2.Tag = drv("FirstN_R3")

                TxtMiddleN_C2.Text = drv("MiddleN_R3")
                TxtMiddleN_C2.Tag = drv("MiddleN_R3")

                TxtLastN_C2.Text = drv("LastN_R3")
                TxtLastN_C2.Tag = drv("LastN_R3")

                cbxSuffix_C2.Text = drv("Suffix_R3")
                cbxSuffix_C2.Tag = drv("Suffix_R3")

                CbxPrefix_C3.Text = drv("Prefix_R4")
                CbxPrefix_C3.Tag = drv("Prefix_R4")

                TxtFirstN_C3.Text = drv("FirstN_R4")
                TxtFirstN_C3.Tag = drv("FirstN_R4")

                TxtMiddleN_C3.Text = drv("MiddleN_R4")
                TxtMiddleN_C3.Tag = drv("MiddleN_R4")

                TxtLastN_C3.Text = drv("LastN_R4")
                TxtLastN_C3.Tag = drv("LastN_R4")

                cbxSuffix_C3.Text = drv("Suffix_R4")
                cbxSuffix_C3.Tag = drv("Suffix_R4")

                CbxPrefix_C4.Text = drv("Prefix_R5")
                CbxPrefix_C4.Tag = drv("Prefix_R5")

                TxtFirstN_C4.Text = drv("FirstN_R5")
                TxtFirstN_C4.Tag = drv("FirstN_R5")

                TxtMiddleN_C4.Text = drv("MiddleN_R5")
                TxtMiddleN_C4.Tag = drv("MiddleN_R5")

                TxtLastN_C4.Text = drv("LastN_R5")
                TxtLastN_C4.Tag = drv("LastN_R5")

                cbxSuffix_C4.Text = drv("Suffix_R5")
                cbxSuffix_C4.Tag = drv("Suffix_R5")

                txtNoC_B.Text = drv("No")
                txtNoC_B.Tag = drv("No")

                txtStreetC_B.Text = drv("Street")
                txtStreetC_B.Tag = drv("Street")

                txtBarangayC_B.Text = drv("Barangay")
                txtBarangayC_B.Tag = drv("Barangay")

                cbxAddressC_B.Text = drv("Address")
                cbxAddressC_B.Tag = drv("Address")

                If drv("Incorporation") = "" Then
                    DtpBirth_B.CustomFormat = ""
                Else
                    DtpBirth_B.CustomFormat = "MMMM dd, yyyy"
                    DtpBirth_B.Value = drv("Incorporation")
                    DtpBirth_B.Tag = drv("Incorporation")
                End If

                txtTelephone_B.Text = drv("Telephone")
                txtTelephone_B.Tag = drv("Telephone")

                txtBusinessName_B.Text = drv("TradeName")
                txtBusinessName_B.Tag = drv("TradeName")

                txtBusinessTelephone_B.Text = drv("Telephone")
                txtBusinessTelephone_B.Tag = drv("Telephone")

                iYrsOperation_B.Value = drv("YearsOperation")
                iYrsOperation_B.Tag = drv("YearsOperation")

                dBusinessIncome_B.Value = drv("Gross")
                dBusinessIncome_B.Tag = drv("Gross")

                iNoEmployees_B.Value = drv("Employees")
                iNoEmployees_B.Tag = drv("Employees")

                txtTIN_B.Text = drv("TIN")
                txtTIN_B.Tag = drv("TIN")

                txtSSS_B.Text = drv("SSS")
                txtSSS_B.Tag = drv("SSS")

                txtEmail_B.Text = drv("Email")
                txtEmail_B.Tag = drv("Email")

                cbxAgent.Tag = If(drv("Agent") = "", "No", "Yes")
                cbxAgent.Checked = If(drv("Agent") = "", False, True)

                cbxAgentName.Text = drv("Agent")
                cbxAgentName.Tag = drv("Agent")

                txtAgentContact.Text = drv("AgentNo")
                txtAgentContact.Tag = drv("AgentNo")

                cbxMarketing.Checked = If(drv("Marketing") = "", False, True)
                cbxMarketing.Tag = If(drv("Marketing") = "", "No", "Yes")

                cbxMarketingName.Text = drv("Marketing")
                cbxMarketingName.Tag = drv("Marketing")

                txtMarketingContact.Text = drv("MarketingNo")
                txtMarketingContact.Tag = drv("MarketingNo")

                cbxWalkIn.Checked = If(drv("WalkIn") = "", False, True)
                cbxWalkIn.Tag = If(drv("WalkIn") = "", "No", "Yes")

                cbxWalkInType.Text = drv("WalkIn")
                cbxWalkInType.Tag = drv("WalkIn")

                txtWalkInOthers.Text = drv("WalkIn_Specify")
                txtWalkInOthers.Tag = drv("WalkIn_Specify")

                cbxDealer.Checked = If(drv("Dealer") = "", False, True)
                cbxDealer.Tag = If(drv("Dealer") = "", "No", "Yes")

                cbxDealerName.Text = drv("Dealer")
                cbxDealerName.Tag = drv("Dealer")

                txtDealersContact.Text = drv("DealerNo")
                txtDealersContact.Tag = drv("DealerNo")

                cbxBusinessCenter.Text = drv("BusinessCenter").ToString
                cbxBusinessCenter.Tag = drv("BusinessCenter")

                btnAttachB.Enabled = True
                btnID.Enabled = False
            Else '**************************************** I N D I V I D U A L
                CbxPrefix_B.Text = drv("Prefix_B")
                CbxPrefix_B.Tag = drv("Prefix_B")

                TxtFirstN_B.Text = drv("FirstN_B")
                TxtFirstN_B.Tag = drv("FirstN_B")

                TxtMiddleN_B.Text = drv("MiddleN_B")
                TxtMiddleN_B.Tag = drv("MiddleN_B")

                TxtLastN_B.Text = drv("LastN_B")
                TxtLastN_B.Tag = drv("LastN_B")

                cbxSuffix_B.Text = drv("Suffix_B")
                cbxSuffix_B.Tag = drv("Suffix_B")

                CbxPrefix_S.Text = drv("Prefix_S")
                CbxPrefix_S.Tag = drv("Prefix_S")

                TxtFirstN_S.Text = drv("FirstN_S")
                TxtFirstN_S.Tag = drv("FirstN_S")

                TxtMiddleN_S.Text = drv("MiddleN_S")
                TxtMiddleN_S.Tag = drv("MiddleN_S")

                TxtLastN_S.Text = drv("LastN_S")
                TxtLastN_S.Tag = drv("LastN_S")

                cbxSuffix_S.Text = drv("Suffix_S")
                cbxSuffix_S.Tag = drv("Suffix_S")

                txtNoC_B.Text = drv("NoC_B")
                txtNoC_B.Tag = drv("NoC_B")

                txtStreetC_B.Text = drv("StreetC_B")
                txtStreetC_B.Tag = drv("StreetC_B")

                txtBarangayC_B.Text = drv("BarangayC_B")
                txtBarangayC_B.Tag = drv("BarangayC_B")

                cbxAddressC_B.Text = drv("AddressC_B")
                cbxAddressC_B.Tag = drv("AddressC_B")

                txtNoP_B.Text = drv("NoP_B")
                txtNoP_B.Tag = drv("NoP_B")

                txtStreetP_B.Text = drv("StreetP_B")
                txtStreetP_B.Tag = drv("StreetP_B")

                txtBarangayP_B.Text = drv("BarangayP_B")
                txtBarangayP_B.Tag = drv("BarangayP_B")

                cbxAddressP_B.Text = drv("AddressP_B")
                cbxAddressP_B.Tag = drv("AddressP_B")

                If drv("Birth_B") = "" Then
                    DtpBirth_B.CustomFormat = ""
                Else
                    DtpBirth_B.CustomFormat = "MMMM dd, yyyy"
                    DtpBirth_B.Value = drv("Birth_B")
                    DtpBirth_B.Tag = drv("Birth_B")
                End If

                cbxPlaceBirth_B.Text = drv("PlaceBirth_B")
                cbxPlaceBirth_B.Tag = drv("PlaceBirth_B")

                If drv("Gender_B") = "Male" Then
                    cbxMale_B.Checked = True
                ElseIf drv("Gender_B") = "Female" Then
                    cbxFemale_B.Checked = True
                End If
                cbxMale_B.Tag = drv("Gender_B")
                cbxFemale_B.Tag = drv("Gender_B")

                If drv("Civil_B") = "Single" Then
                    cbxSingle_B.Checked = True
                ElseIf drv("Civil_B") = "Married" Then
                    cbxMarried_B.Checked = True
                ElseIf drv("Civil_B") = "Separated" Then
                    cbxSeparated_B.Checked = True
                ElseIf drv("Civil_B") = "Widowed" Then
                    cbxWidowed_B.Checked = True
                End If
                cbxSingle_B.Tag = drv("Civil_B")
                cbxMarried_B.Tag = drv("Civil_B")
                cbxSeparated_B.Tag = drv("Civil_B")
                cbxWidowed_B.Tag = drv("Civil_B")

                cbxCitizenship_B.Text = drv("Citizenship_B")
                cbxCitizenship_B.Tag = drv("Citizenship_B")

                txtTIN_B.Text = drv("TIN_B")
                txtTIN_B.Tag = drv("TIN_B")

                If Branch_ID = drv("Branch_ID") Then
                    txtTelephone_B.Text = drv("Telephone_B")
                    txtTelephone_B.Tag = drv("Telephone_B")

                    txtMobile_B.Text = drv("Mobile_B")
                    txtMobile_B.Tag = drv("Mobile_B")

                    txtMobile_B2.Text = drv("Mobile_B2")
                    txtMobile_B2.Tag = drv("Mobile_B2")
                Else
                    txtTelephone_B.Text = ""
                    txtTelephone_B.Tag = ""

                    txtMobile_B.Text = ""
                    txtMobile_B.Tag = ""

                    txtMobile_B2.Text = ""
                    txtMobile_B2.Tag = ""
                End If

                txtSSS_B.Text = drv("SSS_B")
                txtSSS_B.Tag = drv("SSS_B")

                txtEmail_B.Text = drv("Email_B")
                txtEmail_B.Tag = drv("Email_B")

                If drv("House_B") = "Owned" Then
                    cbxOwned_B.Checked = True
                ElseIf drv("House_B") = "Free" Then
                    cbxFree_B.Checked = True
                ElseIf drv("House_B") = "Rented" Then
                    cbxRented_B.Checked = True
                    dRent_B.Value = drv("Rent_B")
                    dRent_B.Tag = drv("Rent_B")
                End If
                cbxOwned_B.Tag = drv("House_B")
                cbxFree_B.Tag = drv("House_B")
                cbxRented_B.Tag = drv("House_B")
                Borrower_Branch = drv("branch_code")
                Borrower_BranchID = drv("branch_id")
                Try
                    Using TempPB As New DevExpress.XtraEditors.PictureEdit
                        TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Borrowers\{3}\{4}", RootFolder, MainFolder, drv("branch_code"), drv("BorrowerID"), "Borrower.jpg"))
                        If IO.File.Exists(String.Format("{0}\{1}\{2}\Borrowers\{3}\{4}", RootFolder, MainFolder, drv("branch_code"), drv("BorrowerID"), "Borrower.jpg")) Then
                            txtPath_B.Text = "Borrower.jpg"
                        Else
                            txtPath_B.Text = ""
                        End If
                        ResizeImages(TempPB.Image.Clone, pb_B, 850, 700)
                    End Using
                Catch ex As Exception
                    pb_B.Image = DefaultImage.Image.Clone
                    txtPath_B.Text = ""
                End Try
                '**DEPENDENT
                CbxPrefix_1.Text = drv("Prefix_D1")
                CbxPrefix_1.Tag = drv("Prefix_D1")

                TxtFirstN_1.Text = drv("FirstN_D1")
                TxtFirstN_1.Tag = drv("FirstN_D1")
                If drv("FirstN_D1") = "" Then
                    TxtMiddleN_1.Enabled = False
                    TxtLastN_1.Enabled = False
                    cbxSuffix_1.Enabled = False
                    iAge_D1.Enabled = False
                    txtGrade_1.Enabled = False
                    txtSchool_1.Enabled = False
                    txtSchoolAddress_1.Enabled = False
                Else
                    CbxPrefix_1.Enabled = True
                    TxtFirstN_1.Enabled = True
                    TxtMiddleN_1.Enabled = True
                    TxtLastN_1.Enabled = True
                    cbxSuffix_1.Enabled = True
                    iAge_D1.Enabled = True
                    txtGrade_1.Enabled = True
                    txtSchool_1.Enabled = True
                    txtSchoolAddress_1.Enabled = True
                End If

                TxtMiddleN_1.Text = drv("MiddleN_D1")
                TxtMiddleN_1.Tag = drv("MiddleN_D1")

                TxtLastN_1.Text = drv("LastN_D1")
                TxtLastN_1.Tag = drv("LastN_D1")

                cbxSuffix_1.Text = drv("Suffix_D1")
                cbxSuffix_1.Tag = drv("Suffix_D1")

                iAge_D1.Value = drv("Age_D1")
                iAge_D1.Tag = drv("Age_D1")

                txtGrade_1.Text = drv("Grade_D1")
                txtGrade_1.Tag = drv("Grade_D1")

                txtSchool_1.Text = drv("School_D1")
                txtSchool_1.Tag = drv("School_D1")

                txtSchoolAddress_1.Text = drv("SchoolAddress_D1")
                txtSchoolAddress_1.Tag = drv("SchoolAddress_D1")

                CbxPrefix_2.Text = drv("Prefix_D2")
                CbxPrefix_2.Tag = drv("Prefix_D2")

                TxtFirstN_2.Text = drv("FirstN_D2")
                TxtFirstN_2.Tag = drv("FirstN_D2")
                If drv("FirstN_D2") = "" Then
                    TxtMiddleN_2.Enabled = False
                    TxtLastN_2.Enabled = False
                    cbxSuffix_2.Enabled = False
                    iAge_D2.Enabled = False
                    txtGrade_2.Enabled = False
                    txtSchool_2.Enabled = False
                    txtSchoolAddress_2.Enabled = False
                Else
                    CbxPrefix_2.Enabled = True
                    TxtFirstN_2.Enabled = True
                    TxtMiddleN_2.Enabled = True
                    TxtLastN_2.Enabled = True
                    cbxSuffix_2.Enabled = True
                    iAge_D2.Enabled = True
                    txtGrade_2.Enabled = True
                    txtSchool_2.Enabled = True
                    txtSchoolAddress_2.Enabled = True
                End If

                TxtMiddleN_2.Text = drv("MiddleN_D2")
                TxtMiddleN_2.Tag = drv("MiddleN_D2")

                TxtLastN_2.Text = drv("LastN_D2")
                TxtLastN_2.Tag = drv("LastN_D2")

                cbxSuffix_2.Text = drv("Suffix_D2")
                cbxSuffix_2.Tag = drv("Suffix_D2")

                iAge_D2.Value = drv("Age_D2")
                iAge_D2.Tag = drv("Age_D2")

                txtGrade_2.Text = drv("Grade_D2")
                txtGrade_2.Tag = drv("Grade_D2")

                txtSchool_2.Text = drv("School_D2")
                txtSchool_2.Tag = drv("School_D2")

                txtSchoolAddress_2.Text = drv("SchoolAddress_D2")
                txtSchoolAddress_2.Tag = drv("SchoolAddress_D2")

                CbxPrefix_3.Text = drv("Prefix_D3")
                CbxPrefix_3.Tag = drv("Prefix_D3")

                TxtFirstN_3.Text = drv("FirstN_D3")
                TxtFirstN_3.Tag = drv("FirstN_D3")
                If drv("FirstN_D3") = "" Then
                    TxtMiddleN_3.Enabled = False
                    TxtLastN_3.Enabled = False
                    cbxSuffix_3.Enabled = False
                    iAge_D3.Enabled = False
                    txtGrade_3.Enabled = False
                    txtSchool_3.Enabled = False
                    txtSchoolAddress_3.Enabled = False
                Else
                    CbxPrefix_3.Enabled = True
                    TxtFirstN_3.Enabled = True
                    TxtMiddleN_3.Enabled = True
                    TxtLastN_3.Enabled = True
                    cbxSuffix_3.Enabled = True
                    iAge_D3.Enabled = True
                    txtGrade_3.Enabled = True
                    txtSchool_3.Enabled = True
                    txtSchoolAddress_3.Enabled = True
                End If

                TxtMiddleN_3.Text = drv("MiddleN_D3")
                TxtMiddleN_3.Tag = drv("MiddleN_D3")

                TxtLastN_3.Text = drv("LastN_D3")
                TxtLastN_3.Tag = drv("LastN_D3")

                cbxSuffix_3.Text = drv("Suffix_D3")
                cbxSuffix_3.Tag = drv("Suffix_D3")

                iAge_D3.Value = drv("Age_D3")
                iAge_D3.Tag = drv("Age_D3")

                txtGrade_3.Text = drv("Grade_D3")
                txtGrade_3.Tag = drv("Grade_D3")

                txtSchool_3.Text = drv("School_D3")
                txtSchool_3.Tag = drv("School_D3")

                txtSchoolAddress_3.Text = drv("SchoolAddress_D3")
                txtSchoolAddress_3.Tag = drv("SchoolAddress_D3")

                CbxPrefix_4.Text = drv("Prefix_D4")
                CbxPrefix_4.Tag = drv("Prefix_D4")

                TxtFirstN_4.Text = drv("FirstN_D4")
                TxtFirstN_4.Tag = drv("FirstN_D4")
                If drv("FirstN_D4") = "" Then
                    TxtMiddleN_4.Enabled = False
                    TxtLastN_4.Enabled = False
                    cbxSuffix_4.Enabled = False
                    iAge_D4.Enabled = False
                    txtGrade_4.Enabled = False
                    txtSchool_4.Enabled = False
                    txtSchoolAddress_4.Enabled = False
                Else
                    CbxPrefix_4.Enabled = True
                    TxtFirstN_4.Enabled = True
                    TxtMiddleN_4.Enabled = True
                    TxtLastN_4.Enabled = True
                    cbxSuffix_4.Enabled = True
                    iAge_D4.Enabled = True
                    txtGrade_4.Enabled = True
                    txtSchool_4.Enabled = True
                    txtSchoolAddress_4.Enabled = True
                End If

                TxtMiddleN_4.Text = drv("MiddleN_D4")
                TxtMiddleN_4.Tag = drv("MiddleN_D4")

                TxtLastN_4.Text = drv("LastN_D4")
                TxtLastN_4.Tag = drv("LastN_D4")

                cbxSuffix_4.Text = drv("Suffix_D4")
                cbxSuffix_4.Tag = drv("Suffix_D4")

                iAge_D4.Value = drv("Age_D4")
                iAge_D4.Tag = drv("Age_D4")

                txtGrade_4.Text = drv("Grade_D4")
                txtGrade_4.Tag = drv("Grade_D4")

                txtSchool_4.Text = drv("School_D4")
                txtSchool_4.Tag = drv("School_D4")

                txtSchoolAddress_4.Text = drv("SchoolAddress_D4")
                txtSchoolAddress_4.Tag = drv("SchoolAddress_D4")

                '**DEPENDENT
                cbxEmployer_B.Text = drv("Employer_B")
                cbxEmployer_B.Tag = drv("Employer_B")

                txtEmployerAddress_B.Text = drv("EmployerAddress_B")
                txtEmployerAddress_B.Tag = drv("EmployerAddress_B")

                txtEmployerTelephone_B.Text = drv("EmployerTelephone_B")
                txtEmployerTelephone_B.Tag = drv("EmployerTelephone_B")

                cbxPosition_B.Text = drv("Position_B")
                cbxPosition_B.Tag = drv("Position_B")

                If drv("EmploymentStat_B") = "Casual" Then
                    cbxCasual_B.Checked = True
                ElseIf drv("EmploymentStat_B") = "Temporary" Then
                    cbxTemporary_B.Checked = True
                ElseIf drv("EmploymentStat_B") = "Permanent" Then
                    cbxPermanent_B.Checked = True
                End If
                cbxCasual_B.Tag = drv("EmploymentStat_B")
                cbxTemporary_B.Tag = drv("EmploymentStat_B")
                cbxPermanent_B.Tag = drv("EmploymentStat_B")
                dtpHired_B.Text = drv("Hired_B")
                dtpHired_B.Tag = drv("Hired_B")

                txtSupervisor_B.Text = drv("Supervisor_B")
                txtSupervisor_B.Tag = drv("Supervisor_B")

                dMonthly_B.Value = drv("Monthly_B")
                dMonthly_B.Tag = drv("Monthly_B")

                txtBusinessName_B.Text = drv("BusinessName_B")
                txtBusinessName_B.Tag = drv("BusinessName_B")

                txtBusinessAddress_B.Text = drv("BusinessAddress_B")
                txtBusinessAddress_B.Tag = drv("BusinessAddress_B")

                txtBusinessTelephone_B.Text = drv("BusinessTelephone_B")
                txtBusinessTelephone_B.Tag = drv("BusinessTelephone_B")

                cbxNatureBusiness_B.Text = drv("NatureBusiness_B")
                cbxNatureBusiness_B.Tag = drv("NatureBusiness_B")

                cbxNatureBusiness_B2.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM profile_borrower_industry WHERE `status` = 'ACTIVE' AND BorrowerID = '{0}' AND `Type` = 'Borrower'", drv("BorrowerID"))))

                iYrsOperation_B.Value = drv("YrsOperation_B")
                iYrsOperation_B.Tag = drv("YrsOperation_B")

                dBusinessIncome_B.Value = drv("BusinessIncome_B")
                dBusinessIncome_B.Tag = drv("BusinessIncome_B")

                iNoEmployees_B.Value = drv("NoEmployees_B")
                iNoEmployees_B.Tag = drv("NoEmployees_B")

                dCapital_B.Value = drv("Capital_B")
                dCapital_B.Tag = drv("Capital_B")

                txtArea_B.Text = drv("Area_B")
                txtArea_B.Tag = drv("Area_B")

                dtpExpiry_B.Text = drv("Expiry_B")
                dtpExpiry_B.Tag = drv("Expiry_B")

                iOutlet_B.Value = drv("Outlet_B")
                iOutlet_B.Tag = drv("Outlet_B")

                txtOtherIncome_B.Text = drv("OtherIncome_B")
                txtOtherIncome_B.Tag = drv("OtherIncome_B")

                dOtherIncome_B.Value = drv("OtherIncome_B-Amount")
                dOtherIncome_B.Tag = drv("OtherIncome_B-Amount")

                txtCreditor_1.Text = drv("Creditor_1")
                txtCreditor_1.Tag = drv("Creditor_1")

                txtNatureLoan_1.Text = drv("NatureLoan_1")
                txtNatureLoan_1.Tag = drv("NatureLoan_1")

                dAmountGranted_1.Value = drv("AmountGranted_1")
                dAmountGranted_1.Tag = drv("AmountGranted_1")

                dTerm_1.Value = drv("Term_1")
                dTerm_1.Tag = drv("Term_1")

                dBalance_1.Value = drv("Balance_1")
                dBalance_1.Tag = drv("Balance_1")

                txtCreditRemarks_1.Text = drv("CreditRemarks_1")
                txtCreditRemarks_1.Tag = drv("CreditRemarks_1")

                txtCreditor_2.Text = drv("Creditor_2")
                txtCreditor_2.Tag = drv("Creditor_2")

                txtNatureLoan_2.Text = drv("NatureLoan_2")
                txtNatureLoan_2.Tag = drv("NatureLoan_2")

                dAmountGranted_2.Value = drv("AmountGranted_2")
                dAmountGranted_2.Tag = drv("AmountGranted_2")

                dTerm_2.Value = drv("Term_2")
                dTerm_2.Tag = drv("Term_2")

                dBalance_2.Value = drv("Balance_2")
                dBalance_2.Tag = drv("Balance_2")

                txtCreditRemarks_2.Text = drv("CreditRemarks_2")
                txtCreditRemarks_2.Tag = drv("CreditRemarks_2")

                txtCreditor_3.Text = drv("Creditor_3")
                txtCreditor_3.Tag = drv("Creditor_3")

                txtNatureLoan_3.Text = drv("NatureLoan_3")
                txtNatureLoan_3.Tag = drv("NatureLoan_3")

                dAmountGranted_3.Value = drv("AmountGranted_3")
                dAmountGranted_3.Tag = drv("AmountGranted_3")

                dTerm_3.Value = drv("Term_3")
                dTerm_3.Tag = drv("Term_3")

                dBalance_3.Value = drv("Balance_3")
                dBalance_3.Tag = drv("Balance_3")

                txtCreditRemarks_3.Text = drv("CreditRemarks_3")
                txtCreditRemarks_3.Tag = drv("CreditRemarks_3")

                txtBank_1.Text = drv("Bank_1")
                txtBank_1.Tag = drv("Bank_1")

                txtBranch_1.Text = drv("Branch_1")
                txtBranch_1.Tag = drv("Branch_1")

                If drv("AccountT_1") = "SA" Then
                    cbxSA_1.Checked = True
                ElseIf drv("AccountT_1") = "CA" Then
                    cbxCA_1.Checked = True
                End If
                cbxSA_1.Tag = drv("AccountT_1")
                cbxCA_1.Tag = drv("AccountT_1")
                txtSA_1.Text = drv("SA_1")
                txtSA_1.Tag = drv("SA_1")

                dAverageBalance_1.Value = drv("AverageBalance_1")
                dAverageBalance_1.Tag = drv("AverageBalance_1")

                dPresentBalance_1.Value = drv("PresentBalance_1")
                dPresentBalance_1.Tag = drv("PresentBalance_1")

                txtOpened_1.Text = drv("Opened_1")
                txtOpened_1.Tag = drv("Opened_1")

                txtBankRemarks_1.Text = drv("BankRemarks_1")
                txtBankRemarks_1.Tag = drv("BankRemarks_1")

                txtBank_2.Text = drv("Bank_2")
                txtBank_2.Tag = drv("Bank_2")

                txtBranch_2.Text = drv("Branch_2")
                txtBranch_2.Tag = drv("Branch_2")

                If drv("AccountT_2") = "SA" Then
                    cbxSA_2.Checked = True
                ElseIf drv("AccountT_2") = "CA" Then
                    cbxCA_2.Checked = True
                End If
                cbxSA_2.Tag = drv("AccountT_2")
                cbxCA_2.Tag = drv("AccountT_2")
                txtSA_2.Text = drv("SA_2")
                txtSA_2.Tag = drv("SA_2")

                dAverageBalance_2.Value = drv("AverageBalance_2")
                dAverageBalance_2.Tag = drv("AverageBalance_2")

                dPresentBalance_2.Value = drv("PresentBalance_2")
                dPresentBalance_2.Tag = drv("PresentBalance_2")

                txtOpened_2.Text = drv("Opened_2")
                txtOpened_2.Tag = drv("Opened_2")

                txtBankRemarks_2.Text = drv("BankRemarks_2")
                txtBankRemarks_2.Tag = drv("BankRemarks_2")

                txtBank_3.Text = drv("Bank_3")
                txtBank_3.Tag = drv("Bank_3")

                txtBranch_3.Text = drv("Branch_3")
                txtBranch_3.Tag = drv("Branch_3")

                If drv("AccountT_3") = "SA" Then
                    cbxSA_3.Checked = True
                ElseIf drv("AccountT_3") = "CA" Then
                    cbxCA_3.Checked = True
                End If
                cbxSA_3.Tag = drv("AccountT_3")
                cbxCA_3.Tag = drv("AccountT_3")
                txtSA_3.Text = drv("SA_3")
                txtSA_3.Tag = drv("SA_3")

                dAverageBalance_3.Value = drv("AverageBalance_3")
                dAverageBalance_3.Tag = drv("AverageBalance_3")

                dPresentBalance_3.Value = drv("PresentBalance_3")
                dPresentBalance_3.Tag = drv("PresentBalance_3")

                txtOpened_3.Text = drv("Opened_3")
                txtOpened_3.Tag = drv("Opened_3")

                txtBankRemarks_3.Text = drv("BankRemarks_3")
                txtBankRemarks_3.Tag = drv("BankRemarks_3")

                txtLocation_1.Text = drv("Location_1")
                txtLocation_1.Tag = drv("Location_1")

                txtTCT_1.Text = drv("TCT_1")
                txtTCT_1.Tag = drv("TCT_1")

                dArea_1.Value = drv("Area_1")
                dArea_1.Tag = drv("Area_1")

                txtAcquired_1.Text = drv("Acquired_1")
                txtAcquired_1.Tag = drv("Acquired_1")

                txtPropertiesRemarks_1.Text = drv("PropertiesRemarks_1")
                txtPropertiesRemarks_1.Tag = drv("PropertiesRemarks_1")

                txtLocation_2.Text = drv("Location_2")
                txtLocation_2.Tag = drv("Location_2")

                txtTCT_2.Text = drv("TCT_2")
                txtTCT_2.Tag = drv("TCT_2")

                dArea_2.Value = drv("Area_2")
                dArea_2.Tag = drv("Area_2")

                txtAcquired_2.Text = drv("Acquired_2")
                txtAcquired_2.Tag = drv("Acquired_2")

                txtPropertiesRemarks_2.Text = drv("PropertiesRemarks_2")
                txtPropertiesRemarks_2.Tag = drv("PropertiesRemarks_2")

                txtLocation_3.Text = drv("Location_3")
                txtLocation_3.Tag = drv("Location_3")

                txtTCT_3.Text = drv("TCT_3")
                txtTCT_3.Tag = drv("TCT_3")

                dArea_3.Value = drv("Area_3")
                dArea_3.Tag = drv("Area_3")

                txtAcquired_3.Text = drv("Acquired_3")
                txtAcquired_3.Tag = drv("Acquired_3")

                txtPropertiesRemarks_3.Text = drv("PropertiesRemarks_3")
                txtPropertiesRemarks_3.Tag = drv("PropertiesRemarks_3")

                txtVehicle_1.Text = drv("Vehicle_1")
                txtVehicle_1.Tag = drv("Vehicle_1")

                dtpYear_1.Text = drv("Year_1")
                dtpYear_1.Tag = drv("Year_1")

                txtWhomAcquired_1.Text = drv("WhomAcquired_1")
                txtWhomAcquired_1.Tag = drv("WhomAcquired_1")

                txtWhenAcquired_1.Text = drv("WhenAcquired_1")
                txtWhenAcquired_1.Tag = drv("WhenAcquired_1")

                txtVehicleRemarks_1.Text = drv("VehicleRemarks_1")
                txtVehicleRemarks_1.Tag = drv("VehicleRemarks_1")

                txtVehicle_2.Text = drv("Vehicle_2")
                txtVehicle_2.Tag = drv("Vehicle_2")

                dtpYear_2.Text = drv("Year_2")
                dtpYear_2.Tag = drv("Year_2")

                txtWhomAcquired_2.Text = drv("WhomAcquired_2")
                txtWhomAcquired_2.Tag = drv("WhomAcquired_2")

                txtWhenAcquired_2.Text = drv("WhenAcquired_2")
                txtWhenAcquired_2.Tag = drv("WhenAcquired_2")

                txtVehicleRemarks_2.Text = drv("VehicleRemarks_2")
                txtVehicleRemarks_2.Tag = drv("VehicleRemarks_2")

                txtVehicle_3.Text = drv("Vehicle_3")
                txtVehicle_3.Tag = drv("Vehicle_3")

                dtpYear_3.Text = drv("Year_3")
                dtpYear_3.Tag = drv("Year_3")

                txtWhomAcquired_3.Text = drv("WhomAcquired_3")
                txtWhomAcquired_3.Tag = drv("WhomAcquired_3")

                txtWhenAcquired_3.Text = drv("WhenAcquired_3")
                txtWhenAcquired_3.Tag = drv("WhenAcquired_3")

                txtVehicleRemarks_3.Text = drv("VehicleRemarks_3")
                txtVehicleRemarks_3.Tag = drv("VehicleRemarks_3")

                txtHomeAppliances_1.Text = drv("HomeAppliances_1")
                txtHomeAppliances_1.Tag = drv("HomeAppliances_1")

                txtHomeAppliances_2.Text = drv("HomeAppliances_2")
                txtHomeAppliances_2.Tag = drv("HomeAppliances_2")

                txtReference_1.Text = drv("Reference_1")
                txtReference_1.Tag = drv("Reference_1")

                txtReferenceAddress_1.Text = drv("ReferenceAddress_1")
                txtReferenceAddress_1.Tag = drv("ReferenceAddress_1")

                txtReferenceContact_1.Text = drv("ReferenceContact_1")
                txtReferenceContact_1.Tag = drv("ReferenceContact_1")

                txtReference_2.Text = drv("Reference_2")
                txtReference_2.Tag = drv("Reference_2")

                txtReferenceAddress_2.Text = drv("ReferenceAddress_2")
                txtReferenceAddress_2.Tag = drv("ReferenceAddress_2")

                txtReferenceContact_2.Text = drv("ReferenceContact_2")
                txtReferenceContact_2.Tag = drv("ReferenceContact_2")

                txtReference_3.Text = drv("Reference_3")
                txtReference_3.Tag = drv("Reference_3")

                txtReferenceAddress_3.Text = drv("ReferenceAddress_3")
                txtReferenceAddress_3.Tag = drv("ReferenceAddress_3")

                txtReferenceContact_3.Text = drv("ReferenceContact_3")
                txtReferenceContact_3.Tag = drv("ReferenceContact_3")

                txtCertificateNo.Text = drv("CertificateNo")
                txtCertificateNo.Tag = drv("CertificateNo")

                txtPlaceIssue.Text = drv("PlaceIssue")
                txtPlaceIssue.Tag = drv("PlaceIssue")

                dtpIssue.Text = drv("Issue")
                dtpIssue.Tag = drv("Issue")

                If Branch_ID = drv("Branch_ID") Then
                    cbxAgent.Tag = If(drv("Agent") = "", "No", "Yes")
                    cbxAgent.Checked = If(drv("Agent") = "", False, True)

                    cbxAgentName.Text = drv("Agent")
                    cbxAgentName.Tag = drv("Agent")

                    txtAgentContact.Text = drv("AgentNo")
                    txtAgentContact.Tag = drv("AgentNo")
                Else
                    cbxAgent.Tag = ""
                    cbxAgent.Checked = False

                    cbxAgentName.Text = ""
                    cbxAgentName.Tag = ""

                    txtAgentContact.Text = ""
                    txtAgentContact.Tag = ""
                End If

                cbxMarketing.Checked = If(drv("Marketing") = "", False, True)
                cbxMarketing.Tag = If(drv("Marketing") = "", "No", "Yes")

                cbxMarketingName.Text = drv("Marketing")
                cbxMarketingName.Tag = drv("Marketing")

                txtMarketingContact.Text = drv("MarketingNo")
                txtMarketingContact.Tag = drv("MarketingNo")

                cbxWalkIn.Checked = If(drv("WalkIn") = "", False, True)
                cbxWalkIn.Tag = If(drv("WalkIn") = "", "No", "Yes")

                cbxWalkInType.Text = drv("WalkIn")
                cbxWalkInType.Tag = drv("WalkIn")

                txtWalkInOthers.Text = drv("WalkIn_Specify")
                txtWalkInOthers.Tag = drv("WalkIn_Specify")

                cbxDealer.Checked = If(drv("Dealer") = "", False, True)
                cbxDealer.Tag = If(drv("Dealer") = "", "No", "Yes")

                cbxDealerName.Text = drv("Dealer")
                cbxDealerName.Tag = drv("Dealer")

                txtDealersContact.Text = drv("DealerNo")
                txtDealersContact.Tag = drv("DealerNo")

                cbxBusinessCenter.Text = drv("BusinessCenter")
                cbxBusinessCenter.Tag = drv("BusinessCenter")

                cbxYearHired.Checked = drv("YearHired")
                cbxYearFranchise.Checked = drv("YearFranchise")

                '*** I D E N T I F I C A T I O N ***
                Dim BorrowerID_B As DataTable = DataSource(String.Format("SELECT * FROM profile_borrowerid WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE' AND ID_Type = 'B'", BorrowerID))
                If BorrowerID_B.Rows.Count > 0 Then
                    GSIS = BorrowerID_B(0)("GSIS")
                    PhilHealth = BorrowerID_B(0)("PhilHealth")
                    Senior = BorrowerID_B(0)("Senior")
                    UMID = BorrowerID_B(0)("UMID")
                    SEC = BorrowerID_B(0)("SEC")
                    DTI = BorrowerID_B(0)("DTI")
                    CDA = BorrowerID_B(0)("CDA")
                    Cooperative = BorrowerID_B(0)("Cooperative")
                    Drivers = BorrowerID_B(0)("Drivers")
                    dDrivers = BorrowerID_B(0)("dDrivers")
                    VIN = BorrowerID_B(0)("VIN")
                    dVIN = BorrowerID_B(0)("dVIN")
                    Passport = BorrowerID_B(0)("Passport")
                    dPassport = BorrowerID_B(0)("dPassport")
                    PRC = BorrowerID_B(0)("PRC")
                    dPRC = BorrowerID_B(0)("dPRC")
                    NBI = BorrowerID_B(0)("NBI")
                    dNBI = BorrowerID_B(0)("dNBI")
                    Police = BorrowerID_B(0)("Police")
                    dPolice = BorrowerID_B(0)("dPolice")
                    Postal = BorrowerID_B(0)("Postal")
                    dPostal = BorrowerID_B(0)("dPostal")
                    Barangay = BorrowerID_B(0)("Barangay")
                    dBarangay = BorrowerID_B(0)("dBarangay")
                    OWWA = BorrowerID_B(0)("OWWA")
                    dOWWA = BorrowerID_B(0)("dOWWA")
                    OFW = BorrowerID_B(0)("OFW")
                    dOFW = BorrowerID_B(0)("dOFW")
                    Seaman = BorrowerID_B(0)("Seaman")
                    dSeaman = BorrowerID_B(0)("dSeaman")
                    PNP = BorrowerID_B(0)("PNP")
                    dPNP = BorrowerID_B(0)("dPNP")
                    AFP = BorrowerID_B(0)("AFP")
                    dAFP = BorrowerID_B(0)("dAFP")
                    HDMF = BorrowerID_B(0)("HDMF")
                    dHDMF = BorrowerID_B(0)("dHDMF")
                    PWD = BorrowerID_B(0)("PWD")
                    dPWD = BorrowerID_B(0)("dPWD")
                    DSWD = BorrowerID_B(0)("DSWD")
                    dDSWD = BorrowerID_B(0)("dDSWD")
                    ACR = BorrowerID_B(0)("ACR")
                    dACR = BorrowerID_B(0)("dACR")
                    DTI_Business = BorrowerID_B(0)("DTI_Business")
                    dDTI_Business = BorrowerID_B(0)("dDTI_Business")
                    IBP = BorrowerID_B(0)("IBP")
                    dIBP = BorrowerID_B(0)("dIBP")
                    FireArms = BorrowerID_B(0)("FireArms")
                    dFireArms = BorrowerID_B(0)("dFireArms")
                    Government = BorrowerID_B(0)("Government")
                    dGovernment = BorrowerID_B(0)("dGovernment")
                    Diplomat = BorrowerID_B(0)("Diplomat")
                    dDiplomat = BorrowerID_B(0)("dDiplomat")
                    National = BorrowerID_B(0)("National")
                    dNational = BorrowerID_B(0)("dNational")
                    Work = BorrowerID_B(0)("Work")
                    dWork = BorrowerID_B(0)("dWork")
                    GOCC = BorrowerID_B(0)("GOCC")
                    dGOCC = BorrowerID_B(0)("dGOCC")
                    PLRA = BorrowerID_B(0)("PLRA")
                    dPLRA = BorrowerID_B(0)("dPLRA")
                    Major = BorrowerID_B(0)("Major")
                    dMajor = BorrowerID_B(0)("dMajor")
                    Media = BorrowerID_B(0)("Media")
                    dMedia = BorrowerID_B(0)("dMedia")
                    Student = BorrowerID_B(0)("Student")
                    dStudent = BorrowerID_B(0)("dStudent")
                    SIRV = BorrowerID_B(0)("SIRV")
                    dSIRV = BorrowerID_B(0)("dSIRV")
                End If

                '*****************SPOUSE**************************************************************************************
                If drv("SpouseID").ToString = "" Then
                Else
                    SpouseID = drv("SpouseID")
                    CbxPrefix_S.Text = drv("Prefix_S")
                    TxtFirstN_S.Text = drv("FirstN_S")
                    TxtMiddleN_S.Text = drv("MiddleN_S")
                    TxtLastN_S.Text = drv("LastN_S")
                    cbxSuffix_S.Text = drv("Suffix_S")
                    CbxPrefix_S.Tag = drv("Prefix_S")
                    TxtFirstN_S.Tag = drv("FirstN_S")
                    TxtMiddleN_S.Tag = drv("MiddleN_S")
                    TxtLastN_S.Tag = drv("LastN_S")
                    cbxSuffix_S.Tag = drv("Suffix_S")

                    vPrefix_S = drv("Prefix_S")
                    vFirstN_S = drv("FirstN_S")
                    vMiddleN_S = drv("MiddleN_S")
                    vLastN_S = drv("LastN_S")
                    vSuffix_S = drv("Suffix_S")
                    vNoC_S = drv("NoC_S")
                    vStreetC_S = drv("StreetC_S")
                    vBarangayC_S = drv("BarangayC_S")
                    vAddressC_S = drv("AddressC_S")
                    vNoP_S = drv("NoP_S")
                    vStreetP_S = drv("StreetP_S")
                    vBarangayP_S = drv("BarangayP_S")
                    vAddressP_S = drv("AddressP_S")
                    vBirth_S = drv("Birth_S")
                    vPlaceBirth_S = drv("PlaceBirth_S")
                    If drv("Gender_S") = "Male" Then
                        vMale_S = True
                    ElseIf drv("Gender_S") = "Female" Then
                        vFemale_S = True
                    End If
                    vCitizenship_S = drv("Citizenship_S")
                    vTIN_S = drv("TIN_S")
                    vTelephone_S = drv("Telephone_S")
                    vSSS_S = drv("SSS_S")
                    vMobile_S = drv("Mobile_S")
                    vEmail_S = drv("Email_S")
                    If drv("House_S") = "Owned" Then
                        vOwned_S = True
                    ElseIf drv("House_S") = "Free" Then
                        vFree_S = True
                    ElseIf drv("House_S") = "Rented" Then
                        vRented_S = True
                        vRent_S = drv("Rent_S")
                    End If
                    Try
                        Using TempPB As New DevExpress.XtraEditors.PictureEdit
                            TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Borrowers\{3}\{4}", RootFolder, MainFolder, drv("branch_code"), drv("BorrowerID"), "Spouse.jpg"))
                            If IO.File.Exists(String.Format("{0}\{1}\{2}\Borrowers\{3}\{4}", RootFolder, MainFolder, drv("branch_code"), drv("BorrowerID"), "Spouse.jpg")) Then
                                txtPath_S.Text = "Spouse.jpg"
                            Else
                                txtPath_S.Text = ""
                            End If
                            ResizeImages(TempPB.Image.Clone, pb_Spouse, 850, 700)
                        End Using
                    Catch ex As Exception
                        txtPath_S.Text = ""
                    End Try
                    TotalImageS = 0
                    vEmployer_S = drv("Employer_S")
                    vEmpAddress_S = drv("EmployerAddress_S")
                    vEmpTelephone_S = drv("EmployerTelephone_S")
                    vPosition_S = drv("Position_S")
                    If drv("EmploymentStat_S") = "Casual" Then
                        vCasual_S = True
                    ElseIf drv("EmploymentStat_S") = "Temporary" Then
                        vTemporary_S = True
                    ElseIf drv("EmploymentStat_S") = "Permanent" Then
                        vPermanent_S = True
                    End If
                    vHired_S = drv("Hired_S")
                    vYearHired_S = drv("YearHired_S")
                    vSupervisor_S = drv("Supervisor_S")
                    vSalary_S = drv("Monthly_S")
                    vBusinessName_S = drv("BusinessName_S")
                    vBusinessAddress_S = drv("BusinessAddress_S")
                    vBusinessTelephone_S = drv("BusinessTelephone_S")
                    vNatureBusiness_S = drv("NatureBusiness_S")
                    vYrsOperation_S = drv("YrsOperation_S")
                    vBusinessIncome_S = drv("BusinessIncome_S")
                    vNoEmployees_S = drv("NoEmployees_S")
                    vCapital_S = drv("Capital_S")
                    vArea_S = drv("Area_S")
                    vExpiry_S = drv("Expiry_S")
                    vOutlet_S = drv("Outlet_S")
                    vOtherIncome_S = drv("OtherIncome_S")
                    vOtherIncomeD_S = drv("OtherIncome_S-Amount")
                    Industry_S.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM profile_borrower_industry WHERE `status` = 'ACTIVE' AND BorrowerID = '{0}' AND `Type` = 'Spouse'", drv("BorrowerID"))))

                    '*** I D E N T I F I C A T I O N ***
                    Dim BorrowerID_S As DataTable = DataSource(String.Format("SELECT * FROM profile_borrowerid WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE' AND ID_Type = 'S'", BorrowerID))
                    If BorrowerID_S.Rows.Count > 0 Then
                        GSIS_S = BorrowerID_S(0)("GSIS")
                        PhilHealth_S = BorrowerID_S(0)("PhilHealth")
                        Senior_S = BorrowerID_S(0)("Senior")
                        UMID_S = BorrowerID_S(0)("UMID")
                        SEC_S = BorrowerID_S(0)("SEC")
                        DTI_S = BorrowerID_S(0)("DTI")
                        CDA_S = BorrowerID_S(0)("CDA")
                        Cooperative_S = BorrowerID_S(0)("Cooperative")
                        Drivers_S = BorrowerID_S(0)("Drivers")
                        dDrivers_S = BorrowerID_S(0)("dDrivers")
                        VIN_S = BorrowerID_S(0)("VIN")
                        dVIN_S = BorrowerID_S(0)("dVIN")
                        Passport_S = BorrowerID_S(0)("Passport")
                        dPassport_S = BorrowerID_S(0)("dPassport")
                        PRC_S = BorrowerID_S(0)("PRC")
                        dPRC_S = BorrowerID_S(0)("dPRC")
                        NBI_S = BorrowerID_S(0)("NBI")
                        dNBI_S = BorrowerID_S(0)("dNBI")
                        Police_S = BorrowerID_S(0)("Police")
                        dPolice_S = BorrowerID_S(0)("dPolice")
                        Postal_S = BorrowerID_S(0)("Postal")
                        dPostal_S = BorrowerID_S(0)("dPostal")
                        Barangay_S = BorrowerID_S(0)("Barangay")
                        dBarangay_S = BorrowerID_S(0)("dBarangay")
                        OWWA_S = BorrowerID_S(0)("OWWA")
                        dOWWA_S = BorrowerID_S(0)("dOWWA")
                        OFW_S = BorrowerID_S(0)("OFW")
                        dOFW_S = BorrowerID_S(0)("dOFW")
                        Seaman_S = BorrowerID_S(0)("Seaman")
                        dSeaman_S = BorrowerID_S(0)("dSeaman")
                        PNP_S = BorrowerID_S(0)("PNP")
                        dPNP_S = BorrowerID_S(0)("dPNP")
                        AFP_S = BorrowerID_S(0)("AFP")
                        dAFP_S = BorrowerID_S(0)("dAFP")
                        HDMF_S = BorrowerID_S(0)("HDMF")
                        dHDMF_S = BorrowerID_S(0)("dHDMF")
                        PWD_S = BorrowerID_S(0)("PWD")
                        dPWD_S = BorrowerID_S(0)("dPWD")
                        DSWD_S = BorrowerID_S(0)("DSWD")
                        dDSWD_S = BorrowerID_S(0)("dDSWD")
                        ACR_S = BorrowerID_S(0)("ACR")
                        dACR_S = BorrowerID_S(0)("dACR")
                        DTI_Business_S = BorrowerID_S(0)("DTI_Business")
                        dDTI_Business_S = BorrowerID_S(0)("dDTI_Business")
                        IBP_S = BorrowerID_S(0)("IBP")
                        dIBP_S = BorrowerID_S(0)("dIBP")
                        FireArms_S = BorrowerID_S(0)("FireArms")
                        dFireArms_S = BorrowerID_S(0)("dFireArms")
                        Government_S = BorrowerID_S(0)("Government")
                        dGovernment_S = BorrowerID_S(0)("dGovernment")
                        Diplomat_S = BorrowerID_S(0)("Diplomat")
                        dDiplomat_S = BorrowerID_S(0)("dDiplomat")
                        National_S = BorrowerID_S(0)("National")
                        dNational_S = BorrowerID_S(0)("dNational")
                        Work_S = BorrowerID_S(0)("Work")
                        dWork_S = BorrowerID_S(0)("dWork")
                        GOCC_S = BorrowerID_S(0)("GOCC")
                        dGOCC_S = BorrowerID_S(0)("dGOCC")
                        PLRA_S = BorrowerID_S(0)("PLRA")
                        dPLRA_S = BorrowerID_S(0)("dPLRA")
                        Major_S = BorrowerID_S(0)("Major")
                        dMajor_S = BorrowerID_S(0)("dMajor")
                        Media_S = BorrowerID_S(0)("Media")
                        dMedia_S = BorrowerID_S(0)("dMedia")
                        Student_S = BorrowerID_S(0)("Student")
                        dStudent_S = BorrowerID_S(0)("dStudent")
                        SIRV_S = BorrowerID_S(0)("SIRV")
                        dSIRV_S = BorrowerID_S(0)("dSIRV")
                    End If
                    '*** I D E N T I F I C A T I O N ***
                End If

                btnAttachB.Enabled = True
                btnID.Enabled = True
            End If
        End If
        Cursor = Cursors.Default
    End Sub

    Private Sub CbxNatureBusiness_B2_TextChanged(sender As Object, e As EventArgs) Handles cbxNatureBusiness_B2.TextChanged
        cbxNatureBusiness_B.Text = If(cbxNatureBusiness_B2.Text.Length > 60, cbxNatureBusiness_B2.Text.Substring(1, 60), cbxNatureBusiness_B2.Text)
    End Sub

    Private Sub Pb_B_Click(sender As Object, e As MouseEventArgs) Handles pb_B.Click
        Dim Camera As New FrmCamera
        With Camera
            If .ShowDialog = DialogResult.OK Then
                pb_B.Image = .pb_Picture.Image.Clone
                txtPath_B.Text = "From Camera"
            End If
        End With
    End Sub

    Private Sub Draft_Save(Trigger As String)
        If dAmountApplied.Value = 0 Then
            MsgBox("Please fill Amount Applied.", MsgBoxStyle.Information, "Info")
            dAmountApplied.Focus()
            Exit Sub
        End If
        If iTerms.Value = 0 Then
            MsgBox("Please fill Terms.", MsgBoxStyle.Information, "Info")
            iTerms.Focus()
            Exit Sub
        End If
        If cbxTerms.SelectedIndex = -1 Or cbxTerms.Text = "" Then
            MsgBox("Please select a term type.", MsgBoxStyle.Information, "Info")
            cbxTerms.DroppedDown = True
            Exit Sub
        End If
        If cbxProduct.SelectedIndex = -1 Or cbxProduct.Text = "" Then
            MsgBox("Please select a product.", MsgBoxStyle.Information, "Info")
            cbxProduct.DroppedDown = True
            Exit Sub
        End If
        If (cbxCollateral.SelectedIndex = -1 Or cbxCollateral.Text = "") And cbxCollateral.Enabled Then
            MsgBox("Please select a collateral.", MsgBoxStyle.Information, "Info")
            cbxCollateral.DroppedDown = True
            Exit Sub
        End If
        If dtpDate.CustomFormat = "" Then
            MsgBox("Please fill the correct Application Date.", MsgBoxStyle.Information, "Info")
            Exit Sub
        End If
        If dtpDate.Value > Date.Now Then
            If MsgBoxYes(String.Format("Are you sure that the application date is on {0}?", dtpDate.Text)) = MsgBoxResult.No Then
                Exit Sub
            End If
        End If
        Dim drv_P As DataRowView = DirectCast(cbxProduct.SelectedItem, DataRowView)
        If drv_P("max_terms") > 0 Then
            If iTerms.Value > drv_P("max_terms") Then
                If MsgBoxYes(String.Format("Max terms for product {0} is only {1} term(s), would you like to proceed?", cbxProduct.Text, drv_P("max_terms"))) = MsgBoxResult.No Then
                    Exit Sub
                End If
            End If
        End If
        If cbxProduct.Text.Contains("FSFC") Or cbxProduct.Text.Contains("SISTER") Then
            If cbxEmployer_B.SelectedIndex = -1 Then
                MsgBox("Please select an employer.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabFinancial_1
                cbxEmployer_B.Focus()
                cbxEmployer_B.DroppedDown = True
                Exit Sub
            End If
        End If
        If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
            If cbxBorrower.SelectedIndex = -1 Or cbxBorrower.Text = "" Then
                MsgBox("Please select a borrower.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabBorrower
                cbxBorrower.Focus()
                cbxBorrower.DroppedDown = True
                Exit Sub
            End If
        End If
        If TxtFirstN_B.Text = "" Then
            If cbxCorporate.Checked Then
                MsgBox("Please fill the corporate trade name.", MsgBoxStyle.Information, "Info")
            Else
                MsgBox("Please fill the borrower's first name.", MsgBoxStyle.Information, "Info")
            End If
            TxtFirstN_B.Focus()
            Exit Sub
        End If
        If TxtLastN_B.Text = "" And cbxCorporate.Checked = False Then
            MsgBox("Please fill the borrower's last name.", MsgBoxStyle.Information, "Info")
            TxtLastN_B.Focus()
            Exit Sub
        End If
        If DateValue(DtpBirth_B.Value.AddYears(18)) > DateValue(Date.Now) And cbxCorporate.Checked = False Then
            If MsgBoxYes("Borrower's age is below 18 years old, are you sure you would like to proceed?") = MsgBoxResult.No Then
                Exit Sub
            End If
        ElseIf DateValue(DtpBirth_B.Value.AddYears(61)) <= datevalue(Date.Now) And cbxCorporate.Checked = False Then
            If MsgBoxYes("Borrower's age is 61 or above, are you sure you would like to proceed?") = MsgBoxResult.No Then
                Exit Sub
            End If
            If TxtFirstN_C1.Text = "" Then
                If MsgBoxYes("Borrower's above 60 years old will require a Co-Maker, would you like to proceed?") = MsgBoxResult.No Then
                    Exit Sub
                End If
            End If
        End If
        If Trigger = "D&raft" Or Trigger = "Update Draft" Then
        Else
            If cbxOptions.Text = "" Or cbxOptions.SelectedIndex = -1 Then
                MsgBox("Please select a loan type.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabBorrower
                cbxOptions.Focus()
                cbxOptions.DroppedDown = True
                Exit Sub
            End If
            If cbxCollateral.Text = "ATM" And PD_AccountNumber = "" Then
                MsgBox("Please fill the ATM Info.", MsgBoxStyle.Information, "Info")
                btnATM.Focus()
                btnATM.PerformClick()
            End If
            If cbxAddressC_B.Text = "" And tabBorrower.Visible = True Then
                MsgBox("Please fill/select address.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabBorrower
                cbxAddressC_B.Focus()
                cbxAddressC_B.DroppedDown = True
                Exit Sub
            End If
            If (txtMobile_B.Text = "" Or txtMobile_B.Text.Trim.Length <> 10 Or IsNumeric(txtMobile_B.Text.Trim) = False Or If(txtMobile_B.Text.Length > 1, txtMobile_B.Text.Substring(0, 1) = 0, 0)) And tabBorrower.Visible = True And cbxCorporate.Checked = False Then
                MsgBox("Please fill a correct Mobile Number field.", MsgBoxStyle.Information, "Info")
                txtMobile_B.Focus()
                Exit Sub
            End If
            If txtMobile_B2.Text <> "" And (txtMobile_B2.Text.Trim.Length <> 10 Or IsNumeric(txtMobile_B2.Text.Trim) = False Or If(txtMobile_B2.Text.Length > 1, txtMobile_B2.Text.Substring(0, 1) = 0, 0)) And tabBorrower.Visible = True And cbxCorporate.Checked = False Then
                MsgBox("Please fill a correct Alternate Mobile Number field.", MsgBoxStyle.Information, "Info")
                txtMobile_B2.Focus()
                Exit Sub
            End If
            If cbxEmployer_B.Text = "" And txtBusinessName_B.Text = "" And tabBorrower.Visible = True And cbxCorporate.Checked = False Then
                MsgBox("Please fill either Name of Employer or Business Name.", MsgBoxStyle.Information, "Info")
                cbxEmployer_B.Focus()
                Exit Sub
            End If
            If txtTIN_B.Text = "" And tabBorrower.Visible = True Then
                If MsgBoxYes("TIN is empty, Would you like to proceed?") = MsgBoxResult.No Then
                    txtTIN_B.Focus()
                    Exit Sub
                End If
            End If
            If txtSSS_B.Text = "" And tabBorrower.Visible = True Then
                If MsgBoxYes("SSS is empty, Would you like to proceed?") = MsgBoxResult.No Then
                    txtSSS_B.Focus()
                    Exit Sub
                End If
            End If
            If cbxOptions.SelectedIndex = 1 And cbxAccountNo.Text.Trim = "" And tabBorrower.Visible = True Then
                MsgBox(String.Format("Type is {0}, please fill the account no.", cbxOptions.Text), MsgBoxStyle.Information, "Info")
                cbxAccountNo.Focus()
                Exit Sub
            End If
            If (cbxOptions.SelectedIndex = 2 Or cbxOptions.SelectedIndex = 3) And cbxAccountNo.SelectedIndex = -1 And tabBorrower.Visible = True Then
                MsgBox(String.Format("Type is {0}, please select the account no.", cbxOptions.Text), MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabBorrower
                cbxAccountNo.Focus()
                cbxAccountNo.DroppedDown = True
                Exit Sub
            End If
            If cbxProduct.Text.ToUpper.Contains("SALARY") Then
            Else
                If cbxAgent.Checked = False And cbxMarketing.Checked = False And cbxWalkIn.Checked = False And cbxDealer.Checked = False Then
                    MsgBox("No referred by is selected, found at Financial Information, Please select How did you learn about us. Thank you.", MsgBoxStyle.Information, "Info")
                    Exit Sub
                End If
            End If
            If cbxBusinessCenter.SelectedIndex = -1 Or cbxBusinessCenter.Text = "" Then
                MsgBox("Please select a business center.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabFinancial_2
                cbxBusinessCenter.Focus()
                cbxBusinessCenter.DroppedDown = True
                Exit Sub
            End If
            If cbxOptions.SelectedIndex = 0 Then
                Dim ExistingAccounts As Integer = DataObject(String.Format("SELECT COUNT(ID) FROM credit_application WHERE BorrowerID = '{0}' AND PaymentRequest = 'RELEASED' AND `status` = 'ACTIVE';", cbxBorrower.SelectedValue))
                If ExistingAccounts > 0 Then
                    If MsgBox(String.Format("Borrower still have {0} ongoing active accounts, would you like to proceed with loan type NEW?", ExistingAccounts), MsgBoxStyle.YesNo, "Info") = MsgBoxResult.No Then
                        Exit Sub
                    End If
                End If
            End If
        End If
        Dim Gender_B As String = ""
        If cbxMale_B.Checked Then
            Gender_B = "Male"
        ElseIf cbxFemale_B.Checked Then
            Gender_B = "Female"
        End If
        Dim Civil_B As String = ""
        If cbxSingle_B.Checked Then
            Civil_B = "Single"
        ElseIf cbxMarried_B.Checked Then
            Civil_B = "Married"
        ElseIf cbxSeparated_B.Checked Then
            Civil_B = "Separated"
        ElseIf cbxWidowed_B.Checked Then
            Civil_B = "Widowed"
        End If
        Dim House_B As String = ""
        If cbxOwned_B.Checked Then
            House_B = "Owned"
        ElseIf cbxFree_B.Checked Then
            House_B = "Free"
        ElseIf cbxRented_B.Checked Then
            House_B = "Rented"
        End If
        Dim EmplStatus_B As String = ""
        If cbxCasual_B.Checked Then
            EmplStatus_B = "Casual"
        ElseIf cbxTemporary_B.Checked Then
            EmplStatus_B = "Temporary"
        ElseIf cbxPermanent_B.Checked Then
            EmplStatus_B = "Permanent"
        End If
        Dim AccountT_1 As String = ""
        If cbxSA_1.Checked Then
            AccountT_1 = "SA"
        ElseIf cbxCA_1.Checked Then
            AccountT_1 = "CA"
        End If
        Dim AccountT_2 As String = ""
        If cbxSA_2.Checked Then
            AccountT_2 = "SA"
        ElseIf cbxCA_2.Checked Then
            AccountT_2 = "CA"
        End If
        Dim AccountT_3 As String = ""
        If cbxSA_3.Checked Then
            AccountT_3 = "SA"
        ElseIf cbxCA_3.Checked Then
            AccountT_3 = "CA"
        End If
        Dim CollateralID As Integer = 0
        If cbxCollateral.Text = "" Or cbxCollateral.SelectedIndex = -1 Then
        Else
            CollateralID = cbxCollateral.SelectedValue
        End If

        Dim AgentID As String = ""
        Dim Agent As String = ""
        Dim AgentNo As String = ""
        Dim AgentID_2 As String = ""
        Dim Agent_2 As String = ""
        Dim AgentNo_2 As String = ""
        Dim MarketingID As String = ""
        Dim Marketing As String = ""
        Dim MarketingNo As String = ""
        Dim WalkinID As String = ""
        Dim Walkin As String = ""
        Dim Walkin_Specify As String = ""
        Dim DealerID As String = ""
        Dim Dealer As String = ""
        Dim DealerNo As String = ""
        If cbxAgent.Checked Then
            If (cbxAgentName.SelectedIndex = -1 Or cbxAgentName.Text = "") And (From_CI = False Or From_Request = False) Then
                MsgBox("Please select agent from the list.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabFinancial_2
                cbxAgentName.Focus()
                cbxAgentName.DroppedDown = True
                Exit Sub
            Else
                AgentID = cbxAgentName.SelectedValue
                Agent = cbxAgentName.Text
                AgentNo = txtAgentContact.Text
            End If
        End If
        If cbxAgentV2.Checked Then
            If (cbxAgentNameV2.SelectedIndex = -1 Or cbxAgentNameV2.Text = "") And (From_CI = False Or From_Request = False) Then
                MsgBox("Please select agent from the list.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabFinancial_2
                cbxAgentNameV2.Focus()
                cbxAgentNameV2.DroppedDown = True
                Exit Sub
            Else
                AgentID_2 = cbxAgentNameV2.SelectedValue
                Agent_2 = cbxAgentNameV2.Text
                AgentNo_2 = txtAgentContactV2.Text
            End If
        End If
        If cbxAgent.Checked And cbxAgentV2.Checked Then
            If (cbxAgentName.Text = cbxAgentNameV2.Text) And (From_CI = False Or From_Request = False) Then
                MsgBox("The same agent is selected, please select another agent.", MsgBoxStyle.Information, "Info")
                Exit Sub
            End If
        End If
        If cbxMarketing.Checked Then
            If (cbxMarketingName.SelectedIndex = -1 Or cbxMarketingName.Text = "") And (From_CI = False Or From_Request = False) Then
                MsgBox("Please select account officer from the list.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabFinancial_2
                cbxMarketingName.Focus()
                cbxMarketingName.DroppedDown = True
                Exit Sub
            Else
                MarketingID = cbxMarketingName.SelectedValue
                Marketing = cbxMarketingName.Text
                MarketingNo = txtMarketingContact.Text
            End If
        End If
        If cbxWalkIn.Checked Then
            If (cbxWalkInType.SelectedIndex = -1 Or cbxWalkInType.Text = "") And (From_CI = False Or From_Request = False) Then
                MsgBox("Please select walk in from the list.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabFinancial_2
                cbxWalkInType.Focus()
                cbxWalkInType.DroppedDown = True
                Exit Sub
            Else
                WalkinID = cbxWalkInType.SelectedValue
                Walkin = cbxWalkInType.Text
                Walkin_Specify = txtWalkInOthers.Text
            End If
        End If
        If cbxDealer.Checked Then
            If (cbxDealerName.SelectedIndex = -1 Or cbxDealerName.Text = "") And (From_CI = False Or From_Request = False) Then
                MsgBox("Please select dealer from the list.", MsgBoxStyle.Information, "Info")
                SuperTabControl1.SelectedTab = tabFinancial_2
                cbxDealerName.Focus()
                cbxDealerName.DroppedDown = True
                Exit Sub
            Else
                DealerID = cbxDealerName.SelectedValue
                Dealer = cbxDealerName.Text
                DealerNo = txtDealersContact.Text
            End If
        End If
        If cbxOptions.SelectedIndex = 2 Then
            If dAmountApplied.Value = dAmountApplied.Tag Then
            Else
                If MsgBox("Amount Applied is not equal with the old Balance, would you like to proceed?", MsgBoxStyle.YesNo, "Info") = MsgBoxResult.No Then
                    Exit Sub
                End If
            End If
            If iTerms.Value = iTerms.Tag Then
            Else
                If MsgBox("Terms is not equal with the old Terms, would you like to proceed?", MsgBoxStyle.YesNo, "Info") = MsgBoxResult.No Then
                    Exit Sub
                End If
            End If
            If dInterest_T.Value = dInterest_T.Tag Then
            Else
                If MsgBox("Interest Rate is not equal with the old Interest Rate, would you like to proceed?", MsgBoxStyle.YesNo, "Info") = MsgBoxResult.No Then
                    Exit Sub
                End If
            End If
        End If

        If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
            If MsgBoxYes(String.Format("Are you sure you want to {0} of this data?", If(Trigger = "D&raft", "save a draft", "save"))) = MsgBoxResult.Yes Then

                Cursor = Cursors.WaitCursor
                GetCreditApplication()

                Dim SQL As String
                Try
                    SQL = "INSERT INTO credit_application SET"
                    SQL &= String.Format(" ManualAmortization = {0}, ", ManualAmortization)
                    SQL &= String.Format(" AmountApplied = '{0}', ", dAmountApplied.Value)
                    SQL &= String.Format(" AppliedAmount = '{0}', ", dAmountApplied.Value)
                    SQL &= String.Format(" AppliedTerms = '{0}', ", iTerms.Value)
                    SQL &= String.Format(" AppliedInterest = '{0}', ", dInterest_T.Value)
                    SQL &= String.Format(" AppliedSC = '{0}', ", dSC_C.Value)
                    SQL &= String.Format(" Terms = '{0}', ", iTerms.Value)
                    SQL &= String.Format(" TermType = '{0}', ", cbxTerms.Text)
                    SQL &= String.Format(" product_id = '{0}', ", cbxProduct.SelectedValue)
                    SQL &= String.Format(" product = '{0}', ", cbxProduct.Text)
                    SQL &= String.Format(" mortgage_id = '{0}', ", MortgageID)
                    SQL &= String.Format(" collateral_id = '{0}', ", CollateralID)
                    SQL &= String.Format(" collateral = '{0}', ", cbxCollateral.Text)
                    SQL &= String.Format(" From_ROPOA = '{0}', ", If(AssetNumber_1 = "", 0, 1))
                    SQL &= String.Format(" AssetNumber_1 = '{0}', ", AssetNumber_1)
                    SQL &= String.Format(" AssetNumber_2 = '{0}', ", AssetNumber_2)
                    SQL &= String.Format(" AssetNumber_3 = '{0}', ", AssetNumber_3)
                    SQL &= String.Format(" AssetNumber_4 = '{0}', ", AssetNumber_4)
                    SQL &= String.Format(" AssetNumber_5 = '{0}', ", AssetNumber_5)
                    SQL &= String.Format(" AssetSelling_1 = '{0}', ", AssetSelling_1)
                    SQL &= String.Format(" AssetSelling_2 = '{0}', ", AssetSelling_2)
                    SQL &= String.Format(" AssetSelling_3 = '{0}', ", AssetSelling_3)
                    SQL &= String.Format(" AssetSelling_4 = '{0}', ", AssetSelling_4)
                    SQL &= String.Format(" AssetSelling_5 = '{0}', ", AssetSelling_5)
                    SQL &= String.Format(" purpose = '{0}', ", txtPurpose.Text)
                    SQL &= String.Format(" trans_date = '{0}', ", FormatDatePicker(dtpDate))
                    SQL &= String.Format(" loan_type = '{0}', ", cbxOptions.Text)
                    SQL &= String.Format(" AccountN = '{0}', ", cbxAccountNo.Text)
                    SQL &= String.Format(" CreditNumber_Old = '{0}', ", ValidateComboBox(cbxAccountNo))
                    SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                    SQL &= String.Format(" interest_rate = '{0}', ", dInterest_T.Value)
                    SQL &= String.Format(" rppd_rate = '{0}', ", dRPPDRate_T.Value)
                    SQL &= String.Format(" face_amount = '{0}', ", dFA_C.Value)
                    SQL &= String.Format(" net_proceeds = '{0}', ", dNetProceeds_C.Value)
                    SQL &= String.Format(" AdvancePayment_Count = '{0}', ", iAdvancePayment.Value)
                    SQL &= String.Format(" Note = '{0}', ", rNote.Text)
                    SQL &= String.Format(" Service_Charge = '{0}', ", dSC_C.Value)
                    SQL &= String.Format(" ServiceCharge_Rate = '{0}', ", dSC_Rate.Value)
                    SQL &= String.Format(" Appraisal_Fee = '{0}', ", dAppraisalFee_C.Value)
                    SQL &= String.Format(" CI_Fee = '{0}', ", dCIFee_C.Value)
                    SQL &= String.Format(" Insurance = '{0}', ", dInsurance_C.Value)
                    SQL &= String.Format(" Miscellaneous_Income = '{0}', ", dMiscellaneous_C.Value)
                    SQL &= String.Format(" Advance_Payment = '{0}', ", dAdvancePayment_C.Value)
                    SQL &= String.Format(" Deduct_Balance = '{0}', ", dDeductBalance_C.Value)
                    SQL &= String.Format(" Interest = '{0}', ", dUDI_C.Value)
                    SQL &= String.Format(" RPPD = '{0}', ", dRPPD_C.Value)
                    SQL &= String.Format(" GMA = '{0}', ", dGMA_C.Value)
                    SQL &= String.Format(" Rebate = '{0}', ", dMR_C.Value)
                    SQL &= String.Format(" ForCI = '{0}', ", Product_ForCI)
                    SQL &= String.Format(" BillDeductions = '{0}', ", If(cbxBill.Checked, 1, 0))
                    SQL &= String.Format(" IncludeAdvancePaymentInBill = '{0}', ", If(cbxAdvancePayment.Checked, 1, 0))
                    SQL &= String.Format(" OptionD = '{0}', ", If(cbxA.Checked, "A", If(cbxB.Checked, "B", If(cbxC.Checked, "C", If(cbxD.Checked, "D", "")))))

                    SQL &= String.Format(" BorrowerID = '{0}', ", cbxBorrower.SelectedValue)
                    SQL &= String.Format(" Prefix_B = '{0}', ", CbxPrefix_B.Text)
                    SQL &= String.Format(" FirstN_B = '{0}', ", TxtFirstN_B.Text)
                    SQL &= String.Format(" MiddleN_B = '{0}', ", TxtMiddleN_B.Text)
                    SQL &= String.Format(" LastN_B = '{0}', ", TxtLastN_B.Text)
                    SQL &= String.Format(" Suffix_B = '{0}', ", cbxSuffix_B.Text)
                    SQL &= String.Format(" Prefix_S = '{0}', ", CbxPrefix_S.Text)
                    SQL &= String.Format(" FirstN_S = '{0}', ", TxtFirstN_S.Text)
                    SQL &= String.Format(" MiddleN_S = '{0}', ", TxtMiddleN_S.Text)
                    SQL &= String.Format(" LastN_S = '{0}', ", TxtLastN_S.Text)
                    SQL &= String.Format(" Suffix_S = '{0}', ", cbxSuffix_S.Text)
                    SQL &= String.Format(" Prefix_C1 = '{0}', ", CbxPrefix_C1.Text)
                    SQL &= String.Format(" FirstN_C1 = '{0}', ", TxtFirstN_C1.Text)
                    SQL &= String.Format(" MiddleN_C1 = '{0}', ", TxtMiddleN_C1.Text)
                    SQL &= String.Format(" LastN_C1 = '{0}', ", TxtLastN_C1.Text)
                    SQL &= String.Format(" Suffix_C1 = '{0}', ", cbxSuffix_C1.Text)
                    SQL &= String.Format(" Prefix_C2 = '{0}', ", CbxPrefix_C2.Text)
                    SQL &= String.Format(" FirstN_C2 = '{0}', ", TxtFirstN_C2.Text)
                    SQL &= String.Format(" MiddleN_C2 = '{0}', ", TxtMiddleN_C2.Text)
                    SQL &= String.Format(" LastN_C2 = '{0}', ", TxtLastN_C2.Text)
                    SQL &= String.Format(" Suffix_C2 = '{0}', ", cbxSuffix_C2.Text)
                    SQL &= String.Format(" Prefix_C3 = '{0}', ", CbxPrefix_C3.Text)
                    SQL &= String.Format(" FirstN_C3 = '{0}', ", TxtFirstN_C3.Text)
                    SQL &= String.Format(" MiddleN_C3 = '{0}', ", TxtMiddleN_C3.Text)
                    SQL &= String.Format(" LastN_C3 = '{0}', ", TxtLastN_C3.Text)
                    SQL &= String.Format(" Suffix_C3 = '{0}', ", cbxSuffix_C3.Text)
                    SQL &= String.Format(" Prefix_C4 = '{0}', ", CbxPrefix_C4.Text)
                    SQL &= String.Format(" FirstN_C4 = '{0}', ", TxtFirstN_C4.Text)
                    SQL &= String.Format(" MiddleN_C4 = '{0}', ", TxtMiddleN_C4.Text)
                    SQL &= String.Format(" LastN_C4 = '{0}', ", TxtLastN_C4.Text)
                    SQL &= String.Format(" Suffix_C4 = '{0}', ", cbxSuffix_C4.Text)
                    SQL &= String.Format(" NoC_B = '{0}', ", txtNoC_B.Text)
                    SQL &= String.Format(" StreetC_B = '{0}', ", txtStreetC_B.Text)
                    SQL &= String.Format(" BarangayC_B = '{0}', ", txtBarangayC_B.Text)
                    SQL &= String.Format(" `AddressC_B-ID` = '{0}', ", ValidateComboBox(cbxAddressC_B))
                    SQL &= String.Format(" AddressC_B = '{0}', ", cbxAddressC_B.Text)
                    SQL &= String.Format(" NoP_B = '{0}', ", txtNoP_B.Text)
                    SQL &= String.Format(" StreetP_B = '{0}', ", txtStreetP_B.Text)
                    SQL &= String.Format(" BarangayP_B = '{0}', ", txtBarangayP_B.Text)
                    SQL &= String.Format(" `AddressP_B-ID` = '{0}', ", ValidateComboBox(cbxAddressP_B))
                    SQL &= String.Format(" AddressP_B = '{0}', ", cbxAddressP_B.Text)
                    SQL &= String.Format(" Birth_B = '{0}', ", FormatDatePicker(DtpBirth_B))
                    SQL &= String.Format(" `PlaceBirth_B-ID` = '{0}', ", ValidateComboBox(cbxPlaceBirth_B))
                    SQL &= String.Format(" PlaceBirth_B = '{0}', ", cbxPlaceBirth_B.Text)
                    SQL &= String.Format(" Gender_B = '{0}', ", Gender_B)
                    SQL &= String.Format(" Civil_B = '{0}', ", Civil_B)
                    SQL &= String.Format(" Citizenship_B = '{0}', ", cbxCitizenship_B.Text)
                    SQL &= String.Format(" TIN_B = '{0}', ", txtTIN_B.Text)
                    SQL &= String.Format(" Telephone_B = '{0}', ", txtTelephone_B.Text)
                    SQL &= String.Format(" SSS_B = '{0}', ", txtSSS_B.Text)
                    SQL &= String.Format(" Mobile_B = '{0}', ", txtMobile_B.Text)
                    SQL &= String.Format(" Mobile_B2 = '{0}', ", txtMobile_B2.Text)
                    SQL &= String.Format(" Email_B = '{0}', ", txtEmail_B.Text)
                    SQL &= String.Format(" House_B = '{0}', ", House_B)
                    SQL &= String.Format(" Rent_B = '{0}', ", dRent_B.Value)

                    SQL &= String.Format(" Prefix_D1 = '{0}', ", CbxPrefix_1.Text)
                    SQL &= String.Format(" FirstN_D1 = '{0}', ", TxtFirstN_1.Text)
                    SQL &= String.Format(" MiddleN_D1 = '{0}', ", TxtMiddleN_1.Text)
                    SQL &= String.Format(" LastN_D1 = '{0}', ", TxtLastN_1.Text)
                    SQL &= String.Format(" Suffix_D1 = '{0}', ", cbxSuffix_1.Text)
                    SQL &= String.Format(" Age_D1 = '{0}', ", iAge_D1.Value)
                    SQL &= String.Format(" Grade_D1 = '{0}', ", txtGrade_1.Text)
                    SQL &= String.Format(" School_D1 = '{0}', ", txtSchool_1.Text)
                    SQL &= String.Format(" SchoolAddress_D1 = '{0}', ", txtSchoolAddress_1.Text)
                    SQL &= String.Format(" Prefix_D2 = '{0}', ", CbxPrefix_2.Text)
                    SQL &= String.Format(" FirstN_D2 = '{0}', ", TxtFirstN_2.Text)
                    SQL &= String.Format(" MiddleN_D2 = '{0}', ", TxtMiddleN_2.Text)
                    SQL &= String.Format(" LastN_D2 = '{0}', ", TxtLastN_2.Text)
                    SQL &= String.Format(" Suffix_D2 = '{0}', ", cbxSuffix_2.Text)
                    SQL &= String.Format(" Age_D2 = '{0}', ", iAge_D2.Value)
                    SQL &= String.Format(" Grade_D2 = '{0}', ", txtGrade_2.Text)
                    SQL &= String.Format(" School_D2 = '{0}', ", txtSchool_2.Text)
                    SQL &= String.Format(" SchoolAddress_D2 = '{0}', ", txtSchoolAddress_2.Text)
                    SQL &= String.Format(" Prefix_D3 = '{0}', ", CbxPrefix_3.Text)
                    SQL &= String.Format(" FirstN_D3 = '{0}', ", TxtFirstN_3.Text)
                    SQL &= String.Format(" MiddleN_D3 = '{0}', ", TxtMiddleN_3.Text)
                    SQL &= String.Format(" LastN_D3 = '{0}', ", TxtLastN_3.Text)
                    SQL &= String.Format(" Suffix_D3 = '{0}', ", cbxSuffix_3.Text)
                    SQL &= String.Format(" Age_D3 = '{0}', ", iAge_D3.Value)
                    SQL &= String.Format(" Grade_D3 = '{0}', ", txtGrade_3.Text)
                    SQL &= String.Format(" School_D3 = '{0}', ", txtSchool_3.Text)
                    SQL &= String.Format(" SchoolAddress_D3 = '{0}', ", txtSchoolAddress_3.Text)
                    SQL &= String.Format(" Prefix_D4 = '{0}', ", CbxPrefix_4.Text)
                    SQL &= String.Format(" FirstN_D4 = '{0}', ", TxtFirstN_4.Text)
                    SQL &= String.Format(" MiddleN_D4 = '{0}', ", TxtMiddleN_4.Text)
                    SQL &= String.Format(" LastN_D4 = '{0}', ", TxtLastN_4.Text)
                    SQL &= String.Format(" Suffix_D4 = '{0}', ", cbxSuffix_4.Text)
                    SQL &= String.Format(" Age_D4 = '{0}', ", iAge_D4.Value)
                    SQL &= String.Format(" Grade_D4 = '{0}', ", txtGrade_4.Text)
                    SQL &= String.Format(" School_D4 = '{0}', ", txtSchool_4.Text)
                    SQL &= String.Format(" SchoolAddress_D4 = '{0}', ", txtSchoolAddress_4.Text)
                    SQL &= String.Format(" Remarks = '{0}', ", rRemarks.Text)

                    SQL &= String.Format(" Employer_B = '{0}', ", cbxEmployer_B.Text)
                    SQL &= String.Format(" Employer_B_ID = '{0}', ", ValidateComboBox(cbxEmployer_B))
                    SQL &= String.Format(" EmployerAddress_B = '{0}', ", txtEmployerAddress_B.Text)
                    SQL &= String.Format(" EmployerTelephone_B = '{0}', ", txtEmployerTelephone_B.Text)
                    SQL &= String.Format(" Position_B = '{0}', ", cbxPosition_B.Text)
                    SQL &= String.Format(" EmploymentStat_B = '{0}', ", EmplStatus_B)
                    SQL &= String.Format(" Hired_B = '{0}', ", FormatDatePicker(dtpHired_B))
                    SQL &= String.Format(" Supervisor_B = '{0}', ", txtSupervisor_B.Text)
                    SQL &= String.Format(" Monthly_B = '{0}', ", dMonthly_B.Value)
                    SQL &= String.Format(" BusinessName_B = '{0}', ", txtBusinessName_B.Text)
                    SQL &= String.Format(" BusinessAddress_B = '{0}', ", txtBusinessAddress_B.Text)
                    SQL &= String.Format(" BusinessTelephone_B = '{0}', ", txtBusinessTelephone_B.Text)
                    SQL &= String.Format(" NatureBusiness_B = '{0}', ", cbxNatureBusiness_B.Text)
                    SQL &= String.Format(" YrsOperation_B = '{0}', ", iYrsOperation_B.Value)
                    SQL &= String.Format(" BusinessIncome_B = '{0}', ", dBusinessIncome_B.Value)
                    SQL &= String.Format(" NoEmployees_B = '{0}', ", iNoEmployees_B.Value)
                    SQL &= String.Format(" Capital_B = '{0}', ", dCapital_B.Value)
                    SQL &= String.Format(" Area_B = '{0}', ", txtArea_B.Text)
                    SQL &= String.Format(" Expiry_B = '{0}', ", FormatDatePicker(dtpExpiry_B))
                    SQL &= String.Format(" Outlet_B = '{0}', ", iOutlet_B.Value)
                    SQL &= String.Format(" OtherIncome_B = '{0}', ", txtOtherIncome_B.Text)
                    SQL &= String.Format(" `OtherIncome_B-Amount` = '{0}', ", dOtherIncome_B.Value)
                    SQL &= String.Format(" Creditor_1 = '{0}', ", txtCreditor_1.Text)
                    SQL &= String.Format(" NatureLoan_1 = '{0}', ", txtNatureLoan_1.Text)
                    SQL &= String.Format(" AmountGranted_1 = '{0}', ", dAmountGranted_1.Value)
                    SQL &= String.Format(" Term_1 = '{0}', ", dTerm_1.Value)
                    SQL &= String.Format(" Balance_1 = '{0}', ", dBalance_1.Value)
                    SQL &= String.Format(" CreditRemarks_1 = '{0}', ", txtCreditRemarks_1.Text)
                    SQL &= String.Format(" Creditor_2 = '{0}', ", txtCreditor_2.Text)
                    SQL &= String.Format(" NatureLoan_2 = '{0}', ", txtNatureLoan_2.Text)
                    SQL &= String.Format(" AmountGranted_2 = '{0}', ", dAmountGranted_2.Value)
                    SQL &= String.Format(" Term_2 = '{0}', ", dTerm_2.Value)
                    SQL &= String.Format(" Balance_2 = '{0}', ", dBalance_2.Value)
                    SQL &= String.Format(" CreditRemarks_2 = '{0}', ", txtCreditRemarks_2.Text)
                    SQL &= String.Format(" Creditor_3 = '{0}', ", txtCreditor_3.Text)
                    SQL &= String.Format(" NatureLoan_3 = '{0}', ", txtNatureLoan_3.Text)
                    SQL &= String.Format(" AmountGranted_3 = '{0}', ", dAmountGranted_3.Value)
                    SQL &= String.Format(" Term_3 = '{0}', ", dTerm_3.Value)
                    SQL &= String.Format(" Balance_3 = '{0}', ", dBalance_3.Value)
                    SQL &= String.Format(" CreditRemarks_3 = '{0}', ", txtCreditRemarks_3.Text)
                    SQL &= String.Format(" Bank_1 = '{0}', ", txtBank_1.Text)
                    SQL &= String.Format(" Branch_1 = '{0}', ", txtBranch_1.Text)
                    SQL &= String.Format(" AccountT_1 = '{0}', ", AccountT_1)
                    SQL &= String.Format(" SA_1 = '{0}', ", txtSA_1.Text)
                    SQL &= String.Format(" AverageBalance_1 = '{0}', ", dAverageBalance_1.Value)
                    SQL &= String.Format(" PresentBalance_1 = '{0}', ", dPresentBalance_1.Value)
                    SQL &= String.Format(" Opened_1 = '{0}', ", txtOpened_1.Text)
                    SQL &= String.Format(" BankRemarks_1 = '{0}', ", txtBankRemarks_1.Text)
                    SQL &= String.Format(" Bank_2 = '{0}', ", txtBank_2.Text)
                    SQL &= String.Format(" Branch_2 = '{0}', ", txtBranch_2.Text)
                    SQL &= String.Format(" AccountT_2 = '{0}', ", AccountT_2)
                    SQL &= String.Format(" SA_2 = '{0}', ", txtSA_2.Text)
                    SQL &= String.Format(" AverageBalance_2 = '{0}', ", dAverageBalance_2.Value)
                    SQL &= String.Format(" PresentBalance_2 = '{0}', ", dPresentBalance_2.Value)
                    SQL &= String.Format(" Opened_2 = '{0}', ", txtOpened_2.Text)
                    SQL &= String.Format(" BankRemarks_2 = '{0}', ", txtBankRemarks_2.Text)
                    SQL &= String.Format(" Bank_3 = '{0}', ", txtBank_3.Text)
                    SQL &= String.Format(" Branch_3 = '{0}', ", txtBranch_3.Text)
                    SQL &= String.Format(" AccountT_3 = '{0}', ", AccountT_3)
                    SQL &= String.Format(" SA_3 = '{0}', ", txtSA_3.Text)
                    SQL &= String.Format(" AverageBalance_3 = '{0}', ", dAverageBalance_3.Value)
                    SQL &= String.Format(" PresentBalance_3 = '{0}', ", dPresentBalance_3.Value)
                    SQL &= String.Format(" Opened_3 = '{0}', ", txtOpened_3.Text)
                    SQL &= String.Format(" BankRemarks_3 = '{0}', ", txtBankRemarks_3.Text)
                    SQL &= String.Format(" Location_1 = '{0}', ", txtLocation_1.Text)
                    SQL &= String.Format(" TCT_1 = '{0}', ", txtTCT_1.Text)
                    SQL &= String.Format(" Area_1 = '{0}', ", dArea_1.Value)
                    SQL &= String.Format(" Acquired_1 = '{0}', ", txtAcquired_1.Text)
                    SQL &= String.Format(" PropertiesRemarks_1 = '{0}', ", txtPropertiesRemarks_1.Text)
                    SQL &= String.Format(" Location_2 = '{0}', ", txtLocation_2.Text)
                    SQL &= String.Format(" TCT_2 = '{0}', ", txtTCT_2.Text)
                    SQL &= String.Format(" Area_2 = '{0}', ", dArea_2.Value)
                    SQL &= String.Format(" Acquired_2 = '{0}', ", txtAcquired_2.Text)
                    SQL &= String.Format(" PropertiesRemarks_2 = '{0}', ", txtPropertiesRemarks_2.Text)
                    SQL &= String.Format(" Location_3 = '{0}', ", txtLocation_3.Text)
                    SQL &= String.Format(" TCT_3 = '{0}', ", txtTCT_3.Text)
                    SQL &= String.Format(" Area_3 = '{0}', ", dArea_3.Value)
                    SQL &= String.Format(" Acquired_3 = '{0}', ", txtAcquired_3.Text)
                    SQL &= String.Format(" PropertiesRemarks_3 = '{0}', ", txtPropertiesRemarks_3.Text)
                    SQL &= String.Format(" Vehicle_1 = '{0}', ", txtVehicle_1.Text)
                    SQL &= String.Format(" Year_1 = '{0}', ", FormatDatePicker(dtpYear_1))
                    SQL &= String.Format(" WhomAcquired_1 = '{0}', ", txtWhomAcquired_1.Text)
                    SQL &= String.Format(" WhenAcquired_1 = '{0}', ", txtWhenAcquired_1.Text)
                    SQL &= String.Format(" VehicleRemarks_1 = '{0}', ", txtVehicleRemarks_1.Text)
                    SQL &= String.Format(" Vehicle_2 = '{0}', ", txtVehicle_2.Text)
                    SQL &= String.Format(" Year_2 = '{0}', ", FormatDatePicker(dtpYear_2))
                    SQL &= String.Format(" WhomAcquired_2 = '{0}', ", txtWhomAcquired_2.Text)
                    SQL &= String.Format(" WhenAcquired_2 = '{0}', ", txtWhenAcquired_2.Text)
                    SQL &= String.Format(" VehicleRemarks_2 = '{0}', ", txtVehicleRemarks_2.Text)
                    SQL &= String.Format(" Vehicle_3 = '{0}', ", txtVehicle_3.Text)
                    SQL &= String.Format(" Year_3 = '{0}', ", FormatDatePicker(dtpYear_3))
                    SQL &= String.Format(" WhomAcquired_3 = '{0}', ", txtWhomAcquired_3.Text)
                    SQL &= String.Format(" WhenAcquired_3 = '{0}', ", txtWhenAcquired_3.Text)
                    SQL &= String.Format(" VehicleRemarks_3 = '{0}', ", txtVehicleRemarks_3.Text)
                    SQL &= String.Format(" HomeAppliances_1 = '{0}', ", txtHomeAppliances_1.Text)
                    SQL &= String.Format(" HomeAppliances_2 = '{0}', ", txtHomeAppliances_2.Text)
                    SQL &= String.Format(" Reference_1 = '{0}', ", txtReference_1.Text)
                    SQL &= String.Format(" ReferenceAddress_1 = '{0}', ", txtReferenceAddress_1.Text)
                    SQL &= String.Format(" ReferenceContact_1 = '{0}', ", txtReferenceContact_1.Text)
                    SQL &= String.Format(" Reference_2 = '{0}', ", txtReference_2.Text)
                    SQL &= String.Format(" ReferenceAddress_2 = '{0}', ", txtReferenceAddress_2.Text)
                    SQL &= String.Format(" ReferenceContact_2 = '{0}', ", txtReferenceContact_2.Text)
                    SQL &= String.Format(" Reference_3 = '{0}', ", txtReference_3.Text)
                    SQL &= String.Format(" ReferenceAddress_3 = '{0}', ", txtReferenceAddress_3.Text)
                    SQL &= String.Format(" ReferenceContact_3 = '{0}', ", txtReferenceContact_3.Text)
                    SQL &= String.Format(" CertificateNo = '{0}', ", txtCertificateNo.Text)
                    SQL &= String.Format(" PlaceIssue = '{0}', ", txtPlaceIssue.Text)
                    SQL &= String.Format(" Issue = '{0}', ", FormatDatePicker(dtpIssue))

                    SQL &= String.Format(" `AgentID` = '{0}', ", AgentID)
                    SQL &= String.Format(" Agent = '{0}', ", Agent)
                    SQL &= String.Format(" AgentNo = '{0}', ", AgentNo)
                    SQL &= String.Format(" `AgentID_2` = '{0}', ", AgentID_2)
                    SQL &= String.Format(" Agent_2 = '{0}', ", Agent_2)
                    SQL &= String.Format(" AgentNo_2 = '{0}', ", AgentNo_2)
                    SQL &= String.Format(" `MarketingID` = '{0}', ", MarketingID)
                    SQL &= String.Format(" Marketing = '{0}', ", Marketing)
                    SQL &= String.Format(" MarketingNo = '{0}', ", MarketingNo)
                    SQL &= String.Format(" `WalkinID` = '{0}', ", WalkinID)
                    SQL &= String.Format(" WalkIn = '{0}', ", Walkin)
                    SQL &= String.Format(" WalkIn_Specify = '{0}', ", Walkin_Specify)
                    SQL &= String.Format(" `DealerID` = '{0}', ", DealerID)
                    SQL &= String.Format(" Dealer = '{0}', ", Dealer)
                    SQL &= String.Format(" DealerNo = '{0}', ", DealerNo)
                    If Trigger = "D&raft" Then
                        SQL &= " `status` = 'DRAFT', "
                    End If
                    SQL &= String.Format(" FDD = '{0}', ", If(dtpFDD.CustomFormat = "", "", Format(dtpFDD.Value, "yyyy-MM-dd")))
                    SQL &= String.Format(" PD_ATM = '{0}', ", If(PD_ATM, 1, 0))
                    SQL &= String.Format(" PD_CardNumber = '{0}', ", PD_CardNumber)
                    SQL &= String.Format(" PD_AccountNumber = '{0}', ", PD_AccountNumber)
                    SQL &= String.Format(" PD_BankID = '{0}', ", PD_BankID)
                    SQL &= String.Format(" branch_id = '{0}', ", Branch_ID)
                    SQL &= String.Format(" BorrowerBranchID = '{0}', ", Borrower_BranchID)
                    SQL &= String.Format(" BusinessID = '{0}', ", ValidateComboBox(cbxBusinessCenter))
                    SQL &= String.Format(" branch_code = '{0}', ", Branch_Code)
                    SQL &= String.Format(" Borrower_S = '{0}', ", If(cbxSpouse_B.Checked, 1, 0))
                    SQL &= String.Format(" Borrower_C1 = '{0}', ", If(cbxCoMaker1_B.Checked, 1, 0))
                    SQL &= String.Format(" Borrower_C2 = '{0}', ", If(cbxCoMaker2_B.Checked, 1, 0))
                    SQL &= String.Format(" Borrower_C3 = '{0}', ", If(cbxCoMaker3_B.Checked, 1, 0))
                    SQL &= String.Format(" Borrower_C4 = '{0}', ", If(cbxCoMaker4_B.Checked, 1, 0))
                    SQL &= String.Format(" YearHired = '{0}', ", If(cbxYearHired.Checked, 1, 0))
                    SQL &= String.Format(" YearFranchise = '{0}', ", If(cbxYearFranchise.Checked, 1, 0))
                    SQL &= String.Format(" CVforJV = '{0}', ", If(CVforJV, 1, 0))
                    SQL &= String.Format(" user_code = '{0}';", User_Code)
                    If txtPath_B.Text <> "" Then
                        SaveImage(pb_B, "Borrower")
                    End If

                    If cbxOptions.SelectedIndex = 3 And cbxAccountNo.SelectedIndex > -1 Then
                        Dim drv_A As DataRowView = DirectCast(cbxAccountNo.SelectedItem, DataRowView)
                        SQL &= String.Format("UPDATE credit_application SET AssumptionCredit = '{0}', Prefix_A = '{2}', FirstN_A = '{3}', MiddleN_A = '{4}', LastN_A = '{5}', Suffix_A = '{6}' WHERE CreditNumber = '{1}';", txtCreditNumber.Text, cbxAccountNo.SelectedValue, drv_A("Prefix_B"), drv_A("FirstN_B"), drv_A("MiddleN_B"), drv_A("LastN_B"), drv_A("Suffix_B"))
                    End If

                    If cbxOptions.SelectedIndex = 2 Then
                        SQL &= String.Format("UPDATE Credit_Application SET ForRestructuring = 1, RestructureDeductionUDI = '{1}', RestructureDeductionRPPD = '{2}' WHERE CreditNumber = '{0}';", ValidateComboBox(cbxAccountNo), RestructureDeductionUDI, RestructureDeductionRPPD)
                    End If

                    '*************AMORTIZATION SCHEDULE 
                    For x As Integer = 0 To GridView3.RowCount - 2
                        If GridView3.GetRowCellValue(x, "No") = "" Then
                            SQL &= " INSERT INTO credit_schedule SET"
                            SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                            SQL &= String.Format(" `No` = '{0}', ", GridView3.GetRowCellValue(x, "No"))
                            SQL &= String.Format(" DueDate = '{0}', ", "")
                            SQL &= String.Format(" Monthly = '{0}', ", 0)
                            SQL &= String.Format(" InterestIncome = '{0}', ", 0)
                            SQL &= String.Format(" RPPD = '{0}', ", 0)
                            SQL &= String.Format(" PrincipalAllocation = '{0}', ", 0)
                            SQL &= String.Format(" OutstandingPrincipal = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Outstanding Principal")))
                            SQL &= String.Format(" Total_RPPD = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Total_RPPD")))
                            SQL &= String.Format(" UnearnIncome = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Unearn Income")))
                            SQL &= String.Format(" LoansReceivable = '{0}';", CDbl(GridView3.GetRowCellValue(x, "Loans Receivable")))
                        Else
                            SQL &= " INSERT INTO credit_schedule SET"
                            SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                            SQL &= String.Format(" `No` = '{0}', ", GridView3.GetRowCellValue(x, "No"))
                            SQL &= String.Format(" DueDate = '{0}', ", Format(DateValue(GridView3.GetRowCellValue(x, "Due Date")), "yyyy-MM-dd"))
                            SQL &= String.Format(" Monthly = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Monthly")))
                            SQL &= String.Format(" InterestIncome = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Interest Income")))
                            SQL &= String.Format(" RPPD = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "RPPD")))
                            SQL &= String.Format(" PrincipalAllocation = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Principal Allocation")))
                            SQL &= String.Format(" OutstandingPrincipal = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Outstanding Principal")))
                            SQL &= String.Format(" Total_RPPD = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Total_RPPD")))
                            SQL &= String.Format(" UnearnIncome = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Unearn Income")))
                            SQL &= String.Format(" LoansReceivable = '{0}';", CDbl(GridView3.GetRowCellValue(x, "Loans Receivable")))
                        End If
                    Next
                    '*************AMORTIZATION SCHEDULE 

                    '*************REQUIREMENT THAT NEEDS TO COMPLY
                    For x As Integer = 0 To GridView1.RowCount - 1
                        SQL &= "INSERT INTO submit_documents SET "
                        SQL &= String.Format("BorrowerID = '{0}', ", BorrowerID)
                        SQL &= String.Format("CreditNumber = '{0}', ", txtCreditNumber.Text)
                        SQL &= String.Format("doc_id = '{0}', ", GridView1.GetRowCellValue(x, "ID"))
                        SQL &= String.Format("document = '{0}', ", GridView1.GetRowCellValue(x, "DOCUMENT NAME"))
                        SQL &= String.Format("date_received = '{0}', ", "")
                        SQL &= String.Format("received_code = '{0}', ", "")
                        SQL &= String.Format("received_by = '{0}', ", "")
                        SQL &= String.Format("is_complete = '{0}', ", "NO")
                        SQL &= String.Format("remarks = '{0}', ", "")
                        SQL &= String.Format("branch_id = '{0}', ", Branch_ID)
                        SQL &= String.Format("Attach = '{0}', ", 0)
                        SQL &= String.Format("Branch_Code = '{0}';", Branch_Code)
                    Next
                    For x As Integer = 0 To GridView2.RowCount - 1
                        SQL &= "INSERT INTO submit_documents SET "
                        SQL &= String.Format("BorrowerID = '{0}', ", BorrowerID)
                        SQL &= String.Format("CreditNumber = '{0}', ", txtCreditNumber.Text)
                        SQL &= String.Format("doc_id = '{0}', ", GridView2.GetRowCellValue(x, "ID"))
                        SQL &= String.Format("document = '{0}', ", GridView2.GetRowCellValue(x, "DOCUMENT NAME"))
                        SQL &= String.Format("date_received = '{0}', ", "")
                        SQL &= String.Format("received_code = '{0}', ", "")
                        SQL &= String.Format("received_by = '{0}', ", "")
                        SQL &= String.Format("is_complete = '{0}', ", "NO")
                        SQL &= String.Format("remarks = '{0}', ", "")
                        SQL &= String.Format("branch_id = '{0}', ", Branch_ID)
                        SQL &= String.Format("Attach = '{0}', ", 0)
                        SQL &= "is_genreq = 'NO', "
                        SQL &= String.Format("Branch_Code = '{0}';", Branch_Code)
                    Next
                    '*************REQUIREMENT THAT NEEDS TO COMPLY

                    '*************DEDUCT BALANCE 1
                    For x As Integer = 0 To DT_Account.Rows.Count - 1
                        SQL &= String.Format("UPDATE credit_deductbalance SET `status` = 'CANCELLED' WHERE CreditNumber_F = '' AND AccountNumber = '{0}' AND `status` = 'ACTIVE' AND deduct_status = 'PENDING';", DT_Account(x)("Account Number"))
                        SQL &= "INSERT INTO credit_deductbalance SET "
                        SQL &= String.Format("CreditNumber_F = '{0}', ", txtCreditNumber.Text)
                        SQL &= String.Format("AccountNumber = '{0}', ", DT_Account(x)("Account Number"))
                        SQL &= String.Format("CreditNumber = '{0}', ", DT_Account(x)("Credit Number"))
                        SQL &= String.Format("LR = '{0}', ", CDbl(DT_Account(x)("Loans Receivable")))
                        SQL &= String.Format("UDI_Discount = '{0}', ", CDbl(DT_Account(x)("UDI Discount")))
                        SQL &= String.Format("UDI_DiscountP = '{0}', ", CDbl(DT_Account(x)("UDI Percent")))
                        SQL &= String.Format("AvailedRPPD = '{0}', ", CDbl(DT_Account(x)("Availed RPPD")))
                        SQL &= String.Format("AR = '{0}', ", CDbl(DT_Account(x)("Accounts Receivable")))
                        SQL &= String.Format("Penalty = '{0}', ", CDbl(DT_Account(x)("Penalty")))
                        SQL &= String.Format("AsOf = '{0}', ", Format(CDate(DT_Account(x)("As Of")), "yyyy-MM-dd"))
                        SQL &= String.Format("BranchID = '{0}', ", Branch_ID)
                        SQL &= String.Format("Amount = '{0}';", CDbl(DT_Account(x)("Amount")))
                    Next
                    '*************DEDUCT BALANCE

                    SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'Borrower' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                    For x As Integer = 0 To cbxNatureBusiness_B2.Properties.Items.Count - 1
                        If cbxNatureBusiness_B2.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                            SQL &= "INSERT INTO credit_application_industry SET"
                            SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                            SQL &= String.Format(" Industry_ID = '{0}', ", cbxNatureBusiness_B2.Properties.Items.Item(x).Value)
                            SQL &= String.Format(" Industry = '{0}', ", cbxNatureBusiness_B2.Properties.Items.Item(x).Description)
                            SQL &= " `Type` = 'Borrower';"
                        End If
                    Next
                    SQL &= String.Format("UPDATE profile_borrower_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'Borrower' AND BorrowerID = '{0}';", BorrowerID)
                    For x As Integer = 0 To cbxNatureBusiness_B2.Properties.Items.Count - 1
                        If cbxNatureBusiness_B2.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                            SQL &= "INSERT INTO profile_borrower_industry SET"
                            SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                            SQL &= String.Format(" Industry_ID = '{0}', ", cbxNatureBusiness_B2.Properties.Items.Item(x).Value)
                            SQL &= String.Format(" Industry = '{0}', ", cbxNatureBusiness_B2.Properties.Items.Item(x).Description)
                            SQL &= " `Type` = 'Borrower';"
                        End If
                    Next

                    SQL &= String.Format("UPDATE credit_processing_fee SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                    For x As Integer = 0 To GridView4.RowCount - 1
                        SQL &= "INSERT INTO credit_processing_fee SET"
                        SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                        SQL &= String.Format(" processing_id = '{0}', ", GridView4.GetRowCellValue(x, "ID"))
                        SQL &= String.Format(" processing = '{0}', ", GridView4.GetRowCellValue(x, "Processing Fee"))
                        SQL &= String.Format(" Amount = '{0}';", CDbl(GridView4.GetRowCellValue(x, "Amount")))
                    Next

                    If cbxCorporate.Checked Then
                        GoTo CorporateShortcut
                    End If
                    SpouseID = DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 1,7,'0')) FROM profile_spouse WHERE branch_id = '{0}';", Branch_ID))
                    If TxtFirstN_S.Text <> "" And TxtFirstN_S.Tag = "" Then
                        Dim Gender_S As String = ""
                        If vMale_S Then
                            Gender_S = "Male"
                        ElseIf vFemale_S Then
                            Gender_S = "Female"
                        End If
                        Dim House_S As String = ""
                        If vOwned_S Then
                            House_S = "Owned"
                        ElseIf vFree_S Then
                            House_S = "Free"
                        ElseIf vRented_S Then
                            House_S = "Rented"
                        End If
                        Dim EmplStatus_S As String = ""
                        If vCasual_S Then
                            EmplStatus_S = "Casual"
                        ElseIf vTemporary_S Then
                            EmplStatus_S = "Temporary"
                        ElseIf vPermanent_S Then
                            EmplStatus_S = "Permanent"
                        End If

                        SQL &= "INSERT INTO profile_spouse SET"
                        SQL &= String.Format(" SpouseID = '{0}', ", SpouseID)
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= String.Format(" Prefix_S = '{0}', ", CbxPrefix_S.Text)
                        SQL &= String.Format(" FirstN_S = '{0}', ", TxtFirstN_S.Text)
                        SQL &= String.Format(" MiddleN_S = '{0}', ", TxtMiddleN_S.Text)
                        SQL &= String.Format(" LastN_S = '{0}', ", TxtLastN_S.Text)
                        SQL &= String.Format(" Suffix_S = '{0}', ", cbxSuffix_S.Text)
                        SQL &= String.Format(" Prefix_M = '{0}', ", vPrefix_M)
                        SQL &= String.Format(" FirstN_M = '{0}', ", vFirstN_M)
                        SQL &= String.Format(" MiddleN_M = '{0}', ", vMiddleN_M)
                        SQL &= String.Format(" LastN_M = '{0}', ", vLastN_M)
                        SQL &= String.Format(" Suffix_M = '{0}', ", vSuffix_M)
                        SQL &= String.Format(" NoC_S = '{0}', ", vNoC_S)
                        SQL &= String.Format(" StreetC_S = '{0}', ", vStreetC_S)
                        SQL &= String.Format(" BarangayC_S = '{0}', ", vBarangayC_S)
                        SQL &= String.Format(" `AddressC_S-ID` = '{0}', ", vAddressC_S_ID)
                        SQL &= String.Format(" AddressC_S = '{0}', ", vAddressC_S)
                        SQL &= String.Format(" NoP_S = '{0}', ", vNoP_S)
                        SQL &= String.Format(" StreetP_S = '{0}', ", vStreetP_S)
                        SQL &= String.Format(" BarangayP_S = '{0}', ", vBarangayP_S)
                        SQL &= String.Format(" `AddressP_S-ID` = '{0}', ", vAddressP_S_ID)
                        SQL &= String.Format(" AddressP_S = '{0}', ", vAddressP_S)
                        SQL &= String.Format(" Birth_S = '{0}', ", If(vBirth_S = "", "", Format(CDate(vBirth_S), "yyyy-MM-dd")))
                        SQL &= String.Format(" `PlaceBirth_S-ID` = '{0}', ", vPlaceBirth_S_ID)
                        SQL &= String.Format(" PlaceBirth_S = '{0}', ", vPlaceBirth_S)
                        SQL &= String.Format(" Gender_S = '{0}', ", Gender_S)
                        SQL &= String.Format(" Citizenship_S = '{0}', ", vCitizenship_S)
                        SQL &= String.Format(" TIN_S = '{0}', ", vTIN_S)
                        SQL &= String.Format(" Telephone_S = '{0}', ", vTelephone_S)
                        SQL &= String.Format(" SSS_S = '{0}', ", vSSS_S)
                        SQL &= String.Format(" Mobile_S = '{0}', ", vMobile_S)
                        SQL &= String.Format(" Email_S = '{0}', ", vEmail_S)
                        SQL &= String.Format(" House_S = '{0}', ", House_S)
                        SQL &= String.Format(" Rent_S = '{0}', ", vRent_S)
                        SQL &= String.Format(" Employer_S = '{0}', ", vEmployer_S)
                        SQL &= String.Format(" EmployerAddress_S = '{0}', ", vEmpAddress_S)
                        SQL &= String.Format(" EmployerTelephone_S = '{0}', ", vEmpTelephone_S)
                        SQL &= String.Format(" Position_S = '{0}', ", vPosition_S)
                        SQL &= String.Format(" EmploymentStat_S = '{0}', ", EmplStatus_S)
                        SQL &= String.Format(" Hired_S = '{0}', ", If(vHired_S = "", "", Format(CDate(vHired_S), "yyyy-MM-dd")))
                        SQL &= String.Format(" YearHired_S = {0}, ", If(vYearHired_S, 1, 0))
                        SQL &= String.Format(" Supervisor_S = '{0}', ", vSupervisor_S)
                        SQL &= String.Format(" Monthly_S = '{0}', ", vSalary_S)
                        SQL &= String.Format(" BusinessName_S = '{0}', ", vBusinessName_S)
                        SQL &= String.Format(" BusinessAddress_S = '{0}', ", vBusinessAddress_S)
                        SQL &= String.Format(" BusinessTelephone_S = '{0}', ", vBusinessTelephone_S)
                        SQL &= String.Format(" NatureBusiness_S = '{0}', ", vNatureBusiness_S)
                        SQL &= String.Format(" YrsOperation_S = '{0}', ", vYrsOperation_S)
                        SQL &= String.Format(" BusinessIncome_S = '{0}', ", vBusinessIncome_S)
                        SQL &= String.Format(" NoEmployees_S = '{0}', ", vNoEmployees_S)
                        SQL &= String.Format(" Capital_S = '{0}', ", vCapital_S)
                        SQL &= String.Format(" Area_S = '{0}', ", vArea_S)
                        SQL &= String.Format(" Expiry_S = '{0}', ", If(vExpiry_S = "", "", Format(CDate(vExpiry_S), "yyyy-MM-dd")))
                        SQL &= String.Format(" Outlet_S = '{0}', ", vOutlet_S)
                        SQL &= String.Format(" OtherIncome_S = '{0}', ", vOtherIncome_S)
                        SQL &= String.Format(" `OtherIncome_S-Amount` = '{0}', ", vOtherIncomeD_S)
                        SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                        If ChangePicS Then
                            SaveImage(pb_Spouse, "Spouse")
                        End If

                        SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'Spouse' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                        For x As Integer = 0 To Industry_S.Properties.Items.Count - 1
                            If Industry_S.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                SQL &= "INSERT INTO credit_application_industry SET"
                                SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                                SQL &= String.Format(" Industry_ID = '{0}', ", Industry_S.Properties.Items.Item(x).Value)
                                SQL &= String.Format(" Industry = '{0}', ", Industry_S.Properties.Items.Item(x).Description)
                                SQL &= " `Type` = 'Spouse';"
                            End If
                        Next
                        SQL &= String.Format("UPDATE profile_borrower_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'Spouse' AND BorrowerID = '{0}';", BorrowerID)
                        For x As Integer = 0 To Industry_S.Properties.Items.Count - 1
                            If Industry_S.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                SQL &= "INSERT INTO profile_borrower_industry SET"
                                SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                                SQL &= String.Format(" Industry_ID = '{0}', ", Industry_S.Properties.Items.Item(x).Value)
                                SQL &= String.Format(" Industry = '{0}', ", Industry_S.Properties.Items.Item(x).Description)
                                SQL &= " `Type` = 'Spouse';"
                            End If
                        Next
                    End If

                    CoMakerID = DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 1,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))
                    If TxtFirstN_C1.Text = "" Then
                    Else
                        Dim Gender_C1 As String = ""
                        If vMale_C1 Then
                            Gender_C1 = "Male"
                        ElseIf vFemale_C1 Then
                            Gender_C1 = "Female"
                        End If
                        Dim Civil_C1 As String = ""
                        If vSingle_C1 Then
                            Civil_C1 = "Single"
                        ElseIf vMarried_C1 Then
                            Civil_C1 = "Married"
                        ElseIf vSeparated_C1 Then
                            Civil_C1 = "Separated"
                        ElseIf vWidowed_C1 Then
                            Civil_C1 = "Widowed"
                        End If
                        Dim House_C1 As String = ""
                        If vOwned_C1 Then
                            House_C1 = "Owned"
                        ElseIf vFree_C1 Then
                            House_C1 = "Free"
                        ElseIf vRented_C1 Then
                            House_C1 = "Rented"
                        End If
                        Dim EmplStatus_C1 As String = ""
                        If vCasual_C1 Then
                            EmplStatus_C1 = "Casual"
                        ElseIf vTemporary_C1 Then
                            EmplStatus_C1 = "Temporary"
                        ElseIf vPermanent_C1 Then
                            EmplStatus_C1 = "Permanent"
                        End If

                        Dim RelationID As Integer = 0
                        If vRelationship_C1 = "" Then
                        Else
                            RelationID = vRelationship_C1_ID
                        End If

                        SQL &= "INSERT INTO credit_application_comaker SET"
                        SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                        SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_1 <> "", ReferenceID_1, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 1,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                        SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C1.Text)
                        SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C1.Text)
                        SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C1.Text)
                        SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C1.Text)
                        SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C1.Text)
                        SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C1)
                        SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C1)
                        SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C1)
                        SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C1_ID)
                        SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C1)
                        SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C1)
                        SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C1)
                        SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C1)
                        SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C1_ID)
                        SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C1)
                        SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C1 = "", "", Format(CDate(vBirth_C1), "yyyy-MM-dd")))
                        SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C1_ID)
                        SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C1)
                        SQL &= String.Format(" Gender_C = '{0}', ", Gender_C1)
                        SQL &= String.Format(" Civil_C = '{0}', ", Civil_C1)
                        SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C1)
                        SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C1)
                        SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C1)
                        SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C1)
                        SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C1)
                        SQL &= String.Format(" Email_C = '{0}', ", vEmail_C1)
                        SQL &= String.Format(" House_C = '{0}', ", House_C1)
                        SQL &= String.Format(" Rent_C = '{0}', ", vRent_C1)
                        SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                        SQL &= String.Format(" Relation = '{0}',", vRelationship_C1)
                        SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C1)
                        SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C1)
                        SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C1)
                        SQL &= String.Format(" Position_C = '{0}', ", vPosition_C1)
                        SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C1)
                        SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C1 = "", "", Format(CDate(vHired_C1), "yyyy-MM-dd")))
                        SQL &= String.Format(" YearHired_C = {0}, ", If(vYearHired_C1, 1, 0))
                        SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C1)
                        SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C1)
                        SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C1)
                        SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C1)
                        SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C1)
                        SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C1)
                        SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C1)
                        SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C1)
                        SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C1)
                        SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C1)
                        SQL &= String.Format(" Area_C = '{0}', ", vArea_C1)
                        SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C1 = "", "", Format(CDate(vExpiry_C1), "yyyy-MM-dd")))
                        SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C1)
                        SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C1)
                        SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C1)
                        SQL &= String.Format(" `Rank` = {0}, ", 1)
                        SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                        SaveImage(CoMaker1, "CoMaker1")

                        SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker1' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                        For x As Integer = 0 To Industry_C1.Properties.Items.Count - 1
                            If Industry_C1.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                SQL &= "INSERT INTO credit_application_industry SET"
                                SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                                SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C1.Properties.Items.Item(x).Value)
                                SQL &= String.Format(" Industry = '{0}', ", Industry_C1.Properties.Items.Item(x).Description)
                                SQL &= " `Type` = 'CoMaker1';"
                            End If
                        Next

                        'IDENTIFICATION DUMMY
                        SQL &= "INSERT INTO profile_borrowerid SET"
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= " TIN = '', "
                        SQL &= " SSS = '', "
                        SQL &= " GSIS = '', "
                        SQL &= " PhilHealth = '', "
                        SQL &= " Senior = '', "
                        SQL &= " UMID = '', "
                        SQL &= " SEC = '', "
                        SQL &= " DTI = '', "
                        SQL &= " CDA = '', "
                        SQL &= " Cooperative = '', "
                        SQL &= " Drivers = '', "
                        SQL &= " dDrivers = '', "
                        SQL &= " VIN = '', "
                        SQL &= " dVIN = '', "
                        SQL &= " Passport = '', "
                        SQL &= " dPassport = '', "
                        SQL &= " PRC = '', "
                        SQL &= " dPRC = '', "
                        SQL &= " NBI = '', "
                        SQL &= " dNBI = '', "
                        SQL &= " Police = '', "
                        SQL &= " dPolice = '', "
                        SQL &= " Postal = '', "
                        SQL &= " dPostal = '', "
                        SQL &= " Barangay = '', "
                        SQL &= " dBarangay = '', "
                        SQL &= " OWWA = '', "
                        SQL &= " dOWWA = '', "
                        SQL &= " OFW = '', "
                        SQL &= " dOFW = '', "
                        SQL &= " Seaman = '', "
                        SQL &= " dSeaman = '', "
                        SQL &= " PNP = '', "
                        SQL &= " dPNP = '', "
                        SQL &= " AFP = '', "
                        SQL &= " dAFP = '', "
                        SQL &= " HDMF = '', "
                        SQL &= " dHDMF = '', "
                        SQL &= " PWD = '', "
                        SQL &= " dPWD = '', "
                        SQL &= " DSWD = '', "
                        SQL &= " dDSWD = '', "
                        SQL &= " ACR = '', "
                        SQL &= " dACR = '', "
                        SQL &= " DTI_Business = '', "
                        SQL &= " dDTI_Business = '', "
                        SQL &= " IBP = '', "
                        SQL &= " dIBP = '', "
                        SQL &= " FireArms = '', "
                        SQL &= " dFireArms = '', "
                        SQL &= " Government = '', "
                        SQL &= " dGovernment = '', "
                        SQL &= " Diplomat = '', "
                        SQL &= " dDiplomat = '', "
                        SQL &= " `National` = '', "
                        SQL &= " dNational = '', "
                        SQL &= " `Work` = '', "
                        SQL &= " dWork = '', "
                        SQL &= " GOCC = '', "
                        SQL &= " dGOCC = '', "
                        SQL &= " PLRA = '', "
                        SQL &= " dPLRA = '', "
                        SQL &= " Major = '', "
                        SQL &= " dMajor = '', "
                        SQL &= " Media = '', "
                        SQL &= " dMedia = '', "
                        SQL &= " Student = '', "
                        SQL &= " dStudent = '', "
                        SQL &= " SIRV = '', "
                        SQL &= " dSIRV = '',"
                        SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                        SQL &= " ID_Type = 'C1';"
                    End If

                    If TxtFirstN_C2.Text = "" Then
                    Else
                        Dim Gender_C2 As String = ""
                        If vMale_C2 Then
                            Gender_C2 = "Male"
                        ElseIf vFemale_C2 Then
                            Gender_C2 = "Female"
                        End If
                        Dim Civil_C2 As String = ""
                        If vSingle_C2 Then
                            Civil_C2 = "Single"
                        ElseIf vMarried_C2 Then
                            Civil_C2 = "Married"
                        ElseIf vSeparated_C2 Then
                            Civil_C2 = "Separated"
                        ElseIf vWidowed_C2 Then
                            Civil_C2 = "Widowed"
                        End If
                        Dim House_C2 As String = ""
                        If vOwned_C2 Then
                            House_C2 = "Owned"
                        ElseIf vFree_C2 Then
                            House_C2 = "Free"
                        ElseIf vRented_C2 Then
                            House_C2 = "Rented"
                        End If
                        Dim EmplStatus_C2 As String = ""
                        If vCasual_C2 Then
                            EmplStatus_C2 = "Casual"
                        ElseIf vTemporary_C2 Then
                            EmplStatus_C2 = "Temporary"
                        ElseIf vPermanent_C2 Then
                            EmplStatus_C2 = "Permanent"
                        End If

                        Dim RelationID As Integer = 0
                        If vRelationship_C2 = "" Then
                        Else
                            RelationID = vRelationship_C1_ID
                        End If

                        SQL &= "INSERT INTO credit_application_comaker SET"
                        SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                        SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_2 <> "", ReferenceID_2, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 2,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                        SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C2.Text)
                        SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C2.Text)
                        SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C2.Text)
                        SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C2.Text)
                        SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C2.Text)
                        SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C2)
                        SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C2)
                        SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C2)
                        SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C2_ID)
                        SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C2)
                        SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C2)
                        SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C2)
                        SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C2)
                        SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C2_ID)
                        SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C2)
                        SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C2 = "", "", Format(CDate(vBirth_C2), "yyyy-MM-dd")))
                        SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C2_ID)
                        SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C2)
                        SQL &= String.Format(" Gender_C = '{0}', ", Gender_C2)
                        SQL &= String.Format(" Civil_C = '{0}', ", Civil_C2)
                        SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C2)
                        SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C2)
                        SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C2)
                        SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C2)
                        SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C2)
                        SQL &= String.Format(" Email_C = '{0}', ", vEmail_C2)
                        SQL &= String.Format(" House_C = '{0}', ", House_C2)
                        SQL &= String.Format(" Rent_C = '{0}', ", vRent_C2)
                        SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                        SQL &= String.Format(" Relation = '{0}',", vRelationship_C2)
                        SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C2)
                        SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C2)
                        SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C2)
                        SQL &= String.Format(" Position_C = '{0}', ", vPosition_C2)
                        SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C2)
                        SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C2 = "", "", Format(CDate(vHired_C2), "yyyy-MM-dd")))
                        SQL &= String.Format(" YearHired_C = {0}, ", If(vYearHired_C2, 1, 0))
                        SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C1)
                        SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C2)
                        SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C2)
                        SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C2)
                        SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C2)
                        SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C2)
                        SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C2)
                        SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C2)
                        SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C2)
                        SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C2)
                        SQL &= String.Format(" Area_C = '{0}', ", vArea_C2)
                        SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C2 = "", "", Format(CDate(vExpiry_C2), "yyyy-MM-dd")))
                        SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C2)
                        SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C2)
                        SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C2)
                        SQL &= String.Format(" `Rank` = {0}, ", 2)
                        SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                        SaveImage(CoMaker2, "CoMaker2")

                        SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker2' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                        For x As Integer = 0 To Industry_C2.Properties.Items.Count - 1
                            If Industry_C2.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                SQL &= "INSERT INTO credit_application_industry SET"
                                SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                                SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C2.Properties.Items.Item(x).Value)
                                SQL &= String.Format(" Industry = '{0}', ", Industry_C2.Properties.Items.Item(x).Description)
                                SQL &= " `Type` = 'CoMaker2';"
                            End If
                        Next

                        'IDENTIFICATION DUMMY
                        SQL &= "INSERT INTO profile_borrowerid SET"
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= " TIN = '', "
                        SQL &= " SSS = '', "
                        SQL &= " GSIS = '', "
                        SQL &= " PhilHealth = '', "
                        SQL &= " Senior = '', "
                        SQL &= " UMID = '', "
                        SQL &= " SEC = '', "
                        SQL &= " DTI = '', "
                        SQL &= " CDA = '', "
                        SQL &= " Cooperative = '', "
                        SQL &= " Drivers = '', "
                        SQL &= " dDrivers = '', "
                        SQL &= " VIN = '', "
                        SQL &= " dVIN = '', "
                        SQL &= " Passport = '', "
                        SQL &= " dPassport = '', "
                        SQL &= " PRC = '', "
                        SQL &= " dPRC = '', "
                        SQL &= " NBI = '', "
                        SQL &= " dNBI = '', "
                        SQL &= " Police = '', "
                        SQL &= " dPolice = '', "
                        SQL &= " Postal = '', "
                        SQL &= " dPostal = '', "
                        SQL &= " Barangay = '', "
                        SQL &= " dBarangay = '', "
                        SQL &= " OWWA = '', "
                        SQL &= " dOWWA = '', "
                        SQL &= " OFW = '', "
                        SQL &= " dOFW = '', "
                        SQL &= " Seaman = '', "
                        SQL &= " dSeaman = '', "
                        SQL &= " PNP = '', "
                        SQL &= " dPNP = '', "
                        SQL &= " AFP = '', "
                        SQL &= " dAFP = '', "
                        SQL &= " HDMF = '', "
                        SQL &= " dHDMF = '', "
                        SQL &= " PWD = '', "
                        SQL &= " dPWD = '', "
                        SQL &= " DSWD = '', "
                        SQL &= " dDSWD = '', "
                        SQL &= " ACR = '', "
                        SQL &= " dACR = '', "
                        SQL &= " DTI_Business = '', "
                        SQL &= " dDTI_Business = '', "
                        SQL &= " IBP = '', "
                        SQL &= " dIBP = '', "
                        SQL &= " FireArms = '', "
                        SQL &= " dFireArms = '', "
                        SQL &= " Government = '', "
                        SQL &= " dGovernment = '', "
                        SQL &= " Diplomat = '', "
                        SQL &= " dDiplomat = '', "
                        SQL &= " `National` = '', "
                        SQL &= " dNational = '', "
                        SQL &= " `Work` = '', "
                        SQL &= " dWork = '', "
                        SQL &= " GOCC = '', "
                        SQL &= " dGOCC = '', "
                        SQL &= " PLRA = '', "
                        SQL &= " dPLRA = '', "
                        SQL &= " Major = '', "
                        SQL &= " dMajor = '', "
                        SQL &= " Media = '', "
                        SQL &= " dMedia = '', "
                        SQL &= " Student = '', "
                        SQL &= " dStudent = '', "
                        SQL &= " SIRV = '', "
                        SQL &= " dSIRV = '',"
                        SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                        SQL &= " ID_Type = 'C2';"
                    End If

                    If TxtFirstN_C3.Text = "" Then
                    Else
                        Dim Gender_C3 As String = ""
                        If vMale_C3 Then
                            Gender_C3 = "Male"
                        ElseIf vFemale_C3 Then
                            Gender_C3 = "Female"
                        End If
                        Dim Civil_C3 As String = ""
                        If vSingle_C3 Then
                            Civil_C3 = "Single"
                        ElseIf vMarried_C3 Then
                            Civil_C3 = "Married"
                        ElseIf vSeparated_C3 Then
                            Civil_C3 = "Separated"
                        ElseIf vWidowed_C3 Then
                            Civil_C3 = "Widowed"
                        End If
                        Dim House_C3 As String = ""
                        If vOwned_C3 Then
                            House_C3 = "Owned"
                        ElseIf vFree_C3 Then
                            House_C3 = "Free"
                        ElseIf vRented_C3 Then
                            House_C3 = "Rented"
                        End If
                        Dim EmplStatus_C3 As String = ""
                        If vCasual_C3 Then
                            EmplStatus_C3 = "Casual"
                        ElseIf vTemporary_C3 Then
                            EmplStatus_C3 = "Temporary"
                        ElseIf vPermanent_C3 Then
                            EmplStatus_C3 = "Permanent"
                        End If

                        Dim RelationID As Integer = 0
                        If vRelationship_C3 = "" Then
                        Else
                            RelationID = vRelationship_C3_ID
                        End If

                        SQL &= "INSERT INTO credit_application_comaker SET"
                        SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                        SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_3 <> "", ReferenceID_3, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 3,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                        SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C3.Text)
                        SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C3.Text)
                        SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C3.Text)
                        SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C3.Text)
                        SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C3.Text)
                        SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C3)
                        SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C3)
                        SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C3)
                        SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C3_ID)
                        SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C3)
                        SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C3)
                        SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C3)
                        SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C3)
                        SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C3_ID)
                        SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C3)
                        SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C3 = "", "", Format(CDate(vBirth_C3), "yyyy-MM-dd")))
                        SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C3_ID)
                        SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C3)
                        SQL &= String.Format(" Gender_C = '{0}', ", Gender_C3)
                        SQL &= String.Format(" Civil_C = '{0}', ", Civil_C3)
                        SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C3)
                        SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C3)
                        SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C3)
                        SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C3)
                        SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C3)
                        SQL &= String.Format(" Email_C = '{0}', ", vEmail_C3)
                        SQL &= String.Format(" House_C = '{0}', ", House_C3)
                        SQL &= String.Format(" Rent_C = '{0}', ", vRent_C3)
                        SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                        SQL &= String.Format(" Relation = '{0}',", vRelationship_C3)
                        SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C3)
                        SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C3)
                        SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C3)
                        SQL &= String.Format(" Position_C = '{0}', ", vPosition_C3)
                        SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C3)
                        SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C3 = "", "", Format(CDate(vHired_C3), "yyyy-MM-dd")))
                        SQL &= String.Format(" YearHired_C = {0}, ", If(vYearHired_C3, 1, 0))
                        SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C3)
                        SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C3)
                        SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C3)
                        SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C3)
                        SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C3)
                        SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C3)
                        SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C3)
                        SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C3)
                        SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C3)
                        SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C3)
                        SQL &= String.Format(" Area_C = '{0}', ", vArea_C3)
                        SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C3 = "", "", Format(CDate(vExpiry_C3), "yyyy-MM-dd")))
                        SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C3)
                        SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C3)
                        SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C3)
                        SQL &= String.Format(" `Rank` = {0}, ", 3)
                        SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                        SaveImage(CoMaker3, "CoMaker3")

                        SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker3' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                        For x As Integer = 0 To Industry_C3.Properties.Items.Count - 1
                            If Industry_C3.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                SQL &= "INSERT INTO credit_application_industry SET"
                                SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                                SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C3.Properties.Items.Item(x).Value)
                                SQL &= String.Format(" Industry = '{0}', ", Industry_C3.Properties.Items.Item(x).Description)
                                SQL &= " `Type` = 'CoMaker3';"
                            End If
                        Next

                        'IDENTIFICATION DUMMY
                        SQL &= "INSERT INTO profile_borrowerid SET"
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= " TIN = '', "
                        SQL &= " SSS = '', "
                        SQL &= " GSIS = '', "
                        SQL &= " PhilHealth = '', "
                        SQL &= " Senior = '', "
                        SQL &= " UMID = '', "
                        SQL &= " SEC = '', "
                        SQL &= " DTI = '', "
                        SQL &= " CDA = '', "
                        SQL &= " Cooperative = '', "
                        SQL &= " Drivers = '', "
                        SQL &= " dDrivers = '', "
                        SQL &= " VIN = '', "
                        SQL &= " dVIN = '', "
                        SQL &= " Passport = '', "
                        SQL &= " dPassport = '', "
                        SQL &= " PRC = '', "
                        SQL &= " dPRC = '', "
                        SQL &= " NBI = '', "
                        SQL &= " dNBI = '', "
                        SQL &= " Police = '', "
                        SQL &= " dPolice = '', "
                        SQL &= " Postal = '', "
                        SQL &= " dPostal = '', "
                        SQL &= " Barangay = '', "
                        SQL &= " dBarangay = '', "
                        SQL &= " OWWA = '', "
                        SQL &= " dOWWA = '', "
                        SQL &= " OFW = '', "
                        SQL &= " dOFW = '', "
                        SQL &= " Seaman = '', "
                        SQL &= " dSeaman = '', "
                        SQL &= " PNP = '', "
                        SQL &= " dPNP = '', "
                        SQL &= " AFP = '', "
                        SQL &= " dAFP = '', "
                        SQL &= " HDMF = '', "
                        SQL &= " dHDMF = '', "
                        SQL &= " PWD = '', "
                        SQL &= " dPWD = '', "
                        SQL &= " DSWD = '', "
                        SQL &= " dDSWD = '', "
                        SQL &= " ACR = '', "
                        SQL &= " dACR = '', "
                        SQL &= " DTI_Business = '', "
                        SQL &= " dDTI_Business = '', "
                        SQL &= " IBP = '', "
                        SQL &= " dIBP = '', "
                        SQL &= " FireArms = '', "
                        SQL &= " dFireArms = '', "
                        SQL &= " Government = '', "
                        SQL &= " dGovernment = '', "
                        SQL &= " Diplomat = '', "
                        SQL &= " dDiplomat = '', "
                        SQL &= " `National` = '', "
                        SQL &= " dNational = '', "
                        SQL &= " `Work` = '', "
                        SQL &= " dWork = '', "
                        SQL &= " GOCC = '', "
                        SQL &= " dGOCC = '', "
                        SQL &= " PLRA = '', "
                        SQL &= " dPLRA = '', "
                        SQL &= " Major = '', "
                        SQL &= " dMajor = '', "
                        SQL &= " Media = '', "
                        SQL &= " dMedia = '', "
                        SQL &= " Student = '', "
                        SQL &= " dStudent = '', "
                        SQL &= " SIRV = '', "
                        SQL &= " dSIRV = '',"
                        SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                        SQL &= " ID_Type = 'C3';"
                    End If

                    If TxtFirstN_C4.Text = "" Then
                    Else
                        Dim Gender_C4 As String = ""
                        If vMale_C4 Then
                            Gender_C4 = "Male"
                        ElseIf vFemale_C4 Then
                            Gender_C4 = "Female"
                        End If
                        Dim Civil_C4 As String = ""
                        If vSingle_C4 Then
                            Civil_C4 = "Single"
                        ElseIf vMarried_C4 Then
                            Civil_C4 = "Married"
                        ElseIf vSeparated_C4 Then
                            Civil_C4 = "Separated"
                        ElseIf vWidowed_C4 Then
                            Civil_C4 = "Widowed"
                        End If
                        Dim House_C4 As String = ""
                        If vOwned_C4 Then
                            House_C4 = "Owned"
                        ElseIf vFree_C4 Then
                            House_C4 = "Free"
                        ElseIf vRented_C4 Then
                            House_C4 = "Rented"
                        End If
                        Dim EmplStatus_C4 As String = ""
                        If vCasual_C4 Then
                            EmplStatus_C4 = "Casual"
                        ElseIf vTemporary_C4 Then
                            EmplStatus_C4 = "Temporary"
                        ElseIf vPermanent_C4 Then
                            EmplStatus_C4 = "Permanent"
                        End If

                        Dim RelationID As Integer = 0
                        If vRelationship_C4 = "" Then
                        Else
                            RelationID = vRelationship_C4_ID
                        End If

                        SQL &= "INSERT INTO credit_application_comaker SET"
                        SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                        SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_4 <> "", ReferenceID_4, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 4,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                        SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C4.Text)
                        SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C4.Text)
                        SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C4.Text)
                        SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C4.Text)
                        SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C4.Text)
                        SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C4)
                        SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C4)
                        SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C4)
                        SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C4_ID)
                        SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C4)
                        SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C4)
                        SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C4)
                        SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C4)
                        SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C4_ID)
                        SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C4)
                        SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C4 = "", "", Format(CDate(vBirth_C4), "yyyy-MM-dd")))
                        SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C4_ID)
                        SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C4)
                        SQL &= String.Format(" Gender_C = '{0}', ", Gender_C4)
                        SQL &= String.Format(" Civil_C = '{0}', ", Civil_C4)
                        SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C4)
                        SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C4)
                        SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C4)
                        SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C4)
                        SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C4)
                        SQL &= String.Format(" Email_C = '{0}', ", vEmail_C4)
                        SQL &= String.Format(" House_C = '{0}', ", House_C4)
                        SQL &= String.Format(" Rent_C = '{0}', ", vRent_C4)
                        SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                        SQL &= String.Format(" Relation = '{0}',", vRelationship_C4)
                        SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C4)
                        SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C4)
                        SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C4)
                        SQL &= String.Format(" Position_C = '{0}', ", vPosition_C4)
                        SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C4)
                        SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C4 = "", "", Format(CDate(vHired_C4), "yyyy-MM-dd")))
                        SQL &= String.Format(" YearHired_C = {0}, ", If(vYearHired_C4, 1, 0))
                        SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C4)
                        SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C4)
                        SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C4)
                        SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C4)
                        SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C4)
                        SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C4)
                        SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C4)
                        SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C4)
                        SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C4)
                        SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C4)
                        SQL &= String.Format(" Area_C = '{0}', ", vArea_C4)
                        SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C4 = "", "", Format(CDate(vExpiry_C4), "yyyy-MM-dd")))
                        SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C4)
                        SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C4)
                        SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C4)
                        SQL &= String.Format(" `Rank` = {0}, ", 4)
                        SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                        SaveImage(CoMaker4, "CoMaker4")

                        SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker4' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                        For x As Integer = 0 To Industry_C4.Properties.Items.Count - 1
                            If Industry_C4.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                SQL &= "INSERT INTO credit_application_industry SET"
                                SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                                SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C4.Properties.Items.Item(x).Value)
                                SQL &= String.Format(" Industry = '{0}', ", Industry_C4.Properties.Items.Item(x).Description)
                                SQL &= " `Type` = 'CoMaker4';"
                            End If
                        Next

                        'IDENTIFICATION DUMMY
                        SQL &= "INSERT INTO profile_borrowerid SET"
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= " TIN = '', "
                        SQL &= " SSS = '', "
                        SQL &= " GSIS = '', "
                        SQL &= " PhilHealth = '', "
                        SQL &= " Senior = '', "
                        SQL &= " UMID = '', "
                        SQL &= " SEC = '', "
                        SQL &= " DTI = '', "
                        SQL &= " CDA = '', "
                        SQL &= " Cooperative = '', "
                        SQL &= " Drivers = '', "
                        SQL &= " dDrivers = '', "
                        SQL &= " VIN = '', "
                        SQL &= " dVIN = '', "
                        SQL &= " Passport = '', "
                        SQL &= " dPassport = '', "
                        SQL &= " PRC = '', "
                        SQL &= " dPRC = '', "
                        SQL &= " NBI = '', "
                        SQL &= " dNBI = '', "
                        SQL &= " Police = '', "
                        SQL &= " dPolice = '', "
                        SQL &= " Postal = '', "
                        SQL &= " dPostal = '', "
                        SQL &= " Barangay = '', "
                        SQL &= " dBarangay = '', "
                        SQL &= " OWWA = '', "
                        SQL &= " dOWWA = '', "
                        SQL &= " OFW = '', "
                        SQL &= " dOFW = '', "
                        SQL &= " Seaman = '', "
                        SQL &= " dSeaman = '', "
                        SQL &= " PNP = '', "
                        SQL &= " dPNP = '', "
                        SQL &= " AFP = '', "
                        SQL &= " dAFP = '', "
                        SQL &= " HDMF = '', "
                        SQL &= " dHDMF = '', "
                        SQL &= " PWD = '', "
                        SQL &= " dPWD = '', "
                        SQL &= " DSWD = '', "
                        SQL &= " dDSWD = '', "
                        SQL &= " ACR = '', "
                        SQL &= " dACR = '', "
                        SQL &= " DTI_Business = '', "
                        SQL &= " dDTI_Business = '', "
                        SQL &= " IBP = '', "
                        SQL &= " dIBP = '', "
                        SQL &= " FireArms = '', "
                        SQL &= " dFireArms = '', "
                        SQL &= " Government = '', "
                        SQL &= " dGovernment = '', "
                        SQL &= " Diplomat = '', "
                        SQL &= " dDiplomat = '', "
                        SQL &= " `National` = '', "
                        SQL &= " dNational = '', "
                        SQL &= " `Work` = '', "
                        SQL &= " dWork = '', "
                        SQL &= " GOCC = '', "
                        SQL &= " dGOCC = '', "
                        SQL &= " PLRA = '', "
                        SQL &= " dPLRA = '', "
                        SQL &= " Major = '', "
                        SQL &= " dMajor = '', "
                        SQL &= " Media = '', "
                        SQL &= " dMedia = '', "
                        SQL &= " Student = '', "
                        SQL &= " dStudent = '', "
                        SQL &= " SIRV = '', "
                        SQL &= " dSIRV = '',"
                        SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                        SQL &= " ID_Type = 'C4';"
                    End If
CorporateShortcut:
                    DataObject(SQL)

                    '******************* U P D A T E   B O R R O W E R   I N F O *******************************
                    If Branch_Code = Borrower_Branch And cbxCorporate.Checked = False Then
                        Dim SQL_II As String
                        SQL_II = " UPDATE profile_borrower SET"
                        SQL_II &= String.Format(" Prefix_B = '{0}', ", CbxPrefix_B.Text)
                        SQL_II &= String.Format(" FirstN_B = '{0}', ", TxtFirstN_B.Text)
                        SQL_II &= String.Format(" MiddleN_B = '{0}', ", TxtMiddleN_B.Text)
                        SQL_II &= String.Format(" LastN_B = '{0}', ", TxtLastN_B.Text)
                        SQL_II &= String.Format(" Suffix_B = '{0}', ", cbxSuffix_B.Text)
                        SQL_II &= String.Format(" NoC_B = '{0}', ", txtNoC_B.Text)
                        SQL_II &= String.Format(" StreetC_B = '{0}', ", txtStreetC_B.Text)
                        SQL_II &= String.Format(" BarangayC_B = '{0}', ", txtBarangayC_B.Text)
                        SQL_II &= String.Format(" `AddressC_B-ID` = '{0}', ", ValidateComboBox(cbxAddressC_B))
                        SQL_II &= String.Format(" AddressC_B = '{0}', ", cbxAddressC_B.Text)
                        SQL_II &= String.Format(" NoP_B = '{0}', ", txtNoP_B.Text)
                        SQL_II &= String.Format(" StreetP_B = '{0}', ", txtStreetP_B.Text)
                        SQL_II &= String.Format(" BarangayP_B = '{0}', ", txtBarangayP_B.Text)
                        SQL_II &= String.Format(" `AddressP_B-ID` = '{0}', ", ValidateComboBox(cbxAddressP_B))
                        SQL_II &= String.Format(" AddressP_B = '{0}', ", cbxAddressP_B.Text)
                        SQL_II &= String.Format(" Birth_B = '{0}', ", FormatDatePicker(DtpBirth_B))
                        SQL_II &= String.Format(" `PlaceBirth_B-ID` = '{0}', ", ValidateComboBox(cbxPlaceBirth_B))
                        SQL_II &= String.Format(" PlaceBirth_B = '{0}', ", cbxPlaceBirth_B.Text)
                        SQL_II &= String.Format(" Gender_B = '{0}', ", Gender_B)
                        SQL_II &= String.Format(" Civil_B = '{0}', ", Civil_B)
                        SQL_II &= String.Format(" Citizenship_B = '{0}', ", cbxCitizenship_B.Text)
                        SQL_II &= String.Format(" TIN_B = '{0}', ", txtTIN_B.Text)
                        SQL_II &= String.Format(" Telephone_B = '{0}', ", txtTelephone_B.Text)
                        SQL_II &= String.Format(" SSS_B = '{0}', ", txtSSS_B.Text)
                        SQL_II &= String.Format(" Mobile_B = '{0}', ", txtMobile_B.Text)
                        SQL_II &= String.Format(" Mobile_B2 = '{0}', ", txtMobile_B2.Text)
                        SQL_II &= String.Format(" Email_B = '{0}', ", txtEmail_B.Text)
                        SQL_II &= String.Format(" House_B = '{0}', ", House_B)
                        SQL_II &= String.Format(" Rent_B = '{0}', ", dRent_B.Value)
                        SQL_II &= String.Format(" Employer_B = '{0}', ", cbxEmployer_B.Text)
                        SQL_II &= String.Format(" EmployerAddress_B = '{0}', ", txtEmployerAddress_B.Text)
                        SQL_II &= String.Format(" EmployerTelephone_B = '{0}', ", txtEmployerTelephone_B.Text)
                        SQL_II &= String.Format(" Position_B = '{0}', ", cbxPosition_B.Text)
                        SQL_II &= String.Format(" EmploymentStat_B = '{0}', ", EmplStatus_B)
                        SQL_II &= String.Format(" Hired_B = '{0}', ", FormatDatePicker(dtpHired_B))
                        SQL_II &= String.Format(" Supervisor_B = '{0}', ", txtSupervisor_B.Text)
                        SQL_II &= String.Format(" Monthly_B = '{0}', ", dMonthly_B.Value)
                        SQL_II &= String.Format(" BusinessName_B = '{0}', ", txtBusinessName_B.Text)
                        SQL_II &= String.Format(" BusinessAddress_B = '{0}', ", txtBusinessAddress_B.Text)
                        SQL_II &= String.Format(" BusinessTelephone_B = '{0}', ", txtBusinessTelephone_B.Text)
                        SQL_II &= String.Format(" NatureBusiness_B = '{0}', ", cbxNatureBusiness_B.Text)
                        SQL_II &= String.Format(" YrsOperation_B = '{0}', ", iYrsOperation_B.Value)
                        SQL_II &= String.Format(" BusinessIncome_B = '{0}', ", dBusinessIncome_B.Value)
                        SQL_II &= String.Format(" NoEmployees_B = '{0}', ", iNoEmployees_B.Value)
                        SQL_II &= String.Format(" Capital_B = '{0}', ", dCapital_B.Value)
                        SQL_II &= String.Format(" Area_B = '{0}', ", txtArea_B.Text)
                        SQL_II &= String.Format(" Expiry_B = '{0}', ", FormatDatePicker(dtpExpiry_B))
                        SQL_II &= String.Format(" Outlet_B = '{0}', ", iOutlet_B.Value)
                        SQL_II &= String.Format(" OtherIncome_B = '{0}', ", txtOtherIncome_B.Text)
                        SQL_II &= String.Format(" `OtherIncome_B-Amount` = '{0}', ", dOtherIncome_B.Value)
                        SQL_II &= String.Format(" Creditor_1 = '{0}', ", txtCreditor_1.Text)
                        SQL_II &= String.Format(" NatureLoan_1 = '{0}', ", txtNatureLoan_1.Text)
                        SQL_II &= String.Format(" AmountGranted_1 = '{0}', ", dAmountGranted_1.Value)
                        SQL_II &= String.Format(" Term_1 = '{0}', ", dTerm_1.Value)
                        SQL_II &= String.Format(" Balance_1 = '{0}', ", dBalance_1.Value)
                        SQL_II &= String.Format(" CreditRemarks_1 = '{0}', ", txtCreditRemarks_1.Text)
                        SQL_II &= String.Format(" Creditor_2 = '{0}', ", txtCreditor_2.Text)
                        SQL_II &= String.Format(" NatureLoan_2 = '{0}', ", txtNatureLoan_2.Text)
                        SQL_II &= String.Format(" AmountGranted_2 = '{0}', ", dAmountGranted_2.Value)
                        SQL_II &= String.Format(" Term_2 = '{0}', ", dTerm_2.Value)
                        SQL_II &= String.Format(" Balance_2 = '{0}', ", dBalance_2.Value)
                        SQL_II &= String.Format(" CreditRemarks_2 = '{0}', ", txtCreditRemarks_2.Text)
                        SQL_II &= String.Format(" Creditor_3 = '{0}', ", txtCreditor_3.Text)
                        SQL_II &= String.Format(" NatureLoan_3 = '{0}', ", txtNatureLoan_3.Text)
                        SQL_II &= String.Format(" AmountGranted_3 = '{0}', ", dAmountGranted_3.Value)
                        SQL_II &= String.Format(" Term_3 = '{0}', ", dTerm_3.Value)
                        SQL_II &= String.Format(" Balance_3 = '{0}', ", dBalance_3.Value)
                        SQL_II &= String.Format(" CreditRemarks_3 = '{0}', ", txtCreditRemarks_3.Text)
                        SQL_II &= String.Format(" Bank_1 = '{0}', ", txtBank_1.Text)
                        SQL_II &= String.Format(" Branch_1 = '{0}', ", txtBranch_1.Text)
                        SQL_II &= String.Format(" AccountT_1 = '{0}', ", AccountT_1)
                        SQL_II &= String.Format(" SA_1 = '{0}', ", txtSA_1.Text)
                        SQL_II &= String.Format(" AverageBalance_1 = '{0}', ", dAverageBalance_1.Value)
                        SQL_II &= String.Format(" PresentBalance_1 = '{0}', ", dPresentBalance_1.Value)
                        SQL_II &= String.Format(" Opened_1 = '{0}', ", txtOpened_1.Text)
                        SQL_II &= String.Format(" BankRemarks_1 = '{0}', ", txtBankRemarks_1.Text)
                        SQL_II &= String.Format(" Bank_2 = '{0}', ", txtBank_2.Text)
                        SQL_II &= String.Format(" Branch_2 = '{0}', ", txtBranch_2.Text)
                        SQL_II &= String.Format(" AccountT_2 = '{0}', ", AccountT_2)
                        SQL_II &= String.Format(" SA_2 = '{0}', ", txtSA_2.Text)
                        SQL_II &= String.Format(" AverageBalance_2 = '{0}', ", dAverageBalance_2.Value)
                        SQL_II &= String.Format(" PresentBalance_2 = '{0}', ", dPresentBalance_2.Value)
                        SQL_II &= String.Format(" Opened_2 = '{0}', ", txtOpened_2.Text)
                        SQL_II &= String.Format(" BankRemarks_2 = '{0}', ", txtBankRemarks_2.Text)
                        SQL_II &= String.Format(" Bank_3 = '{0}', ", txtBank_3.Text)
                        SQL_II &= String.Format(" Branch_3 = '{0}', ", txtBranch_3.Text)
                        SQL_II &= String.Format(" AccountT_3 = '{0}', ", AccountT_3)
                        SQL_II &= String.Format(" SA_3 = '{0}', ", txtSA_3.Text)
                        SQL_II &= String.Format(" AverageBalance_3 = '{0}', ", dAverageBalance_3.Value)
                        SQL_II &= String.Format(" PresentBalance_3 = '{0}', ", dPresentBalance_3.Value)
                        SQL_II &= String.Format(" Opened_3 = '{0}', ", txtOpened_3.Text)
                        SQL_II &= String.Format(" BankRemarks_3 = '{0}', ", txtBankRemarks_3.Text)
                        SQL_II &= String.Format(" Location_1 = '{0}', ", txtLocation_1.Text)
                        SQL_II &= String.Format(" TCT_1 = '{0}', ", txtTCT_1.Text)
                        SQL_II &= String.Format(" Area_1 = '{0}', ", dArea_1.Value)
                        SQL_II &= String.Format(" Acquired_1 = '{0}', ", txtAcquired_1.Text)
                        SQL_II &= String.Format(" PropertiesRemarks_1 = '{0}', ", txtPropertiesRemarks_1.Text)
                        SQL_II &= String.Format(" Location_2 = '{0}', ", txtLocation_2.Text)
                        SQL_II &= String.Format(" TCT_2 = '{0}', ", txtTCT_2.Text)
                        SQL_II &= String.Format(" Area_2 = '{0}', ", dArea_2.Value)
                        SQL_II &= String.Format(" Acquired_2 = '{0}', ", txtAcquired_2.Text)
                        SQL_II &= String.Format(" PropertiesRemarks_2 = '{0}', ", txtPropertiesRemarks_2.Text)
                        SQL_II &= String.Format(" Location_3 = '{0}', ", txtLocation_3.Text)
                        SQL_II &= String.Format(" TCT_3 = '{0}', ", txtTCT_3.Text)
                        SQL_II &= String.Format(" Area_3 = '{0}', ", dArea_3.Value)
                        SQL_II &= String.Format(" Acquired_3 = '{0}', ", txtAcquired_3.Text)
                        SQL_II &= String.Format(" PropertiesRemarks_3 = '{0}', ", txtPropertiesRemarks_3.Text)
                        SQL_II &= String.Format(" Vehicle_1 = '{0}', ", txtVehicle_1.Text)
                        SQL_II &= String.Format(" Year_1 = '{0}', ", FormatDatePicker(dtpYear_1))
                        SQL_II &= String.Format(" WhomAcquired_1 = '{0}', ", txtWhomAcquired_1.Text)
                        SQL_II &= String.Format(" WhenAcquired_1 = '{0}', ", txtWhenAcquired_1.Text)
                        SQL_II &= String.Format(" VehicleRemarks_1 = '{0}', ", txtVehicleRemarks_1.Text)
                        SQL_II &= String.Format(" Vehicle_2 = '{0}', ", txtVehicle_2.Text)
                        SQL_II &= String.Format(" Year_2 = '{0}', ", FormatDatePicker(dtpYear_2))
                        SQL_II &= String.Format(" WhomAcquired_2 = '{0}', ", txtWhomAcquired_2.Text)
                        SQL_II &= String.Format(" WhenAcquired_2 = '{0}', ", txtWhenAcquired_2.Text)
                        SQL_II &= String.Format(" VehicleRemarks_2 = '{0}', ", txtVehicleRemarks_2.Text)
                        SQL_II &= String.Format(" Vehicle_3 = '{0}', ", txtVehicle_3.Text)
                        SQL_II &= String.Format(" Year_3 = '{0}', ", FormatDatePicker(dtpYear_3))
                        SQL_II &= String.Format(" WhomAcquired_3 = '{0}', ", txtWhomAcquired_3.Text)
                        SQL_II &= String.Format(" WhenAcquired_3 = '{0}', ", txtWhenAcquired_3.Text)
                        SQL_II &= String.Format(" VehicleRemarks_3 = '{0}', ", txtVehicleRemarks_3.Text)
                        SQL_II &= String.Format(" HomeAppliances_1 = '{0}', ", txtHomeAppliances_1.Text)
                        SQL_II &= String.Format(" HomeAppliances_2 = '{0}', ", txtHomeAppliances_2.Text)
                        SQL_II &= String.Format(" Reference_1 = '{0}', ", txtReference_1.Text)
                        SQL_II &= String.Format(" ReferenceAddress_1 = '{0}', ", txtReferenceAddress_1.Text)
                        SQL_II &= String.Format(" ReferenceContact_1 = '{0}', ", txtReferenceContact_1.Text)
                        SQL_II &= String.Format(" Reference_2 = '{0}', ", txtReference_2.Text)
                        SQL_II &= String.Format(" ReferenceAddress_2 = '{0}', ", txtReferenceAddress_2.Text)
                        SQL_II &= String.Format(" ReferenceContact_2 = '{0}', ", txtReferenceContact_2.Text)
                        SQL_II &= String.Format(" Reference_3 = '{0}', ", txtReference_3.Text)
                        SQL_II &= String.Format(" ReferenceAddress_3 = '{0}', ", txtReferenceAddress_3.Text)
                        SQL_II &= String.Format(" ReferenceContact_3 = '{0}', ", txtReferenceContact_3.Text)
                        SQL_II &= String.Format(" CertificateNo = '{0}', ", txtCertificateNo.Text)
                        SQL_II &= String.Format(" PlaceIssue = '{0}', ", txtPlaceIssue.Text)
                        SQL_II &= String.Format(" `AgentID` = '{0}', ", AgentID)
                        SQL_II &= String.Format(" Agent = '{0}', ", Agent)
                        SQL_II &= String.Format(" AgentNo = '{0}', ", AgentNo)
                        SQL_II &= String.Format(" `MarketingID` = '{0}', ", MarketingID)
                        SQL_II &= String.Format(" Marketing = '{0}', ", Marketing)
                        SQL_II &= String.Format(" MarketingNo = '{0}', ", MarketingNo)
                        SQL_II &= String.Format(" `WalkinID` = '{0}', ", WalkinID)
                        SQL_II &= String.Format(" WalkIn = '{0}', ", Walkin)
                        SQL_II &= String.Format(" WalkIn_Specify = '{0}', ", Walkin_Specify)
                        SQL_II &= String.Format(" `DealerID` = '{0}', ", DealerID)
                        SQL_II &= String.Format(" Dealer = '{0}', ", Dealer)
                        SQL_II &= String.Format(" DealerNo = '{0}', ", DealerNo)
                        SQL_II &= String.Format(" YearHired = '{0}', ", If(cbxYearHired.Checked, 1, 0))
                        SQL_II &= String.Format(" YearFranchise = '{0}', ", If(cbxYearFranchise.Checked, 1, 0))
                        SQL_II &= String.Format(" Issue = '{0}' ", FormatDatePicker(dtpIssue))
                        SQL_II &= String.Format(" WHERE BorrowerID = '{0}';", BorrowerID)

                        'Dependent 1
                        SQL_II &= " UPDATE profile_dependent SET"
                        SQL_II &= String.Format(" Prefix_D = '{0}', ", CbxPrefix_1.Text)
                        SQL_II &= String.Format(" FirstN_D = '{0}', ", TxtFirstN_1.Text)
                        SQL_II &= String.Format(" MiddleN_D = '{0}', ", TxtMiddleN_1.Text)
                        SQL_II &= String.Format(" LastN_D = '{0}', ", TxtLastN_1.Text)
                        SQL_II &= String.Format(" Suffix_D = '{0}', ", cbxSuffix_1.Text)
                        SQL_II &= String.Format(" Age_D = '{0}', ", iAge_D1.Value)
                        SQL_II &= String.Format(" Grade_D = '{0}', ", txtGrade_1.Text)
                        SQL_II &= String.Format(" School_D = '{0}', ", txtSchool_1.Text)
                        SQL_II &= String.Format(" SchoolAddress_D = '{0}' ", txtSchoolAddress_1.Text)
                        SQL_II &= String.Format(" WHERE BorrowerID = '{0}' AND `rank` = 1;", BorrowerID)

                        'Dependent 2
                        SQL_II &= " UPDATE profile_dependent SET"
                        SQL_II &= String.Format(" Prefix_D = '{0}', ", CbxPrefix_2.Text)
                        SQL_II &= String.Format(" FirstN_D = '{0}', ", TxtFirstN_2.Text)
                        SQL_II &= String.Format(" MiddleN_D = '{0}', ", TxtMiddleN_2.Text)
                        SQL_II &= String.Format(" LastN_D = '{0}', ", TxtLastN_2.Text)
                        SQL_II &= String.Format(" Suffix_D = '{0}', ", cbxSuffix_2.Text)
                        SQL_II &= String.Format(" Age_D = '{0}', ", iAge_D2.Value)
                        SQL_II &= String.Format(" Grade_D = '{0}', ", txtGrade_2.Text)
                        SQL_II &= String.Format(" School_D = '{0}', ", txtSchool_2.Text)
                        SQL_II &= String.Format(" SchoolAddress_D = '{0}' ", txtSchoolAddress_2.Text)
                        SQL_II &= String.Format(" WHERE BorrowerID = '{0}' AND `rank` = 2;", BorrowerID)

                        'Dependent 3
                        SQL_II &= " UPDATE profile_dependent SET"
                        SQL_II &= String.Format(" Prefix_D = '{0}', ", CbxPrefix_3.Text)
                        SQL_II &= String.Format(" FirstN_D = '{0}', ", TxtFirstN_3.Text)
                        SQL_II &= String.Format(" MiddleN_D = '{0}', ", TxtMiddleN_3.Text)
                        SQL_II &= String.Format(" LastN_D = '{0}', ", TxtLastN_3.Text)
                        SQL_II &= String.Format(" Suffix_D = '{0}', ", cbxSuffix_3.Text)
                        SQL_II &= String.Format(" Age_D = '{0}', ", iAge_D3.Value)
                        SQL_II &= String.Format(" Grade_D = '{0}', ", txtGrade_3.Text)
                        SQL_II &= String.Format(" School_D = '{0}', ", txtSchool_3.Text)
                        SQL_II &= String.Format(" SchoolAddress_D = '{0}' ", txtSchoolAddress_3.Text)
                        SQL_II &= String.Format(" WHERE BorrowerID = '{0}' AND `rank` = 3;", BorrowerID)

                        'Dependent 4
                        SQL_II &= " UPDATE profile_dependent SET"
                        SQL_II &= String.Format(" Prefix_D = '{0}', ", CbxPrefix_4.Text)
                        SQL_II &= String.Format(" FirstN_D = '{0}', ", TxtFirstN_4.Text)
                        SQL_II &= String.Format(" MiddleN_D = '{0}', ", TxtMiddleN_4.Text)
                        SQL_II &= String.Format(" LastN_D = '{0}', ", TxtLastN_4.Text)
                        SQL_II &= String.Format(" Suffix_D = '{0}', ", cbxSuffix_4.Text)
                        SQL_II &= String.Format(" Age_D = '{0}', ", iAge_D4.Value)
                        SQL_II &= String.Format(" Grade_D = '{0}', ", txtGrade_4.Text)
                        SQL_II &= String.Format(" School_D = '{0}', ", txtSchool_4.Text)
                        SQL_II &= String.Format(" SchoolAddress_D = '{0}' ", txtSchoolAddress_4.Text)
                        SQL_II &= String.Format(" WHERE BorrowerID = '{0}' AND `rank` = 4;", BorrowerID)

                        'IDENTIFICATION
                        SQL_II &= "UPDATE profile_borrowerid SET"
                        SQL_II &= String.Format(" TIN = '{0}', ", txtTIN_B.Text)
                        SQL_II &= String.Format(" SSS = '{0}', ", txtSSS_B.Text)
                        SQL_II &= String.Format(" GSIS = '{0}', ", GSIS)
                        SQL_II &= String.Format(" PhilHealth = '{0}', ", PhilHealth)
                        SQL_II &= String.Format(" Senior = '{0}', ", Senior)
                        SQL_II &= String.Format(" UMID = '{0}', ", UMID)
                        SQL_II &= String.Format(" SEC = '{0}', ", SEC)
                        SQL_II &= String.Format(" DTI = '{0}', ", DTI)
                        SQL_II &= String.Format(" CDA = '{0}', ", CDA)
                        SQL_II &= String.Format(" Cooperative = '{0}', ", Cooperative)
                        SQL_II &= String.Format(" Drivers = '{0}', ", Drivers)
                        SQL_II &= String.Format(" dDrivers = '{0}', ", dDrivers)
                        SQL_II &= String.Format(" VIN = '{0}', ", VIN)
                        SQL_II &= String.Format(" dVIN = '{0}', ", dVIN)
                        SQL_II &= String.Format(" Passport = '{0}', ", Passport)
                        SQL_II &= String.Format(" dPassport = '{0}', ", dPassport)
                        SQL_II &= String.Format(" PRC = '{0}', ", PRC)
                        SQL_II &= String.Format(" dPRC = '{0}', ", dPRC)
                        SQL_II &= String.Format(" NBI = '{0}', ", NBI)
                        SQL_II &= String.Format(" dNBI = '{0}', ", dNBI)
                        SQL_II &= String.Format(" Police = '{0}', ", Police)
                        SQL_II &= String.Format(" dPolice = '{0}', ", dPolice)
                        SQL_II &= String.Format(" Postal = '{0}', ", Postal)
                        SQL_II &= String.Format(" dPostal = '{0}', ", dPostal)
                        SQL_II &= String.Format(" Barangay = '{0}', ", Barangay)
                        SQL_II &= String.Format(" dBarangay = '{0}', ", dBarangay)
                        SQL_II &= String.Format(" OWWA = '{0}', ", OWWA)
                        SQL_II &= String.Format(" dOWWA = '{0}', ", dOWWA)
                        SQL_II &= String.Format(" OFW = '{0}', ", OFW)
                        SQL_II &= String.Format(" dOFW = '{0}', ", dOFW)
                        SQL_II &= String.Format(" Seaman = '{0}', ", Seaman)
                        SQL_II &= String.Format(" dSeaman = '{0}', ", dSeaman)
                        SQL_II &= String.Format(" PNP = '{0}', ", PNP)
                        SQL_II &= String.Format(" dPNP = '{0}', ", dPNP)
                        SQL_II &= String.Format(" AFP = '{0}', ", AFP)
                        SQL_II &= String.Format(" dAFP = '{0}', ", dAFP)
                        SQL_II &= String.Format(" HDMF = '{0}', ", HDMF)
                        SQL_II &= String.Format(" dHDMF = '{0}', ", dHDMF)
                        SQL_II &= String.Format(" PWD = '{0}', ", PWD)
                        SQL_II &= String.Format(" dPWD = '{0}', ", dPWD)
                        SQL_II &= String.Format(" DSWD = '{0}', ", DSWD)
                        SQL_II &= String.Format(" dDSWD = '{0}', ", dDSWD)
                        SQL_II &= String.Format(" ACR = '{0}', ", ACR)
                        SQL_II &= String.Format(" dACR = '{0}', ", dACR)
                        SQL_II &= String.Format(" DTI_Business = '{0}', ", DTI_Business)
                        SQL_II &= String.Format(" dDTI_Business = '{0}', ", dDTI_Business)
                        SQL_II &= String.Format(" IBP = '{0}', ", IBP)
                        SQL_II &= String.Format(" dIBP = '{0}', ", dIBP)
                        SQL_II &= String.Format(" FireArms = '{0}', ", FireArms)
                        SQL_II &= String.Format(" dFireArms = '{0}', ", dFireArms)
                        SQL_II &= String.Format(" Government = '{0}', ", Government)
                        SQL_II &= String.Format(" dGovernment = '{0}', ", dGovernment)
                        SQL_II &= String.Format(" Diplomat = '{0}', ", Diplomat)
                        SQL_II &= String.Format(" dDiplomat = '{0}', ", dDiplomat)
                        SQL_II &= String.Format(" `National` = '{0}', ", National)
                        SQL_II &= String.Format(" dNational = '{0}', ", dNational)
                        SQL_II &= String.Format(" `Work` = '{0}', ", Work)
                        SQL_II &= String.Format(" dWork = '{0}', ", dWork)
                        SQL_II &= String.Format(" GOCC = '{0}', ", GOCC)
                        SQL_II &= String.Format(" dGOCC = '{0}', ", dGOCC)
                        SQL_II &= String.Format(" PLRA = '{0}', ", PLRA)
                        SQL_II &= String.Format(" dPLRA = '{0}', ", dPLRA)
                        SQL_II &= String.Format(" Major = '{0}', ", Major)
                        SQL_II &= String.Format(" dMajor = '{0}', ", dMajor)
                        SQL_II &= String.Format(" Media = '{0}', ", Media)
                        SQL_II &= String.Format(" dMedia = '{0}', ", dMedia)
                        SQL_II &= String.Format(" Student = '{0}', ", Student)
                        SQL_II &= String.Format(" dStudent = '{0}', ", dStudent)
                        SQL_II &= String.Format(" SIRV = '{0}', ", SIRV)
                        SQL_II &= String.Format(" dSIRV = '{0}'", dSIRV)
                        SQL_II &= String.Format(" WHERE BorrowerID = '{0}' AND ID_Type = 'B';", BorrowerID)
                        If TxtFirstN_S.Text = "" Then
                        Else
                            If TxtFirstN_S.Tag = "" Then
                                SQL_II &= "INSERT profile_borrowerid SET"
                                SQL_II &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                            Else
                                SQL_II &= "UPDATE profile_borrowerid SET"
                            End If
                            SQL_II &= String.Format(" TIN = '{0}', ", TIN_S)
                            SQL_II &= String.Format(" SSS = '{0}', ", SSS_S)
                            SQL_II &= String.Format(" GSIS = '{0}', ", GSIS_S)
                            SQL_II &= String.Format(" PhilHealth = '{0}', ", PhilHealth_S)
                            SQL_II &= String.Format(" Senior = '{0}', ", Senior_S)
                            SQL_II &= String.Format(" UMID = '{0}', ", UMID_S)
                            SQL_II &= String.Format(" SEC = '{0}', ", SEC_S)
                            SQL_II &= String.Format(" DTI = '{0}', ", DTI_S)
                            SQL_II &= String.Format(" CDA = '{0}', ", CDA_S)
                            SQL_II &= String.Format(" Cooperative = '{0}', ", Cooperative_S)
                            SQL_II &= String.Format(" Drivers = '{0}', ", Drivers_S)
                            SQL_II &= String.Format(" dDrivers = '{0}', ", dDrivers_S)
                            SQL_II &= String.Format(" VIN = '{0}', ", VIN_S)
                            SQL_II &= String.Format(" dVIN = '{0}', ", dVIN_S)
                            SQL_II &= String.Format(" Passport = '{0}', ", Passport_S)
                            SQL_II &= String.Format(" dPassport = '{0}', ", dPassport_S)
                            SQL_II &= String.Format(" PRC = '{0}', ", PRC_S)
                            SQL_II &= String.Format(" dPRC = '{0}', ", dPRC_S)
                            SQL_II &= String.Format(" NBI = '{0}', ", NBI_S)
                            SQL_II &= String.Format(" dNBI = '{0}', ", dNBI_S)
                            SQL_II &= String.Format(" Police = '{0}', ", Police_S)
                            SQL_II &= String.Format(" dPolice = '{0}', ", dPolice_S)
                            SQL_II &= String.Format(" Postal = '{0}', ", Postal_S)
                            SQL_II &= String.Format(" dPostal = '{0}', ", dPostal_S)
                            SQL_II &= String.Format(" Barangay = '{0}', ", Barangay_S)
                            SQL_II &= String.Format(" dBarangay = '{0}', ", dBarangay_S)
                            SQL_II &= String.Format(" OWWA = '{0}', ", OWWA_S)
                            SQL_II &= String.Format(" dOWWA = '{0}', ", dOWWA_S)
                            SQL_II &= String.Format(" OFW = '{0}', ", OFW_S)
                            SQL_II &= String.Format(" dOFW = '{0}', ", dOFW_S)
                            SQL_II &= String.Format(" Seaman = '{0}', ", Seaman_S)
                            SQL_II &= String.Format(" dSeaman = '{0}', ", dSeaman_S)
                            SQL_II &= String.Format(" PNP = '{0}', ", PNP_S)
                            SQL_II &= String.Format(" dPNP = '{0}', ", dPNP_S)
                            SQL_II &= String.Format(" AFP = '{0}', ", AFP_S)
                            SQL_II &= String.Format(" dAFP = '{0}', ", dAFP_S)
                            SQL_II &= String.Format(" HDMF = '{0}', ", HDMF_S)
                            SQL_II &= String.Format(" dHDMF = '{0}', ", dHDMF_S)
                            SQL_II &= String.Format(" PWD = '{0}', ", PWD_S)
                            SQL_II &= String.Format(" dPWD = '{0}', ", dPWD_S)
                            SQL_II &= String.Format(" DSWD = '{0}', ", DSWD_S)
                            SQL_II &= String.Format(" dDSWD = '{0}', ", dDSWD_S)
                            SQL_II &= String.Format(" ACR = '{0}', ", ACR_S)
                            SQL_II &= String.Format(" dACR = '{0}', ", dACR_S)
                            SQL_II &= String.Format(" DTI_Business = '{0}', ", DTI_Business_S)
                            SQL_II &= String.Format(" dDTI_Business = '{0}', ", dDTI_Business_S)
                            SQL_II &= String.Format(" IBP = '{0}', ", IBP_S)
                            SQL_II &= String.Format(" dIBP = '{0}', ", dIBP_S)
                            SQL_II &= String.Format(" FireArms = '{0}', ", FireArms_S)
                            SQL_II &= String.Format(" dFireArms = '{0}', ", dFireArms_S)
                            SQL_II &= String.Format(" Government = '{0}', ", Government_S)
                            SQL_II &= String.Format(" dGovernment = '{0}', ", dGovernment_S)
                            SQL_II &= String.Format(" Diplomat = '{0}', ", Diplomat_S)
                            SQL_II &= String.Format(" dDiplomat = '{0}', ", dDiplomat_S)
                            SQL_II &= String.Format(" `National` = '{0}', ", National_S)
                            SQL_II &= String.Format(" dNational = '{0}', ", dNational_S)
                            SQL_II &= String.Format(" `Work` = '{0}', ", Work_S)
                            SQL_II &= String.Format(" dWork = '{0}', ", dWork_S)
                            SQL_II &= String.Format(" GOCC = '{0}', ", GOCC_S)
                            SQL_II &= String.Format(" dGOCC = '{0}', ", dGOCC_S)
                            SQL_II &= String.Format(" PLRA = '{0}', ", PLRA_S)
                            SQL_II &= String.Format(" dPLRA = '{0}', ", dPLRA_S)
                            SQL_II &= String.Format(" Major = '{0}', ", Major_S)
                            SQL_II &= String.Format(" dMajor = '{0}', ", dMajor_S)
                            SQL_II &= String.Format(" Media = '{0}', ", Media_S)
                            SQL_II &= String.Format(" dMedia = '{0}', ", dMedia_S)
                            SQL_II &= String.Format(" Student = '{0}', ", Student_S)
                            SQL_II &= String.Format(" dStudent = '{0}', ", dStudent_S)
                            SQL_II &= String.Format(" SIRV = '{0}', ", SIRV_S)
                            SQL_II &= String.Format(" dSIRV = '{0}'", dSIRV_S)
                            If TxtFirstN_S.Tag = "" Then
                                SQL_II &= String.Format(" ,branch_id = '{0}',", Branch_ID)
                                SQL_II &= " ID_Type = 'S';"
                            Else
                                SQL_II &= String.Format(" WHERE BorrowerID = '{0}' AND ID_Type = 'S';", BorrowerID)
                            End If
                        End If

                        'Spouse
                        If txtPath_B.Text <> "" And txtPath_B.Text <> "Borrower.jpg" Then
                            saveImage_B(pb_B, "Borrower")
                        End If
                        If txtPath_S.Text <> "" And txtPath_S.Text <> "Spouse.jpg" Then
                            saveImage_B(pb_Spouse, "Spouse")
                        End If
                        DataObject(SQL_II)
                        '******************* U P D A T E   B O R R O W E R   I N F O *******************************
                    End If

                    If Trigger = "D&raft" Then
                        Logs("Credit Application", "Draft", String.Format("Add new draft application with credit number {0}", txtCreditNumber.Text), "", "", "", txtCreditNumber.Text)
                    Else
                        Logs("Credit Application", "Save", String.Format("Add new application with credit number {0}", txtCreditNumber.Text), "", "", "", txtCreditNumber.Text)
                    End If
                    Clear()
                    LoadData()
                    MsgBox(String.Format("Successfully {0}!", If(Trigger = "D&raft", "saved a draft", "Saved")), MsgBoxStyle.Information, "Info")
                Catch ex As Exception
                    Cursor = Cursors.Default
                    TriggerBugReport("Credit Application - Draft_Save", ex.Message.ToString)
                    Exit Sub
                End Try
                Cursor = Cursors.Default
            End If
        Else
            If MsgBoxYes("Are you sure you want to update this data?") = MsgBoxResult.Yes Then
                Cursor = Cursors.WaitCursor
                Dim SQL As String
                Try
                    If From_CI Or From_Request Then
                        If From_Request And btnOpen.Enabled = False Then
                            Dim BM As DataTable = GetBM(Branch_ID)
                            Dim Msg As String = "Are you sure you want to UPDATE the computations?"
                            If Code = Old_Code Then
                                Msg = "Would you like to enter the code now?"
                            ElseIf Old_Code = "" Then
                                Msg = "Are you sure you want to UPDATE the computations? This will send an Email or SMS to authorized personnel and please wait for their code."
                            Else
                                Msg = "Are you sure you want to UPDATE the computations? This will send a NEW Email or SMS to authorized personnel and please wait for their code."
                            End If
                            If MsgBoxYes(Msg) = MsgBoxResult.Yes Then
                                If Code = Old_Code Then
                                Else
                                    Old_Code = Code
                                    For x As Integer = 0 To BM.Rows.Count - 1
                                        'Email*******************************************
                                        If BM(x)("EmailAdd") = "" Then
                                        Else
                                            Cursor = Cursors.WaitCursor

                                            Dim Subject As String = "One Time Authorization Code " & Code & " [" & txtCreditNumber.Text & "]"
                                            Dim Body As String = String.Format("Good day {0}," & vbCrLf, UpperCaseFirst(BM(x)("Employee")))
                                            Body &= String.Format(" One Time Authorization Code is <b>{0}</b> for UPDATING the computation of {1} for the credit application {2}. {3}", Code, If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & cbxSuffix_B.Text, CreditNumber, Changes)
                                            SendEmail(BM(x)("EmailAdd"), Subject, Body, False, False, False, 0, "", "")

                                            Cursor = Cursors.Default
                                        End If

                                        'SMS*******************************************
                                        If BM(x)("Phone") = "" Then
                                        Else
                                            Dim Body As String = String.Format("Good day {0}," & vbCrLf, UpperCaseFirst(BM(x)("Employee")))
                                            Body &= String.Format(" One Time Authorization Code is <b>{0}</b> for UPDATING the computation of {1} for the credit application {2}. {3}", Code, If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & cbxSuffix_B.Text, CreditNumber, Changes)
                                            SendSMS(BM(x)("Phone").Substring(3), Body, True)
                                        End If
                                    Next
                                End If

                                Timer1.Start()
                                Dim OTP As New FrmOneTimePassword
                                With OTP
                                    .OTP = Code
                                    If .ShowDialog = DialogResult.OK Then
                                    Else
                                        Exit Sub
                                    End If
                                End With
                            Else
                                Exit Sub
                            End If
                        End If

                        If dAmountApplied.Value = dAmountApplied.Tag Then
                        Else
                            rNote.Text &= String.Format("Change Amount Applied from {0} to {1}. ", FormatNumber(dAmountApplied.Tag, 2), dAmountApplied.Text)
                        End If
                        If iTerms.Value = iTerms.Tag Then
                        Else
                            rNote.Text &= String.Format("Change Term from {0} to {1}. ", iTerms.Tag, iTerms.Text)
                        End If
                        If dInterest_T.Value = dInterest_T.Tag Then
                        Else
                            rNote.Text &= String.Format("Change Annual Interest from {0} to {1}. ", FormatNumber(dInterest_T.Tag, 2), dInterest_T.Text)
                        End If

                        SQL = "UPDATE credit_application SET"
                        SQL &= String.Format(" AmountApplied = '{0}', ", dAmountApplied.Value)
                        SQL &= String.Format(" Terms = '{0}', ", iTerms.Value)
                        SQL &= String.Format(" TermType = '{0}', ", cbxTerms.Text)
                        SQL &= String.Format(" product_id = '{0}', ", cbxProduct.SelectedValue)
                        SQL &= String.Format(" product = '{0}', ", cbxProduct.Text)
                        SQL &= String.Format(" mortgage_id = '{0}', ", MortgageID)
                        SQL &= String.Format(" collateral_id = '{0}', ", CollateralID)
                        SQL &= String.Format(" collateral = '{0}', ", cbxCollateral.Text)
                        SQL &= String.Format(" From_ROPOA = '{0}', ", If(AssetNumber_1 = "", 0, 1))
                        SQL &= String.Format(" AssetNumber_1 = '{0}', ", AssetNumber_1)
                        SQL &= String.Format(" AssetNumber_2 = '{0}', ", AssetNumber_2)
                        SQL &= String.Format(" AssetNumber_3 = '{0}', ", AssetNumber_3)
                        SQL &= String.Format(" AssetNumber_4 = '{0}', ", AssetNumber_4)
                        SQL &= String.Format(" AssetNumber_5 = '{0}', ", AssetNumber_5)
                        SQL &= String.Format(" AssetSelling_1 = '{0}', ", AssetSelling_1)
                        SQL &= String.Format(" AssetSelling_2 = '{0}', ", AssetSelling_2)
                        SQL &= String.Format(" AssetSelling_3 = '{0}', ", AssetSelling_3)
                        SQL &= String.Format(" AssetSelling_4 = '{0}', ", AssetSelling_4)
                        SQL &= String.Format(" AssetSelling_5 = '{0}', ", AssetSelling_5)
                        SQL &= String.Format(" purpose = '{0}', ", txtPurpose.Text)
                        SQL &= String.Format(" trans_date = '{0}', ", FormatDatePicker(dtpDate))
                        SQL &= String.Format(" loan_type = '{0}', ", cbxOptions.Text)
                        SQL &= String.Format(" AccountN = '{0}', ", cbxAccountNo.Text)
                        SQL &= String.Format(" interest_rate = '{0}', ", dInterest_T.Value)
                        SQL &= String.Format(" rppd_rate = '{0}', ", dRPPDRate_T.Value)
                        SQL &= String.Format(" face_amount = '{0}', ", dFA_C.Value)
                        SQL &= String.Format(" AdvancePayment_Count = '{0}', ", iAdvancePayment.Value)
                        SQL &= String.Format(" Note = '{0}', ", rNote.Text)
                        SQL &= String.Format(" Service_Charge = '{0}', ", dSC_C.Value)
                        SQL &= String.Format(" ServiceCharge_Rate = '{0}', ", dSC_Rate.Value)
                        SQL &= String.Format(" Appraisal_Fee = '{0}', ", dAppraisalFee_C.Value)
                        SQL &= String.Format(" CI_Fee = '{0}', ", dCIFee_C.Value)
                        SQL &= String.Format(" Insurance = '{0}', ", dInsurance_C.Value)
                        SQL &= String.Format(" Miscellaneous_Income = '{0}', ", dMiscellaneous_C.Value)
                        SQL &= String.Format(" Advance_Payment = '{0}', ", dAdvancePayment_C.Value)
                        SQL &= String.Format(" Interest = '{0}', ", dUDI_C.Value)
                        SQL &= String.Format(" RPPD = '{0}', ", dRPPD_C.Value)
                        SQL &= String.Format(" GMA = '{0}', ", dGMA_C.Value)
                        SQL &= String.Format(" Rebate = '{0}', ", dMR_C.Value)
                        SQL &= String.Format(" Note = '{0}', ", rNote.Text)
                        SQL &= String.Format(" ForCI = '{0}', ", Product_ForCI)
                        SQL &= String.Format(" BillDeductions = '{0}', ", If(cbxBill.Checked, 1, 0))
                        SQL &= String.Format(" IncludeAdvancePaymentInBill = '{0}', ", If(cbxAdvancePayment.Checked, 1, 0))
                        SQL &= String.Format(" OptionD = '{0}', ", If(cbxA.Checked, "A", If(cbxB.Checked, "B", If(cbxC.Checked, "C", If(cbxD.Checked, "D", "")))))

                        SQL &= String.Format(" Deduct_Balance = '{0}', ", dDeductBalance_C.Value)
                        SQL &= String.Format(" net_proceeds = '{0}'", dNetProceeds_C.Value)
                        SQL &= String.Format(" WHERE CreditNumber = '{0}';", txtCreditNumber.Text)

                        '*************AMORTIZATION SCHEDULE 
                        SQL &= String.Format("UPDATE credit_schedule SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                        For x As Integer = 0 To GridView3.RowCount - 2
                            If GridView3.GetRowCellValue(x, "No") = "" Then
                                SQL &= " INSERT INTO credit_schedule SET"
                                SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                                SQL &= String.Format(" `No` = '{0}', ", GridView3.GetRowCellValue(x, "No"))
                                SQL &= String.Format(" DueDate = '{0}', ", "")
                                SQL &= String.Format(" Monthly = '{0}', ", 0)
                                SQL &= String.Format(" InterestIncome = '{0}', ", 0)
                                SQL &= String.Format(" RPPD = '{0}', ", 0)
                                SQL &= String.Format(" PrincipalAllocation = '{0}', ", 0)
                                SQL &= String.Format(" OutstandingPrincipal = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Outstanding Principal")))
                                SQL &= String.Format(" Total_RPPD = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Total_RPPD")))
                                SQL &= String.Format(" UnearnIncome = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Unearn Income")))
                                SQL &= String.Format(" LoansReceivable = '{0}';", CDbl(GridView3.GetRowCellValue(x, "Loans Receivable")))
                            Else
                                SQL &= " INSERT INTO credit_schedule SET"
                                SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                                SQL &= String.Format(" `No` = '{0}', ", GridView3.GetRowCellValue(x, "No"))
                                SQL &= String.Format(" DueDate = '{0}', ", Format(DateValue(GridView3.GetRowCellValue(x, "Due Date")), "yyyy-MM-dd"))
                                SQL &= String.Format(" Monthly = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Monthly")))
                                SQL &= String.Format(" InterestIncome = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Interest Income")))
                                SQL &= String.Format(" RPPD = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "RPPD")))
                                SQL &= String.Format(" PrincipalAllocation = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Principal Allocation")))
                                SQL &= String.Format(" OutstandingPrincipal = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Outstanding Principal")))
                                SQL &= String.Format(" Total_RPPD = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Total_RPPD")))
                                SQL &= String.Format(" UnearnIncome = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Unearn Income")))
                                SQL &= String.Format(" LoansReceivable = '{0}';", CDbl(GridView3.GetRowCellValue(x, "Loans Receivable")))
                            End If
                        Next
                        '*************AMORTIZATION SCHEDULE 

                        SQL &= String.Format("UPDATE credit_processing_fee SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                        For x As Integer = 0 To GridView4.RowCount - 1
                            SQL &= "INSERT INTO credit_processing_fee SET"
                            SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                            SQL &= String.Format(" processing_id = '{0}', ", GridView4.GetRowCellValue(x, "ID"))
                            SQL &= String.Format(" processing = '{0}', ", GridView4.GetRowCellValue(x, "Processing Fee"))
                            SQL &= String.Format(" Amount = '{0}';", CDbl(GridView4.GetRowCellValue(x, "Amount")))
                        Next

                        '*************DEDUCT BALANCE 2
                        SQL &= String.Format("UPDATE credit_deductbalance SET `status` = 'CANCELLED' WHERE CreditNumber_F = '{0}' AND `status` = 'ACTIVE' AND deduct_status = 'PENDING';", txtCreditNumber.Text)
                        For x As Integer = 0 To DT_Account.Rows.Count - 1
                            SQL &= "INSERT INTO credit_deductbalance SET "
                            SQL &= String.Format("CreditNumber_F = '{0}', ", txtCreditNumber.Text)
                            SQL &= String.Format("AccountNumber = '{0}', ", DT_Account(x)("Account Number"))
                            SQL &= String.Format("CreditNumber = '{0}', ", DT_Account(x)("Credit Number"))
                            SQL &= String.Format("LR = '{0}', ", CDbl(DT_Account(x)("Loans Receivable")))
                            SQL &= String.Format("UDI_Discount = '{0}', ", CDbl(DT_Account(x)("UDI Discount")))
                            SQL &= String.Format("UDI_DiscountP = '{0}', ", CDbl(DT_Account(x)("UDI Percent")))
                            SQL &= String.Format("AvailedRPPD = '{0}', ", CDbl(DT_Account(x)("Availed RPPD")))
                            SQL &= String.Format("AR = '{0}', ", CDbl(DT_Account(x)("Accounts Receivable")))
                            SQL &= String.Format("Penalty = '{0}', ", CDbl(DT_Account(x)("Penalty")))
                            SQL &= String.Format("AsOf = '{0}', ", Format(CDate(DT_Account(x)("As Of")), "yyyy-MM-dd"))
                            SQL &= String.Format("BranchID = '{0}', ", Branch_ID)
                            SQL &= String.Format("Amount = '{0}';", CDbl(DT_Account(x)("Amount")))
                        Next
                        '*************DEDUCT BALANCE
                        DataObject(SQL)
                        Logs("Credit Application", "Update", String.Format("Update application with credit number {0}", txtCreditNumber.Text), Changes, "", "", txtCreditNumber.Text)
                        MsgBox(String.Format("Successfully {0}!", If(Trigger = "Update Draft", "Updated a Draft", "Updated")), MsgBoxStyle.Information, "Info")
                        Close()
                    End If
                    SQL = "UPDATE credit_application SET"
                    SQL &= String.Format(" ManualAmortization = {0}, ", ManualAmortization)
                    SQL &= String.Format(" AmountApplied = '{0}', ", dAmountApplied.Value)
                    SQL &= String.Format(" AppliedAmount = '{0}', ", dAmountApplied.Value)
                    SQL &= String.Format(" AppliedTerms = '{0}', ", iTerms.Value)
                    SQL &= String.Format(" AppliedInterest = '{0}', ", dInterest_T.Value)
                    SQL &= String.Format(" AppliedSC = '{0}', ", dSC_C.Value)
                    SQL &= String.Format(" Terms = '{0}', ", iTerms.Value)
                    SQL &= String.Format(" TermType = '{0}', ", cbxTerms.Text)
                    SQL &= String.Format(" product_id = '{0}', ", cbxProduct.SelectedValue)
                    SQL &= String.Format(" product = '{0}', ", cbxProduct.Text)
                    SQL &= String.Format(" mortgage_id = '{0}', ", MortgageID)
                    SQL &= String.Format(" collateral_id = '{0}', ", CollateralID)
                    SQL &= String.Format(" collateral = '{0}', ", cbxCollateral.Text)
                    SQL &= String.Format(" From_ROPOA = '{0}', ", If(AssetNumber_1 = "", 0, 1))
                    SQL &= String.Format(" AssetNumber_1 = '{0}', ", AssetNumber_1)
                    SQL &= String.Format(" AssetNumber_2 = '{0}', ", AssetNumber_2)
                    SQL &= String.Format(" AssetNumber_3 = '{0}', ", AssetNumber_3)
                    SQL &= String.Format(" AssetNumber_4 = '{0}', ", AssetNumber_4)
                    SQL &= String.Format(" AssetNumber_5 = '{0}', ", AssetNumber_5)
                    SQL &= String.Format(" AssetSelling_1 = '{0}', ", AssetSelling_1)
                    SQL &= String.Format(" AssetSelling_2 = '{0}', ", AssetSelling_2)
                    SQL &= String.Format(" AssetSelling_3 = '{0}', ", AssetSelling_3)
                    SQL &= String.Format(" AssetSelling_4 = '{0}', ", AssetSelling_4)
                    SQL &= String.Format(" AssetSelling_5 = '{0}', ", AssetSelling_5)
                    SQL &= String.Format(" purpose = '{0}', ", txtPurpose.Text)
                    SQL &= String.Format(" trans_date = '{0}', ", FormatDatePicker(dtpDate))
                    SQL &= String.Format(" loan_type = '{0}', ", cbxOptions.Text)
                    SQL &= String.Format(" AccountN = '{0}', ", cbxAccountNo.Text)
                    SQL &= String.Format(" CreditNumber_Old = '{0}', ", ValidateComboBox(cbxAccountNo))
                    SQL &= String.Format(" interest_rate = '{0}', ", dInterest_T.Value)
                    SQL &= String.Format(" rppd_rate = '{0}', ", dRPPDRate_T.Value)
                    SQL &= String.Format(" face_amount = '{0}', ", dFA_C.Value)
                    SQL &= String.Format(" AdvancePayment_Count = '{0}', ", iAdvancePayment.Value)
                    SQL &= String.Format(" Note = '{0}', ", rNote.Text)
                    SQL &= String.Format(" Service_Charge = '{0}', ", dSC_C.Value)
                    SQL &= String.Format(" ServiceCharge_Rate = '{0}', ", dSC_Rate.Value)
                    SQL &= String.Format(" Appraisal_Fee = '{0}', ", dAppraisalFee_C.Value)
                    SQL &= String.Format(" CI_Fee = '{0}', ", dCIFee_C.Value)
                    SQL &= String.Format(" Insurance = '{0}', ", dInsurance_C.Value)
                    SQL &= String.Format(" Miscellaneous_Income = '{0}', ", dMiscellaneous_C.Value)
                    SQL &= String.Format(" Advance_Payment = '{0}', ", dAdvancePayment_C.Value)
                    SQL &= String.Format(" Interest = '{0}', ", dUDI_C.Value)
                    SQL &= String.Format(" RPPD = '{0}', ", dRPPD_C.Value)
                    SQL &= String.Format(" GMA = '{0}', ", dGMA_C.Value)
                    SQL &= String.Format(" Rebate = '{0}', ", dMR_C.Value)
                    SQL &= String.Format(" ForCI = '{0}', ", Product_ForCI)
                    SQL &= String.Format(" BillDeductions = '{0}', ", If(cbxBill.Checked, 1, 0))
                    SQL &= String.Format(" IncludeAdvancePaymentInBill = '{0}', ", If(cbxAdvancePayment.Checked, 1, 0))
                    SQL &= String.Format(" OptionD = '{0}', ", If(cbxA.Checked, "A", If(cbxB.Checked, "B", If(cbxC.Checked, "C", If(cbxD.Checked, "D", "")))))

                    SQL &= String.Format(" Deduct_Balance = '{0}', ", dDeductBalance_C.Value)
                    SQL &= String.Format(" net_proceeds = '{0}', ", dNetProceeds_C.Value)
                    SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                    SQL &= String.Format(" Prefix_B = '{0}', ", CbxPrefix_B.Text)
                    SQL &= String.Format(" FirstN_B = '{0}', ", TxtFirstN_B.Text)
                    SQL &= String.Format(" MiddleN_B = '{0}', ", TxtMiddleN_B.Text)
                    SQL &= String.Format(" LastN_B = '{0}', ", TxtLastN_B.Text)
                    SQL &= String.Format(" Suffix_B = '{0}', ", cbxSuffix_B.Text)
                    SQL &= String.Format(" Prefix_S = '{0}', ", CbxPrefix_S.Text)
                    SQL &= String.Format(" FirstN_S = '{0}', ", TxtFirstN_S.Text)
                    SQL &= String.Format(" MiddleN_S = '{0}', ", TxtMiddleN_S.Text)
                    SQL &= String.Format(" LastN_S = '{0}', ", TxtLastN_S.Text)
                    SQL &= String.Format(" Suffix_S = '{0}', ", cbxSuffix_S.Text)
                    SQL &= String.Format(" Prefix_C1 = '{0}', ", CbxPrefix_C1.Text)
                    SQL &= String.Format(" FirstN_C1 = '{0}', ", TxtFirstN_C1.Text)
                    SQL &= String.Format(" MiddleN_C1 = '{0}', ", TxtMiddleN_C1.Text)
                    SQL &= String.Format(" LastN_C1 = '{0}', ", TxtLastN_C1.Text)
                    SQL &= String.Format(" Suffix_C1 = '{0}', ", cbxSuffix_C1.Text)
                    SQL &= String.Format(" Prefix_C2 = '{0}', ", CbxPrefix_C2.Text)
                    SQL &= String.Format(" FirstN_C2 = '{0}', ", TxtFirstN_C2.Text)
                    SQL &= String.Format(" MiddleN_C2 = '{0}', ", TxtMiddleN_C2.Text)
                    SQL &= String.Format(" LastN_C2 = '{0}', ", TxtLastN_C2.Text)
                    SQL &= String.Format(" Suffix_C2 = '{0}', ", cbxSuffix_C2.Text)
                    SQL &= String.Format(" Prefix_C3 = '{0}', ", CbxPrefix_C3.Text)
                    SQL &= String.Format(" FirstN_C3 = '{0}', ", TxtFirstN_C3.Text)
                    SQL &= String.Format(" MiddleN_C3 = '{0}', ", TxtMiddleN_C3.Text)
                    SQL &= String.Format(" LastN_C3 = '{0}', ", TxtLastN_C3.Text)
                    SQL &= String.Format(" Suffix_C3 = '{0}', ", cbxSuffix_C3.Text)
                    SQL &= String.Format(" Prefix_C4 = '{0}', ", CbxPrefix_C4.Text)
                    SQL &= String.Format(" FirstN_C4 = '{0}', ", TxtFirstN_C4.Text)
                    SQL &= String.Format(" MiddleN_C4 = '{0}', ", TxtMiddleN_C4.Text)
                    SQL &= String.Format(" LastN_C4 = '{0}', ", TxtLastN_C4.Text)
                    SQL &= String.Format(" Suffix_C4 = '{0}', ", cbxSuffix_C4.Text)
                    SQL &= String.Format(" NoC_B = '{0}', ", txtNoC_B.Text)
                    SQL &= String.Format(" StreetC_B = '{0}', ", txtStreetC_B.Text)
                    SQL &= String.Format(" BarangayC_B = '{0}', ", txtBarangayC_B.Text)
                    SQL &= String.Format(" `AddressC_B-ID` = '{0}', ", ValidateComboBox(cbxAddressC_B))
                    SQL &= String.Format(" AddressC_B = '{0}', ", cbxAddressC_B.Text)
                    SQL &= String.Format(" NoP_B = '{0}', ", txtNoP_B.Text)
                    SQL &= String.Format(" StreetP_B = '{0}', ", txtStreetP_B.Text)
                    SQL &= String.Format(" BarangayP_B = '{0}', ", txtBarangayP_B.Text)
                    SQL &= String.Format(" `AddressP_B-ID` = '{0}', ", ValidateComboBox(cbxAddressP_B))
                    SQL &= String.Format(" AddressP_B = '{0}', ", cbxAddressP_B.Text)
                    SQL &= String.Format(" Birth_B = '{0}', ", FormatDatePicker(DtpBirth_B))
                    SQL &= String.Format(" `PlaceBirth_B-ID` = '{0}', ", ValidateComboBox(cbxPlaceBirth_B))
                    SQL &= String.Format(" PlaceBirth_B = '{0}', ", cbxPlaceBirth_B.Text)
                    SQL &= String.Format(" Gender_B = '{0}', ", Gender_B)
                    SQL &= String.Format(" Civil_B = '{0}', ", Civil_B)
                    SQL &= String.Format(" Citizenship_B = '{0}', ", cbxCitizenship_B.Text)
                    SQL &= String.Format(" TIN_B = '{0}', ", txtTIN_B.Text)
                    SQL &= String.Format(" Telephone_B = '{0}', ", txtTelephone_B.Text)
                    SQL &= String.Format(" SSS_B = '{0}', ", txtSSS_B.Text)
                    SQL &= String.Format(" Mobile_B = '{0}', ", txtMobile_B.Text)
                    SQL &= String.Format(" Mobile_B2 = '{0}', ", txtMobile_B2.Text)
                    SQL &= String.Format(" Email_B = '{0}', ", txtEmail_B.Text)
                    SQL &= String.Format(" House_B = '{0}', ", House_B)
                    SQL &= String.Format(" Rent_B = '{0}', ", dRent_B.Value)

                    SQL &= String.Format(" Prefix_D1 = '{0}', ", CbxPrefix_1.Text)
                    SQL &= String.Format(" FirstN_D1 = '{0}', ", TxtFirstN_1.Text)
                    SQL &= String.Format(" MiddleN_D1 = '{0}', ", TxtMiddleN_1.Text)
                    SQL &= String.Format(" LastN_D1 = '{0}', ", TxtLastN_1.Text)
                    SQL &= String.Format(" Suffix_D1 = '{0}', ", cbxSuffix_1.Text)
                    SQL &= String.Format(" Age_D1 = '{0}', ", iAge_D1.Value)
                    SQL &= String.Format(" Grade_D1 = '{0}', ", txtGrade_1.Text)
                    SQL &= String.Format(" School_D1 = '{0}', ", txtSchool_1.Text)
                    SQL &= String.Format(" SchoolAddress_D1 = '{0}', ", txtSchoolAddress_1.Text)
                    SQL &= String.Format(" Prefix_D2 = '{0}', ", CbxPrefix_2.Text)
                    SQL &= String.Format(" FirstN_D2 = '{0}', ", TxtFirstN_2.Text)
                    SQL &= String.Format(" MiddleN_D2 = '{0}', ", TxtMiddleN_2.Text)
                    SQL &= String.Format(" LastN_D2 = '{0}', ", TxtLastN_2.Text)
                    SQL &= String.Format(" Suffix_D2 = '{0}', ", cbxSuffix_2.Text)
                    SQL &= String.Format(" Age_D2 = '{0}', ", iAge_D2.Value)
                    SQL &= String.Format(" Grade_D2 = '{0}', ", txtGrade_2.Text)
                    SQL &= String.Format(" School_D2 = '{0}', ", txtSchool_2.Text)
                    SQL &= String.Format(" SchoolAddress_D2 = '{0}', ", txtSchoolAddress_2.Text)
                    SQL &= String.Format(" Prefix_D3 = '{0}', ", CbxPrefix_3.Text)
                    SQL &= String.Format(" FirstN_D3 = '{0}', ", TxtFirstN_3.Text)
                    SQL &= String.Format(" MiddleN_D3 = '{0}', ", TxtMiddleN_3.Text)
                    SQL &= String.Format(" LastN_D3 = '{0}', ", TxtLastN_3.Text)
                    SQL &= String.Format(" Suffix_D3 = '{0}', ", cbxSuffix_3.Text)
                    SQL &= String.Format(" Age_D3 = '{0}', ", iAge_D3.Value)
                    SQL &= String.Format(" Grade_D3 = '{0}', ", txtGrade_3.Text)
                    SQL &= String.Format(" School_D3 = '{0}', ", txtSchool_3.Text)
                    SQL &= String.Format(" SchoolAddress_D3 = '{0}', ", txtSchoolAddress_3.Text)
                    SQL &= String.Format(" Prefix_D4 = '{0}', ", CbxPrefix_4.Text)
                    SQL &= String.Format(" FirstN_D4 = '{0}', ", TxtFirstN_4.Text)
                    SQL &= String.Format(" MiddleN_D4 = '{0}', ", TxtMiddleN_4.Text)
                    SQL &= String.Format(" LastN_D4 = '{0}', ", TxtLastN_4.Text)
                    SQL &= String.Format(" Suffix_D4 = '{0}', ", cbxSuffix_4.Text)
                    SQL &= String.Format(" Age_D4 = '{0}', ", iAge_D4.Value)
                    SQL &= String.Format(" Grade_D4 = '{0}', ", txtGrade_4.Text)
                    SQL &= String.Format(" School_D4 = '{0}', ", txtSchool_4.Text)
                    SQL &= String.Format(" SchoolAddress_D4 = '{0}', ", txtSchoolAddress_4.Text)
                    SQL &= String.Format(" Remarks = '{0}', ", rRemarks.Text)

                    SQL &= String.Format(" Employer_B = '{0}', ", cbxEmployer_B.Text)
                    SQL &= String.Format(" Employer_B_ID = '{0}', ", ValidateComboBox(cbxEmployer_B))
                    SQL &= String.Format(" EmployerAddress_B = '{0}', ", txtEmployerAddress_B.Text)
                    SQL &= String.Format(" EmployerTelephone_B = '{0}', ", txtEmployerTelephone_B.Text)
                    SQL &= String.Format(" Position_B = '{0}', ", cbxPosition_B.Text)
                    SQL &= String.Format(" EmploymentStat_B = '{0}', ", EmplStatus_B)
                    SQL &= String.Format(" Hired_B = '{0}', ", FormatDatePicker(dtpHired_B))
                    SQL &= String.Format(" Supervisor_B = '{0}', ", txtSupervisor_B.Text)
                    SQL &= String.Format(" Monthly_B = '{0}', ", dMonthly_B.Value)
                    SQL &= String.Format(" BusinessName_B = '{0}', ", txtBusinessName_B.Text)
                    SQL &= String.Format(" BusinessAddress_B = '{0}', ", txtBusinessAddress_B.Text)
                    SQL &= String.Format(" BusinessTelephone_B = '{0}', ", txtBusinessTelephone_B.Text)
                    SQL &= String.Format(" NatureBusiness_B = '{0}', ", cbxNatureBusiness_B.Text)
                    SQL &= String.Format(" YrsOperation_B = '{0}', ", iYrsOperation_B.Value)
                    SQL &= String.Format(" BusinessIncome_B = '{0}', ", dBusinessIncome_B.Value)
                    SQL &= String.Format(" NoEmployees_B = '{0}', ", iNoEmployees_B.Value)
                    SQL &= String.Format(" Capital_B = '{0}', ", dCapital_B.Value)
                    SQL &= String.Format(" Area_B = '{0}', ", txtArea_B.Text)
                    SQL &= String.Format(" Expiry_B = '{0}', ", FormatDatePicker(dtpExpiry_B))
                    SQL &= String.Format(" Outlet_B = '{0}', ", iOutlet_B.Value)
                    SQL &= String.Format(" OtherIncome_B = '{0}', ", txtOtherIncome_B.Text)
                    SQL &= String.Format(" `OtherIncome_B-Amount` = '{0}', ", dOtherIncome_B.Value)
                    SQL &= String.Format(" Creditor_1 = '{0}', ", txtCreditor_1.Text)
                    SQL &= String.Format(" NatureLoan_1 = '{0}', ", txtNatureLoan_1.Text)
                    SQL &= String.Format(" AmountGranted_1 = '{0}', ", dAmountGranted_1.Value)
                    SQL &= String.Format(" Term_1 = '{0}', ", dTerm_1.Value)
                    SQL &= String.Format(" Balance_1 = '{0}', ", dBalance_1.Value)
                    SQL &= String.Format(" CreditRemarks_1 = '{0}', ", txtCreditRemarks_1.Text)
                    SQL &= String.Format(" Creditor_2 = '{0}', ", txtCreditor_2.Text)
                    SQL &= String.Format(" NatureLoan_2 = '{0}', ", txtNatureLoan_2.Text)
                    SQL &= String.Format(" AmountGranted_2 = '{0}', ", dAmountGranted_2.Value)
                    SQL &= String.Format(" Term_2 = '{0}', ", dTerm_2.Value)
                    SQL &= String.Format(" Balance_2 = '{0}', ", dBalance_2.Value)
                    SQL &= String.Format(" CreditRemarks_2 = '{0}', ", txtCreditRemarks_2.Text)
                    SQL &= String.Format(" Creditor_3 = '{0}', ", txtCreditor_3.Text)
                    SQL &= String.Format(" NatureLoan_3 = '{0}', ", txtNatureLoan_3.Text)
                    SQL &= String.Format(" AmountGranted_3 = '{0}', ", dAmountGranted_3.Value)
                    SQL &= String.Format(" Term_3 = '{0}', ", dTerm_3.Value)
                    SQL &= String.Format(" Balance_3 = '{0}', ", dBalance_3.Value)
                    SQL &= String.Format(" CreditRemarks_3 = '{0}', ", txtCreditRemarks_3.Text)
                    SQL &= String.Format(" Bank_1 = '{0}', ", txtBank_1.Text)
                    SQL &= String.Format(" Branch_1 = '{0}', ", txtBranch_1.Text)
                    SQL &= String.Format(" AccountT_1 = '{0}', ", AccountT_1)
                    SQL &= String.Format(" SA_1 = '{0}', ", txtSA_1.Text)
                    SQL &= String.Format(" AverageBalance_1 = '{0}', ", dAverageBalance_1.Value)
                    SQL &= String.Format(" PresentBalance_1 = '{0}', ", dPresentBalance_1.Value)
                    SQL &= String.Format(" Opened_1 = '{0}', ", txtOpened_1.Text)
                    SQL &= String.Format(" BankRemarks_1 = '{0}', ", txtBankRemarks_1.Text)
                    SQL &= String.Format(" Bank_2 = '{0}', ", txtBank_2.Text)
                    SQL &= String.Format(" Branch_2 = '{0}', ", txtBranch_2.Text)
                    SQL &= String.Format(" AccountT_2 = '{0}', ", AccountT_2)
                    SQL &= String.Format(" SA_2 = '{0}', ", txtSA_2.Text)
                    SQL &= String.Format(" AverageBalance_2 = '{0}', ", dAverageBalance_2.Value)
                    SQL &= String.Format(" PresentBalance_2 = '{0}', ", dPresentBalance_2.Value)
                    SQL &= String.Format(" Opened_2 = '{0}', ", txtOpened_2.Text)
                    SQL &= String.Format(" BankRemarks_2 = '{0}', ", txtBankRemarks_2.Text)
                    SQL &= String.Format(" Bank_3 = '{0}', ", txtBank_3.Text)
                    SQL &= String.Format(" Branch_3 = '{0}', ", txtBranch_3.Text)
                    SQL &= String.Format(" AccountT_3 = '{0}', ", AccountT_3)
                    SQL &= String.Format(" SA_3 = '{0}', ", txtSA_3.Text)
                    SQL &= String.Format(" AverageBalance_3 = '{0}', ", dAverageBalance_3.Value)
                    SQL &= String.Format(" PresentBalance_3 = '{0}', ", dPresentBalance_3.Value)
                    SQL &= String.Format(" Opened_3 = '{0}', ", txtOpened_3.Text)
                    SQL &= String.Format(" BankRemarks_3 = '{0}', ", txtBankRemarks_3.Text)
                    SQL &= String.Format(" Location_1 = '{0}', ", txtLocation_1.Text)
                    SQL &= String.Format(" TCT_1 = '{0}', ", txtTCT_1.Text)
                    SQL &= String.Format(" Area_1 = '{0}', ", dArea_1.Value)
                    SQL &= String.Format(" Acquired_1 = '{0}', ", txtAcquired_1.Text)
                    SQL &= String.Format(" PropertiesRemarks_1 = '{0}', ", txtPropertiesRemarks_1.Text)
                    SQL &= String.Format(" Location_2 = '{0}', ", txtLocation_2.Text)
                    SQL &= String.Format(" TCT_2 = '{0}', ", txtTCT_2.Text)
                    SQL &= String.Format(" Area_2 = '{0}', ", dArea_2.Value)
                    SQL &= String.Format(" Acquired_2 = '{0}', ", txtAcquired_2.Text)
                    SQL &= String.Format(" PropertiesRemarks_2 = '{0}', ", txtPropertiesRemarks_2.Text)
                    SQL &= String.Format(" Location_3 = '{0}', ", txtLocation_3.Text)
                    SQL &= String.Format(" TCT_3 = '{0}', ", txtTCT_3.Text)
                    SQL &= String.Format(" Area_3 = '{0}', ", dArea_3.Value)
                    SQL &= String.Format(" Acquired_3 = '{0}', ", txtAcquired_3.Text)
                    SQL &= String.Format(" PropertiesRemarks_3 = '{0}', ", txtPropertiesRemarks_3.Text)
                    SQL &= String.Format(" Vehicle_1 = '{0}', ", txtVehicle_1.Text)
                    SQL &= String.Format(" Year_1 = '{0}', ", FormatDatePicker(dtpYear_1))
                    SQL &= String.Format(" WhomAcquired_1 = '{0}', ", txtWhomAcquired_1.Text)
                    SQL &= String.Format(" WhenAcquired_1 = '{0}', ", txtWhenAcquired_1.Text)
                    SQL &= String.Format(" VehicleRemarks_1 = '{0}', ", txtVehicleRemarks_1.Text)
                    SQL &= String.Format(" Vehicle_2 = '{0}', ", txtVehicle_2.Text)
                    SQL &= String.Format(" Year_2 = '{0}', ", FormatDatePicker(dtpYear_2))
                    SQL &= String.Format(" WhomAcquired_2 = '{0}', ", txtWhomAcquired_2.Text)
                    SQL &= String.Format(" WhenAcquired_2 = '{0}', ", txtWhenAcquired_2.Text)
                    SQL &= String.Format(" VehicleRemarks_2 = '{0}', ", txtVehicleRemarks_2.Text)
                    SQL &= String.Format(" Vehicle_3 = '{0}', ", txtVehicle_3.Text)
                    SQL &= String.Format(" Year_3 = '{0}', ", FormatDatePicker(dtpYear_3))
                    SQL &= String.Format(" WhomAcquired_3 = '{0}', ", txtWhomAcquired_3.Text)
                    SQL &= String.Format(" WhenAcquired_3 = '{0}', ", txtWhenAcquired_3.Text)
                    SQL &= String.Format(" VehicleRemarks_3 = '{0}', ", txtVehicleRemarks_3.Text)
                    SQL &= String.Format(" HomeAppliances_1 = '{0}', ", txtHomeAppliances_1.Text)
                    SQL &= String.Format(" HomeAppliances_2 = '{0}', ", txtHomeAppliances_2.Text)
                    SQL &= String.Format(" Reference_1 = '{0}', ", txtReference_1.Text)
                    SQL &= String.Format(" ReferenceAddress_1 = '{0}', ", txtReferenceAddress_1.Text)
                    SQL &= String.Format(" ReferenceContact_1 = '{0}', ", txtReferenceContact_1.Text)
                    SQL &= String.Format(" Reference_2 = '{0}', ", txtReference_2.Text)
                    SQL &= String.Format(" ReferenceAddress_2 = '{0}', ", txtReferenceAddress_2.Text)
                    SQL &= String.Format(" ReferenceContact_2 = '{0}', ", txtReferenceContact_2.Text)
                    SQL &= String.Format(" Reference_3 = '{0}', ", txtReference_3.Text)
                    SQL &= String.Format(" ReferenceAddress_3 = '{0}', ", txtReferenceAddress_3.Text)
                    SQL &= String.Format(" ReferenceContact_3 = '{0}', ", txtReferenceContact_3.Text)
                    SQL &= String.Format(" CertificateNo = '{0}', ", txtCertificateNo.Text)
                    SQL &= String.Format(" `AgentID` = '{0}', ", AgentID)
                    SQL &= String.Format(" Agent = '{0}', ", Agent)
                    SQL &= String.Format(" AgentNo = '{0}', ", AgentNo)
                    SQL &= String.Format(" `AgentID_2` = '{0}', ", AgentID_2)
                    SQL &= String.Format(" Agent_2 = '{0}', ", Agent_2)
                    SQL &= String.Format(" AgentNo_2 = '{0}', ", AgentNo_2)
                    SQL &= String.Format(" `MarketingID` = '{0}', ", MarketingID)
                    SQL &= String.Format(" Marketing = '{0}', ", Marketing)
                    SQL &= String.Format(" MarketingNo = '{0}', ", MarketingNo)
                    SQL &= String.Format(" `WalkinID` = '{0}', ", WalkinID)
                    SQL &= String.Format(" WalkIn = '{0}', ", Walkin)
                    SQL &= String.Format(" WalkIn_Specify = '{0}', ", Walkin_Specify)
                    SQL &= String.Format(" `DealerID` = '{0}', ", DealerID)
                    SQL &= String.Format(" Dealer = '{0}', ", Dealer)
                    SQL &= String.Format(" DealerNo = '{0}', ", DealerNo)
                    If Trigger = "&Save" Then
                        SQL &= " `status` = 'ACTIVE', "
                    End If
                    SQL &= String.Format(" FDD = '{0}', ", If(dtpFDD.CustomFormat = "", "", Format(dtpFDD.Value, "yyyy-MM-dd")))
                    SQL &= String.Format(" Borrower_S = '{0}', ", If(cbxSpouse_B.Checked, 1, 0))
                    SQL &= String.Format(" Borrower_C1 = '{0}', ", If(cbxCoMaker1_B.Checked, 1, 0))
                    SQL &= String.Format(" Borrower_C2 = '{0}', ", If(cbxCoMaker2_B.Checked, 1, 0))
                    SQL &= String.Format(" Borrower_C3 = '{0}', ", If(cbxCoMaker3_B.Checked, 1, 0))
                    SQL &= String.Format(" Borrower_C4 = '{0}', ", If(cbxCoMaker4_B.Checked, 1, 0))
                    SQL &= String.Format(" PD_ATM = '{0}', ", If(PD_ATM, 1, 0))
                    SQL &= String.Format(" PD_CardNumber = '{0}', ", PD_CardNumber)
                    SQL &= String.Format(" PD_AccountNumber = '{0}', ", PD_AccountNumber)
                    SQL &= String.Format(" PD_BankID = '{0}', ", PD_BankID)
                    SQL &= String.Format(" BusinessID = '{0}', ", ValidateComboBox(cbxBusinessCenter))
                    SQL &= String.Format(" PlaceIssue = '{0}', ", txtPlaceIssue.Text)
                    SQL &= String.Format(" YearHired = '{0}', ", If(cbxYearHired.Checked, 1, 0))
                    SQL &= String.Format(" YearFranchise = '{0}', ", If(cbxYearFranchise.Checked, 1, 0))
                    SQL &= String.Format(" Issue = '{0}'", FormatDatePicker(dtpIssue))
                    SQL &= String.Format(" WHERE CreditNumber = '{0}';", txtCreditNumber.Text)
                    If txtPath_B.Text <> "" Then
                        SaveImage(pb_B, "Borrower")
                    End If

                    '*************AMORTIZATION SCHEDULE
                    SQL &= String.Format("UPDATE credit_schedule SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                    For x As Integer = 0 To GridView3.RowCount - 2
                        If GridView3.GetRowCellValue(x, "No") = "" Then
                            SQL &= " INSERT INTO credit_schedule SET"
                            SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                            SQL &= String.Format(" `No` = '{0}', ", GridView3.GetRowCellValue(x, "No"))
                            SQL &= String.Format(" DueDate = '{0}', ", "")
                            SQL &= String.Format(" Monthly = '{0}', ", 0)
                            SQL &= String.Format(" InterestIncome = '{0}', ", 0)
                            SQL &= String.Format(" RPPD = '{0}', ", 0)
                            SQL &= String.Format(" PrincipalAllocation = '{0}', ", 0)
                            SQL &= String.Format(" OutstandingPrincipal = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Outstanding Principal")))
                            SQL &= String.Format(" Total_RPPD = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Total_RPPD")))
                            SQL &= String.Format(" UnearnIncome = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Unearn Income")))
                            SQL &= String.Format(" LoansReceivable = '{0}';", CDbl(GridView3.GetRowCellValue(x, "Loans Receivable")))
                        Else
                            SQL &= " INSERT INTO credit_schedule SET"
                            SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                            SQL &= String.Format(" `No` = '{0}', ", GridView3.GetRowCellValue(x, "No"))
                            SQL &= String.Format(" DueDate = '{0}', ", Format(DateValue(GridView3.GetRowCellValue(x, "Due Date")), "yyyy-MM-dd"))
                            SQL &= String.Format(" Monthly = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Monthly")))
                            SQL &= String.Format(" InterestIncome = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Interest Income")))
                            SQL &= String.Format(" RPPD = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "RPPD")))
                            SQL &= String.Format(" PrincipalAllocation = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Principal Allocation")))
                            SQL &= String.Format(" OutstandingPrincipal = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Outstanding Principal")))
                            SQL &= String.Format(" Total_RPPD = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Total_RPPD")))
                            SQL &= String.Format(" UnearnIncome = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Unearn Income")))
                            SQL &= String.Format(" LoansReceivable = '{0}';", CDbl(GridView3.GetRowCellValue(x, "Loans Receivable")))
                        End If
                    Next
                    '*************AMORTIZATION SCHEDULE

                    SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'Borrower' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                    For x As Integer = 0 To cbxNatureBusiness_B2.Properties.Items.Count - 1
                        If cbxNatureBusiness_B2.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                            SQL &= "INSERT INTO credit_application_industry SET"
                            SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                            SQL &= String.Format(" Industry_ID = '{0}', ", cbxNatureBusiness_B2.Properties.Items.Item(x).Value)
                            SQL &= String.Format(" Industry = '{0}', ", cbxNatureBusiness_B2.Properties.Items.Item(x).Description)
                            SQL &= " `Type` = 'Borrower';"
                        End If
                    Next
                    SQL &= String.Format("UPDATE profile_borrower_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'Borrower' AND BorrowerID = '{0}';", BorrowerID)
                    For x As Integer = 0 To cbxNatureBusiness_B2.Properties.Items.Count - 1
                        If cbxNatureBusiness_B2.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                            SQL &= "INSERT INTO profile_borrower_industry SET"
                            SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                            SQL &= String.Format(" Industry_ID = '{0}', ", cbxNatureBusiness_B2.Properties.Items.Item(x).Value)
                            SQL &= String.Format(" Industry = '{0}', ", cbxNatureBusiness_B2.Properties.Items.Item(x).Description)
                            SQL &= " `Type` = 'Borrower';"
                        End If
                    Next

                    '*************DEDUCT BALANCE 3
                    SQL &= String.Format("UPDATE credit_deductbalance SET `status` = 'CANCELLED' WHERE CreditNumber_F = '{0}' AND `status` = 'ACTIVE' AND deduct_status = 'PENDING';", txtCreditNumber.Text)
                    For x As Integer = 0 To DT_Account.Rows.Count - 1
                        SQL &= "INSERT INTO credit_deductbalance SET "
                        SQL &= String.Format("CreditNumber_F = '{0}', ", txtCreditNumber.Text)
                        SQL &= String.Format("AccountNumber = '{0}', ", DT_Account(x)("Account Number"))
                        SQL &= String.Format("CreditNumber = '{0}', ", DT_Account(x)("Credit Number"))
                        SQL &= String.Format("LR = '{0}', ", CDbl(DT_Account(x)("Loans Receivable")))
                        SQL &= String.Format("UDI_Discount = '{0}', ", CDbl(DT_Account(x)("UDI Discount")))
                        SQL &= String.Format("UDI_DiscountP = '{0}', ", CDbl(DT_Account(x)("UDI Percent")))
                        SQL &= String.Format("AvailedRPPD = '{0}', ", CDbl(DT_Account(x)("Availed RPPD")))
                        SQL &= String.Format("AR = '{0}', ", CDbl(DT_Account(x)("Accounts Receivable")))
                        SQL &= String.Format("Penalty = '{0}', ", CDbl(DT_Account(x)("Penalty")))
                        SQL &= String.Format("AsOf = '{0}', ", Format(CDate(DT_Account(x)("As Of")), "yyyy-MM-dd"))
                        SQL &= String.Format("BranchID = '{0}', ", Branch_ID)
                        SQL &= String.Format("Amount = '{0}';", CDbl(DT_Account(x)("Amount")))
                    Next
                    '*************DEDUCT BALANCE

                    SQL &= String.Format("UPDATE credit_processing_fee SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                    For x As Integer = 0 To GridView4.RowCount - 1
                        SQL &= "INSERT INTO credit_processing_fee SET"
                        SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                        SQL &= String.Format(" processing_id = '{0}', ", GridView4.GetRowCellValue(x, "ID"))
                        SQL &= String.Format(" processing = '{0}', ", GridView4.GetRowCellValue(x, "Processing Fee"))
                        SQL &= String.Format(" Amount = '{0}';", CDbl(GridView4.GetRowCellValue(x, "Amount")))
                    Next

                    If cbxCorporate.Checked Then
                        GoTo CorporateShortcutUpdate
                    End If
                    SpouseID = DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 1,7,'0')) FROM profile_spouse WHERE branch_id = '{0}';", Branch_ID))
                    If TxtFirstN_S.Text <> "" And TxtFirstN_S.Tag = "" Then
                        Dim Gender_S As String = ""
                        If vMale_S Then
                            Gender_S = "Male"
                        ElseIf vFemale_S Then
                            Gender_S = "Female"
                        End If
                        Dim House_S As String = ""
                        If vOwned_S Then
                            House_S = "Owned"
                        ElseIf vFree_S Then
                            House_S = "Free"
                        ElseIf vRented_S Then
                            House_S = "Rented"
                        End If
                        Dim EmplStatus_S As String = ""
                        If vCasual_S Then
                            EmplStatus_S = "Casual"
                        ElseIf vTemporary_S Then
                            EmplStatus_S = "Temporary"
                        ElseIf vPermanent_S Then
                            EmplStatus_S = "Permanent"
                        End If

                        SQL &= "INSERT INTO profile_spouse SET"
                        SQL &= String.Format(" SpouseID = '{0}', ", SpouseID)
                        SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                        SQL &= String.Format(" Prefix_S = '{0}', ", CbxPrefix_S.Text)
                        SQL &= String.Format(" FirstN_S = '{0}', ", TxtFirstN_S.Text)
                        SQL &= String.Format(" MiddleN_S = '{0}', ", TxtMiddleN_S.Text)
                        SQL &= String.Format(" LastN_S = '{0}', ", TxtLastN_S.Text)
                        SQL &= String.Format(" Suffix_S = '{0}', ", cbxSuffix_S.Text)
                        SQL &= String.Format(" Prefix_M = '{0}', ", vPrefix_M)
                        SQL &= String.Format(" FirstN_M = '{0}', ", vFirstN_M)
                        SQL &= String.Format(" MiddleN_M = '{0}', ", vMiddleN_M)
                        SQL &= String.Format(" LastN_M = '{0}', ", vLastN_M)
                        SQL &= String.Format(" Suffix_M = '{0}', ", vSuffix_M)
                        SQL &= String.Format(" NoC_S = '{0}', ", vNoC_S)
                        SQL &= String.Format(" StreetC_S = '{0}', ", vStreetC_S)
                        SQL &= String.Format(" BarangayC_S = '{0}', ", vBarangayC_S)
                        SQL &= String.Format(" `AddressC_S-ID` = '{0}', ", vAddressC_S_ID)
                        SQL &= String.Format(" AddressC_S = '{0}', ", vAddressC_S)
                        SQL &= String.Format(" NoP_S = '{0}', ", vNoP_S)
                        SQL &= String.Format(" StreetP_S = '{0}', ", vStreetP_S)
                        SQL &= String.Format(" BarangayP_S = '{0}', ", vBarangayP_S)
                        SQL &= String.Format(" `AddressP_S-ID` = '{0}', ", vAddressP_S_ID)
                        SQL &= String.Format(" AddressP_S = '{0}', ", vAddressP_S)
                        SQL &= String.Format(" Birth_S = '{0}', ", If(vBirth_S = "", "", Format(CDate(vBirth_S), "yyyy-MM-dd")))
                        SQL &= String.Format(" `PlaceBirth_S-ID` = '{0}', ", vPlaceBirth_S_ID)
                        SQL &= String.Format(" PlaceBirth_S = '{0}', ", vPlaceBirth_S)
                        SQL &= String.Format(" Gender_S = '{0}', ", Gender_S)
                        SQL &= String.Format(" Citizenship_S = '{0}', ", vCitizenship_S)
                        SQL &= String.Format(" TIN_S = '{0}', ", vTIN_S)
                        SQL &= String.Format(" Telephone_S = '{0}', ", vTelephone_S)
                        SQL &= String.Format(" SSS_S = '{0}', ", vSSS_S)
                        SQL &= String.Format(" Mobile_S = '{0}', ", vMobile_S)
                        SQL &= String.Format(" Email_S = '{0}', ", vEmail_S)
                        SQL &= String.Format(" House_S = '{0}', ", House_S)
                        SQL &= String.Format(" Rent_S = '{0}', ", vRent_S)
                        SQL &= String.Format(" Employer_S = '{0}', ", vEmployer_S)
                        SQL &= String.Format(" EmployerAddress_S = '{0}', ", vEmpAddress_S)
                        SQL &= String.Format(" EmployerTelephone_S = '{0}', ", vEmpTelephone_S)
                        SQL &= String.Format(" Position_S = '{0}', ", vPosition_S)
                        SQL &= String.Format(" EmploymentStat_S = '{0}', ", EmplStatus_S)
                        SQL &= String.Format(" Hired_S = '{0}', ", If(vHired_S = "", "", Format(CDate(vHired_S), "yyyy-MM-dd")))
                        SQL &= String.Format(" YearHired_S = {0}, ", If(vYearHired_S, 1, 0))
                        SQL &= String.Format(" Supervisor_S = '{0}', ", vSupervisor_S)
                        SQL &= String.Format(" Monthly_S = '{0}', ", vSalary_S)
                        SQL &= String.Format(" BusinessName_S = '{0}', ", vBusinessName_S)
                        SQL &= String.Format(" BusinessAddress_S = '{0}', ", vBusinessAddress_S)
                        SQL &= String.Format(" BusinessTelephone_S = '{0}', ", vBusinessTelephone_S)
                        SQL &= String.Format(" NatureBusiness_S = '{0}', ", vNatureBusiness_S)
                        SQL &= String.Format(" YrsOperation_S = '{0}', ", vYrsOperation_S)
                        SQL &= String.Format(" BusinessIncome_S = '{0}', ", vBusinessIncome_S)
                        SQL &= String.Format(" NoEmployees_S = '{0}', ", vNoEmployees_S)
                        SQL &= String.Format(" Capital_S = '{0}', ", vCapital_S)
                        SQL &= String.Format(" Area_S = '{0}', ", vArea_S)
                        SQL &= String.Format(" Expiry_S = '{0}', ", If(vExpiry_S = "", "", Format(CDate(vExpiry_S), "yyyy-MM-dd")))
                        SQL &= String.Format(" Outlet_S = '{0}', ", vOutlet_S)
                        SQL &= String.Format(" OtherIncome_S = '{0}', ", vOtherIncome_S)
                        SQL &= String.Format(" `OtherIncome_S-Amount` = '{0}', ", vOtherIncomeD_S)
                        SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                        If ChangePicS Then
                            SaveImage(pb_Spouse, "Spouse")
                        End If

                        SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'Spouse' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                        For x As Integer = 0 To Industry_S.Properties.Items.Count - 1
                            If Industry_S.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                SQL &= "INSERT INTO credit_application_industry SET"
                                SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                                SQL &= String.Format(" Industry_ID = '{0}', ", Industry_S.Properties.Items.Item(x).Value)
                                SQL &= String.Format(" Industry = '{0}', ", Industry_S.Properties.Items.Item(x).Description)
                                SQL &= " `Type` = 'Spouse';"
                            End If
                        Next
                        SQL &= String.Format("UPDATE profile_borrower_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'Spouse' AND BorrowerID = '{0}';", BorrowerID)
                        For x As Integer = 0 To Industry_S.Properties.Items.Count - 1
                            If Industry_S.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                SQL &= "INSERT INTO profile_borrower_industry SET"
                                SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                                SQL &= String.Format(" Industry_ID = '{0}', ", Industry_S.Properties.Items.Item(x).Value)
                                SQL &= String.Format(" Industry = '{0}', ", Industry_S.Properties.Items.Item(x).Description)
                                SQL &= " `Type` = 'Spouse';"
                            End If
                        Next
                    End If

                    CoMakerID = DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 1,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))
                    If TxtFirstN_C1.Tag = "" And TxtFirstN_C1.Text <> "" Then
                        If TxtFirstN_C1.Text = "" Then
                        Else
                            Dim Gender_C1 As String = ""
                            If vMale_C1 Then
                                Gender_C1 = "Male"
                            ElseIf vFemale_C1 Then
                                Gender_C1 = "Female"
                            End If
                            Dim Civil_C1 As String = ""
                            If vSingle_C1 Then
                                Civil_C1 = "Single"
                            ElseIf vMarried_C1 Then
                                Civil_C1 = "Married"
                            ElseIf vSeparated_C1 Then
                                Civil_C1 = "Separated"
                            ElseIf vWidowed_C1 Then
                                Civil_C1 = "Widowed"
                            End If
                            Dim House_C1 As String = ""
                            If vOwned_C1 Then
                                House_C1 = "Owned"
                            ElseIf vFree_C1 Then
                                House_C1 = "Free"
                            ElseIf vRented_C1 Then
                                House_C1 = "Rented"
                            End If
                            Dim EmplStatus_C1 As String = ""
                            If vCasual_C1 Then
                                EmplStatus_C1 = "Casual"
                            ElseIf vTemporary_C1 Then
                                EmplStatus_C1 = "Temporary"
                            ElseIf vPermanent_C1 Then
                                EmplStatus_C1 = "Permanent"
                            End If

                            Dim RelationID As Integer = 0
                            If vRelationship_C1 = "" Then
                            Else
                                RelationID = vRelationship_C1_ID
                            End If

                            SQL &= "INSERT INTO credit_application_comaker SET"
                            SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                            SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                            SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                            SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_1 <> "", ReferenceID_1, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 1,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                            SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C1.Text)
                            SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C1.Text)
                            SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C1.Text)
                            SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C1.Text)
                            SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C1.Text)
                            SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C1)
                            SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C1)
                            SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C1)
                            SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C1_ID)
                            SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C1)
                            SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C1)
                            SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C1)
                            SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C1)
                            SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C1_ID)
                            SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C1)
                            SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C1 = "", "", Format(CDate(vBirth_C1), "yyyy-MM-dd")))
                            SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C1_ID)
                            SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C1)
                            SQL &= String.Format(" Gender_C = '{0}', ", Gender_C1)
                            SQL &= String.Format(" Civil_C = '{0}', ", Civil_C1)
                            SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C1)
                            SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C1)
                            SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C1)
                            SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C1)
                            SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C1)
                            SQL &= String.Format(" Email_C = '{0}', ", vEmail_C1)
                            SQL &= String.Format(" House_C = '{0}', ", House_C1)
                            SQL &= String.Format(" Rent_C = '{0}', ", vRent_C1)
                            SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                            SQL &= String.Format(" Relation = '{0}',", vRelationship_C1)
                            SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C1)
                            SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C1)
                            SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C1)
                            SQL &= String.Format(" Position_C = '{0}', ", vPosition_C1)
                            SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C1)
                            SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C1 = "", "", Format(CDate(vHired_C1), "yyyy-MM-dd")))
                            SQL &= String.Format(" YearHired_C = {0}, ", If(vYearHired_C1, 1, 0))
                            SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C1)
                            SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C1)
                            SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C1)
                            SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C1)
                            SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C1)
                            SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C1)
                            SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C1)
                            SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C1)
                            SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C1)
                            SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C1)
                            SQL &= String.Format(" Area_C = '{0}', ", vArea_C1)
                            SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C1 = "", "", Format(CDate(vExpiry_C1), "yyyy-MM-dd")))
                            SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C1)
                            SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C1)
                            SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C1)
                            SQL &= String.Format(" `Rank` = {0}, ", 1)
                            SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                            If ChangePic1 Then
                                SaveImage(CoMaker1, "CoMaker1")
                            End If

                            SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker1' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                            For x As Integer = 0 To Industry_C1.Properties.Items.Count - 1
                                If Industry_C1.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                    SQL &= "INSERT INTO credit_application_industry SET"
                                    SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                                    SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C1.Properties.Items.Item(x).Value)
                                    SQL &= String.Format(" Industry = '{0}', ", Industry_C1.Properties.Items.Item(x).Description)
                                    SQL &= " `Type` = 'CoMaker1';"
                                End If
                            Next

                            'IDENTIFICATION DUMMY
                            SQL &= "INSERT INTO profile_borrowerid SET"
                            SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                            SQL &= " TIN = '', "
                            SQL &= " SSS = '', "
                            SQL &= " GSIS = '', "
                            SQL &= " PhilHealth = '', "
                            SQL &= " Senior = '', "
                            SQL &= " UMID = '', "
                            SQL &= " SEC = '', "
                            SQL &= " DTI = '', "
                            SQL &= " CDA = '', "
                            SQL &= " Cooperative = '', "
                            SQL &= " Drivers = '', "
                            SQL &= " dDrivers = '', "
                            SQL &= " VIN = '', "
                            SQL &= " dVIN = '', "
                            SQL &= " Passport = '', "
                            SQL &= " dPassport = '', "
                            SQL &= " PRC = '', "
                            SQL &= " dPRC = '', "
                            SQL &= " NBI = '', "
                            SQL &= " dNBI = '', "
                            SQL &= " Police = '', "
                            SQL &= " dPolice = '', "
                            SQL &= " Postal = '', "
                            SQL &= " dPostal = '', "
                            SQL &= " Barangay = '', "
                            SQL &= " dBarangay = '', "
                            SQL &= " OWWA = '', "
                            SQL &= " dOWWA = '', "
                            SQL &= " OFW = '', "
                            SQL &= " dOFW = '', "
                            SQL &= " Seaman = '', "
                            SQL &= " dSeaman = '', "
                            SQL &= " PNP = '', "
                            SQL &= " dPNP = '', "
                            SQL &= " AFP = '', "
                            SQL &= " dAFP = '', "
                            SQL &= " HDMF = '', "
                            SQL &= " dHDMF = '', "
                            SQL &= " PWD = '', "
                            SQL &= " dPWD = '', "
                            SQL &= " DSWD = '', "
                            SQL &= " dDSWD = '', "
                            SQL &= " ACR = '', "
                            SQL &= " dACR = '', "
                            SQL &= " DTI_Business = '', "
                            SQL &= " dDTI_Business = '', "
                            SQL &= " IBP = '', "
                            SQL &= " dIBP = '', "
                            SQL &= " FireArms = '', "
                            SQL &= " dFireArms = '', "
                            SQL &= " Government = '', "
                            SQL &= " dGovernment = '', "
                            SQL &= " Diplomat = '', "
                            SQL &= " dDiplomat = '', "
                            SQL &= " `National` = '', "
                            SQL &= " dNational = '', "
                            SQL &= " `Work` = '', "
                            SQL &= " dWork = '', "
                            SQL &= " GOCC = '', "
                            SQL &= " dGOCC = '', "
                            SQL &= " PLRA = '', "
                            SQL &= " dPLRA = '', "
                            SQL &= " Major = '', "
                            SQL &= " dMajor = '', "
                            SQL &= " Media = '', "
                            SQL &= " dMedia = '', "
                            SQL &= " Student = '', "
                            SQL &= " dStudent = '', "
                            SQL &= " SIRV = '', "
                            SQL &= " dSIRV = '',"
                            SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                            SQL &= " ID_Type = 'C1';"
                        End If
                    End If

                    If TxtFirstN_C2.Tag = "" And TxtFirstN_C2.Text <> "" Then
                        If TxtFirstN_C2.Text = "" Then
                        Else
                            Dim Gender_C2 As String = ""
                            If vMale_C2 Then
                                Gender_C2 = "Male"
                            ElseIf vFemale_C2 Then
                                Gender_C2 = "Female"
                            End If
                            Dim Civil_C2 As String = ""
                            If vSingle_C2 Then
                                Civil_C2 = "Single"
                            ElseIf vMarried_C2 Then
                                Civil_C2 = "Married"
                            ElseIf vSeparated_C2 Then
                                Civil_C2 = "Separated"
                            ElseIf vWidowed_C2 Then
                                Civil_C2 = "Widowed"
                            End If
                            Dim House_C2 As String = ""
                            If vOwned_C2 Then
                                House_C2 = "Owned"
                            ElseIf vFree_C2 Then
                                House_C2 = "Free"
                            ElseIf vRented_C2 Then
                                House_C2 = "Rented"
                            End If
                            Dim EmplStatus_C2 As String = ""
                            If vCasual_C2 Then
                                EmplStatus_C2 = "Casual"
                            ElseIf vTemporary_C2 Then
                                EmplStatus_C2 = "Temporary"
                            ElseIf vPermanent_C2 Then
                                EmplStatus_C2 = "Permanent"
                            End If

                            Dim RelationID As Integer = 0
                            If vRelationship_C2 = "" Then
                            Else
                                RelationID = vRelationship_C2_ID
                            End If

                            SQL &= "INSERT INTO credit_application_comaker SET"
                            SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                            SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                            SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                            SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_2 <> "", ReferenceID_2, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 2,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                            SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C2.Text)
                            SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C2.Text)
                            SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C2.Text)
                            SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C2.Text)
                            SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C2.Text)
                            SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C2)
                            SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C2)
                            SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C2)
                            SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C2_ID)
                            SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C2)
                            SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C2)
                            SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C2)
                            SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C2)
                            SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C2_ID)
                            SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C2)
                            SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C2 = "", "", Format(CDate(vBirth_C2), "yyyy-MM-dd")))
                            SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C2_ID)
                            SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C2)
                            SQL &= String.Format(" Gender_C = '{0}', ", Gender_C2)
                            SQL &= String.Format(" Civil_C = '{0}', ", Civil_C2)
                            SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C2)
                            SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C2)
                            SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C2)
                            SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C2)
                            SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C2)
                            SQL &= String.Format(" Email_C = '{0}', ", vEmail_C2)
                            SQL &= String.Format(" House_C = '{0}', ", House_C2)
                            SQL &= String.Format(" Rent_C = '{0}', ", vRent_C2)
                            SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                            SQL &= String.Format(" Relation = '{0}',", vRelationship_C2)
                            SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C2)
                            SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C2)
                            SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C2)
                            SQL &= String.Format(" Position_C = '{0}', ", vPosition_C2)
                            SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C2)
                            SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C2 = "", "", Format(CDate(vHired_C2), "yyyy-MM-dd")))
                            SQL &= String.Format(" YearHired_C = {0}, ", If(vYearHired_C2, 1, 0))
                            SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C2)
                            SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C2)
                            SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C2)
                            SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C2)
                            SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C2)
                            SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C2)
                            SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C2)
                            SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C2)
                            SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C2)
                            SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C2)
                            SQL &= String.Format(" Area_C = '{0}', ", vArea_C2)
                            SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C2 = "", "", Format(CDate(vExpiry_C2), "yyyy-MM-dd")))
                            SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C2)
                            SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C2)
                            SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C2)
                            SQL &= String.Format(" `Rank` = {0}, ", 2)
                            SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                            If ChangePic2 Then
                                SaveImage(CoMaker2, "CoMaker2")
                            End If

                            SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker2' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                            For x As Integer = 0 To Industry_C2.Properties.Items.Count - 1
                                If Industry_C2.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                    SQL &= "INSERT INTO credit_application_industry SET"
                                    SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                                    SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C2.Properties.Items.Item(x).Value)
                                    SQL &= String.Format(" Industry = '{0}', ", Industry_C2.Properties.Items.Item(x).Description)
                                    SQL &= " `Type` = 'CoMaker2';"
                                End If
                            Next

                            'IDENTIFICATION DUMMY
                            SQL &= "INSERT INTO profile_borrowerid SET"
                            SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                            SQL &= " TIN = '', "
                            SQL &= " SSS = '', "
                            SQL &= " GSIS = '', "
                            SQL &= " PhilHealth = '', "
                            SQL &= " Senior = '', "
                            SQL &= " UMID = '', "
                            SQL &= " SEC = '', "
                            SQL &= " DTI = '', "
                            SQL &= " CDA = '', "
                            SQL &= " Cooperative = '', "
                            SQL &= " Drivers = '', "
                            SQL &= " dDrivers = '', "
                            SQL &= " VIN = '', "
                            SQL &= " dVIN = '', "
                            SQL &= " Passport = '', "
                            SQL &= " dPassport = '', "
                            SQL &= " PRC = '', "
                            SQL &= " dPRC = '', "
                            SQL &= " NBI = '', "
                            SQL &= " dNBI = '', "
                            SQL &= " Police = '', "
                            SQL &= " dPolice = '', "
                            SQL &= " Postal = '', "
                            SQL &= " dPostal = '', "
                            SQL &= " Barangay = '', "
                            SQL &= " dBarangay = '', "
                            SQL &= " OWWA = '', "
                            SQL &= " dOWWA = '', "
                            SQL &= " OFW = '', "
                            SQL &= " dOFW = '', "
                            SQL &= " Seaman = '', "
                            SQL &= " dSeaman = '', "
                            SQL &= " PNP = '', "
                            SQL &= " dPNP = '', "
                            SQL &= " AFP = '', "
                            SQL &= " dAFP = '', "
                            SQL &= " HDMF = '', "
                            SQL &= " dHDMF = '', "
                            SQL &= " PWD = '', "
                            SQL &= " dPWD = '', "
                            SQL &= " DSWD = '', "
                            SQL &= " dDSWD = '', "
                            SQL &= " ACR = '', "
                            SQL &= " dACR = '', "
                            SQL &= " DTI_Business = '', "
                            SQL &= " dDTI_Business = '', "
                            SQL &= " IBP = '', "
                            SQL &= " dIBP = '', "
                            SQL &= " FireArms = '', "
                            SQL &= " dFireArms = '', "
                            SQL &= " Government = '', "
                            SQL &= " dGovernment = '', "
                            SQL &= " Diplomat = '', "
                            SQL &= " dDiplomat = '', "
                            SQL &= " `National` = '', "
                            SQL &= " dNational = '', "
                            SQL &= " `Work` = '', "
                            SQL &= " dWork = '', "
                            SQL &= " GOCC = '', "
                            SQL &= " dGOCC = '', "
                            SQL &= " PLRA = '', "
                            SQL &= " dPLRA = '', "
                            SQL &= " Major = '', "
                            SQL &= " dMajor = '', "
                            SQL &= " Media = '', "
                            SQL &= " dMedia = '', "
                            SQL &= " Student = '', "
                            SQL &= " dStudent = '', "
                            SQL &= " SIRV = '', "
                            SQL &= " dSIRV = '',"
                            SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                            SQL &= " ID_Type = 'C2';"
                        End If
                    End If

                    If TxtFirstN_C3.Tag = "" And TxtFirstN_C3.Text <> "" Then
                        If TxtFirstN_C3.Text = "" Then
                        Else
                            Dim Gender_C3 As String = ""
                            If vMale_C3 Then
                                Gender_C3 = "Male"
                            ElseIf vFemale_C3 Then
                                Gender_C3 = "Female"
                            End If
                            Dim Civil_C3 As String = ""
                            If vSingle_C3 Then
                                Civil_C3 = "Single"
                            ElseIf vMarried_C3 Then
                                Civil_C3 = "Married"
                            ElseIf vSeparated_C3 Then
                                Civil_C3 = "Separated"
                            ElseIf vWidowed_C3 Then
                                Civil_C3 = "Widowed"
                            End If
                            Dim House_C3 As String = ""
                            If vOwned_C3 Then
                                House_C3 = "Owned"
                            ElseIf vFree_C3 Then
                                House_C3 = "Free"
                            ElseIf vRented_C3 Then
                                House_C3 = "Rented"
                            End If
                            Dim EmplStatus_C3 As String = ""
                            If vCasual_C3 Then
                                EmplStatus_C3 = "Casual"
                            ElseIf vTemporary_C3 Then
                                EmplStatus_C3 = "Temporary"
                            ElseIf vPermanent_C3 Then
                                EmplStatus_C3 = "Permanent"
                            End If

                            Dim RelationID As Integer = 0
                            If vRelationship_C3 = "" Then
                            Else
                                RelationID = vRelationship_C3_ID
                            End If

                            SQL &= "INSERT INTO credit_application_comaker SET"
                            SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                            SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                            SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                            SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_3 <> "", ReferenceID_3, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 3,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                            SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C3.Text)
                            SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C3.Text)
                            SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C3.Text)
                            SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C3.Text)
                            SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C3.Text)
                            SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C3)
                            SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C3)
                            SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C3)
                            SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C3_ID)
                            SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C3)
                            SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C3)
                            SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C3)
                            SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C3)
                            SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C3_ID)
                            SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C3)
                            SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C3 = "", "", Format(CDate(vBirth_C3), "yyyy-MM-dd")))
                            SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C3_ID)
                            SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C3)
                            SQL &= String.Format(" Gender_C = '{0}', ", Gender_C3)
                            SQL &= String.Format(" Civil_C = '{0}', ", Civil_C3)
                            SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C3)
                            SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C3)
                            SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C3)
                            SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C3)
                            SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C3)
                            SQL &= String.Format(" Email_C = '{0}', ", vEmail_C3)
                            SQL &= String.Format(" House_C = '{0}', ", House_C3)
                            SQL &= String.Format(" Rent_C = '{0}', ", vRent_C3)
                            SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                            SQL &= String.Format(" Relation = '{0}',", vRelationship_C3)
                            SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C3)
                            SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C3)
                            SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C3)
                            SQL &= String.Format(" Position_C = '{0}', ", vPosition_C3)
                            SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C3)
                            SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C3 = "", "", Format(CDate(vHired_C3), "yyyy-MM-dd")))
                            SQL &= String.Format(" YearHired_C = {0}, ", If(vYearHired_C3, 1, 0))
                            SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C3)
                            SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C3)
                            SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C3)
                            SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C3)
                            SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C3)
                            SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C3)
                            SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C3)
                            SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C3)
                            SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C3)
                            SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C3)
                            SQL &= String.Format(" Area_C = '{0}', ", vArea_C3)
                            SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C3 = "", "", Format(CDate(vExpiry_C3), "yyyy-MM-dd")))
                            SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C3)
                            SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C3)
                            SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C3)
                            SQL &= String.Format(" `Rank` = {0}, ", 3)
                            SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                            If ChangePic3 Then
                                SaveImage(CoMaker3, "CoMaker3")
                            End If

                            SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker3' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                            For x As Integer = 0 To Industry_C3.Properties.Items.Count - 1
                                If Industry_C3.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                    SQL &= "INSERT INTO credit_application_industry SET"
                                    SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                                    SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C3.Properties.Items.Item(x).Value)
                                    SQL &= String.Format(" Industry = '{0}', ", Industry_C3.Properties.Items.Item(x).Description)
                                    SQL &= " `Type` = 'CoMaker3';"
                                End If
                            Next

                            'IDENTIFICATION DUMMY
                            SQL &= "INSERT INTO profile_borrowerid SET"
                            SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                            SQL &= " TIN = '', "
                            SQL &= " SSS = '', "
                            SQL &= " GSIS = '', "
                            SQL &= " PhilHealth = '', "
                            SQL &= " Senior = '', "
                            SQL &= " UMID = '', "
                            SQL &= " SEC = '', "
                            SQL &= " DTI = '', "
                            SQL &= " CDA = '', "
                            SQL &= " Cooperative = '', "
                            SQL &= " Drivers = '', "
                            SQL &= " dDrivers = '', "
                            SQL &= " VIN = '', "
                            SQL &= " dVIN = '', "
                            SQL &= " Passport = '', "
                            SQL &= " dPassport = '', "
                            SQL &= " PRC = '', "
                            SQL &= " dPRC = '', "
                            SQL &= " NBI = '', "
                            SQL &= " dNBI = '', "
                            SQL &= " Police = '', "
                            SQL &= " dPolice = '', "
                            SQL &= " Postal = '', "
                            SQL &= " dPostal = '', "
                            SQL &= " Barangay = '', "
                            SQL &= " dBarangay = '', "
                            SQL &= " OWWA = '', "
                            SQL &= " dOWWA = '', "
                            SQL &= " OFW = '', "
                            SQL &= " dOFW = '', "
                            SQL &= " Seaman = '', "
                            SQL &= " dSeaman = '', "
                            SQL &= " PNP = '', "
                            SQL &= " dPNP = '', "
                            SQL &= " AFP = '', "
                            SQL &= " dAFP = '', "
                            SQL &= " HDMF = '', "
                            SQL &= " dHDMF = '', "
                            SQL &= " PWD = '', "
                            SQL &= " dPWD = '', "
                            SQL &= " DSWD = '', "
                            SQL &= " dDSWD = '', "
                            SQL &= " ACR = '', "
                            SQL &= " dACR = '', "
                            SQL &= " DTI_Business = '', "
                            SQL &= " dDTI_Business = '', "
                            SQL &= " IBP = '', "
                            SQL &= " dIBP = '', "
                            SQL &= " FireArms = '', "
                            SQL &= " dFireArms = '', "
                            SQL &= " Government = '', "
                            SQL &= " dGovernment = '', "
                            SQL &= " Diplomat = '', "
                            SQL &= " dDiplomat = '', "
                            SQL &= " `National` = '', "
                            SQL &= " dNational = '', "
                            SQL &= " `Work` = '', "
                            SQL &= " dWork = '', "
                            SQL &= " GOCC = '', "
                            SQL &= " dGOCC = '', "
                            SQL &= " PLRA = '', "
                            SQL &= " dPLRA = '', "
                            SQL &= " Major = '', "
                            SQL &= " dMajor = '', "
                            SQL &= " Media = '', "
                            SQL &= " dMedia = '', "
                            SQL &= " Student = '', "
                            SQL &= " dStudent = '', "
                            SQL &= " SIRV = '', "
                            SQL &= " dSIRV = '',"
                            SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                            SQL &= " ID_Type = 'C3';"
                        End If
                    End If

                    If TxtFirstN_C4.Tag = "" And TxtFirstN_C4.Text <> "" Then
                        If TxtFirstN_C4.Text = "" Then
                        Else
                            Dim Gender_C4 As String = ""
                            If vMale_C4 Then
                                Gender_C4 = "Male"
                            ElseIf vFemale_C4 Then
                                Gender_C4 = "Female"
                            End If
                            Dim Civil_C4 As String = ""
                            If vSingle_C4 Then
                                Civil_C4 = "Single"
                            ElseIf vMarried_C4 Then
                                Civil_C4 = "Married"
                            ElseIf vSeparated_C4 Then
                                Civil_C4 = "Separated"
                            ElseIf vWidowed_C4 Then
                                Civil_C4 = "Widowed"
                            End If
                            Dim House_C4 As String = ""
                            If vOwned_C4 Then
                                House_C4 = "Owned"
                            ElseIf vFree_C4 Then
                                House_C4 = "Free"
                            ElseIf vRented_C4 Then
                                House_C4 = "Rented"
                            End If
                            Dim EmplStatus_C4 As String = ""
                            If vCasual_C4 Then
                                EmplStatus_C4 = "Casual"
                            ElseIf vTemporary_C4 Then
                                EmplStatus_C4 = "Temporary"
                            ElseIf vPermanent_C4 Then
                                EmplStatus_C4 = "Permanent"
                            End If

                            Dim RelationID As Integer = 0
                            If vRelationship_C4 = "" Then
                            Else
                                RelationID = vRelationship_C4_ID
                            End If

                            SQL &= "INSERT INTO credit_application_comaker SET"
                            SQL &= String.Format(" CoMakerID = '{0}', ", CoMakerID)
                            SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                            SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                            SQL &= String.Format(" ReferenceID = '{0}', ", If(ReferenceID_4 <> "", ReferenceID_4, DataObject(String.Format("SELECT CONCAT(LPAD({0},3,'0'), '-', LPAD(COUNT(ID) + 4,7,'0')) FROM credit_application_comaker WHERE branch_id = '{0}';", Branch_ID))))
                            SQL &= String.Format(" Prefix_C = '{0}', ", CbxPrefix_C4.Text)
                            SQL &= String.Format(" FirstN_C = '{0}', ", TxtFirstN_C4.Text)
                            SQL &= String.Format(" MiddleN_C = '{0}', ", TxtMiddleN_C4.Text)
                            SQL &= String.Format(" LastN_C = '{0}', ", TxtLastN_C4.Text)
                            SQL &= String.Format(" Suffix_C = '{0}', ", cbxSuffix_C4.Text)
                            SQL &= String.Format(" NoC_C = '{0}', ", vNoC_C4)
                            SQL &= String.Format(" StreetC_C = '{0}', ", vStreetC_C4)
                            SQL &= String.Format(" BarangayC_C = '{0}', ", vBarangayC_C4)
                            SQL &= String.Format(" `AddressC_C-ID` = '{0}', ", vAddressC_C4_ID)
                            SQL &= String.Format(" AddressC_C = '{0}', ", vAddressC_C4)
                            SQL &= String.Format(" NoP_C = '{0}', ", vNoP_C4)
                            SQL &= String.Format(" StreetP_C = '{0}', ", vStreetP_C4)
                            SQL &= String.Format(" BarangayP_C = '{0}', ", vBarangayP_C4)
                            SQL &= String.Format(" `AddressP_C-ID` = '{0}', ", vAddressP_C4_ID)
                            SQL &= String.Format(" AddressP_C = '{0}', ", vAddressP_C4)
                            SQL &= String.Format(" Birth_C = '{0}', ", If(vBirth_C4 = "", "", Format(CDate(vBirth_C4), "yyyy-MM-dd")))
                            SQL &= String.Format(" `PlaceBirth_C-ID` = '{0}', ", vPlaceBirth_C4_ID)
                            SQL &= String.Format(" PlaceBirth_C = '{0}', ", vPlaceBirth_C4)
                            SQL &= String.Format(" Gender_C = '{0}', ", Gender_C4)
                            SQL &= String.Format(" Civil_C = '{0}', ", Civil_C4)
                            SQL &= String.Format(" Citizenship_C = '{0}', ", vCitizenship_C4)
                            SQL &= String.Format(" TIN_C = '{0}', ", vTIN_C4)
                            SQL &= String.Format(" Telephone_C = '{0}', ", vTelephone_C4)
                            SQL &= String.Format(" SSS_C = '{0}', ", vSSS_C4)
                            SQL &= String.Format(" Mobile_C = '{0}', ", vMobile_C4)
                            SQL &= String.Format(" Email_C = '{0}', ", vEmail_C4)
                            SQL &= String.Format(" House_C = '{0}', ", House_C4)
                            SQL &= String.Format(" Rent_C = '{0}', ", vRent_C4)
                            SQL &= String.Format(" Relation_ID = '{0}',", RelationID)
                            SQL &= String.Format(" Relation = '{0}',", vRelationship_C4)
                            SQL &= String.Format(" Employer_C = '{0}', ", vEmployer_C4)
                            SQL &= String.Format(" EmployerAddress_C = '{0}', ", vEmpAddress_C4)
                            SQL &= String.Format(" EmployerTelephone_C = '{0}', ", vEmpTelephone_C4)
                            SQL &= String.Format(" Position_C = '{0}', ", vPosition_C4)
                            SQL &= String.Format(" EmploymentStat_C = '{0}', ", EmplStatus_C4)
                            SQL &= String.Format(" Hired_C = '{0}', ", If(vHired_C4 = "", "", Format(CDate(vHired_C4), "yyyy-MM-dd")))
                            SQL &= String.Format(" YearHired_C = {0}, ", If(vYearHired_C4, 1, 0))
                            SQL &= String.Format(" Supervisor_C = '{0}', ", vSupervisor_C4)
                            SQL &= String.Format(" Monthly_C = '{0}', ", vSalary_C4)
                            SQL &= String.Format(" BusinessName_C = '{0}', ", vBusinessName_C4)
                            SQL &= String.Format(" BusinessAddress_C = '{0}', ", vBusinessAddress_C4)
                            SQL &= String.Format(" BusinessTelephone_C = '{0}', ", vBusinessTelephone_C4)
                            SQL &= String.Format(" NatureBusiness_C = '{0}', ", vNatureBusiness_C4)
                            SQL &= String.Format(" YrsOperation_C = '{0}', ", vYrsOperation_C4)
                            SQL &= String.Format(" BusinessIncome_C = '{0}', ", vBusinessIncome_C4)
                            SQL &= String.Format(" NoEmployees_C = '{0}', ", vNoEmployees_C4)
                            SQL &= String.Format(" Capital_C = '{0}', ", vCapital_C4)
                            SQL &= String.Format(" Area_C = '{0}', ", vArea_C4)
                            SQL &= String.Format(" Expiry_C = '{0}', ", If(vExpiry_C4 = "", "", Format(CDate(vExpiry_C4), "yyyy-MM-dd")))
                            SQL &= String.Format(" Outlet_C = '{0}', ", vOutlet_C4)
                            SQL &= String.Format(" OtherIncome_C = '{0}', ", vOtherIncome_C4)
                            SQL &= String.Format(" `OtherIncome_C-Amount` = '{0}', ", vOtherIncomeD_C4)
                            SQL &= String.Format(" `Rank` = {0}, ", 4)
                            SQL &= String.Format(" branch_id = '{0}';", Branch_ID)
                            If ChangePic4 Then
                                SaveImage(CoMaker4, "CoMaker4")
                            End If

                            SQL &= String.Format("UPDATE credit_application_industry SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND `Type` = 'CoMaker4' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                            For x As Integer = 0 To Industry_C4.Properties.Items.Count - 1
                                If Industry_C4.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                                    SQL &= "INSERT INTO credit_application_industry SET"
                                    SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                                    SQL &= String.Format(" Industry_ID = '{0}', ", Industry_C4.Properties.Items.Item(x).Value)
                                    SQL &= String.Format(" Industry = '{0}', ", Industry_C4.Properties.Items.Item(x).Description)
                                    SQL &= " `Type` = 'CoMaker4';"
                                End If
                            Next

                            'IDENTIFICATION DUMMY
                            SQL &= "INSERT INTO profile_borrowerid SET"
                            SQL &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                            SQL &= " TIN = '', "
                            SQL &= " SSS = '', "
                            SQL &= " GSIS = '', "
                            SQL &= " PhilHealth = '', "
                            SQL &= " Senior = '', "
                            SQL &= " UMID = '', "
                            SQL &= " SEC = '', "
                            SQL &= " DTI = '', "
                            SQL &= " CDA = '', "
                            SQL &= " Cooperative = '', "
                            SQL &= " Drivers = '', "
                            SQL &= " dDrivers = '', "
                            SQL &= " VIN = '', "
                            SQL &= " dVIN = '', "
                            SQL &= " Passport = '', "
                            SQL &= " dPassport = '', "
                            SQL &= " PRC = '', "
                            SQL &= " dPRC = '', "
                            SQL &= " NBI = '', "
                            SQL &= " dNBI = '', "
                            SQL &= " Police = '', "
                            SQL &= " dPolice = '', "
                            SQL &= " Postal = '', "
                            SQL &= " dPostal = '', "
                            SQL &= " Barangay = '', "
                            SQL &= " dBarangay = '', "
                            SQL &= " OWWA = '', "
                            SQL &= " dOWWA = '', "
                            SQL &= " OFW = '', "
                            SQL &= " dOFW = '', "
                            SQL &= " Seaman = '', "
                            SQL &= " dSeaman = '', "
                            SQL &= " PNP = '', "
                            SQL &= " dPNP = '', "
                            SQL &= " AFP = '', "
                            SQL &= " dAFP = '', "
                            SQL &= " HDMF = '', "
                            SQL &= " dHDMF = '', "
                            SQL &= " PWD = '', "
                            SQL &= " dPWD = '', "
                            SQL &= " DSWD = '', "
                            SQL &= " dDSWD = '', "
                            SQL &= " ACR = '', "
                            SQL &= " dACR = '', "
                            SQL &= " DTI_Business = '', "
                            SQL &= " dDTI_Business = '', "
                            SQL &= " IBP = '', "
                            SQL &= " dIBP = '', "
                            SQL &= " FireArms = '', "
                            SQL &= " dFireArms = '', "
                            SQL &= " Government = '', "
                            SQL &= " dGovernment = '', "
                            SQL &= " Diplomat = '', "
                            SQL &= " dDiplomat = '', "
                            SQL &= " `National` = '', "
                            SQL &= " dNational = '', "
                            SQL &= " `Work` = '', "
                            SQL &= " dWork = '', "
                            SQL &= " GOCC = '', "
                            SQL &= " dGOCC = '', "
                            SQL &= " PLRA = '', "
                            SQL &= " dPLRA = '', "
                            SQL &= " Major = '', "
                            SQL &= " dMajor = '', "
                            SQL &= " Media = '', "
                            SQL &= " dMedia = '', "
                            SQL &= " Student = '', "
                            SQL &= " dStudent = '', "
                            SQL &= " SIRV = '', "
                            SQL &= " dSIRV = '',"
                            SQL &= String.Format(" branch_id = '{0}',", Branch_ID)
                            SQL &= " ID_Type = 'C4';"
                        End If
                    End If
CorporateShortcutUpdate:
                    DataObject(SQL)
                    '******************* U P D A T E   B O R R O W E R   I N F O *******************************
                    If Branch_Code = Borrower_Branch And cbxCorporate.Checked = False Then
                        Dim SQL_II As String = " UPDATE profile_borrower SET"
                        SQL_II &= String.Format(" Prefix_B = '{0}', ", CbxPrefix_B.Text)
                        SQL_II &= String.Format(" FirstN_B = '{0}', ", TxtFirstN_B.Text)
                        SQL_II &= String.Format(" MiddleN_B = '{0}', ", TxtMiddleN_B.Text)
                        SQL_II &= String.Format(" LastN_B = '{0}', ", TxtLastN_B.Text)
                        SQL_II &= String.Format(" Suffix_B = '{0}', ", cbxSuffix_B.Text)
                        SQL_II &= String.Format(" NoC_B = '{0}', ", txtNoC_B.Text)
                        SQL_II &= String.Format(" StreetC_B = '{0}', ", txtStreetC_B.Text)
                        SQL_II &= String.Format(" BarangayC_B = '{0}', ", txtBarangayC_B.Text)
                        SQL_II &= String.Format(" `AddressC_B-ID` = '{0}', ", ValidateComboBox(cbxAddressC_B))
                        SQL_II &= String.Format(" AddressC_B = '{0}', ", cbxAddressC_B.Text)
                        SQL_II &= String.Format(" NoP_B = '{0}', ", txtNoP_B.Text)
                        SQL_II &= String.Format(" StreetP_B = '{0}', ", txtStreetP_B.Text)
                        SQL_II &= String.Format(" BarangayP_B = '{0}', ", txtBarangayP_B.Text)
                        SQL_II &= String.Format(" `AddressP_B-ID` = '{0}', ", ValidateComboBox(cbxAddressP_B))
                        SQL_II &= String.Format(" AddressP_B = '{0}', ", cbxAddressP_B.Text)
                        SQL_II &= String.Format(" Birth_B = '{0}', ", FormatDatePicker(DtpBirth_B))
                        SQL_II &= String.Format(" `PlaceBirth_B-ID` = '{0}', ", ValidateComboBox(cbxPlaceBirth_B))
                        SQL_II &= String.Format(" PlaceBirth_B = '{0}', ", cbxPlaceBirth_B.Text)
                        SQL_II &= String.Format(" Gender_B = '{0}', ", Gender_B)
                        SQL_II &= String.Format(" Civil_B = '{0}', ", Civil_B)
                        SQL_II &= String.Format(" Citizenship_B = '{0}', ", cbxCitizenship_B.Text)
                        SQL_II &= String.Format(" TIN_B = '{0}', ", txtTIN_B.Text)
                        SQL_II &= String.Format(" Telephone_B = '{0}', ", txtTelephone_B.Text)
                        SQL_II &= String.Format(" SSS_B = '{0}', ", txtSSS_B.Text)
                        SQL_II &= String.Format(" Mobile_B = '{0}', ", txtMobile_B.Text)
                        SQL_II &= String.Format(" Mobile_B2 = '{0}', ", txtMobile_B2.Text)
                        SQL_II &= String.Format(" Email_B = '{0}', ", txtEmail_B.Text)
                        SQL_II &= String.Format(" House_B = '{0}', ", House_B)
                        SQL_II &= String.Format(" Rent_B = '{0}', ", dRent_B.Value)
                        SQL_II &= String.Format(" Employer_B = '{0}', ", cbxEmployer_B.Text)
                        SQL_II &= String.Format(" EmployerAddress_B = '{0}', ", txtEmployerAddress_B.Text)
                        SQL_II &= String.Format(" EmployerTelephone_B = '{0}', ", txtEmployerTelephone_B.Text)
                        SQL_II &= String.Format(" Position_B = '{0}', ", cbxPosition_B.Text)
                        SQL_II &= String.Format(" EmploymentStat_B = '{0}', ", EmplStatus_B)
                        SQL_II &= String.Format(" Hired_B = '{0}', ", FormatDatePicker(dtpHired_B))
                        SQL_II &= String.Format(" Supervisor_B = '{0}', ", txtSupervisor_B.Text)
                        SQL_II &= String.Format(" Monthly_B = '{0}', ", dMonthly_B.Value)
                        SQL_II &= String.Format(" BusinessName_B = '{0}', ", txtBusinessName_B.Text)
                        SQL_II &= String.Format(" BusinessAddress_B = '{0}', ", txtBusinessAddress_B.Text)
                        SQL_II &= String.Format(" BusinessTelephone_B = '{0}', ", txtBusinessTelephone_B.Text)
                        SQL_II &= String.Format(" NatureBusiness_B = '{0}', ", cbxNatureBusiness_B.Text)
                        SQL_II &= String.Format(" YrsOperation_B = '{0}', ", iYrsOperation_B.Value)
                        SQL_II &= String.Format(" BusinessIncome_B = '{0}', ", dBusinessIncome_B.Value)
                        SQL_II &= String.Format(" NoEmployees_B = '{0}', ", iNoEmployees_B.Value)
                        SQL_II &= String.Format(" Capital_B = '{0}', ", dCapital_B.Value)
                        SQL_II &= String.Format(" Area_B = '{0}', ", txtArea_B.Text)
                        SQL_II &= String.Format(" Expiry_B = '{0}', ", FormatDatePicker(dtpExpiry_B))
                        SQL_II &= String.Format(" Outlet_B = '{0}', ", iOutlet_B.Value)
                        SQL_II &= String.Format(" OtherIncome_B = '{0}', ", txtOtherIncome_B.Text)
                        SQL_II &= String.Format(" `OtherIncome_B-Amount` = '{0}', ", dOtherIncome_B.Value)
                        SQL_II &= String.Format(" Creditor_1 = '{0}', ", txtCreditor_1.Text)
                        SQL_II &= String.Format(" NatureLoan_1 = '{0}', ", txtNatureLoan_1.Text)
                        SQL_II &= String.Format(" AmountGranted_1 = '{0}', ", dAmountGranted_1.Value)
                        SQL_II &= String.Format(" Term_1 = '{0}', ", dTerm_1.Value)
                        SQL_II &= String.Format(" Balance_1 = '{0}', ", dBalance_1.Value)
                        SQL_II &= String.Format(" CreditRemarks_1 = '{0}', ", txtCreditRemarks_1.Text)
                        SQL_II &= String.Format(" Creditor_2 = '{0}', ", txtCreditor_2.Text)
                        SQL_II &= String.Format(" NatureLoan_2 = '{0}', ", txtNatureLoan_2.Text)
                        SQL_II &= String.Format(" AmountGranted_2 = '{0}', ", dAmountGranted_2.Value)
                        SQL_II &= String.Format(" Term_2 = '{0}', ", dTerm_2.Value)
                        SQL_II &= String.Format(" Balance_2 = '{0}', ", dBalance_2.Value)
                        SQL_II &= String.Format(" CreditRemarks_2 = '{0}', ", txtCreditRemarks_2.Text)
                        SQL_II &= String.Format(" Creditor_3 = '{0}', ", txtCreditor_3.Text)
                        SQL_II &= String.Format(" NatureLoan_3 = '{0}', ", txtNatureLoan_3.Text)
                        SQL_II &= String.Format(" AmountGranted_3 = '{0}', ", dAmountGranted_3.Value)
                        SQL_II &= String.Format(" Term_3 = '{0}', ", dTerm_3.Value)
                        SQL_II &= String.Format(" Balance_3 = '{0}', ", dBalance_3.Value)
                        SQL_II &= String.Format(" CreditRemarks_3 = '{0}', ", txtCreditRemarks_3.Text)
                        SQL_II &= String.Format(" Bank_1 = '{0}', ", txtBank_1.Text)
                        SQL_II &= String.Format(" Branch_1 = '{0}', ", txtBranch_1.Text)
                        SQL_II &= String.Format(" AccountT_1 = '{0}', ", AccountT_1)
                        SQL_II &= String.Format(" SA_1 = '{0}', ", txtSA_1.Text)
                        SQL_II &= String.Format(" AverageBalance_1 = '{0}', ", dAverageBalance_1.Value)
                        SQL_II &= String.Format(" PresentBalance_1 = '{0}', ", dPresentBalance_1.Value)
                        SQL_II &= String.Format(" Opened_1 = '{0}', ", txtOpened_1.Text)
                        SQL_II &= String.Format(" BankRemarks_1 = '{0}', ", txtBankRemarks_1.Text)
                        SQL_II &= String.Format(" Bank_2 = '{0}', ", txtBank_2.Text)
                        SQL_II &= String.Format(" Branch_2 = '{0}', ", txtBranch_2.Text)
                        SQL_II &= String.Format(" AccountT_2 = '{0}', ", AccountT_2)
                        SQL_II &= String.Format(" SA_2 = '{0}', ", txtSA_2.Text)
                        SQL_II &= String.Format(" AverageBalance_2 = '{0}', ", dAverageBalance_2.Value)
                        SQL_II &= String.Format(" PresentBalance_2 = '{0}', ", dPresentBalance_2.Value)
                        SQL_II &= String.Format(" Opened_2 = '{0}', ", txtOpened_2.Text)
                        SQL_II &= String.Format(" BankRemarks_2 = '{0}', ", txtBankRemarks_2.Text)
                        SQL_II &= String.Format(" Bank_3 = '{0}', ", txtBank_3.Text)
                        SQL_II &= String.Format(" Branch_3 = '{0}', ", txtBranch_3.Text)
                        SQL_II &= String.Format(" AccountT_3 = '{0}', ", AccountT_3)
                        SQL_II &= String.Format(" SA_3 = '{0}', ", txtSA_3.Text)
                        SQL_II &= String.Format(" AverageBalance_3 = '{0}', ", dAverageBalance_3.Value)
                        SQL_II &= String.Format(" PresentBalance_3 = '{0}', ", dPresentBalance_3.Value)
                        SQL_II &= String.Format(" Opened_3 = '{0}', ", txtOpened_3.Text)
                        SQL_II &= String.Format(" BankRemarks_3 = '{0}', ", txtBankRemarks_3.Text)
                        SQL_II &= String.Format(" Location_1 = '{0}', ", txtLocation_1.Text)
                        SQL_II &= String.Format(" TCT_1 = '{0}', ", txtTCT_1.Text)
                        SQL_II &= String.Format(" Area_1 = '{0}', ", dArea_1.Value)
                        SQL_II &= String.Format(" Acquired_1 = '{0}', ", txtAcquired_1.Text)
                        SQL_II &= String.Format(" PropertiesRemarks_1 = '{0}', ", txtPropertiesRemarks_1.Text)
                        SQL_II &= String.Format(" Location_2 = '{0}', ", txtLocation_2.Text)
                        SQL_II &= String.Format(" TCT_2 = '{0}', ", txtTCT_2.Text)
                        SQL_II &= String.Format(" Area_2 = '{0}', ", dArea_2.Value)
                        SQL_II &= String.Format(" Acquired_2 = '{0}', ", txtAcquired_2.Text)
                        SQL_II &= String.Format(" PropertiesRemarks_2 = '{0}', ", txtPropertiesRemarks_2.Text)
                        SQL_II &= String.Format(" Location_3 = '{0}', ", txtLocation_3.Text)
                        SQL_II &= String.Format(" TCT_3 = '{0}', ", txtTCT_3.Text)
                        SQL_II &= String.Format(" Area_3 = '{0}', ", dArea_3.Value)
                        SQL_II &= String.Format(" Acquired_3 = '{0}', ", txtAcquired_3.Text)
                        SQL_II &= String.Format(" PropertiesRemarks_3 = '{0}', ", txtPropertiesRemarks_3.Text)
                        SQL_II &= String.Format(" Vehicle_1 = '{0}', ", txtVehicle_1.Text)
                        SQL_II &= String.Format(" Year_1 = '{0}', ", FormatDatePicker(dtpYear_1))
                        SQL_II &= String.Format(" WhomAcquired_1 = '{0}', ", txtWhomAcquired_1.Text)
                        SQL_II &= String.Format(" WhenAcquired_1 = '{0}', ", txtWhenAcquired_1.Text)
                        SQL_II &= String.Format(" VehicleRemarks_1 = '{0}', ", txtVehicleRemarks_1.Text)
                        SQL_II &= String.Format(" Vehicle_2 = '{0}', ", txtVehicle_2.Text)
                        SQL_II &= String.Format(" Year_2 = '{0}', ", FormatDatePicker(dtpYear_2))
                        SQL_II &= String.Format(" WhomAcquired_2 = '{0}', ", txtWhomAcquired_2.Text)
                        SQL_II &= String.Format(" WhenAcquired_2 = '{0}', ", txtWhenAcquired_2.Text)
                        SQL_II &= String.Format(" VehicleRemarks_2 = '{0}', ", txtVehicleRemarks_2.Text)
                        SQL_II &= String.Format(" Vehicle_3 = '{0}', ", txtVehicle_3.Text)
                        SQL_II &= String.Format(" Year_3 = '{0}', ", FormatDatePicker(dtpYear_3))
                        SQL_II &= String.Format(" WhomAcquired_3 = '{0}', ", txtWhomAcquired_3.Text)
                        SQL_II &= String.Format(" WhenAcquired_3 = '{0}', ", txtWhenAcquired_3.Text)
                        SQL_II &= String.Format(" VehicleRemarks_3 = '{0}', ", txtVehicleRemarks_3.Text)
                        SQL_II &= String.Format(" HomeAppliances_1 = '{0}', ", txtHomeAppliances_1.Text)
                        SQL_II &= String.Format(" HomeAppliances_2 = '{0}', ", txtHomeAppliances_2.Text)
                        SQL_II &= String.Format(" Reference_1 = '{0}', ", txtReference_1.Text)
                        SQL_II &= String.Format(" ReferenceAddress_1 = '{0}', ", txtReferenceAddress_1.Text)
                        SQL_II &= String.Format(" ReferenceContact_1 = '{0}', ", txtReferenceContact_1.Text)
                        SQL_II &= String.Format(" Reference_2 = '{0}', ", txtReference_2.Text)
                        SQL_II &= String.Format(" ReferenceAddress_2 = '{0}', ", txtReferenceAddress_2.Text)
                        SQL_II &= String.Format(" ReferenceContact_2 = '{0}', ", txtReferenceContact_2.Text)
                        SQL_II &= String.Format(" Reference_3 = '{0}', ", txtReference_3.Text)
                        SQL_II &= String.Format(" ReferenceAddress_3 = '{0}', ", txtReferenceAddress_3.Text)
                        SQL_II &= String.Format(" ReferenceContact_3 = '{0}', ", txtReferenceContact_3.Text)
                        SQL_II &= String.Format(" CertificateNo = '{0}', ", txtCertificateNo.Text)
                        SQL_II &= String.Format(" PlaceIssue = '{0}', ", txtPlaceIssue.Text)
                        SQL_II &= String.Format(" `AgentID` = '{0}', ", AgentID)
                        SQL_II &= String.Format(" Agent = '{0}', ", Agent)
                        SQL_II &= String.Format(" AgentNo = '{0}', ", AgentNo)
                        SQL_II &= String.Format(" `MarketingID` = '{0}', ", MarketingID)
                        SQL_II &= String.Format(" Marketing = '{0}', ", Marketing)
                        SQL_II &= String.Format(" MarketingNo = '{0}', ", MarketingNo)
                        SQL_II &= String.Format(" `WalkinID` = '{0}', ", WalkinID)
                        SQL_II &= String.Format(" WalkIn = '{0}', ", Walkin)
                        SQL_II &= String.Format(" WalkIn_Specify = '{0}', ", Walkin_Specify)
                        SQL_II &= String.Format(" `DealerID` = '{0}', ", DealerID)
                        SQL_II &= String.Format(" Dealer = '{0}', ", Dealer)
                        SQL_II &= String.Format(" DealerNo = '{0}', ", DealerNo)
                        SQL_II &= String.Format(" YearHired = '{0}', ", If(cbxYearHired.Checked, 1, 0))
                        SQL_II &= String.Format(" YearFranchise = '{0}', ", If(cbxYearFranchise.Checked, 1, 0))
                        SQL_II &= String.Format(" Issue = '{0}' ", FormatDatePicker(dtpIssue))
                        SQL_II &= String.Format(" WHERE BorrowerID = '{0}';", BorrowerID)

                        'Dependent 1
                        SQL_II &= " UPDATE profile_dependent SET"
                        SQL_II &= String.Format(" Prefix_D = '{0}', ", CbxPrefix_1.Text)
                        SQL_II &= String.Format(" FirstN_D = '{0}', ", TxtFirstN_1.Text)
                        SQL_II &= String.Format(" MiddleN_D = '{0}', ", TxtMiddleN_1.Text)
                        SQL_II &= String.Format(" LastN_D = '{0}', ", TxtLastN_1.Text)
                        SQL_II &= String.Format(" Suffix_D = '{0}', ", cbxSuffix_1.Text)
                        SQL_II &= String.Format(" Age_D = '{0}', ", iAge_D1.Value)
                        SQL_II &= String.Format(" Grade_D = '{0}', ", txtGrade_1.Text)
                        SQL_II &= String.Format(" School_D = '{0}', ", txtSchool_1.Text)
                        SQL_II &= String.Format(" SchoolAddress_D = '{0}' ", txtSchoolAddress_1.Text)
                        SQL_II &= String.Format(" WHERE BorrowerID = '{0}' AND `rank` = 1;", BorrowerID)

                        'Dependent 2
                        SQL_II &= " UPDATE profile_dependent SET"
                        SQL_II &= String.Format(" Prefix_D = '{0}', ", CbxPrefix_2.Text)
                        SQL_II &= String.Format(" FirstN_D = '{0}', ", TxtFirstN_2.Text)
                        SQL_II &= String.Format(" MiddleN_D = '{0}', ", TxtMiddleN_2.Text)
                        SQL_II &= String.Format(" LastN_D = '{0}', ", TxtLastN_2.Text)
                        SQL_II &= String.Format(" Suffix_D = '{0}', ", cbxSuffix_2.Text)
                        SQL_II &= String.Format(" Age_D = '{0}', ", iAge_D2.Value)
                        SQL_II &= String.Format(" Grade_D = '{0}', ", txtGrade_2.Text)
                        SQL_II &= String.Format(" School_D = '{0}', ", txtSchool_2.Text)
                        SQL_II &= String.Format(" SchoolAddress_D = '{0}' ", txtSchoolAddress_2.Text)
                        SQL_II &= String.Format(" WHERE BorrowerID = '{0}' AND `rank` = 2;", BorrowerID)

                        'Dependent 3
                        SQL_II &= " UPDATE profile_dependent SET"
                        SQL_II &= String.Format(" Prefix_D = '{0}', ", CbxPrefix_3.Text)
                        SQL_II &= String.Format(" FirstN_D = '{0}', ", TxtFirstN_3.Text)
                        SQL_II &= String.Format(" MiddleN_D = '{0}', ", TxtMiddleN_3.Text)
                        SQL_II &= String.Format(" LastN_D = '{0}', ", TxtLastN_3.Text)
                        SQL_II &= String.Format(" Suffix_D = '{0}', ", cbxSuffix_3.Text)
                        SQL_II &= String.Format(" Age_D = '{0}', ", iAge_D3.Value)
                        SQL_II &= String.Format(" Grade_D = '{0}', ", txtGrade_3.Text)
                        SQL_II &= String.Format(" School_D = '{0}', ", txtSchool_3.Text)
                        SQL_II &= String.Format(" SchoolAddress_D = '{0}' ", txtSchoolAddress_3.Text)
                        SQL_II &= String.Format(" WHERE BorrowerID = '{0}' AND `rank` = 3;", BorrowerID)

                        'Dependent 4
                        SQL_II &= " UPDATE profile_dependent SET"
                        SQL_II &= String.Format(" Prefix_D = '{0}', ", CbxPrefix_4.Text)
                        SQL_II &= String.Format(" FirstN_D = '{0}', ", TxtFirstN_4.Text)
                        SQL_II &= String.Format(" MiddleN_D = '{0}', ", TxtMiddleN_4.Text)
                        SQL_II &= String.Format(" LastN_D = '{0}', ", TxtLastN_4.Text)
                        SQL_II &= String.Format(" Suffix_D = '{0}', ", cbxSuffix_4.Text)
                        SQL_II &= String.Format(" Age_D = '{0}', ", iAge_D4.Value)
                        SQL_II &= String.Format(" Grade_D = '{0}', ", txtGrade_4.Text)
                        SQL_II &= String.Format(" School_D = '{0}', ", txtSchool_4.Text)
                        SQL_II &= String.Format(" SchoolAddress_D = '{0}' ", txtSchoolAddress_4.Text)
                        SQL_II &= String.Format(" WHERE BorrowerID = '{0}' AND `rank` = 4;", BorrowerID)

                        'IDENTIFICATION
                        SQL_II &= "UPDATE profile_borrowerid SET"
                        SQL_II &= String.Format(" TIN = '{0}', ", txtTIN_B.Text)
                        SQL_II &= String.Format(" SSS = '{0}', ", txtSSS_B.Text)
                        SQL_II &= String.Format(" GSIS = '{0}', ", GSIS)
                        SQL_II &= String.Format(" PhilHealth = '{0}', ", PhilHealth)
                        SQL_II &= String.Format(" Senior = '{0}', ", Senior)
                        SQL_II &= String.Format(" UMID = '{0}', ", UMID)
                        SQL_II &= String.Format(" SEC = '{0}', ", SEC)
                        SQL_II &= String.Format(" DTI = '{0}', ", DTI)
                        SQL_II &= String.Format(" CDA = '{0}', ", CDA)
                        SQL_II &= String.Format(" Cooperative = '{0}', ", Cooperative)
                        SQL_II &= String.Format(" Drivers = '{0}', ", Drivers)
                        SQL_II &= String.Format(" dDrivers = '{0}', ", dDrivers)
                        SQL_II &= String.Format(" VIN = '{0}', ", VIN)
                        SQL_II &= String.Format(" dVIN = '{0}', ", dVIN)
                        SQL_II &= String.Format(" Passport = '{0}', ", Passport)
                        SQL_II &= String.Format(" dPassport = '{0}', ", dPassport)
                        SQL_II &= String.Format(" PRC = '{0}', ", PRC)
                        SQL_II &= String.Format(" dPRC = '{0}', ", dPRC)
                        SQL_II &= String.Format(" NBI = '{0}', ", NBI)
                        SQL_II &= String.Format(" dNBI = '{0}', ", dNBI)
                        SQL_II &= String.Format(" Police = '{0}', ", Police)
                        SQL_II &= String.Format(" dPolice = '{0}', ", dPolice)
                        SQL_II &= String.Format(" Postal = '{0}', ", Postal)
                        SQL_II &= String.Format(" dPostal = '{0}', ", dPostal)
                        SQL_II &= String.Format(" Barangay = '{0}', ", Barangay)
                        SQL_II &= String.Format(" dBarangay = '{0}', ", dBarangay)
                        SQL_II &= String.Format(" OWWA = '{0}', ", OWWA)
                        SQL_II &= String.Format(" dOWWA = '{0}', ", dOWWA)
                        SQL_II &= String.Format(" OFW = '{0}', ", OFW)
                        SQL_II &= String.Format(" dOFW = '{0}', ", dOFW)
                        SQL_II &= String.Format(" Seaman = '{0}', ", Seaman)
                        SQL_II &= String.Format(" dSeaman = '{0}', ", dSeaman)
                        SQL_II &= String.Format(" PNP = '{0}', ", PNP)
                        SQL_II &= String.Format(" dPNP = '{0}', ", dPNP)
                        SQL_II &= String.Format(" AFP = '{0}', ", AFP)
                        SQL_II &= String.Format(" dAFP = '{0}', ", dAFP)
                        SQL_II &= String.Format(" HDMF = '{0}', ", HDMF)
                        SQL_II &= String.Format(" dHDMF = '{0}', ", dHDMF)
                        SQL_II &= String.Format(" PWD = '{0}', ", PWD)
                        SQL_II &= String.Format(" dPWD = '{0}', ", dPWD)
                        SQL_II &= String.Format(" DSWD = '{0}', ", DSWD)
                        SQL_II &= String.Format(" dDSWD = '{0}', ", dDSWD)
                        SQL_II &= String.Format(" ACR = '{0}', ", ACR)
                        SQL_II &= String.Format(" dACR = '{0}', ", dACR)
                        SQL_II &= String.Format(" DTI_Business = '{0}', ", DTI_Business)
                        SQL_II &= String.Format(" dDTI_Business = '{0}', ", dDTI_Business)
                        SQL_II &= String.Format(" IBP = '{0}', ", IBP)
                        SQL_II &= String.Format(" dIBP = '{0}', ", dIBP)
                        SQL_II &= String.Format(" FireArms = '{0}', ", FireArms)
                        SQL_II &= String.Format(" dFireArms = '{0}', ", dFireArms)
                        SQL_II &= String.Format(" Government = '{0}', ", Government)
                        SQL_II &= String.Format(" dGovernment = '{0}', ", dGovernment)
                        SQL_II &= String.Format(" Diplomat = '{0}', ", Diplomat)
                        SQL_II &= String.Format(" dDiplomat = '{0}', ", dDiplomat)
                        SQL_II &= String.Format(" `National` = '{0}', ", National)
                        SQL_II &= String.Format(" dNational = '{0}', ", dNational)
                        SQL_II &= String.Format(" `Work` = '{0}', ", Work)
                        SQL_II &= String.Format(" dWork = '{0}', ", dWork)
                        SQL_II &= String.Format(" GOCC = '{0}', ", GOCC)
                        SQL_II &= String.Format(" dGOCC = '{0}', ", dGOCC)
                        SQL_II &= String.Format(" PLRA = '{0}', ", PLRA)
                        SQL_II &= String.Format(" dPLRA = '{0}', ", dPLRA)
                        SQL_II &= String.Format(" Major = '{0}', ", Major)
                        SQL_II &= String.Format(" dMajor = '{0}', ", dMajor)
                        SQL_II &= String.Format(" Media = '{0}', ", Media)
                        SQL_II &= String.Format(" dMedia = '{0}', ", dMedia)
                        SQL_II &= String.Format(" Student = '{0}', ", Student)
                        SQL_II &= String.Format(" dStudent = '{0}', ", dStudent)
                        SQL_II &= String.Format(" SIRV = '{0}', ", SIRV)
                        SQL_II &= String.Format(" dSIRV = '{0}'", dSIRV)
                        SQL_II &= String.Format(" WHERE BorrowerID = '{0}' AND ID_Type = 'B';", BorrowerID)
                        If TxtFirstN_S.Text = "" Then
                        Else
                            If TxtFirstN_S.Tag = "" Then
                                SQL_II &= "INSERT profile_borrowerid SET"
                                SQL_II &= String.Format(" BorrowerID = '{0}', ", BorrowerID)
                            Else
                                SQL_II &= "UPDATE profile_borrowerid SET"
                            End If
                            SQL_II &= String.Format(" TIN = '{0}', ", TIN_S)
                            SQL_II &= String.Format(" SSS = '{0}', ", SSS_S)
                            SQL_II &= String.Format(" GSIS = '{0}', ", GSIS_S)
                            SQL_II &= String.Format(" PhilHealth = '{0}', ", PhilHealth_S)
                            SQL_II &= String.Format(" Senior = '{0}', ", Senior_S)
                            SQL_II &= String.Format(" UMID = '{0}', ", UMID_S)
                            SQL_II &= String.Format(" SEC = '{0}', ", SEC_S)
                            SQL_II &= String.Format(" DTI = '{0}', ", DTI_S)
                            SQL_II &= String.Format(" CDA = '{0}', ", CDA_S)
                            SQL_II &= String.Format(" Cooperative = '{0}', ", Cooperative_S)
                            SQL_II &= String.Format(" Drivers = '{0}', ", Drivers_S)
                            SQL_II &= String.Format(" dDrivers = '{0}', ", dDrivers_S)
                            SQL_II &= String.Format(" VIN = '{0}', ", VIN_S)
                            SQL_II &= String.Format(" dVIN = '{0}', ", dVIN_S)
                            SQL_II &= String.Format(" Passport = '{0}', ", Passport_S)
                            SQL_II &= String.Format(" dPassport = '{0}', ", dPassport_S)
                            SQL_II &= String.Format(" PRC = '{0}', ", PRC_S)
                            SQL_II &= String.Format(" dPRC = '{0}', ", dPRC_S)
                            SQL_II &= String.Format(" NBI = '{0}', ", NBI_S)
                            SQL_II &= String.Format(" dNBI = '{0}', ", dNBI_S)
                            SQL_II &= String.Format(" Police = '{0}', ", Police_S)
                            SQL_II &= String.Format(" dPolice = '{0}', ", dPolice_S)
                            SQL_II &= String.Format(" Postal = '{0}', ", Postal_S)
                            SQL_II &= String.Format(" dPostal = '{0}', ", dPostal_S)
                            SQL_II &= String.Format(" Barangay = '{0}', ", Barangay_S)
                            SQL_II &= String.Format(" dBarangay = '{0}', ", dBarangay_S)
                            SQL_II &= String.Format(" OWWA = '{0}', ", OWWA_S)
                            SQL_II &= String.Format(" dOWWA = '{0}', ", dOWWA_S)
                            SQL_II &= String.Format(" OFW = '{0}', ", OFW_S)
                            SQL_II &= String.Format(" dOFW = '{0}', ", dOFW_S)
                            SQL_II &= String.Format(" Seaman = '{0}', ", Seaman_S)
                            SQL_II &= String.Format(" dSeaman = '{0}', ", dSeaman_S)
                            SQL_II &= String.Format(" PNP = '{0}', ", PNP_S)
                            SQL_II &= String.Format(" dPNP = '{0}', ", dPNP_S)
                            SQL_II &= String.Format(" AFP = '{0}', ", AFP_S)
                            SQL_II &= String.Format(" dAFP = '{0}', ", dAFP_S)
                            SQL_II &= String.Format(" HDMF = '{0}', ", HDMF_S)
                            SQL_II &= String.Format(" dHDMF = '{0}', ", dHDMF_S)
                            SQL_II &= String.Format(" PWD = '{0}', ", PWD_S)
                            SQL_II &= String.Format(" dPWD = '{0}', ", dPWD_S)
                            SQL_II &= String.Format(" DSWD = '{0}', ", DSWD_S)
                            SQL_II &= String.Format(" dDSWD = '{0}', ", dDSWD_S)
                            SQL_II &= String.Format(" ACR = '{0}', ", ACR_S)
                            SQL_II &= String.Format(" dACR = '{0}', ", dACR_S)
                            SQL_II &= String.Format(" DTI_Business = '{0}', ", DTI_Business_S)
                            SQL_II &= String.Format(" dDTI_Business = '{0}', ", dDTI_Business_S)
                            SQL_II &= String.Format(" IBP = '{0}', ", IBP_S)
                            SQL_II &= String.Format(" dIBP = '{0}', ", dIBP_S)
                            SQL_II &= String.Format(" FireArms = '{0}', ", FireArms_S)
                            SQL_II &= String.Format(" dFireArms = '{0}', ", dFireArms_S)
                            SQL_II &= String.Format(" Government = '{0}', ", Government_S)
                            SQL_II &= String.Format(" dGovernment = '{0}', ", dGovernment_S)
                            SQL_II &= String.Format(" Diplomat = '{0}', ", Diplomat_S)
                            SQL_II &= String.Format(" dDiplomat = '{0}', ", dDiplomat_S)
                            SQL_II &= String.Format(" `National` = '{0}', ", National_S)
                            SQL_II &= String.Format(" dNational = '{0}', ", dNational_S)
                            SQL_II &= String.Format(" `Work` = '{0}', ", Work_S)
                            SQL_II &= String.Format(" dWork = '{0}', ", dWork_S)
                            SQL_II &= String.Format(" GOCC = '{0}', ", GOCC_S)
                            SQL_II &= String.Format(" dGOCC = '{0}', ", dGOCC_S)
                            SQL_II &= String.Format(" PLRA = '{0}', ", PLRA_S)
                            SQL_II &= String.Format(" dPLRA = '{0}', ", dPLRA_S)
                            SQL_II &= String.Format(" Major = '{0}', ", Major_S)
                            SQL_II &= String.Format(" dMajor = '{0}', ", dMajor_S)
                            SQL_II &= String.Format(" Media = '{0}', ", Media_S)
                            SQL_II &= String.Format(" dMedia = '{0}', ", dMedia_S)
                            SQL_II &= String.Format(" Student = '{0}', ", Student_S)
                            SQL_II &= String.Format(" dStudent = '{0}', ", dStudent_S)
                            SQL_II &= String.Format(" SIRV = '{0}', ", SIRV_S)
                            SQL_II &= String.Format(" dSIRV = '{0}'", dSIRV_S)
                            If TxtFirstN_S.Tag = "" Then
                                SQL_II &= String.Format(" ,branch_id = '{0}',", Branch_ID)
                                SQL_II &= " ID_Type = 'S';"
                            Else
                                SQL_II &= String.Format(" WHERE BorrowerID = '{0}' AND ID_Type = 'S';", BorrowerID)
                            End If
                        End If

                        If txtPath_B.Text <> "" And txtPath_B.Text <> "Borrower.jpg" Then
                            saveImage_B(pb_B, "Borrower")
                        End If
                        If txtPath_S.Text <> "" And txtPath_S.Text <> "Spouse.jpg" Then
                            saveImage_B(pb_Spouse, "Spouse")
                        End If
                        DataObject(SQL_II)

                    End If
                    '******************* U P D A T E   B O R R O W E R   I N F O *******************************
                    If Trigger = "Update Draft" Then
                        Logs("Credit Application", "Update Draft", String.Format("Update draft application with credit number {0}", txtCreditNumber.Text), Changes, "", "", txtCreditNumber.Text)
                    Else
                        Logs("Credit Application", "Update", String.Format("Update application with credit number {0}", txtCreditNumber.Text), Changes, "", "", txtCreditNumber.Text)
                    End If
                    Clear()
                    LoadData()
                    MsgBox(String.Format("Successfully {0}!", If(Trigger = "Update Draft", "Updated a Draft", "Updated")), MsgBoxStyle.Information, "Info")
                Catch ex As Exception
                    Cursor = Cursors.Default
                    TriggerBugReport("Credit Application - Draft_Save", ex.Message.ToString)
                    Exit Sub
                End Try
                Cursor = Cursors.Default
            End If
        End If
    End Sub

    Private Sub BtnSave_Click(sender As Object, e As EventArgs) Handles btnSave.Click
        Draft_Save(btnSave.Text)
    End Sub

    Private Sub BtnSave_F_Click(sender As Object, e As EventArgs) Handles btnSave_F.Click
        If Multiple_ID.Contains(",") Then
            MsgBox("Saving transaction is not allowed because multi branch are selected.", MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        If vSave Then
        Else
            MsgBox(mBox_Save, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Draft_Save(btnSave_F.Text)
    End Sub

    Private Function Changes()
        Dim Change As String = ""
        Try
            If dAmountApplied.Value = dAmountApplied.Tag Then
            Else
                Change &= String.Format("Change Amount Applied from {0} to {1}. ", dAmountApplied.Tag, dAmountApplied.Text)
            End If
            If iTerms.Value = iTerms.Tag Then
            Else
                Change &= String.Format("Change Term from {0} to {1}. ", iTerms.Tag, iTerms.Text)
            End If
            If dInterest_T.Value = dInterest_T.Tag Then
            Else
                Change &= String.Format("Change Annual Interest from {0} to {1}. ", dInterest_T.Tag, dInterest_T.Text)
            End If
            If cbxTerms.Text = cbxTerms.Tag Then
            Else
                Change &= String.Format("Change Term Type from {0} to {1}. ", cbxTerms.Tag, cbxTerms.Text)
            End If
            If cbxProduct.Text = cbxProduct.Tag Then
            Else
                Change &= String.Format("Change Product from {0} to {1}. ", cbxProduct.Tag, cbxProduct.Text)
            End If
            If cbxCollateral.Text = cbxCollateral.Tag Then
            Else
                Change &= String.Format("Change Collateral from {0} to {1}. ", cbxCollateral.Tag, cbxCollateral.Text)
            End If
            If txtPurpose.Text = txtPurpose.Tag Then
            Else
                Change &= String.Format("Change Loan Purpose from {0} to {1}. ", txtPurpose.Tag, txtPurpose.Text)
            End If
            If FormatDatePicker(dtpDate) = dtpDate.Tag Then
            Else
                Change &= String.Format("Change Application Date from {0} to {1}. ", dtpDate.Tag, FormatDatePicker(dtpDate))
            End If
            If cbxOptions.Tag = cbxOptions.Text Then
            Else
                Change &= String.Format("Change Loan Type from {0} to {1}. ", cbxOptions.Tag, cbxOptions.Text)
            End If
            If cbxAccountNo.Text = cbxAccountNo.Tag Then
            Else
                Change &= String.Format("Change Account Number from {0} to {1}. ", cbxAccountNo.Tag, cbxAccountNo.Text)
            End If
            '*** B O R R O W E R ***
            If CbxPrefix_B.Text = CbxPrefix_B.Tag Then
            Else
                Change &= String.Format("Change Prefix from {0} to {1}. ", CbxPrefix_B.Tag, CbxPrefix_B.Text)
            End If
            If TxtFirstN_B.Text = TxtFirstN_B.Tag Then
            Else
                Change &= String.Format("Change First Name from {0} to {1}. ", TxtFirstN_B.Tag, TxtFirstN_B.Text)
            End If
            If TxtMiddleN_B.Text = TxtMiddleN_B.Tag Then
            Else
                Change &= String.Format("Change Middle Name from {0} to {1}. ", TxtMiddleN_B.Tag, TxtMiddleN_B.Text)
            End If
            If TxtLastN_B.Text = TxtLastN_B.Tag Then
            Else
                Change &= String.Format("Change Last Name from {0} to {1}. ", TxtLastN_B.Tag, TxtLastN_B.Text)
            End If
            If cbxSuffix_B.Text = cbxSuffix_B.Tag Then
            Else
                Change &= String.Format("Change Suffix from {0} to {1}. ", cbxSuffix_B.Tag, cbxSuffix_B.Text)
            End If
            '*** S P O U S E ***
            If CbxPrefix_S.Text = CbxPrefix_S.Tag Then
            Else
                Change &= String.Format("Change Spouse Prefix from {0} to {1}. ", CbxPrefix_S.Tag, CbxPrefix_S.Text)
            End If
            If TxtFirstN_S.Text = TxtFirstN_S.Tag Then
            Else
                Change &= String.Format("Change Spouse First Name from {0} to {1}. ", TxtFirstN_S.Tag, TxtFirstN_S.Text)
            End If
            If TxtMiddleN_S.Text = TxtMiddleN_S.Tag Then
            Else
                Change &= String.Format("Change Spouse Middle Name from {0} to {1}. ", TxtMiddleN_S.Tag, TxtMiddleN_S.Text)
            End If
            If TxtLastN_S.Text = TxtLastN_S.Tag Then
            Else
                Change &= String.Format("Change Spouse Last Name from {0} to {1}. ", TxtLastN_S.Tag, TxtLastN_S.Text)
            End If
            If cbxSuffix_S.Text = cbxSuffix_S.Tag Then
            Else
                Change &= String.Format("Change Spouse Suffix from {0} to {1}. ", cbxSuffix_S.Tag, cbxSuffix_S.Text)
            End If
            '*** C O M A K E R 1 ***
            If TxtFirstN_C1.Text = TxtFirstN_C1.Tag Then
            Else
                If TxtFirstN_C1.Tag = "" And TxtFirstN_C1.Text <> "" Then
                    Change &= "Add CoMaker 1."
                End If
            End If
            If CbxPrefix_C1.Text = CbxPrefix_C1.Tag Then
            Else
                Change &= String.Format("Change CoMaker1 Prefix from {0} to {1}. ", CbxPrefix_C1.Tag, CbxPrefix_C1.Text)
            End If
            If TxtFirstN_C1.Text = TxtFirstN_C1.Tag Then
            Else
                Change &= String.Format("Change CoMaker1 First Name from {0} to {1}. ", TxtFirstN_C1.Tag, TxtFirstN_C1.Text)
            End If
            If TxtMiddleN_C1.Text = TxtMiddleN_C1.Tag Then
            Else
                Change &= String.Format("Change CoMaker1 Middle Name from {0} to {1}. ", TxtMiddleN_C1.Tag, TxtMiddleN_C1.Text)
            End If
            If TxtLastN_C1.Text = TxtLastN_C1.Tag Then
            Else
                Change &= String.Format("Change CoMaker1 Last Name from {0} to {1}. ", TxtLastN_C1.Tag, TxtLastN_C1.Text)
            End If
            If cbxSuffix_C1.Text = cbxSuffix_C1.Tag Then
            Else
                Change &= String.Format("Change CoMaker1 Suffix from {0} to {1}. ", cbxSuffix_C1.Tag, cbxSuffix_C1.Text)
            End If
            '*** C O M A K E R 2 ***
            If TxtFirstN_C2.Text = TxtFirstN_C2.Tag Then
            Else
                If TxtFirstN_C2.Tag = "" And TxtFirstN_C2.Text <> "" Then
                    Change &= "Add CoMaker 2."
                End If
            End If
            If CbxPrefix_C2.Text = CbxPrefix_C2.Tag Then
            Else
                Change &= String.Format("Change CoMaker2 Prefix from {0} to {1}. ", CbxPrefix_C2.Tag, CbxPrefix_C2.Text)
            End If
            If TxtFirstN_C2.Text = TxtFirstN_C2.Tag Then
            Else
                Change &= String.Format("Change CoMaker2 First Name from {0} to {1}. ", TxtFirstN_C2.Tag, TxtFirstN_C2.Text)
            End If
            If TxtMiddleN_C2.Text = TxtMiddleN_C2.Tag Then
            Else
                Change &= String.Format("Change CoMaker2 Middle Name from {0} to {1}. ", TxtMiddleN_C2.Tag, TxtMiddleN_C2.Text)
            End If
            If TxtLastN_C2.Text = TxtLastN_C2.Tag Then
            Else
                Change &= String.Format("Change CoMaker2 Last Name from {0} to {1}. ", TxtLastN_C2.Tag, TxtLastN_C2.Text)
            End If
            If cbxSuffix_C2.Text = cbxSuffix_C2.Tag Then
            Else
                Change &= String.Format("Change CoMaker2 Suffix from {0} to {1}. ", cbxSuffix_C2.Tag, cbxSuffix_C2.Text)
            End If
            '*** C O M A K E R 3 ***
            If TxtFirstN_C3.Text = TxtFirstN_C3.Tag Then
            Else
                If TxtFirstN_C3.Tag = "" And TxtFirstN_C3.Text <> "" Then
                    Change &= "Add CoMaker 3."
                End If
            End If
            If CbxPrefix_C3.Text = CbxPrefix_C3.Tag Then
            Else
                Change &= String.Format("Change CoMaker3 Prefix from {0} to {1}. ", CbxPrefix_C3.Tag, CbxPrefix_C3.Text)
            End If
            If TxtFirstN_C3.Text = TxtFirstN_C3.Tag Then
            Else
                Change &= String.Format("Change CoMaker3 First Name from {0} to {1}. ", TxtFirstN_C3.Tag, TxtFirstN_C3.Text)
            End If
            If TxtMiddleN_C3.Text = TxtMiddleN_C3.Tag Then
            Else
                Change &= String.Format("Change CoMaker3 Middle Name from {0} to {1}. ", TxtMiddleN_C3.Tag, TxtMiddleN_C3.Text)
            End If
            If TxtLastN_C3.Text = TxtLastN_C3.Tag Then
            Else
                Change &= String.Format("Change CoMaker3 Last Name from {0} to {1}. ", TxtLastN_C3.Tag, TxtLastN_C3.Text)
            End If
            If cbxSuffix_C3.Text = cbxSuffix_C3.Tag Then
            Else
                Change &= String.Format("Change CoMaker3 Suffix from {0} to {1}. ", cbxSuffix_C3.Tag, cbxSuffix_C3.Text)
            End If
            '*** C O M A K E R 4 ***
            If TxtFirstN_C4.Text = TxtFirstN_C4.Tag Then
            Else
                If TxtFirstN_C4.Tag = "" And TxtFirstN_C4.Text <> "" Then
                    Change &= "Add CoMaker 4."
                End If
            End If
            If CbxPrefix_C4.Text = CbxPrefix_C4.Tag Then
            Else
                Change &= String.Format("Change CoMaker4 Prefix from {0} to {1}. ", CbxPrefix_C4.Tag, CbxPrefix_C4.Text)
            End If
            If TxtFirstN_C4.Text = TxtFirstN_C4.Tag Then
            Else
                Change &= String.Format("Change CoMaker4 First Name from {0} to {1}. ", TxtFirstN_C4.Tag, TxtFirstN_C4.Text)
            End If
            If TxtMiddleN_C4.Text = TxtMiddleN_C4.Tag Then
            Else
                Change &= String.Format("Change CoMaker4 Middle Name from {0} to {1}. ", TxtMiddleN_C4.Tag, TxtMiddleN_C4.Text)
            End If
            If TxtLastN_C4.Text = TxtLastN_C4.Tag Then
            Else
                Change &= String.Format("Change CoMaker4 Last Name from {0} to {1}. ", TxtLastN_C4.Tag, TxtLastN_C4.Text)
            End If
            If cbxSuffix_C4.Text = cbxSuffix_C4.Tag Then
            Else
                Change &= String.Format("Change CoMaker4 Suffix from {0} to {1}. ", cbxSuffix_C4.Tag, cbxSuffix_C4.Text)
            End If
            'C O M A K E R
            If txtNoC_B.Text = txtNoC_B.Tag Then
            Else
                Change &= String.Format("Change Complete Address No from {0} to {1}. ", txtNoC_B.Tag, txtNoC_B.Text)
            End If
            If txtStreetC_B.Text = txtStreetC_B.Tag Then
            Else
                Change &= String.Format("Change Complete Address Street from {0} to {1}. ", txtStreetC_B.Tag, txtStreetC_B.Text)
            End If
            If txtBarangayC_B.Text = txtBarangayC_B.Tag Then
            Else
                Change &= String.Format("Change Complete Address Barangay from {0} to {1}. ", txtBarangayC_B.Tag, txtBarangayC_B.Text)
            End If
            If cbxAddressC_B.Text = cbxAddressC_B.Tag Then
            Else
                Change &= String.Format("Change Complete Address from {0} to {1}. ", cbxAddressC_B.Tag, cbxAddressC_B.Text)
            End If
            If txtNoP_B.Text = txtNoP_B.Tag Then
            Else
                Change &= String.Format("Change Provincial Address No  from {0} to {1}. ", txtNoP_B.Tag, txtNoP_B.Text)
            End If
            If txtStreetP_B.Text = txtStreetP_B.Tag Then
            Else
                Change &= String.Format("Change Provincial Address Street from {0} to {1}. ", txtStreetP_B.Tag, txtStreetP_B.Text)
            End If
            If txtBarangayP_B.Text = txtBarangayP_B.Tag Then
            Else
                Change &= String.Format("Change Provincial Address Barangay from {0} to {1}. ", txtBarangayP_B.Tag, txtBarangayP_B.Text)
            End If
            If cbxAddressP_B.Text = cbxAddressP_B.Tag Then
            Else
                Change &= String.Format("Change Provincial Address from {0} to {1}. ", cbxAddressP_B.Tag, cbxAddressP_B.Text)
            End If
            If FormatDatePicker(DtpBirth_B) = DtpBirth_B.Tag Then
            Else
                Change &= String.Format("Change Birthdate from {0} to {1}. ", DtpBirth_B.Tag, FormatDatePicker(DtpBirth_B))
            End If
            If cbxPlaceBirth_B.Text = cbxPlaceBirth_B.Tag Then
            Else
                Change &= String.Format("Change Place of Birth from {0} to {1}. ", cbxPlaceBirth_B.Tag, cbxPlaceBirth_B.Text)
            End If
            If cbxMale_B.Tag <> "Male" And cbxMale_B.Checked Then
                Change &= String.Format("Change Gender from {0} to {1}. ", cbxMale_B.Tag, cbxMale_B.Text)
            ElseIf cbxFemale_B.Tag <> "Female" And cbxFemale_B.Checked Then
                Change &= String.Format("Change Gender from {0} to {1}. ", cbxFemale_B.Tag, cbxFemale_B.Text)
            End If
            If cbxSingle_B.Tag <> "Single" And cbxSingle_B.Checked Then
                Change &= String.Format("Change Civil Status from {0} to {1}. ", cbxSingle_B.Tag, cbxSingle_B.Text)
            ElseIf cbxMarried_B.Tag <> "Married" And cbxMarried_B.Checked Then
                Change &= String.Format("Change Civil Status from {0} to {1}. ", cbxMarried_B.Tag, cbxMarried_B.Text)
            ElseIf cbxSeparated_B.Tag <> "Separated" And cbxSeparated_B.Checked Then
                Change &= String.Format("Change Civil Status from {0} to {1}. ", cbxSeparated_B.Tag, cbxSeparated_B.Text)
            ElseIf cbxWidowed_B.Tag <> "Widowed" And cbxWidowed_B.Checked Then
                Change &= String.Format("Change Civil Status from {0} to {1}. ", cbxWidowed_B.Tag, cbxWidowed_B.Text)
            End If
            If cbxCitizenship_B.Text = cbxCitizenship_B.Tag Then
            Else
                Change &= String.Format("Change Citizenship from {0} to {1}. ", cbxCitizenship_B.Tag, cbxCitizenship_B.Text)
            End If
            If txtTIN_B.Text = txtTIN_B.Tag Then
            Else
                Change &= String.Format("Change TIN from {0} to {1}. ", txtTIN_B.Tag, txtTIN_B.Text)
            End If
            If txtTelephone_B.Text = txtTelephone_B.Tag Then
            Else
                Change &= String.Format("Change Telephone from {0} to {1}. ", txtTelephone_B.Tag, txtTelephone_B.Text)
            End If
            If txtSSS_B.Text = txtSSS_B.Tag Then
            Else
                Change &= String.Format("Change SSS from {0} to {1}. ", txtSSS_B.Tag, txtSSS_B.Text)
            End If
            If txtMobile_B.Text = txtMobile_B.Tag Then
            Else
                Change &= String.Format("Change Mobile from {0} to {1}. ", txtMobile_B.Tag, txtMobile_B.Text)
            End If
            If txtMobile_B2.Text = txtMobile_B2.Tag Then
            Else
                Change &= String.Format("Change Alternate Mobile Number from {0} to {1}. ", txtMobile_B2.Tag, txtMobile_B2.Text)
            End If
            If txtEmail_B.Text = txtEmail_B.Tag Then
            Else
                Change &= String.Format("Change Email from {0} to {1}. ", txtEmail_B.Tag, txtEmail_B.Text)
            End If
            If cbxOwned_B.Tag <> "Owned" And cbxOwned_B.Checked Then
                Change &= String.Format("Change House from {0} to {1}. ", cbxOwned_B.Tag, cbxOwned_B.Text)
            ElseIf cbxFree_B.Tag <> "Free" And cbxFree_B.Checked Then
                Change &= String.Format("Change House from {0} to {1}. ", cbxFree_B.Tag, cbxFree_B.Text)
            ElseIf cbxRented_B.Tag <> "Rented" And cbxRented_B.Checked Then
                Change &= String.Format("Change House from {0} to {1}. ", cbxRented_B.Tag, cbxRented_B.Text)
            End If
            If dRent_B.Value = dRent_B.Tag Then
            Else
                Change &= String.Format("Change Rent from {0} to {1}. ", dRent_B.Tag, dRent_B.Text)
            End If
            '*** D E P E N D E N T 1 ***
            If CbxPrefix_1.Text = CbxPrefix_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 Prefix from {0} to {1}. ", CbxPrefix_1.Tag, CbxPrefix_1.Text)
            End If
            If TxtFirstN_1.Text = TxtFirstN_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 First Name from {0} to {1}. ", TxtFirstN_1.Tag, TxtFirstN_1.Text)
            End If
            If TxtMiddleN_1.Text = TxtMiddleN_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 Middle Name from {0} to {1}. ", TxtMiddleN_1.Tag, TxtMiddleN_1.Text)
            End If
            If TxtLastN_1.Text = TxtLastN_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 Last Name from {0} to {1}. ", TxtLastN_1.Tag, TxtLastN_1.Text)
            End If
            If cbxSuffix_1.Text = cbxSuffix_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 Suffix from {0} to {1}. ", cbxSuffix_1.Tag, cbxSuffix_1.Text)
            End If
            If iAge_D1.Value = iAge_D1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 Age from {0} to {1}. ", iAge_D1.Tag, iAge_D1.Value)
            End If
            If txtGrade_1.Text = txtGrade_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 Grade from {0} to {1}. ", txtGrade_1.Tag, txtGrade_1.Text)
            End If
            If txtSchool_1.Text = txtSchool_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 School from {0} to {1}. ", txtSchool_1.Tag, txtSchool_1.Text)
            End If
            If txtSchoolAddress_1.Text = txtSchoolAddress_1.Tag Then
            Else
                Change &= String.Format("Change Dependent 1 School Address from {0} to {1}. ", txtSchoolAddress_1.Tag, txtSchoolAddress_1.Text)
            End If

            '*** D E P E N D E N T 2 ***
            If CbxPrefix_2.Text = CbxPrefix_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 Prefix from {0} to {1}. ", CbxPrefix_2.Tag, CbxPrefix_2.Text)
            End If
            If TxtFirstN_2.Text = TxtFirstN_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 First Name from {0} to {1}. ", TxtFirstN_2.Tag, TxtFirstN_2.Text)
            End If
            If TxtMiddleN_2.Text = TxtMiddleN_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 Middle Name from {0} to {1}. ", TxtMiddleN_2.Tag, TxtMiddleN_2.Text)
            End If
            If TxtLastN_2.Text = TxtLastN_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 Last Name from {0} to {1}. ", TxtLastN_2.Tag, TxtLastN_2.Text)
            End If
            If cbxSuffix_2.Text = cbxSuffix_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 Suffix from {0} to {1}. ", cbxSuffix_2.Tag, cbxSuffix_2.Text)
            End If
            If iAge_D2.Value = iAge_D2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 Age from {0} to {1}. ", iAge_D2.Tag, iAge_D2.Value)
            End If
            If txtGrade_2.Text = txtGrade_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 Grade from {0} to {1}. ", txtGrade_2.Tag, txtGrade_2.Text)
            End If
            If txtSchool_2.Text = txtSchool_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 School from {0} to {1}. ", txtSchool_2.Tag, txtSchool_2.Text)
            End If
            If txtSchoolAddress_2.Text = txtSchoolAddress_2.Tag Then
            Else
                Change &= String.Format("Change Dependent 2 School Address from {0} to {1}. ", txtSchoolAddress_2.Tag, txtSchoolAddress_2.Text)
            End If

            '*** D E P E N D E N T 3 ***
            If CbxPrefix_3.Text = CbxPrefix_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 Prefix from {0} to {1}. ", CbxPrefix_3.Tag, CbxPrefix_3.Text)
            End If
            If TxtFirstN_3.Text = TxtFirstN_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 First Name from {0} to {1}. ", TxtFirstN_3.Tag, TxtFirstN_3.Text)
            End If
            If TxtMiddleN_3.Text = TxtMiddleN_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 Middle Name from {0} to {1}. ", TxtMiddleN_3.Tag, TxtMiddleN_3.Text)
            End If
            If TxtLastN_3.Text = TxtLastN_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 Last Name from {0} to {1}. ", TxtLastN_3.Tag, TxtLastN_3.Text)
            End If
            If cbxSuffix_3.Text = cbxSuffix_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 Suffix from {0} to {1}. ", cbxSuffix_3.Tag, cbxSuffix_3.Text)
            End If
            If iAge_D3.Value = iAge_D3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 Age from {0} to {1}. ", iAge_D3.Tag, iAge_D3.Value)
            End If
            If txtGrade_3.Text = txtGrade_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 Grade from {0} to {1}. ", txtGrade_3.Tag, txtGrade_3.Text)
            End If
            If txtSchool_3.Text = txtSchool_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 School from {0} to {1}. ", txtSchool_3.Tag, txtSchool_3.Text)
            End If
            If txtSchoolAddress_3.Text = txtSchoolAddress_3.Tag Then
            Else
                Change &= String.Format("Change Dependent 3 School Address from {0} to {1}. ", txtSchoolAddress_3.Tag, txtSchoolAddress_3.Text)
            End If

            '*** D E P E N D E N T 4 ***
            If CbxPrefix_4.Text = CbxPrefix_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 Prefix from {0} to {1}. ", CbxPrefix_4.Tag, CbxPrefix_4.Text)
            End If
            If TxtFirstN_4.Text = TxtFirstN_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 First Name from {0} to {1}. ", TxtFirstN_4.Tag, TxtFirstN_4.Text)
            End If
            If TxtMiddleN_4.Text = TxtMiddleN_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 Middle Name from {0} to {1}. ", TxtMiddleN_4.Tag, TxtMiddleN_4.Text)
            End If
            If TxtLastN_4.Text = TxtLastN_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 Last Name from {0} to {1}. ", TxtLastN_4.Tag, TxtLastN_4.Text)
            End If
            If cbxSuffix_4.Text = cbxSuffix_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 Suffix from {0} to {1}. ", cbxSuffix_4.Tag, cbxSuffix_4.Text)
            End If
            If iAge_D4.Value = iAge_D4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 Age from {0} to {1}. ", iAge_D4.Tag, iAge_D4.Value)
            End If
            If txtGrade_4.Text = txtGrade_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 Grade from {0} to {1}. ", txtGrade_4.Tag, txtGrade_4.Text)
            End If
            If txtSchool_4.Text = txtSchool_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 School from {0} to {1}. ", txtSchool_4.Tag, txtSchool_4.Text)
            End If
            If txtSchoolAddress_4.Text = txtSchoolAddress_4.Tag Then
            Else
                Change &= String.Format("Change Dependent 4 School Address from {0} to {1}. ", txtSchoolAddress_4.Tag, txtSchoolAddress_4.Text)
            End If
            If rRemarks.Text = rRemarks.Tag Then
            Else
                Change &= String.Format("Change Remarks from {0} to {1}. ", rRemarks.Tag, rRemarks.Text)
            End If

            If cbxEmployer_B.Text = cbxEmployer_B.Tag Then
            Else
                Change &= String.Format("Change Employer from {0} to {1}. ", cbxEmployer_B.Tag, cbxEmployer_B.Text)
            End If
            If txtEmployerAddress_B.Text = txtEmployerAddress_B.Tag Then
            Else
                Change &= String.Format("Change Employer Address from {0} to {1}. ", txtEmployerAddress_B.Tag, txtEmployerAddress_B.Text)
            End If
            If txtEmployerTelephone_B.Text = txtEmployerTelephone_B.Tag Then
            Else
                Change &= String.Format("Change Employer Telephone from {0} to {1}. ", txtEmployerTelephone_B.Tag, txtEmployerTelephone_B.Text)
            End If
            If cbxPosition_B.Text = cbxPosition_B.Tag Then
            Else
                Change &= String.Format("Change Position from {0} to {1}. ", cbxPosition_B.Tag, cbxPosition_B.Text)
            End If
            If cbxCasual_B.Tag.ToString <> "Casual" And cbxCasual_B.Checked Then
                Change &= String.Format("Change Employment Status from {0} to {1}. ", cbxCasual_B.Tag, cbxCasual_B.Text)
            ElseIf cbxTemporary_B.Tag.ToString <> "Temporary" And cbxTemporary_B.Checked Then
                Change &= String.Format("Change Employment Status from {0} to {1}. ", cbxTemporary_B.Tag, cbxTemporary_B.Text)
            ElseIf cbxPermanent_B.Tag.ToString <> "Permanent" And cbxPermanent_B.Checked Then
                Change &= String.Format("Change Employment Status from {0} to {1}. ", cbxPermanent_B.Tag, cbxPermanent_B.Text)
            End If
            If FormatDatePicker(dtpHired_B) = dtpHired_B.Tag Then
            Else
                Change &= String.Format("Change Date Hired from {0} to {1}. ", dtpHired_B.Tag, FormatDatePicker(dtpHired_B))
            End If
            If txtSupervisor_B.Text = txtSupervisor_B.Tag Then
            Else
                Change &= String.Format("Change Supervisor from {0} to {1}. ", txtSupervisor_B.Tag, txtSupervisor_B.Text)
            End If
            If dMonthly_B.Value = dMonthly_B.Tag Then
            Else
                Change &= String.Format("Change Gross Monthly Income as employed from {0} to {1}. ", dMonthly_B.Tag, dMonthly_B.Text)
            End If
            If txtBusinessName_B.Text = txtBusinessName_B.Tag Then
            Else
                Change &= String.Format("Change Business Name from {0} to {1}. ", txtBusinessName_B.Tag, txtBusinessName_B.Text)
            End If
            If txtBusinessAddress_B.Text = txtBusinessAddress_B.Tag Then
            Else
                Change &= String.Format("Change Business Address from {0} to {1}. ", txtBusinessAddress_B.Tag, txtBusinessAddress_B.Text)
            End If
            If txtBusinessTelephone_B.Text = txtBusinessTelephone_B.Tag Then
            Else
                Change &= String.Format("Change Business Telephone from {0} to {1}. ", txtBusinessTelephone_B.Tag, txtBusinessTelephone_B.Text)
            End If
            If cbxNatureBusiness_B.Text = cbxNatureBusiness_B.Tag Then
            Else
                Change &= String.Format("Change Nature of Business from {0} to {1}. ", cbxNatureBusiness_B.Tag, cbxNatureBusiness_B.Text)
            End If
            If iYrsOperation_B.Value = iYrsOperation_B.Tag Then
            Else
                Change &= String.Format("Change Years Operation from {0} to {1}. ", iYrsOperation_B.Tag, iYrsOperation_B.Text)
            End If
            If dBusinessIncome_B.Value = dBusinessIncome_B.Tag Then
            Else
                Change &= String.Format("Change Business Income from {0} to {1}. ", dBusinessIncome_B.Tag, dBusinessIncome_B.Text)
            End If
            If iNoEmployees_B.Value = iNoEmployees_B.Tag Then
            Else
                Change &= String.Format("Change No of Employees from {0} to {1}. ", iNoEmployees_B.Tag, iNoEmployees_B.Text)
            End If
            If dCapital_B.Value = dCapital_B.Tag Then
            Else
                Change &= String.Format("Change Capital from {0} to {1}. ", dCapital_B.Tag, dCapital_B.Text)
            End If
            If txtArea_B.Text = txtArea_B.Tag Then
            Else
                Change &= String.Format("Change Area from {0} to {1}. ", txtArea_B.Tag, txtArea_B.Text)
            End If
            If FormatDatePicker(dtpExpiry_B) = dtpExpiry_B.Tag Then
            Else
                Change &= String.Format("Change Business Expiry from {0} to {1}. ", dtpExpiry_B.Tag, FormatDatePicker(dtpExpiry_B))
            End If
            If iOutlet_B.Value = iOutlet_B.Tag Then
            Else
                Change &= String.Format("Change No of Outlet from {0} to {1}. ", iOutlet_B.Tag, iOutlet_B.Text)
            End If
            If txtOtherIncome_B.Text = txtOtherIncome_B.Tag Then
            Else
                Change &= String.Format("Change Other Income from {0} to {1}. ", txtOtherIncome_B.Tag, txtOtherIncome_B.Text)
            End If
            If dOtherIncome_B.Value = dOtherIncome_B.Tag Then
            Else
                Change &= String.Format("Change Other Income Monthly from {0} to {1}. ", dOtherIncome_B.Tag, dOtherIncome_B.Text)
            End If
            If txtCreditor_1.Text = txtCreditor_1.Tag Then
            Else
                Change &= String.Format("Change Creditor 1 from {0} to {1}. ", txtCreditor_1.Tag, txtCreditor_1.Text)
            End If
            If txtNatureLoan_1.Text = txtNatureLoan_1.Tag Then
            Else
                Change &= String.Format("Change Nature Loan 1 from {0} to {1}. ", txtNatureLoan_1.Tag, txtNatureLoan_1.Text)
            End If
            If dAmountGranted_1.Value = dAmountGranted_1.Tag Then
            Else
                Change &= String.Format("Change Amount Granted 1 from {0} to {1}. ", dAmountGranted_1.Tag, dAmountGranted_1.Text)
            End If
            If dTerm_1.Value = dTerm_1.Tag Then
            Else
                Change &= String.Format("Change Term 1 from {0} to {1}. ", dTerm_1.Tag, dTerm_1.Text)
            End If
            If dBalance_1.Value = dBalance_1.Tag Then
            Else
                Change &= String.Format("Change Balance 1 from {0} to {1}. ", dBalance_1.Tag, dBalance_1.Text)
            End If
            If txtCreditRemarks_1.Text = txtCreditRemarks_1.Tag Then
            Else
                Change &= String.Format("Change Credit Remarks 1 from {0} to {1}. ", txtCreditRemarks_1.Tag, txtCreditRemarks_1.Text)
            End If
            If txtCreditor_2.Text = txtCreditor_2.Tag Then
            Else
                Change &= String.Format("Change Creditor 2 from {0} to {1}. ", txtCreditor_2.Tag, txtCreditor_2.Text)
            End If
            If txtNatureLoan_2.Text = txtNatureLoan_2.Tag Then
            Else
                Change &= String.Format("Change Nature Loan 2 from {0} to {1}. ", txtNatureLoan_2.Tag, txtNatureLoan_2.Text)
            End If
            If dAmountGranted_2.Value = dAmountGranted_2.Tag Then
            Else
                Change &= String.Format("Change Amount Granted 2 from {0} to {1}. ", dAmountGranted_2.Tag, dAmountGranted_2.Text)
            End If
            If dTerm_2.Value = dTerm_2.Tag Then
            Else
                Change &= String.Format("Change Term 2 from {0} to {1}. ", dTerm_2.Tag, dTerm_2.Text)
            End If
            If dBalance_2.Value = dBalance_2.Tag Then
            Else
                Change &= String.Format("Change Balance 2 from {0} to {1}. ", dBalance_2.Tag, dBalance_2.Text)
            End If
            If txtCreditRemarks_2.Text = txtCreditRemarks_2.Tag Then
            Else
                Change &= String.Format("Change Credit Remarks 2 from {0} to {1}. ", txtCreditRemarks_2.Tag, txtCreditRemarks_2.Text)
            End If
            If txtCreditor_3.Text = txtCreditor_3.Tag Then
            Else
                Change &= String.Format("Change Creditor 3 from {0} to {1}. ", txtCreditor_3.Tag, txtCreditor_3.Text)
            End If
            If txtNatureLoan_3.Text = txtNatureLoan_3.Tag Then
            Else
                Change &= String.Format("Change Nature Loan 3 from {0} to {1}. ", txtNatureLoan_3.Tag, txtNatureLoan_3.Text)
            End If
            If dAmountGranted_3.Value = dAmountGranted_3.Tag Then
            Else
                Change &= String.Format("Change Amount Granted 3 from {0} to {1}. ", dAmountGranted_3.Tag, dAmountGranted_3.Text)
            End If
            If dTerm_3.Value = dTerm_3.Tag Then
            Else
                Change &= String.Format("Change Term 3 from {0} to {1}. ", dTerm_3.Tag, dTerm_3.Text)
            End If
            If dBalance_3.Value = dBalance_3.Tag Then
            Else
                Change &= String.Format("Change Balance 3 from {0} to {1}. ", dBalance_3.Tag, dBalance_3.Text)
            End If
            If txtCreditRemarks_3.Text = txtCreditRemarks_3.Tag Then
            Else
                Change &= String.Format("Change Credit Remarks 3 from {0} to {1}. ", txtCreditRemarks_3.Tag, txtCreditRemarks_3.Text)
            End If
            If txtBank_1.Text = txtBank_1.Tag Then
            Else
                Change &= String.Format("Change Bank 1 from {0} to {1}. ", txtBank_1.Tag, txtBank_1.Text)
            End If
            If txtBranch_1.Text = txtBranch_1.Tag Then
            Else
                Change &= String.Format("Change Branch 1 from {0} to {1}. ", txtBranch_1.Tag, txtBranch_1.Text)
            End If
            If cbxSA_1.Tag <> "SA" And cbxSA_1.Checked Then
                Change &= String.Format("Change Account Type 1 from {0} to {1}. ", cbxSA_1.Tag, "SA")
            ElseIf cbxCA_1.Tag <> "CA" And cbxCA_1.Checked Then
                Change &= String.Format("Change Account Type 1 from {0} to {1}. ", cbxCA_1.Tag, "CA")
            End If
            If txtSA_1.Text = txtSA_1.Tag Then
            Else
                Change &= String.Format("Change Account No. 1 from {0} to {1}. ", txtSA_1.Tag, txtSA_1.Text)
            End If
            If dAverageBalance_1.Value = dAverageBalance_1.Tag Then
            Else
                Change &= String.Format("Change Average Balance 1 from {0} to {1}. ", dAverageBalance_1.Tag, dAverageBalance_1.Text)
            End If
            If dPresentBalance_1.Value = dPresentBalance_1.Tag Then
            Else
                Change &= String.Format("Change Present Balance 1 from {0} to {1}. ", dPresentBalance_1.Tag, dPresentBalance_1.Text)
            End If
            If txtOpened_1.Text = txtOpened_1.Tag Then
            Else
                Change &= String.Format("Change Date Opened 1 from {0} to {1}. ", txtOpened_1.Tag, txtOpened_1.Text)
            End If
            If txtBankRemarks_1.Text = txtBankRemarks_1.Tag Then
            Else
                Change &= String.Format("Change Bank Remarks 1 from {0} to {1}. ", txtBankRemarks_1.Tag, txtBankRemarks_1.Text)
            End If
            If txtBank_2.Text = txtBank_2.Tag Then
            Else
                Change &= String.Format("Change Bank 2 from {0} to {1}. ", txtBank_2.Tag, txtBank_2.Text)
            End If
            If txtBranch_2.Text = txtBranch_2.Tag Then
            Else
                Change &= String.Format("Change Branch 2 from {0} to {1}. ", txtBranch_2.Tag, txtBranch_2.Text)
            End If
            If cbxSA_2.Tag <> "SA" And cbxSA_2.Checked Then
                Change &= String.Format("Change Account Type 2 from {0} to {1}. ", cbxSA_2.Tag, "SA")
            ElseIf cbxCA_2.Tag <> "CA" And cbxCA_2.Checked Then
                Change &= String.Format("Change Account Type 2 from {0} to {1}. ", cbxCA_2.Tag, "CA")
            End If
            If txtSA_2.Text = txtSA_2.Tag Then
            Else
                Change &= String.Format("Change Account No. 2 from {0} to {1}. ", txtSA_2.Tag, txtSA_2.Text)
            End If
            If dAverageBalance_2.Value = dAverageBalance_2.Tag Then
            Else
                Change &= String.Format("Change Averange Balance 2 from {0} to {1}. ", dAverageBalance_2.Tag, dAverageBalance_2.Text)
            End If
            If dPresentBalance_2.Value = dPresentBalance_2.Tag Then
            Else
                Change &= String.Format("Change Present Balance 2 from {0} to {1}. ", dPresentBalance_2.Tag, dPresentBalance_2.Text)
            End If
            If txtOpened_2.Text = txtOpened_2.Tag Then
            Else
                Change &= String.Format("Change Date Opened 2 from {0} to {1}. ", txtOpened_2.Tag, txtOpened_2.Text)
            End If
            If txtBankRemarks_2.Text = txtBankRemarks_2.Tag Then
            Else
                Change &= String.Format("Change Bank Remarks 2 from {0} to {1}. ", txtBankRemarks_2.Tag, txtBankRemarks_2.Text)
            End If
            If txtBank_3.Text = txtBank_3.Tag Then
            Else
                Change &= String.Format("Change Bank 3 from {0} to {1}. ", txtBank_3.Tag, txtBank_3.Text)
            End If
            If txtBranch_3.Text = txtBranch_3.Tag Then
            Else
                Change &= String.Format("Change Branch 3 from {0} to {1}. ", txtBranch_3.Tag, txtBranch_3.Text)
            End If
            If cbxSA_3.Tag <> "SA" And cbxSA_3.Checked Then
                Change &= String.Format("Change Account Type 3 from {0} to {1}. ", cbxSA_3.Tag, "SA")
            ElseIf cbxCA_3.Tag <> "CA" And cbxCA_3.Checked Then
                Change &= String.Format("Change Account Type 3 from {0} to {1}. ", cbxCA_3.Tag, "CA")
            End If
            If txtSA_3.Text = txtSA_3.Tag Then
            Else
                Change &= String.Format("Change Account No. from {0} to {1}. ", txtSA_3.Tag, txtSA_3.Text)
            End If
            If dAverageBalance_3.Value = dAverageBalance_3.Tag Then
            Else
                Change &= String.Format("Change Average Balance 3 from {0} to {1}. ", dAverageBalance_3.Tag, dAverageBalance_3.Text)
            End If
            If dPresentBalance_3.Value = dPresentBalance_3.Tag Then
            Else
                Change &= String.Format("Change Present Balance 3 from {0} to {1}. ", dPresentBalance_3.Tag, dPresentBalance_3.Text)
            End If
            If txtOpened_3.Text = txtOpened_3.Tag Then
            Else
                Change &= String.Format("Change Date Opened 3 from {0} to {1}. ", txtOpened_3.Tag, txtOpened_3.Text)
            End If
            If txtBankRemarks_3.Text = txtBankRemarks_3.Tag Then
            Else
                Change &= String.Format("Change Bank Remarks 3 from {0} to {1}. ", txtBankRemarks_3.Tag, txtBankRemarks_3.Text)
            End If
            If txtLocation_1.Text = txtLocation_1.Tag Then
            Else
                Change &= String.Format("Change Location 1 from {0} to {1}. ", txtLocation_1.Tag, txtLocation_1.Text)
            End If
            If txtTCT_1.Text = txtTCT_1.Tag Then
            Else
                Change &= String.Format("Change TCT 1 from {0} to {1}. ", txtTCT_1.Tag, txtTCT_1.Text)
            End If
            If dArea_1.Value = dArea_1.Tag Then
            Else
                Change &= String.Format("Change Area 1 from {0} to {1}. ", dArea_1.Tag, dArea_1.Text)
            End If
            If txtAcquired_1.Text = txtAcquired_1.Tag Then
            Else
                Change &= String.Format("Change Acquired 1 from {0} to {1}. ", txtAcquired_1.Tag, txtAcquired_1.Text)
            End If
            If txtPropertiesRemarks_1.Text = txtPropertiesRemarks_1.Tag Then
            Else
                Change &= String.Format("Change Properties Remarks 1 from {0} to {1}. ", txtPropertiesRemarks_1.Tag, txtPropertiesRemarks_1.Text)
            End If
            If txtLocation_2.Text = txtLocation_2.Tag Then
            Else
                Change &= String.Format("Change Location 2 from {0} to {1}. ", txtLocation_2.Tag, txtLocation_2.Text)
            End If
            If txtTCT_2.Text = txtTCT_2.Tag Then
            Else
                Change &= String.Format("Change TCT 2 from {0} to {1}. ", txtTCT_2.Tag, txtTCT_2.Text)
            End If
            If dArea_2.Value = dArea_2.Tag Then
            Else
                Change &= String.Format("Change Area 2 from {0} to {1}. ", dArea_2.Tag, dArea_2.Text)
            End If
            If txtAcquired_2.Text = txtAcquired_2.Tag Then
            Else
                Change &= String.Format("Change Acquired 2 from {0} to {1}. ", txtAcquired_2.Tag, txtAcquired_2.Text)
            End If
            If txtPropertiesRemarks_2.Text = txtPropertiesRemarks_2.Tag Then
            Else
                Change &= String.Format("Change Properties Remarks 2 from {0} to {1}. ", txtPropertiesRemarks_2.Tag, txtPropertiesRemarks_2.Text)
            End If
            If txtLocation_3.Text = txtLocation_3.Tag Then
            Else
                Change &= String.Format("Change Location 3 from {0} to {1}. ", txtLocation_3.Tag, txtLocation_3.Text)
            End If
            If txtTCT_3.Text = txtTCT_3.Tag Then
            Else
                Change &= String.Format("Change TCT 3 from {0} to {1}. ", txtTCT_3.Tag, txtTCT_3.Text)
            End If
            If dArea_3.Value = dArea_3.Tag Then
            Else
                Change &= String.Format("Change Area 3 from {0} to {1}. ", dArea_3.Tag, dArea_3.Text)
            End If
            If txtAcquired_3.Text = txtAcquired_3.Tag Then
            Else
                Change &= String.Format("Change Acquired 3 from {0} to {1}. ", txtAcquired_3.Tag, txtAcquired_3.Text)
            End If
            If txtPropertiesRemarks_3.Text = txtPropertiesRemarks_3.Tag Then
            Else
                Change &= String.Format("Change Properties Remarks 3 from {0} to {1}. ", txtPropertiesRemarks_3.Tag, txtPropertiesRemarks_3.Text)
            End If
            If txtVehicle_1.Text = txtVehicle_1.Tag Then
            Else
                Change &= String.Format("Change Vehicle 1 from {0} to {1}. ", txtVehicle_1.Tag, txtVehicle_1.Text)
            End If
            If If(dtpYear_1.Tag = "", dtpYear_1.Text.Trim = dtpYear_1.Tag, Format(dtpYear_1.Value, "yyyy-MM-dd") = dtpYear_1.Tag) Then
            Else
                Change &= String.Format("Change Year Model 1 from {0} to {1}. ", dtpYear_1.Tag, dtpYear_1.Text.Trim)
            End If
            If txtWhomAcquired_1.Text = txtWhomAcquired_1.Tag Then
            Else
                Change &= String.Format("Change Whom Acquired 1  from {0} to {1}. ", txtWhomAcquired_1.Tag, txtWhomAcquired_1.Text)
            End If
            If txtWhenAcquired_1.Text = txtWhenAcquired_1.Tag Then
            Else
                Change &= String.Format("Change When Acquired 1 from {0} to {1}. ", txtWhenAcquired_1.Tag, txtWhenAcquired_1.Text)
            End If
            If txtVehicleRemarks_1.Text = txtVehicleRemarks_1.Tag Then
            Else
                Change &= String.Format("Change Vehicle Remark 1 from {0} to {1}. ", txtVehicleRemarks_1.Tag, txtVehicleRemarks_1.Text)
            End If
            If txtVehicle_2.Text = txtVehicle_2.Tag Then
            Else
                Change &= String.Format("Change Vehicle 2 from {0} to {1}. ", txtVehicle_2.Tag, txtVehicle_2.Text)
            End If
            If If(dtpYear_2.Tag = "", dtpYear_2.Text.Trim = dtpYear_2.Tag, Format(dtpYear_2.Value, "yyyy-MM-dd") = dtpYear_2.Tag) Then
            Else
                Change &= String.Format("Change Year Model 2 from {0} to {1}. ", dtpYear_2.Tag, dtpYear_2.Text.Trim)
            End If
            If txtWhomAcquired_2.Text = txtWhomAcquired_2.Tag Then
            Else
                Change &= String.Format("Change Whom Acquired 2 from {0} to {1}. ", txtWhomAcquired_2.Tag, txtWhomAcquired_2.Text)
            End If
            If txtWhenAcquired_2.Text = txtWhenAcquired_2.Tag Then
            Else
                Change &= String.Format("Change When Acquired 2 from {0} to {1}. ", txtWhenAcquired_2.Tag, txtWhenAcquired_2.Text)
            End If
            If txtVehicleRemarks_2.Text = txtVehicleRemarks_2.Tag Then
            Else
                Change &= String.Format("Change Vehicle Remarks 2 from {0} to {1}. ", txtVehicleRemarks_2.Tag, txtVehicleRemarks_2.Text)
            End If
            If txtVehicle_3.Text = txtVehicle_3.Tag Then
            Else
                Change &= String.Format("Change Vehicle 3 from {0} to {1}. ", txtVehicle_3.Tag, txtVehicle_3.Text)
            End If
            If If(dtpYear_3.Tag = "", dtpYear_3.Text.Trim = dtpYear_3.Tag, Format(dtpYear_3.Value, "yyyy-MM-dd") = dtpYear_3.Tag) Then
            Else
                Change &= String.Format("Change Year 3 from {0} to {1}. ", dtpYear_3.Tag, dtpYear_3.Text.Trim)
            End If
            If txtWhomAcquired_3.Text = txtWhomAcquired_3.Tag Then
            Else
                Change &= String.Format("Change Whom Acquired 3 from {0} to {1}. ", txtWhomAcquired_3.Tag, txtWhomAcquired_3.Text)
            End If
            If txtWhenAcquired_3.Text = txtWhenAcquired_3.Tag Then
            Else
                Change &= String.Format("Change When Acquired 3 from {0} to {1}. ", txtWhenAcquired_3.Tag, txtWhenAcquired_3.Text)
            End If
            If txtVehicleRemarks_3.Text = txtVehicleRemarks_3.Tag Then
            Else
                Change &= String.Format("Change Vehicle Remarks 3 from {0} to {1}. ", txtVehicleRemarks_3.Tag, txtVehicleRemarks_3.Text)
            End If
            If txtHomeAppliances_1.Text = txtHomeAppliances_1.Tag Then
            Else
                Change &= String.Format("Change Home Appliances 1 from {0} to {1}. ", txtHomeAppliances_1.Tag, txtHomeAppliances_1.Text)
            End If
            If txtHomeAppliances_2.Text = txtHomeAppliances_2.Tag Then
            Else
                Change &= String.Format("Change Home Appliances 2 from {0} to {1}. ", txtHomeAppliances_2.Tag, txtHomeAppliances_2.Text)
            End If
            If txtReference_1.Text = txtReference_1.Tag Then
            Else
                Change &= String.Format("Change Reference 1 from {0} to {1}. ", txtReference_1.Tag, txtReference_1.Text)
            End If
            If txtReferenceAddress_1.Text = txtReferenceAddress_1.Tag Then
            Else
                Change &= String.Format("Change Reference Address 1 from {0} to {1}. ", txtReferenceAddress_1.Tag, txtReferenceAddress_1.Text)
            End If
            If txtReferenceContact_1.Text = txtReferenceContact_1.Tag Then
            Else
                Change &= String.Format("Change Reference Contact 1 from {0} to {1}. ", txtReferenceContact_1.Tag, txtReferenceContact_1.Text)
            End If
            If txtReference_2.Text = txtReference_2.Tag Then
            Else
                Change &= String.Format("Change Reference 2 from {0} to {1}. ", txtReference_2.Tag, txtReference_2.Text)
            End If
            If txtReferenceAddress_2.Text = txtReferenceAddress_2.Tag Then
            Else
                Change &= String.Format("Change Reference Address 2 from {0} to {1}. ", txtReferenceAddress_2.Tag, txtReferenceAddress_2.Text)
            End If
            If txtReferenceContact_2.Text = txtReferenceContact_2.Tag Then
            Else
                Change &= String.Format("Change Reference Contact 2 from {0} to {1}. ", txtReferenceContact_2.Tag, txtReferenceContact_2.Text)
            End If
            If txtReference_3.Text = txtReference_3.Tag Then
            Else
                Change &= String.Format("Change Reference 3 from {0} to {1}. ", txtReference_3.Tag, txtReference_3.Text)
            End If
            If txtReferenceAddress_3.Text = txtReferenceAddress_3.Tag Then
            Else
                Change &= String.Format("Change Reference Address 3 from {0} to {1}. ", txtReferenceAddress_3.Tag, txtReferenceAddress_3.Text)
            End If
            If txtReferenceContact_3.Text = txtReferenceContact_3.Tag Then
            Else
                Change &= String.Format("Change Reference Contact 3 from {0} to {1}. ", txtReferenceContact_3.Tag, txtReferenceContact_3.Text)
            End If
            If txtCertificateNo.Text = txtCertificateNo.Tag Then
            Else
                Change &= String.Format("Change Certification No from {0} to {1}. ", txtCertificateNo.Tag, txtCertificateNo.Text)
            End If
            If txtPlaceIssue.Text = txtPlaceIssue.Tag Then
            Else
                Change &= String.Format("Change Place Issue from {0} to {1}. ", txtPlaceIssue.Tag, txtPlaceIssue.Text)
            End If
            If FormatDatePicker(dtpIssue) = dtpIssue.Tag Then
            Else
                Change &= String.Format("Change Date Issue from {0} to {1}. ", dtpIssue.Tag, FormatDatePicker(dtpIssue))
            End If
            If cbxAgentName.Text = cbxAgentName.Tag Then
            Else
                Change &= String.Format("Change Agent from {0} to {1}. ", cbxAgentName.Tag, cbxAgentName.Text)
            End If
            If txtAgentContact.Text = txtAgentContact.Tag Then
            Else
                Change &= String.Format("Change Agent No. from {0} to {1}. ", txtAgentContact.Tag, txtAgentContact.Text)
            End If
            If cbxAgentNameV2.Text = cbxAgentNameV2.Tag Then
            Else
                Change &= String.Format("Change Agent 2 from {0} to {1}. ", cbxAgentNameV2.Tag, cbxAgentNameV2.Text)
            End If
            If txtAgentContactV2.Text = txtAgentContactV2.Tag Then
            Else
                Change &= String.Format("Change Agent 2 No. from {0} to {1}. ", txtAgentContactV2.Tag, txtAgentContactV2.Text)
            End If
            If cbxMarketingName.Text = cbxMarketingName.Tag Then
            Else
                Change &= String.Format("Change Account Officer from {0} to {1}. ", cbxMarketingName.Tag, cbxMarketingName.Text)
            End If
            If txtMarketingContact.Text = txtMarketingContact.Tag Then
            Else
                Change &= String.Format("Change Account Officer No. from {0} to {1}. ", txtMarketingContact.Tag, txtMarketingContact.Text)
            End If
            If cbxWalkInType.Text = cbxWalkInType.Tag Then
            Else
                Change &= String.Format("Change Walkin Type from {0} to {1}. ", cbxWalkInType.Tag, cbxWalkInType.Text)
            End If
            If txtWalkInOthers.Text = txtWalkInOthers.Tag Then
            Else
                Change &= String.Format("Change Walkin Specify from {0} to {1}. ", txtWalkInOthers.Tag, txtWalkInOthers.Text)
            End If
            If cbxDealerName.Text = cbxDealerName.Tag Then
            Else
                Change &= String.Format("Change Dealer from {0} to {1}. ", cbxDealerName.Tag, cbxDealerName.Text)
            End If
            If txtDealersContact.Text = txtDealersContact.Tag Then
            Else
                Change &= String.Format("Change Dealer No. from {0} to {1}. ", txtDealersContact.Tag, txtDealersContact.Text)
            End If
            If ChangeBorrowerPic Then
                Change &= "Change Borrower Picture. "
            End If
        Catch ex As Exception
            TriggerBugReport("Loan Application - Changes", ex.Message.ToString)
        End Try

        Return Change
    End Function

    Private Sub BtnBrowse_B_Click(sender As Object, e As EventArgs) Handles btnBrowse_B.Click
        Using OFD As New OpenFileDialog
            OFD.Filter = "Image File|*.jpg;*.jpeg;*.png"
            If (OFD.ShowDialog() = DialogResult.OK) Then
                Try
                    pb_B.Image.Dispose()
                    txtPath_B.Text = OFD.FileName
                    Using TempPB As New DevExpress.XtraEditors.PictureEdit
                        TempPB.Image = Image.FromFile(txtPath_B.Text)
                        ResizeImages(TempPB.Image.Clone, pb_B, 650, 500)
                    End Using

                    ChangeBorrowerPic = True
                Catch ex As Exception
                    MsgBox("File type not supported. Please select JPG, JPEG and PNG files only.", MsgBoxStyle.Information, "Info")
                End Try
            End If
        End Using
    End Sub

    Public Sub SaveImage(pBox As DevExpress.XtraEditors.PictureEdit, Description As String)
        FileName = Description & ".jpg"
        '********CREATE FOLDER FSFC System
        If Not IO.Directory.Exists(String.Format("{0}\{1}", RootFolder, MainFolder)) Then
            IO.Directory.CreateDirectory(String.Format("{0}\{1}", RootFolder, MainFolder))
        End If
        '********CREATE FOLDER Branch
        If Not IO.Directory.Exists(String.Format("{0}\{1}\{2}", RootFolder, MainFolder, Branch_Code)) Then
            IO.Directory.CreateDirectory(String.Format("{0}\{1}\{2}", RootFolder, MainFolder, Branch_Code))
        End If
        '********CREATE FOLDER Borrowers
        If Not IO.Directory.Exists(String.Format("{0}\{1}\{2}\Application", RootFolder, MainFolder, Branch_Code)) Then
            IO.Directory.CreateDirectory(String.Format("{0}\{1}\{2}\Application", RootFolder, MainFolder, Branch_Code))
        End If
        '********CREATE FOLDER BorrowerID
        If Not IO.Directory.Exists(String.Format("{0}\{1}\{2}\Application\{3}", RootFolder, MainFolder, Branch_Code, txtCreditNumber.Text)) Then
            IO.Directory.CreateDirectory(String.Format("{0}\{1}\{2}\Application\{3}", RootFolder, MainFolder, Branch_Code, txtCreditNumber.Text))
        End If
        '********CREATE File
        Try
            Dim xPath As String
            xPath = String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Branch_Code, txtCreditNumber.Text, FileName)
            If IO.File.Exists(xPath) Then
                IO.File.Delete(xPath)
            End If
            pBox.Image.Save(xPath, ImageFormat.Jpeg)
        Catch ex As Exception
        End Try
    End Sub

    Public Sub SaveImage_B(pBox As DevExpress.XtraEditors.PictureEdit, Description As String)
        FileName = Description & ".jpg"
        '********CREATE FOLDER FSFC System
        If Not IO.Directory.Exists(String.Format("{0}\{1}", RootFolder, MainFolder)) Then
            IO.Directory.CreateDirectory(String.Format("{0}\{1}", RootFolder, MainFolder))
        End If
        '********CREATE FOLDER Branch
        If Not IO.Directory.Exists(String.Format("{0}\{1}\{2}", RootFolder, MainFolder, Branch_Code)) Then
            IO.Directory.CreateDirectory(String.Format("{0}\{1}\{2}", RootFolder, MainFolder, Branch_Code))
        End If
        '********CREATE FOLDER Borrowers
        If Not IO.Directory.Exists(String.Format("{0}\{1}\{2}\Borrowers", RootFolder, MainFolder, Branch_Code)) Then
            IO.Directory.CreateDirectory(String.Format("{0}\{1}\{2}\Borrowers", RootFolder, MainFolder, Branch_Code))
        End If
        '********CREATE FOLDER BorrowerID
        If Not IO.Directory.Exists(String.Format("{0}\{1}\{2}\Borrowers\{3}", RootFolder, MainFolder, Branch_Code, BorrowerID)) Then
            IO.Directory.CreateDirectory(String.Format("{0}\{1}\{2}\Borrowers\{3}", RootFolder, MainFolder, Branch_Code, BorrowerID))
        End If
        '********CREATE File
        Try
            Dim xPath As String
            xPath = String.Format("{0}\{1}\{2}\Borrowers\{3}\{4}", RootFolder, MainFolder, Branch_Code, BorrowerID, FileName)
            If IO.File.Exists(xPath) Then
                IO.File.Delete(xPath)
            End If
            pBox.Image.Save(xPath, ImageFormat.Jpeg)
        Catch ex As Exception
        End Try
    End Sub

    Public Sub LoadData()
        Cursor = Cursors.WaitCursor
        Dim SQL As String = "SELECT"
        SQL &= "    ID,"
        SQL &= "    DATE_FORMAT(trans_date,'%m.%d.%Y') AS 'Date',"
        SQL &= "    DATE_FORMAT(Released,'%m.%d.%Y') AS 'Released Date',"
        SQL &= "    CreditNumber AS 'Credit Number',"
        SQL &= String.Format("    CONCAT(IF(FirstN_B = '','',CONCAT(FirstN_B, ' ')), IF(MiddleN_B = '','',CONCAT(MiddleN_B, ' ')), IF(LastN_B = '','',CONCAT(LastN_B, ' ')), Suffix_B, IF(OutsourceCI != '' AND Branch_ID != '{0}',CONCAT(' [',(SELECT branch_code FROM branch WHERE ID = Branch_ID),']'),'')) AS 'Borrower',", Branch_ID)
        SQL &= "    AmountApplied AS 'Principal',"
        SQL &= "    CONCAT(Terms, ' ', TermType) AS 'Term',"
        SQL &= "    Product,"
        SQL &= "    CONCAT(Interest_Rate, '%') AS 'Interest Rate',"
        SQL &= "    CONCAT(RPPD_Rate, '%') AS 'RPPD Rate',"
        If CompanyMode = 0 Then
            SQL &= "    AmountApplied + Interest AS 'Face Amount',"
        Else
            SQL &= "    Face_Amount AS 'Face Amount',"
        End If
        SQL &= "    IF(loan_type IN ('NEW','RELOAN'),net_proceeds,0) AS 'Net Proceeds',"
        SQL &= "    loan_type AS 'Loan Type',"
        SQL &= "    IF(PaymentRequest = 'CLOSED','CLOSED ACCOUNT',IF(ApproveStatus = 'For ReApprove','FOR REAPPROVAL',IF(ApproveStatus = 'For Special','FOR SPECIAL APPROVAL',IF(PaymentRequest = 'RELEASED' AND `status` = 'ACTIVE','BOOKED',IF(PaymentRequest = 'APPROVED REQUEST' AND `status` = 'ACTIVE','FOR RELEASING',IF(PaymentRequest = 'CHECKED REQUEST' AND `status` = 'ACTIVE' AND CI_Status = 'APPROVED','CV FOR APPROVAL',IF(PaymentRequest = 'REQUESTED' AND `status` = 'ACTIVE' AND CI_Status = 'APPROVED',CONCAT(IF(CVforJV,'JV','CV'),' FOR CHECKING'),IF(PaymentRequest = 'PENDING' AND CI_Status = 'APPROVED' AND `status` = 'ACTIVE' AND loan_type != 'RESTRUCTURE' AND (From_ROPOA = 1 OR CVforJV = 1),'FOR JOURNAL VOUCHER',IF(application_status = 'PENDING' AND `status` = 'ACTIVE','FOR BM/OIC APPROVAL',IF(PaymentRequest = 'PENDING' AND CI_Status = 'APPROVED' AND `status` = 'ACTIVE' AND loan_type != 'RESTRUCTURE','FOR PAYMENT REQUEST',IF(PaymentRequest = 'REQUEST' AND CI_Status = 'APPROVED' AND `status` = 'ACTIVE' AND loan_type != 'RESTRUCTURE','FOR CHECK PREPARATION',IF(PaymentRequest = 'PENDING' AND CI_Status = 'APPROVED' AND `status` = 'ACTIVE' AND loan_type = 'RESTRUCTURE','FOR JOURNAL VOUCHER',IF(CI_Status = 'CHECKED' AND application_status = 'APPROVED' AND `status` = 'ACTIVE' AND ForCI_Product(Product_ID) = 'Yes','FOR CRECOMM APPROVAL',IF(CI_Status = 'ONGOING' AND application_status = 'APPROVED' AND `status` = 'ACTIVE' AND ForCI_Product(Product_ID) = 'Yes','CREDIT INVESTIGATION STARTED',IF(CI_Status = 'PENDING' AND application_status = 'APPROVED' AND `status` = 'ACTIVE' AND ForCI_Product(Product_ID) = 'No','FOR CRECOMM APPROVAL',IF(CI_Status = 'PENDING' AND application_status = 'APPROVED' AND `status` = 'ACTIVE' AND ForCI_Product(Product_ID) = 'Yes','FOR CREDIT INVESTIGATION',IF(application_status = 'PENDING' AND `status` = 'ACTIVE','FOR BM/OIC APPROVAL',IF(`status` = 'HOLD','HOLD',IF(`status` = 'CANCELLED' OR `status` = 'DELETED','CANCELLED',IF(CI_Status = 'DISAPPROVED' OR application_status = 'DISAPPROVED','DISAPPROVED',IF(PaymentRequest = 'JV Request','CURRENTLY ON JV','DRAFT'))))))))))))))))))))) AS 'Application Status',"
        SQL &= "    (SELECT Employee(empl_id) FROM users WHERE users.user_code = credit_application.user_code LIMIT 1) AS 'Loans Processor',"
        SQL &= "    Employee(Assigned_CI) AS 'Credit Investigation', ForCI_Product(Product_ID) AS 'CI',"
        SQL &= "    credit_application.*, IF(BusinessID = 0,(SELECT CONCAT(Branch,' [Main]') FROM branch WHERE ID = credit_application.Branch_ID),(SELECT BusinessCenter FROM business_center WHERE ID = credit_application.BusinessID)) AS 'BusinessCenter', Branch(Branch_ID) AS 'Branch', BusinessCenterName(BusinessID) AS 'Business Center'"
        SQL &= " FROM credit_application"
        SQL &= String.Format("    WHERE (Branch_ID IN ({0}) OR IF({1},FIND_IN_SET(OutsourceCI,'{0}'),FALSE))", If(Multiple_ID = "", Branch_ID, Multiple_ID), cbxCI.Checked)
        Dim Draft As Boolean
        Dim ForApproval As Boolean
        Dim ForCI As Boolean
        Dim CIStarted As Boolean
        Dim ForCrecommApproval As Boolean
        Dim ForReapproval As Boolean
        Dim ForSpecialApproval As Boolean
        Dim ForPaymentRequest As Boolean
        Dim ForCheckPreparation As Boolean
        Dim CVForChecking As Boolean
        Dim CVForApproval As Boolean
        Dim ForJournalVoucher As Boolean
        Dim CurrentlyAtJV As Boolean
        Dim ForReleasing As Boolean
        Dim Booked As Boolean
        Dim ClosedAccount As Boolean
        Dim Cancelled As Boolean
        For x As Integer = 0 To cbxStatus.Properties.Items.Count - 1
            If cbxStatus.Properties.Items.Item(x).CheckState = CheckState.Checked Then
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "Draft" Then
                    Draft = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Approval" Then
                    ForApproval = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Credit Investigation" Then
                    ForCI = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "Credit Investigation Started" Then
                    CIStarted = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Crecomm Approval" Then
                    ForCrecommApproval = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Reapproval" Then
                    ForReapproval = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Special Approval" Then
                    ForSpecialApproval = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Payment Request" Then
                    ForPaymentRequest = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Check Preparation" Then
                    ForCheckPreparation = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "CV For Checking" Then
                    CVForChecking = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "CV For Approval" Then
                    CVForApproval = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Journal Voucher" Then
                    ForJournalVoucher = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "Currently at JV" Then
                    CurrentlyAtJV = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "For Releasing" Then
                    ForReleasing = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "Booked" Then
                    Booked = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "Closed Account" Then
                    ClosedAccount = True
                End If
                If cbxStatus.Properties.Items.Item(x).Description.ToString = "Cancelled" Then
                    Cancelled = True
                End If
            End If
        Next
        If Cancelled Then
            SQL &= " AND ("
            If Draft = False And ForApproval = False And ForCI = False And CIStarted = False And ForCrecommApproval = False And ForReapproval = False And ForSpecialApproval = False And ForPaymentRequest = False And ForCheckPreparation = False And CVForChecking = False And CVForApproval = False And ForJournalVoucher = False And CurrentlyAtJV = False And ForReleasing = False And Booked = False And ClosedAccount = False Then
                SQL &= " (`status` IN ('CANCELLED','DELETED','DISAPPROVED','HOLD') OR application_status IN ('DISAPPROVED','CANCELLED'))"
            Else
                Dim CancelledStatus As String = "'CANCELLED','DELETED','DISAPPROVED','HOLD'"
                If Draft Then
                    SQL &= String.Format(" (status IN ('DRAFT',{0}))", CancelledStatus)
                    If ForApproval Or ForCrecommApproval Or ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForApproval Then
                    SQL &= String.Format(" ((application_status = 'PENDING' AND status = 'ACTIVE' AND CI_Status = 'PENDING') OR `status` IN ({0}))", CancelledStatus)
                    If ForCI Or CIStarted Or ForCrecommApproval Or ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForCI Then
                    SQL &= String.Format(" ((application_status = 'APPROVED' AND status = 'ACTIVE' AND CI_Status = 'PENDING') OR `status` IN ({0}))", CancelledStatus)
                    If CIStarted Or ForCrecommApproval Or ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If CIStarted Then
                    SQL &= String.Format(" ((application_status = 'APPROVED' AND status = 'ACTIVE' AND CI_Status IN ('ONGOING','PENDING')) OR `status` IN ({0}))", CancelledStatus)
                    If ForCrecommApproval Or ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForCrecommApproval Then
                    SQL &= String.Format(" ((ci_status = 'CHECKED' AND status = 'ACTIVE' AND application_status = 'APPROVED') OR `status` IN ({0}))", CancelledStatus)
                    If ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForReapproval Then
                    SQL &= String.Format(" ((ApproveStatus = 'For Reapprove' AND ci_status = 'APPROVED' AND status = 'ACTIVE' AND application_status = 'APPROVED') OR `status` IN ({0}))", CancelledStatus)
                    If ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForSpecialApproval Then
                    SQL &= String.Format(" ((ApproveStatus = 'For Special' AND ci_status = 'APPROVED' AND status = 'ACTIVE' AND application_status = 'APPROVED') OR `status` IN ({0}))", CancelledStatus)
                    If ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForPaymentRequest Then
                    SQL &= String.Format(" ((PaymentRequest = 'PENDING' AND CI_Status = 'APPROVED' AND application_status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND CVforJV = 0 AND From_ROPOA = 0 AND ApproveStatus = 'APPROVED' AND status = 'ACTIVE') OR `status` IN ({0}))", CancelledStatus)
                    If ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForCheckPreparation Then
                    SQL &= String.Format(" ((PaymentRequest = 'REQUEST' AND CI_Status = 'APPROVED' AND application_status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND ApproveStatus = 'APPROVED' AND status = 'ACTIVE') OR `status` IN ({0}))", CancelledStatus)
                    If CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If CVForChecking Then
                    SQL &= String.Format(" ((PaymentRequest = 'REQUESTED' AND CI_Status = 'APPROVED' AND application_status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND ApproveStatus = 'APPROVED' AND status = 'ACTIVE') OR `status` IN ({0}))", CancelledStatus)
                    If CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If CVForApproval Then
                    SQL &= String.Format(" ((PaymentRequest = 'CHECKED REQUEST' AND CI_Status = 'APPROVED' AND application_status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND ApproveStatus = 'APPROVED' AND status = 'ACTIVE') OR `status` IN ({0}))", CancelledStatus)
                    If ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForJournalVoucher Then
                    SQL &= String.Format(" ((PaymentRequest = 'PENDING' AND CI_Status = 'APPROVED' AND application_status = 'APPROVED' AND (loan_type = 'RESTRUCTURE' OR From_ROPOA = 1 OR CVforJV = 1) AND status = 'ACTIVE') OR `status` IN ({0}))", CancelledStatus)
                    If CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If CurrentlyAtJV Then
                    SQL &= String.Format(" ((PaymentRequest = 'JV Request' AND ci_status = 'APPROVED' AND status = 'ACTIVE' AND application_status = 'APPROVED') OR `status` IN ({0}))", CancelledStatus)
                    If ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForReleasing Then
                    SQL &= String.Format(" ((PaymentRequest = 'APPROVED REQUEST' AND ci_status = 'APPROVED' AND status = 'ACTIVE' AND application_status = 'APPROVED') OR `status` IN ({0}))", CancelledStatus)
                    If Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If Booked Then
                    SQL &= String.Format(" ((PaymentRequest = 'RELEASED' AND ci_status = 'APPROVED' AND status = 'ACTIVE' AND application_status = 'APPROVED') OR `status` IN ({0}))", CancelledStatus)
                    If ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ClosedAccount Then
                    SQL &= String.Format(" ((PaymentRequest = 'CLOSED' AND ci_status = 'APPROVED' AND status = 'ACTIVE' AND application_status = 'APPROVED') OR `status` IN ({0}))", CancelledStatus)
                End If
            End If
            SQL &= " )"
        Else
            If Draft Or ForApproval Or ForCI Or CIStarted Or ForCrecommApproval Or ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                SQL &= " AND ("
                If Draft Then
                    SQL &= " (application_status = 'PENDING' AND status = 'DRAFT' AND CI_Status = 'PENDING')"
                    If ForApproval Or ForApproval Or ForCI Or CIStarted Or ForCrecommApproval Or ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForApproval Then
                    SQL &= " (application_status = 'PENDING' AND status = 'ACTIVE' AND CI_Status = 'PENDING')"
                    If ForCI Or CIStarted Or ForCrecommApproval Or ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForCI Then
                    SQL &= " (application_status = 'APPROVED' AND status = 'ACTIVE' AND CI_Status = 'PENDING')"
                    If CIStarted Or ForCrecommApproval Or ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If CIStarted Then
                    SQL &= " (application_status = 'APPROVED' AND status = 'ACTIVE' AND CI_Status IN ('ONGOING','PENDING'))"
                    If ForCrecommApproval Or ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForCrecommApproval Then
                    SQL &= " (ci_status = 'CHECKED' AND status = 'ACTIVE' AND application_status = 'APPROVED')"
                    If ForReapproval Or ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForReapproval Then
                    SQL &= " (ApproveStatus = 'For Reapprove' AND ci_status = 'APPROVED' AND status = 'ACTIVE' AND application_status = 'APPROVED')"
                    If ForSpecialApproval Or ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForSpecialApproval Then
                    SQL &= " (ApproveStatus = 'For Special' AND ci_status = 'APPROVED' AND status = 'ACTIVE' AND application_status = 'APPROVED')"
                    If ForPaymentRequest Or ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForPaymentRequest Then
                    SQL &= " (PaymentRequest = 'PENDING' AND CI_Status = 'APPROVED' AND application_status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND CVforJV = 0 AND From_ROPOA = 0 AND ApproveStatus = 'APPROVED' AND status = 'ACTIVE')"
                    If ForCheckPreparation Or CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForCheckPreparation Then
                    SQL &= " (PaymentRequest = 'REQUEST' AND CI_Status = 'APPROVED' AND application_status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND ApproveStatus = 'APPROVED' AND status = 'ACTIVE')"
                    If CVForChecking Or CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If CVForChecking Then
                    SQL &= " (PaymentRequest = 'REQUESTED' AND CI_Status = 'APPROVED' AND application_status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND ApproveStatus = 'APPROVED' AND status = 'ACTIVE')"
                    If CVForApproval Or ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If CVForApproval Then
                    SQL &= " (PaymentRequest = 'CHECKED REQUEST' AND CI_Status = 'APPROVED' AND application_status = 'APPROVED' AND loan_type != 'RESTRUCTURE' AND ApproveStatus = 'APPROVED' AND status = 'ACTIVE')"
                    If ForJournalVoucher Or CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForJournalVoucher Then
                    SQL &= " (PaymentRequest = 'PENDING' AND CI_Status = 'APPROVED' AND application_status = 'APPROVED' AND (loan_type = 'RESTRUCTURE' OR From_ROPOA = 1 OR CVforJV = 1) AND status = 'ACTIVE')"
                    If CurrentlyAtJV Or ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If CurrentlyAtJV Then
                    SQL &= " (PaymentRequest = 'JV Request' AND ci_status = 'APPROVED' AND status = 'ACTIVE' AND application_status = 'APPROVED')"
                    If ForReleasing Or Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ForReleasing Then
                    SQL &= " (PaymentRequest = 'APPROVED REQUEST' AND ci_status = 'APPROVED' AND status = 'ACTIVE' AND application_status = 'APPROVED')"
                    If Booked Or ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If Booked Then
                    SQL &= " (PaymentRequest = 'RELEASED' AND ci_status = 'APPROVED' AND status = 'ACTIVE' AND application_status = 'APPROVED')"
                    If ClosedAccount Then
                        SQL &= " OR "
                    End If
                End If
                If ClosedAccount Then
                    SQL &= " (PaymentRequest = 'CLOSED' AND ci_status = 'APPROVED' AND status = 'ACTIVE' AND application_status = 'APPROVED')"
                End If
                SQL &= " )"
            End If
        End If
        If cbxAll.Checked Then
        Else
            SQL &= String.Format("    AND DATE(trans_date) BETWEEN '{0}' AND '{1}'", FormatDatePicker(dtpFrom), FormatDatePicker(dtpTo))
        End If
        If From_CI_Print Then
            SQL &= String.Format(" AND CreditNumber = '{0}'", CreditNumber)
        End If
        SQL &= " ORDER BY trans_date DESC, CreditNumber DESC;"

        GridControl5.DataSource = DataSource(SQL)
        GridView5.Columns("Borrower").SummaryItem.SummaryType = DevExpress.Data.SummaryItemType.Count
        GridView5.Columns("Borrower").SummaryItem.DisplayFormat = "Total of {0} record(s) fetched"

        If GridView5.RowCount > 15 Then
            If CompanyMode = 0 Then
                GridColumn31.Width = 220 + 70
            Else
                GridColumn31.Width = 220
            End If
        Else
            If CompanyMode = 0 Then
                GridColumn31.Width = 220 + 70 + 17
            Else
                GridColumn31.Width = 220 + 17
            End If
        End If
        Cursor = Cursors.Default
    End Sub

    Private Sub BtnSearch_Click(sender As Object, e As EventArgs) Handles btnSearch.Click
        If FirstLoad Then
            Exit Sub
        End If

        LoadData()
    End Sub

    Private Sub GridView5_RowCellStyle(sender As Object, e As DevExpress.XtraGrid.Views.Grid.RowCellStyleEventArgs) Handles GridView5.RowCellStyle
        If GridView5.RowCount > 0 Then
            Dim View As DevExpress.XtraGrid.Views.Grid.GridView = sender
            Dim AppStatus As String = View.GetRowCellDisplayText(e.RowHandle, View.Columns("application_status"))
            Dim Status As String = View.GetRowCellDisplayText(e.RowHandle, View.Columns("status"))
            Dim CI_Status As String = View.GetRowCellDisplayText(e.RowHandle, View.Columns("CI_Status"))
            Dim Outsource As String = View.GetRowCellDisplayText(e.RowHandle, View.Columns("OutsourceCI"))
            e.Appearance.Font = New Font(OfficialFont, 8.25, FontStyle.Regular)
            If Status = "HOLD" Or Status = "CANCELLED" Or Status = "DELETED" Or AppStatus = "DISAPPROVED" Or CI_Status = "DISAPPROVED" Then
                e.Appearance.ForeColor = Color.Red
            ElseIf Outsource <> "" And Branch_ID.ToString = Outsource Then
                e.Appearance.ForeColor = Color.DarkGoldenrod
            End If
            'If Outsource <> "" And Branch_ID.ToString = Outsource Then
            '    e.Appearance.ForeColor = Color.DarkGoldenrod
            'ElseIf Status = "DRAFT" Then
            '    e.Appearance.ForeColor = Color.IndianRed
            'ElseIf Status = "HOLD" Or Status = "CANCELLED" Or Status = "DELETED" Then
            '    e.Appearance.ForeColor = Color.Red
            '    e.Appearance.Font = New Font(OfficialFont, 8.25, FontStyle.Bold)
            'Else
            '    If AppStatus = "PENDING" Then
            '        e.Appearance.ForeColor = Color.RoyalBlue
            '    ElseIf AppStatus = "DISAPPROVED" Or CI_Status = "DISAPPROVED" Then
            '        e.Appearance.ForeColor = Color.Red
            '    ElseIf AppStatus = "APPROVED" Then
            '        e.Appearance.ForeColor = Color.SeaGreen
            '        If CI_Status = "APPROVED" Then
            '            e.Appearance.Font = New Font(OfficialFont, 8.25, FontStyle.Bold)
            '        End If
            '    End If
            'End If
        End If
    End Sub

    Private Sub CbxAll_CheckedChanged(sender As Object, e As EventArgs) Handles cbxAll.CheckedChanged
        If cbxAll.Checked Then
            cbxDisplay.SelectedIndex = -1
            cbxDisplay.Enabled = False
            dtpFrom.Enabled = False
            dtpFrom.CustomFormat = ""
            dtpTo.Enabled = False
            dtpTo.CustomFormat = ""
        Else
            cbxDisplay.SelectedIndex = 0
            cbxDisplay.Enabled = True
            dtpFrom.CustomFormat = "MMMM dd, yyyy"
            dtpTo.CustomFormat = "MMMM dd, yyyy"
        End If
    End Sub

    Private Sub CbxDisplay_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbxDisplay.SelectedIndexChanged
        If cbxDisplay.SelectedIndex = 0 Then
            dtpFrom.Value = Date.Now
            dtpFrom.Enabled = False
            dtpFrom.CustomFormat = "MMMM dd, yyyy"

            dtpTo.Value = Date.Now
            dtpTo.Enabled = False
            dtpTo.CustomFormat = "MMMM dd, yyyy"
        ElseIf cbxDisplay.SelectedIndex = 1 Then
            Dim today As Date = Date.Today
            Dim dayDiff As Integer = today.DayOfWeek - DayOfWeek.Monday
            Dim monday As Date = today.AddDays(-dayDiff)

            dtpFrom.Value = monday
            dtpFrom.Enabled = False
            dtpFrom.CustomFormat = "MMMM dd, yyyy"

            dtpTo.Value = monday.AddDays(6)
            dtpTo.Enabled = False
            dtpTo.CustomFormat = "MMMM dd, yyyy"
        ElseIf cbxDisplay.SelectedIndex = 2 Then
            dtpFrom.Value = DateValue(Format(Date.Now, "yyyy-MM-01"))
            dtpFrom.Enabled = False
            dtpFrom.CustomFormat = "MMMM dd, yyyy"

            dtpTo.Value = DateValue(Format(Date.Now, String.Format("yyyy-MM-{0}", Date.DaysInMonth(Format(Date.Now, "yyyy"), Format(Date.Now, "MM")))))
            dtpTo.Enabled = False
            dtpTo.CustomFormat = "MMMM dd, yyyy"
        ElseIf cbxDisplay.SelectedIndex = 3 Then
            dtpFrom.Value = DateValue(Format(Date.Now, "yyyy-01-01"))
            dtpFrom.Enabled = False
            dtpFrom.CustomFormat = "MMMM dd, yyyy"

            dtpTo.Value = DateValue(Format(Date.Now, "yyyy-12-31"))
            dtpTo.Enabled = False
            dtpTo.CustomFormat = "MMMM dd, yyyy"
        ElseIf cbxDisplay.SelectedIndex = 4 Then
            dtpFrom.Enabled = True
            dtpFrom.CustomFormat = "MMMM dd, yyyy"

            dtpTo.Enabled = True
            dtpTo.CustomFormat = "MMMM dd, yyyy"
        End If
    End Sub

    Private Sub DtpFrom_Leave(sender As Object, e As EventArgs) Handles dtpFrom.Leave
        dtpTo.MinDate = dtpFrom.Value
    End Sub

    Public Sub GridView5_DoubleClick(sender As Object, e As EventArgs) Handles GridView5.DoubleClick
        Try
            If GridView5.GetFocusedRowCellValue("Credit Number") = "" Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        FirstLoad = True
        If GridView5.GetFocusedRowCellValue("OtherBranch") = 1 Then
            cbxOtherBranch.Checked = True
        Else
            cbxOtherBranch.Checked = False
        End If
        FirstLoad = False
        Clear()
        CbxPrefix_B.Enabled = True
        TxtFirstN_B.Enabled = True
        TxtMiddleN_B.Enabled = True
        TxtLastN_B.Enabled = True
        cbxSuffix_B.Enabled = True
        GridControl1.Enabled = True
        GridControl2.Enabled = True
        cbxBorrower.Enabled = False
        With GridView5
            Borrower_BranchID = .GetFocusedRowCellValue("BorrowerBranchID")
            AssignedCI = .GetFocusedRowCellValue("assigned_CI")
            RestructureDeductionUDI = .GetFocusedRowCellValue("RestructureDeductionUDI")
            RestructureDeductionRPPD = .GetFocusedRowCellValue("RestructureDeductionRPPD")
            dtpDate.CustomFormat = "MMM dd, yyyy"
            dtpDate.Value = .GetFocusedRowCellValue("trans_date")
            dtpDate.Tag = .GetFocusedRowCellValue("trans_date")

            LoadAccountNumber(.GetFocusedRowCellValue("CreditNumber_Old"), cbxOptions.SelectedIndex = 3)
            If .GetFocusedRowCellValue("BM_Amount") > 0 And From_CI And From_CI_Print Then
                dAmountApplied.Value = .GetFocusedRowCellValue("BM_Amount")
                dAmountApplied.Tag = .GetFocusedRowCellValue("BM_Amount")
            Else
                dAmountApplied.Value = .GetFocusedRowCellValue("AmountApplied")
                dAmountApplied.Tag = .GetFocusedRowCellValue("AmountApplied")
            End If

            If .GetFocusedRowCellValue("BM_Terms") > 0 And From_CI And From_CI_Print Then
                iTerms.Value = .GetFocusedRowCellValue("BM_Terms")
                iTerms.Tag = .GetFocusedRowCellValue("BM_Terms")
            Else
                iTerms.Value = .GetFocusedRowCellValue("Terms")
                iTerms.Tag = .GetFocusedRowCellValue("Terms")
            End If

            cbxTerms.Text = .GetFocusedRowCellValue("TermType")
            cbxTerms.Tag = .GetFocusedRowCellValue("TermType")

            cbxProduct.SelectedValue = .GetFocusedRowCellValue("product_id")
            cbxProduct.Tag = .GetFocusedRowCellValue("Product")
            cbxProduct_SelectedIndexChanged(sender, e)
            GridControl4.DataSource = DataSource(String.Format("SELECT processing_id AS 'ID', processing AS 'Processing Fee', Amount, 'No' AS 'Tariff', `Amount` AS 'Amount 2' FROM credit_processing_fee WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' ORDER BY `Processing Fee`", GridView5.GetFocusedRowCellValue("Credit Number")))
            If GridView4.RowCount > 11 Then
                GridColumn26.Width = 400
            Else
                GridColumn26.Width = 400 + 17
            End If
            DT_Account = DataSource(String.Format("SELECT  ID, AccountNumber AS 'Account Number', CreditNumber AS 'Credit Number', FORMAT(LR,2) AS 'Loans Receivable', FORMAT(UDI_Discount,2) AS 'UDI Discount', FORMAT(UDI_DiscountP,2) AS 'UDI Percent', FORMAT(AvailedRPPD,2) AS 'Availed RPPD', FORMAT(AR,2) AS 'Accounts Receivable', FORMAT(Penalty,2) AS 'Penalty', DATE_FORMAT(Asof,'%b-%d-%Y') AS 'As Of', FORMAT((LR - (UDI_Discount + AvailedRPPD)) + (AR + Penalty),2) AS 'Net Payable', FORMAT(Amount,2) AS 'Amount' FROM credit_deductbalance WHERE `status` = 'ACTIVE' AND deduct_status = 'PENDING' AND CreditNumber_F = '{0}';", GridView5.GetFocusedRowCellValue("Credit Number")))

            cbxCollateral.Text = .GetFocusedRowCellValue("collateral")
            cbxCollateral.Tag = .GetFocusedRowCellValue("collateral")

            Dim drv As DataRowView = DirectCast(cbxProduct.SelectedItem, DataRowView)
            If cbxProduct.Text = "" Or cbxProduct.SelectedIndex = -1 Then
            Else
                If drv("mortgage_id") = 1 Or drv("mortgage_id") = 2 Then
                    btnFromROPA.Visible = True
                Else
                    btnFromROPA.Visible = False
                End If
            End If
            AssetNumber_1 = .GetFocusedRowCellValue("AssetNumber_1")
            AssetNumber_2 = .GetFocusedRowCellValue("AssetNumber_2")
            AssetNumber_3 = .GetFocusedRowCellValue("AssetNumber_3")
            AssetNumber_4 = .GetFocusedRowCellValue("AssetNumber_4")
            AssetNumber_5 = .GetFocusedRowCellValue("AssetNumber_5")
            AssetSelling_1 = .GetFocusedRowCellValue("AssetSelling_1")
            AssetSelling_2 = .GetFocusedRowCellValue("AssetSelling_2")
            AssetSelling_3 = .GetFocusedRowCellValue("AssetSelling_3")
            AssetSelling_4 = .GetFocusedRowCellValue("AssetSelling_4")
            AssetSelling_5 = .GetFocusedRowCellValue("AssetSelling_5")

            txtPurpose.Text = .GetFocusedRowCellValue("purpose")
            txtPurpose.Tag = .GetFocusedRowCellValue("purpose")

            txtCreditNumber.Text = .GetFocusedRowCellValue("Credit Number")
            txtCreditNumber.Tag = .GetFocusedRowCellValue("Credit Number")

            cbxOptions.Text = .GetFocusedRowCellValue("Loan Type")
            cbxOptions.Tag = .GetFocusedRowCellValue("Loan Type")

            FirstLoad = True
            cbxAccountNo.Text = .GetFocusedRowCellValue("AccountN")
            cbxAccountNo.Tag = .GetFocusedRowCellValue("AccountN")
            FirstLoad = False

            If .GetFocusedRowCellValue("BM_Interest") > 0 And From_CI And From_CI_Print Then
                dInterest_T.Value = .GetFocusedRowCellValue("BM_Interest")
                dInterest_T.Tag = .GetFocusedRowCellValue("BM_Interest")
            Else
                dInterest_T.Value = .GetFocusedRowCellValue("interest_rate")
                dInterest_T.Tag = .GetFocusedRowCellValue("interest_rate")
            End If

            If CompanyMode = 0 Then
                dRPPDRate_T.Value = 0
                dRPPDRate_T.Tag = 0
            Else
                dRPPDRate_T.Value = .GetFocusedRowCellValue("rppd_rate")
                dRPPDRate_T.Tag = .GetFocusedRowCellValue("rppd_rate")
            End If

            cbxA.Checked = False
            cbxB.Checked = False
            cbxC.Checked = False
            cbxD.Checked = False
            If .GetFocusedRowCellValue("OptionD") = "A" Then
                cbxA.Checked = True
            ElseIf .GetFocusedRowCellValue("OptionD") = "B" Then
                cbxB.Checked = True
            ElseIf .GetFocusedRowCellValue("OptionD") = "C" Then
                cbxC.Checked = True
            ElseIf .GetFocusedRowCellValue("OptionD") = "D" Then
                cbxD.Checked = True
            End If

            iAdvancePayment.Value = .GetFocusedRowCellValue("AdvancePayment_Count")
            iAdvancePayment.Tag = .GetFocusedRowCellValue("AdvancePayment_Count")

            rNote.Text = .GetFocusedRowCellValue("Note")
            rNote.Tag = .GetFocusedRowCellValue("Note")

            dSC_C.Value = .GetFocusedRowCellValue("Service_Charge")
            dSC_C.Tag = .GetFocusedRowCellValue("Service_Charge")

            dSC_Rate.Value = .GetFocusedRowCellValue("ServiceCharge_Rate")
            dSC_Rate.Tag = .GetFocusedRowCellValue("ServiceCharge_Rate")

            dAppraisalFee_C.Value = .GetFocusedRowCellValue("Appraisal_Fee")
            dAppraisalFee_C.Tag = .GetFocusedRowCellValue("Appraisal_Fee")

            dCIFee_C.Value = .GetFocusedRowCellValue("CI_Fee")
            dCIFee_C.Tag = .GetFocusedRowCellValue("CI_Fee")

            dInsurance_C.Value = .GetFocusedRowCellValue("Insurance")
            dInsurance_C.Tag = .GetFocusedRowCellValue("Insurance")

            dMiscellaneous_C.Value = .GetFocusedRowCellValue("Miscellaneous_Income")
            dMiscellaneous_C.Tag = .GetFocusedRowCellValue("Miscellaneous_Income")

            dAdvancePayment_C.Value = .GetFocusedRowCellValue("Advance_Payment")
            dAdvancePayment_C.Tag = .GetFocusedRowCellValue("Advance_Payment")

            dDeductBalance_C.Value = .GetFocusedRowCellValue("Deduct_Balance")
            dDeductBalance_C.Tag = .GetFocusedRowCellValue("Deduct_Balance")

            cbxBill.Checked = .GetFocusedRowCellValue("BillDeductions")
            cbxAdvancePayment.Checked = .GetFocusedRowCellValue("IncludeAdvancePaymentInBill")
            cbxYearHired.Checked = .GetFocusedRowCellValue("YearHired")
            cbxYearFranchise.Checked = .GetFocusedRowCellValue("YearFranchise")

            dUDI_C.Value = .GetFocusedRowCellValue("interest")
            dUDI_C.Tag = .GetFocusedRowCellValue("interest")

            dRPPD_C.Value = .GetFocusedRowCellValue("rppd")
            dRPPD_C.Tag = .GetFocusedRowCellValue("rppd")

            dFA_C.Value = .GetFocusedRowCellValue("face_amount")
            dFA_C.Tag = .GetFocusedRowCellValue("face_amount")

            dGMA_C.Value = .GetFocusedRowCellValue("gma")
            dGMA_C.Tag = .GetFocusedRowCellValue("gma")

            dMR_C.Value = .GetFocusedRowCellValue("rebate")
            dMR_C.Tag = .GetFocusedRowCellValue("rebate")

            BorrowerID = .GetFocusedRowCellValue("BorrowerID")
            FirstLoad = True
            If BorrowerID.Contains("C") Then
                cbxCorporate.Checked = True
            Else
                cbxCorporate.Checked = False
            End If
            FirstLoad = False
            cbxBorrower.Text = ""
            CbxPrefix_B.Text = .GetFocusedRowCellValue("Prefix_B")
            CbxPrefix_B.Tag = .GetFocusedRowCellValue("Prefix_B")

            CbxPrefix_B.Text = .GetFocusedRowCellValue("Prefix_B")
            CbxPrefix_B.Tag = .GetFocusedRowCellValue("Prefix_B")

            TxtFirstN_B.Text = .GetFocusedRowCellValue("FirstN_B")
            TxtFirstN_B.Tag = .GetFocusedRowCellValue("FirstN_B")

            TxtMiddleN_B.Text = .GetFocusedRowCellValue("MiddleN_B")
            TxtMiddleN_B.Tag = .GetFocusedRowCellValue("MiddleN_B")

            TxtLastN_B.Text = .GetFocusedRowCellValue("LastN_B")
            TxtLastN_B.Tag = .GetFocusedRowCellValue("LastN_B")

            cbxSuffix_B.Text = .GetFocusedRowCellValue("Suffix_B")
            cbxSuffix_B.Tag = .GetFocusedRowCellValue("Suffix_B")

            CbxPrefix_S.Text = .GetFocusedRowCellValue("Prefix_S")
            CbxPrefix_S.Tag = .GetFocusedRowCellValue("Prefix_S")

            TxtFirstN_S.Text = .GetFocusedRowCellValue("FirstN_S")
            TxtFirstN_S.Tag = .GetFocusedRowCellValue("FirstN_S")

            TxtMiddleN_S.Text = .GetFocusedRowCellValue("MiddleN_S")
            TxtMiddleN_S.Tag = .GetFocusedRowCellValue("MiddleN_S")

            TxtLastN_S.Text = .GetFocusedRowCellValue("LastN_S")
            TxtLastN_S.Tag = .GetFocusedRowCellValue("LastN_S")

            cbxSuffix_S.Text = .GetFocusedRowCellValue("Suffix_S")
            cbxSuffix_S.Tag = .GetFocusedRowCellValue("Suffix_S")
        End With

        If TxtFirstN_S.Text = "" Then
            SpouseID = ""
        Else
            Dim Spouse As DataTable = DataSource(String.Format("SELECT * FROM profile_spouse WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE' ORDER BY ID DESC LIMIT 1;", BorrowerID))
            If Spouse.Rows.Count > 0 Then
                btnSN.Enabled = True
                SpouseID = Spouse(0)("SpouseID")
                CbxPrefix_S.Text = Spouse(0)("Prefix_S")
                TxtFirstN_S.Text = Spouse(0)("FirstN_S")
                TxtMiddleN_S.Text = Spouse(0)("MiddleN_S")
                TxtLastN_S.Text = Spouse(0)("LastN_S")
                cbxSuffix_S.Text = Spouse(0)("Suffix_S")
                CbxPrefix_S.Tag = Spouse(0)("Prefix_S")
                TxtFirstN_S.Tag = Spouse(0)("FirstN_S")
                TxtMiddleN_S.Tag = Spouse(0)("MiddleN_S")
                TxtLastN_S.Tag = Spouse(0)("LastN_S")
                cbxSuffix_S.Tag = Spouse(0)("Suffix_S")

                vPrefix_S = Spouse(0)("Prefix_S")
                vFirstN_S = Spouse(0)("FirstN_S")
                vMiddleN_S = Spouse(0)("MiddleN_S")
                vLastN_S = Spouse(0)("LastN_S")
                vSuffix_S = Spouse(0)("Suffix_S")
                vNoC_S = Spouse(0)("NoC_S")
                vStreetC_S = Spouse(0)("StreetC_S")
                vBarangayC_S = Spouse(0)("BarangayC_S")
                vAddressC_S = Spouse(0)("AddressC_S")
                vNoP_S = Spouse(0)("NoP_S")
                vStreetP_S = Spouse(0)("StreetP_S")
                vBarangayP_S = Spouse(0)("BarangayP_S")
                vAddressP_S = Spouse(0)("AddressP_S")
                vBirth_S = Spouse(0)("Birth_S")
                vPlaceBirth_S = Spouse(0)("PlaceBirth_S")
                If Spouse(0)("Gender_S") = "Male" Then
                    vMale_S = True
                ElseIf Spouse(0)("Gender_S") = "Female" Then
                    vFemale_S = True
                End If
                vCitizenship_S = Spouse(0)("Citizenship_S")
                vTIN_S = Spouse(0)("TIN_S")
                vTelephone_S = Spouse(0)("Telephone_S")
                vSSS_S = Spouse(0)("SSS_S")
                vMobile_S = Spouse(0)("Mobile_S")
                vEmail_S = Spouse(0)("Email_S")
                If Spouse(0)("House_S") = "Owned" Then
                    vOwned_S = True
                ElseIf Spouse(0)("House_S") = "Free" Then
                    vFree_S = True
                ElseIf Spouse(0)("House_S") = "Rented" Then
                    vRented_S = True
                    vRent_S = Spouse(0)("Rent_S")
                End If
                Try
                    Using TempPB As New DevExpress.XtraEditors.PictureEdit
                        TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Borrowers\{3}\{4}", RootFolder, MainFolder, GridView5.GetFocusedRowCellValue("branch_code"), BorrowerID, "Spouse.jpg"))
                        If IO.File.Exists(String.Format("{0}\{1}\{2}\Borrowers\{3}\{4}", RootFolder, MainFolder, GridView5.GetFocusedRowCellValue("branch_code"), BorrowerID, "Spouse.jpg")) Then
                            txtPath_S.Text = "Spouse.jpg"
                        Else
                            txtPath_S.Text = ""
                        End If
                        ResizeImages(TempPB.Image.Clone, pb_Spouse, 850, 700)
                    End Using
                Catch ex As Exception
                    txtPath_S.Text = ""
                End Try
                vEmployer_S = Spouse(0)("Employer_S")
                vEmpAddress_S = Spouse(0)("EmployerAddress_S")
                vEmpTelephone_S = Spouse(0)("EmployerTelephone_S")
                vPosition_S = Spouse(0)("Position_S")
                If Spouse(0)("EmploymentStat_S") = "Casual" Then
                    vCasual_S = True
                ElseIf Spouse(0)("EmploymentStat_S") = "Temporary" Then
                    vTemporary_S = True
                ElseIf Spouse(0)("EmploymentStat_S") = "Permanent" Then
                    vPermanent_S = True
                End If
                vHired_S = Spouse(0)("Hired_S")
                vYearHired_S = Spouse(0)("YearHired_S")
                vSupervisor_S = Spouse(0)("Supervisor_S")
                vSalary_S = Spouse(0)("Monthly_S")
                vBusinessName_S = Spouse(0)("BusinessName_S")
                vBusinessAddress_S = Spouse(0)("BusinessAddress_S")
                vBusinessTelephone_S = Spouse(0)("BusinessTelephone_S")
                vNatureBusiness_S = Spouse(0)("NatureBusiness_S")
                vYrsOperation_S = Spouse(0)("YrsOperation_S")
                vBusinessIncome_S = Spouse(0)("BusinessIncome_S")
                vNoEmployees_S = Spouse(0)("NoEmployees_S")
                vCapital_S = Spouse(0)("Capital_S")
                vArea_S = Spouse(0)("Area_S")
                vExpiry_S = Spouse(0)("Expiry_S")
                vOutlet_S = Spouse(0)("Outlet_S")
                vOtherIncome_S = Spouse(0)("OtherIncome_S")
                vOtherIncomeD_S = Spouse(0)("OtherIncome_S-Amount")
                Industry_S.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM profile_borrower_industry WHERE `status` = 'ACTIVE' AND BorrowerID = '{0}' AND `Type` = 'Spouse'", Spouse(0)("BorrowerID"))))

                '*** I D E N T I F I C A T I O N ***
                Dim BorrowerID_S As DataTable = DataSource(String.Format("SELECT * FROM profile_borrowerid WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE' AND ID_Type = 'S'", BorrowerID))
                If BorrowerID_S.Rows.Count > 0 Then
                    TIN_S = BorrowerID_S(0)("TIN")
                    SSS_S = BorrowerID_S(0)("SSS")
                    GSIS_S = BorrowerID_S(0)("GSIS")
                    PhilHealth_S = BorrowerID_S(0)("PhilHealth")
                    Senior_S = BorrowerID_S(0)("Senior")
                    UMID_S = BorrowerID_S(0)("UMID")
                    SEC_S = BorrowerID_S(0)("SEC")
                    DTI_S = BorrowerID_S(0)("DTI")
                    CDA_S = BorrowerID_S(0)("CDA")
                    Cooperative_S = BorrowerID_S(0)("Cooperative")
                    Drivers_S = BorrowerID_S(0)("Drivers")
                    dDrivers_S = BorrowerID_S(0)("dDrivers")
                    VIN_S = BorrowerID_S(0)("VIN")
                    dVIN_S = BorrowerID_S(0)("dVIN")
                    Passport_S = BorrowerID_S(0)("Passport")
                    dPassport_S = BorrowerID_S(0)("dPassport")
                    PRC_S = BorrowerID_S(0)("PRC")
                    dPRC_S = BorrowerID_S(0)("dPRC")
                    NBI_S = BorrowerID_S(0)("NBI")
                    dNBI_S = BorrowerID_S(0)("dNBI")
                    Police_S = BorrowerID_S(0)("Police")
                    dPolice_S = BorrowerID_S(0)("dPolice")
                    Postal_S = BorrowerID_S(0)("Postal")
                    dPostal_S = BorrowerID_S(0)("dPostal")
                    Barangay_S = BorrowerID_S(0)("Barangay")
                    dBarangay_S = BorrowerID_S(0)("dBarangay")
                    OWWA_S = BorrowerID_S(0)("OWWA")
                    dOWWA_S = BorrowerID_S(0)("dOWWA")
                    OFW_S = BorrowerID_S(0)("OFW")
                    dOFW_S = BorrowerID_S(0)("dOFW")
                    Seaman_S = BorrowerID_S(0)("Seaman")
                    dSeaman_S = BorrowerID_S(0)("dSeaman")
                    PNP_S = BorrowerID_S(0)("PNP")
                    dPNP_S = BorrowerID_S(0)("dPNP")
                    AFP_S = BorrowerID_S(0)("AFP")
                    dAFP_S = BorrowerID_S(0)("dAFP")
                    HDMF_S = BorrowerID_S(0)("HDMF")
                    dHDMF_S = BorrowerID_S(0)("dHDMF")
                    PWD_S = BorrowerID_S(0)("PWD")
                    dPWD_S = BorrowerID_S(0)("dPWD")
                    DSWD_S = BorrowerID_S(0)("DSWD")
                    dDSWD_S = BorrowerID_S(0)("dDSWD")
                    ACR_S = BorrowerID_S(0)("ACR")
                    dACR_S = BorrowerID_S(0)("dACR")
                    DTI_Business_S = BorrowerID_S(0)("DTI_Business")
                    dDTI_Business_S = BorrowerID_S(0)("dDTI_Business")
                    IBP_S = BorrowerID_S(0)("IBP")
                    dIBP_S = BorrowerID_S(0)("dIBP")
                    FireArms_S = BorrowerID_S(0)("FireArms")
                    dFireArms_S = BorrowerID_S(0)("dFireArms")
                    Government_S = BorrowerID_S(0)("Government")
                    dGovernment_S = BorrowerID_S(0)("dGovernment")
                    Diplomat_S = BorrowerID_S(0)("Diplomat")
                    dDiplomat_S = BorrowerID_S(0)("dDiplomat")
                    National_S = BorrowerID_S(0)("National")
                    dNational_S = BorrowerID_S(0)("dNational")
                    Work_S = BorrowerID_S(0)("Work")
                    dWork_S = BorrowerID_S(0)("dWork")
                    GOCC_S = BorrowerID_S(0)("GOCC")
                    dGOCC_S = BorrowerID_S(0)("dGOCC")
                    PLRA_S = BorrowerID_S(0)("PLRA")
                    dPLRA_S = BorrowerID_S(0)("dPLRA")
                    Major_S = BorrowerID_S(0)("Major")
                    dMajor_S = BorrowerID_S(0)("dMajor")
                    Media_S = BorrowerID_S(0)("Media")
                    dMedia_S = BorrowerID_S(0)("dMedia")
                    Student_S = BorrowerID_S(0)("Student")
                    dStudent_S = BorrowerID_S(0)("dStudent")
                    SIRV_S = BorrowerID_S(0)("SIRV")
                    dSIRV_S = BorrowerID_S(0)("dSIRV")
                End If
                '*** I D E N T I F I C A T I O N ***
            End If
        End If

        With GridView5
            CbxPrefix_C1.Text = .GetFocusedRowCellValue("Prefix_C1")
            CbxPrefix_C1.Tag = .GetFocusedRowCellValue("Prefix_C1")

            TxtFirstN_C1.Text = .GetFocusedRowCellValue("FirstN_C1")
            TxtFirstN_C1.Tag = .GetFocusedRowCellValue("FirstN_C1")

            TxtMiddleN_C1.Text = .GetFocusedRowCellValue("MiddleN_C1")
            TxtMiddleN_C1.Tag = .GetFocusedRowCellValue("MiddleN_C1")

            TxtLastN_C1.Text = .GetFocusedRowCellValue("LastN_C1")
            TxtLastN_C1.Tag = .GetFocusedRowCellValue("LastN_C1")

            cbxSuffix_C1.Text = .GetFocusedRowCellValue("Suffix_C1")
            cbxSuffix_C1.Tag = .GetFocusedRowCellValue("Suffix_C1")

            CbxPrefix_C2.Text = .GetFocusedRowCellValue("Prefix_C2")
            CbxPrefix_C2.Tag = .GetFocusedRowCellValue("Prefix_C2")

            TxtFirstN_C2.Text = .GetFocusedRowCellValue("FirstN_C2")
            TxtFirstN_C2.Tag = .GetFocusedRowCellValue("FirstN_C2")

            TxtMiddleN_C2.Text = .GetFocusedRowCellValue("MiddleN_C2")
            TxtMiddleN_C2.Tag = .GetFocusedRowCellValue("MiddleN_C2")

            TxtLastN_C2.Text = .GetFocusedRowCellValue("LastN_C2")
            TxtLastN_C2.Tag = .GetFocusedRowCellValue("LastN_C2")

            cbxSuffix_C2.Text = .GetFocusedRowCellValue("Suffix_C2")
            cbxSuffix_C2.Tag = .GetFocusedRowCellValue("Suffix_C2")

            CbxPrefix_C3.Text = .GetFocusedRowCellValue("Prefix_C3")
            CbxPrefix_C3.Tag = .GetFocusedRowCellValue("Prefix_C3")

            TxtFirstN_C3.Text = .GetFocusedRowCellValue("FirstN_C3")
            TxtFirstN_C3.Tag = .GetFocusedRowCellValue("FirstN_C3")

            TxtMiddleN_C3.Text = .GetFocusedRowCellValue("MiddleN_C3")
            TxtMiddleN_C3.Tag = .GetFocusedRowCellValue("MiddleN_C3")

            TxtLastN_C3.Text = .GetFocusedRowCellValue("LastN_C3")
            TxtLastN_C3.Tag = .GetFocusedRowCellValue("LastN_C3")

            cbxSuffix_C3.Text = .GetFocusedRowCellValue("Suffix_C3")
            cbxSuffix_C3.Tag = .GetFocusedRowCellValue("Suffix_C3")

            CbxPrefix_C4.Text = .GetFocusedRowCellValue("Prefix_C4")
            CbxPrefix_C4.Tag = .GetFocusedRowCellValue("Prefix_C4")

            TxtFirstN_C4.Text = .GetFocusedRowCellValue("FirstN_C4")
            TxtFirstN_C4.Tag = .GetFocusedRowCellValue("FirstN_C4")

            TxtMiddleN_C4.Text = .GetFocusedRowCellValue("MiddleN_C4")
            TxtMiddleN_C4.Tag = .GetFocusedRowCellValue("MiddleN_C4")

            TxtLastN_C4.Text = .GetFocusedRowCellValue("LastN_C4")
            TxtLastN_C4.Tag = .GetFocusedRowCellValue("LastN_C4")

            cbxSuffix_C4.Text = .GetFocusedRowCellValue("Suffix_C4")
            cbxSuffix_C4.Tag = .GetFocusedRowCellValue("Suffix_C4")
        End With

        btnSN.Enabled = True
        btnCM_1.Enabled = True
        btnCM_2.Enabled = True
        btnCM_3.Enabled = True
        btnCM_4.Enabled = True
        If TxtFirstN_C1.Text = "" Then
            CoMakerID = ""
        Else
            Dim CoMaker As DataTable = DataSource(String.Format("SELECT * FROM credit_application_comaker WHERE CreditNumber = '{0}' AND `status` = 'ACTIVE' ORDER BY `Rank`", GridView5.GetFocusedRowCellValue("Credit Number")))
            If CoMaker.Rows.Count > 0 Then
                btnCM_1.Enabled = True
                ReferenceID_1 = CoMaker(0)("ReferenceID")
                CoMakerID = CoMaker(0)("CoMakerID")
                vPrefix_C1 = CoMaker(0)("Prefix_C")
                vFirstN_C1 = CoMaker(0)("FirstN_C")
                vMiddleN_C1 = CoMaker(0)("MiddleN_C")
                vLastN_C1 = CoMaker(0)("LastN_C")
                vSuffix_C1 = CoMaker(0)("Suffix_C")
                vNoC_C1 = CoMaker(0)("NoC_C")
                vStreetC_C1 = CoMaker(0)("StreetC_C")
                vBarangayC_C1 = CoMaker(0)("BarangayC_C")
                vAddressC_C1 = CoMaker(0)("AddressC_C")
                vNoP_C1 = CoMaker(0)("NoP_C")
                vStreetP_C1 = CoMaker(0)("StreetP_C")
                vBarangayP_C1 = CoMaker(0)("BarangayP_C")
                vAddressP_C1 = CoMaker(0)("AddressP_C")
                vBirth_C1 = CoMaker(0)("Birth_C")
                vPlaceBirth_C1 = CoMaker(0)("PlaceBirth_C")
                If CoMaker(0)("Gender_C") = "Male" Then
                    vMale_C1 = True
                ElseIf CoMaker(0)("Gender_C") = "Female" Then
                    vFemale_C1 = True
                End If
                If CoMaker(0)("Civil_C") = "Single" Then
                    vSingle_C1 = True
                ElseIf CoMaker(0)("Civil_C") = "Married" Then
                    vMarried_C1 = True
                ElseIf CoMaker(0)("Civil_C") = "Separated" Then
                    vSeparated_C1 = True
                ElseIf CoMaker(0)("Civil_C") = "Widowed" Then
                    vWidowed_C1 = True
                End If
                vCitizenship_C1 = CoMaker(0)("Citizenship_C")
                vTIN_C1 = CoMaker(0)("TIN_C")
                vTelephone_C1 = CoMaker(0)("Telephone_C")
                vSSS_C1 = CoMaker(0)("SSS_C")
                vMobile_C1 = CoMaker(0)("Mobile_C")
                vEmail_C1 = CoMaker(0)("Email_C")
                If CoMaker(0)("House_C") = "Owned" Then
                    vOwned_C1 = True
                ElseIf CoMaker(0)("House_C") = "Free" Then
                    vFree_C1 = True
                ElseIf CoMaker(0)("House_C") = "Rented" Then
                    vRented_C1 = True
                    vRent_C1 = CoMaker(0)("Rent_C")
                End If
                Try
                    Using TempPB As New DevExpress.XtraEditors.PictureEdit
                        TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, GridView5.GetFocusedRowCellValue("branch_code"), GridView5.GetFocusedRowCellValue("Credit Number"), "CoMaker1.jpg"))
                        ResizeImages(TempPB.Image.Clone, CoMaker1, 850, 700)
                    End Using
                Catch ex As Exception
                End Try
                TotalImageC1 = CoMaker(0)("Attach")
                vRelationship_C1 = CoMaker(0)("Relation")
                vRelationship_C1_ID = CoMaker(0)("Relation_ID")
                vEmployer_C1 = CoMaker(0)("Employer_C")
                vEmpAddress_C1 = CoMaker(0)("EmployerAddress_C")
                vEmpTelephone_C1 = CoMaker(0)("EmployerTelephone_C")
                vPosition_C1 = CoMaker(0)("Position_C")
                If CoMaker(0)("EmploymentStat_C") = "Casual" Then
                    vCasual_C1 = True
                ElseIf CoMaker(0)("EmploymentStat_C") = "Temporary" Then
                    vTemporary_C1 = True
                ElseIf CoMaker(0)("EmploymentStat_C") = "Permanent" Then
                    vPermanent_C1 = True
                End If
                vHired_C1 = CoMaker(0)("Hired_C")
                vYearHired_C1 = CoMaker(0)("YearHired_C")
                vSupervisor_C1 = CoMaker(0)("Supervisor_C")
                vSalary_C1 = CoMaker(0)("Monthly_C")
                vBusinessName_C1 = CoMaker(0)("BusinessName_C")
                vBusinessAddress_C1 = CoMaker(0)("BusinessAddress_C")
                vBusinessTelephone_C1 = CoMaker(0)("BusinessTelephone_C")
                vNatureBusiness_C1 = CoMaker(0)("NatureBusiness_C")
                vYrsOperation_C1 = CoMaker(0)("YrsOperation_C")
                vBusinessIncome_C1 = CoMaker(0)("BusinessIncome_C")
                vNoEmployees_C1 = CoMaker(0)("NoEmployees_C")
                vCapital_C1 = CoMaker(0)("Capital_C")
                vArea_C1 = CoMaker(0)("Area_C")
                vExpiry_C1 = CoMaker(0)("Expiry_C")
                vOutlet_C1 = CoMaker(0)("Outlet_C")
                vOtherIncome_C1 = CoMaker(0)("OtherIncome_C")
                vOtherIncomeD_C1 = CoMaker(0)("OtherIncome_C-Amount")
                Industry_C1.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker1'", GridView5.GetFocusedRowCellValue("Credit Number"))))

                If CoMaker.Rows.Count > 1 Then 'COMAKER 2
                    btnCM_2.Enabled = True
                    ReferenceID_2 = CoMaker(1)("ReferenceID")
                    vPrefix_C2 = CoMaker(1)("Prefix_C")
                    vFirstN_C2 = CoMaker(1)("FirstN_C")
                    vMiddleN_C2 = CoMaker(1)("MiddleN_C")
                    vLastN_C2 = CoMaker(1)("LastN_C")
                    vSuffix_C2 = CoMaker(1)("Suffix_C")
                    vNoC_C2 = CoMaker(1)("NoC_C")
                    vStreetC_C2 = CoMaker(1)("StreetC_C")
                    vBarangayC_C2 = CoMaker(1)("BarangayC_C")
                    vAddressC_C2 = CoMaker(1)("AddressC_C")
                    vNoP_C2 = CoMaker(1)("NoP_C")
                    vStreetP_C2 = CoMaker(1)("StreetP_C")
                    vBarangayP_C2 = CoMaker(1)("BarangayP_C")
                    vAddressP_C2 = CoMaker(1)("AddressP_C")
                    vBirth_C2 = CoMaker(1)("Birth_C")
                    vPlaceBirth_C2 = CoMaker(1)("PlaceBirth_C")
                    If CoMaker(1)("Gender_C") = "Male" Then
                        vMale_C2 = True
                    ElseIf CoMaker(1)("Gender_C") = "Female" Then
                        vFemale_C2 = True
                    End If
                    If CoMaker(1)("Civil_C") = "Single" Then
                        vSingle_C2 = True
                    ElseIf CoMaker(1)("Civil_C") = "Married" Then
                        vMarried_C2 = True
                    ElseIf CoMaker(1)("Civil_C") = "Separated" Then
                        vSeparated_C2 = True
                    ElseIf CoMaker(1)("Civil_C") = "Widowed" Then
                        vWidowed_C2 = True
                    End If
                    vCitizenship_C2 = CoMaker(1)("Citizenship_C")
                    vTIN_C2 = CoMaker(1)("TIN_C")
                    vTelephone_C2 = CoMaker(1)("Telephone_C")
                    vSSS_C2 = CoMaker(1)("SSS_C")
                    vMobile_C2 = CoMaker(1)("Mobile_C")
                    vEmail_C2 = CoMaker(1)("Email_C")
                    If CoMaker(1)("House_C") = "Owned" Then
                        vOwned_C2 = True
                    ElseIf CoMaker(1)("House_C") = "Free" Then
                        vFree_C2 = True
                    ElseIf CoMaker(1)("House_C") = "Rented" Then
                        vRented_C2 = True
                        vRent_C2 = CoMaker(1)("Rent_C")
                    End If
                    Try
                        Using TempPB As New DevExpress.XtraEditors.PictureEdit
                            TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, GridView5.GetFocusedRowCellValue("branch_code"), GridView5.GetFocusedRowCellValue("Credit Number"), "CoMaker2.jpg"))
                            ResizeImages(TempPB.Image.Clone, CoMaker2, 850, 700)
                        End Using
                    Catch ex As Exception
                    End Try
                    TotalImageC2 = CoMaker(1)("Attach")
                    vRelationship_C2 = CoMaker(1)("Relation")
                    vRelationship_C2_ID = CoMaker(1)("Relation_ID")
                    vEmployer_C2 = CoMaker(1)("Employer_C")
                    vEmpAddress_C2 = CoMaker(1)("EmployerAddress_C")
                    vEmpTelephone_C2 = CoMaker(1)("EmployerTelephone_C")
                    vPosition_C2 = CoMaker(1)("Position_C")
                    If CoMaker(1)("EmploymentStat_C") = "Casual" Then
                        vCasual_C2 = True
                    ElseIf CoMaker(1)("EmploymentStat_C") = "Temporary" Then
                        vTemporary_C2 = True
                    ElseIf CoMaker(1)("EmploymentStat_C") = "Permanent" Then
                        vPermanent_C2 = True
                    End If
                    vHired_C2 = CoMaker(1)("Hired_C")
                    vYearHired_C2 = CoMaker(1)("YearHired_C")
                    vSupervisor_C2 = CoMaker(1)("Supervisor_C")
                    vSalary_C2 = CoMaker(1)("Monthly_C")
                    vBusinessName_C2 = CoMaker(1)("BusinessName_C")
                    vBusinessAddress_C2 = CoMaker(1)("BusinessAddress_C")
                    vBusinessTelephone_C2 = CoMaker(1)("BusinessTelephone_C")
                    vNatureBusiness_C2 = CoMaker(1)("NatureBusiness_C")
                    vYrsOperation_C2 = CoMaker(1)("YrsOperation_C")
                    vBusinessIncome_C2 = CoMaker(1)("BusinessIncome_C")
                    vNoEmployees_C2 = CoMaker(1)("NoEmployees_C")
                    vCapital_C2 = CoMaker(1)("Capital_C")
                    vArea_C2 = CoMaker(1)("Area_C")
                    vExpiry_C2 = CoMaker(1)("Expiry_C")
                    vOutlet_C2 = CoMaker(1)("Outlet_C")
                    vOtherIncome_C2 = CoMaker(1)("OtherIncome_C")
                    vOtherIncomeD_C2 = CoMaker(1)("OtherIncome_C-Amount")
                    Industry_C2.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker2'", GridView5.GetFocusedRowCellValue("Credit Number"))))

                    If CoMaker.Rows.Count > 2 Then 'COMAKER 3
                        btnCM_3.Enabled = True
                        ReferenceID_3 = CoMaker(2)("ReferenceID")
                        vPrefix_C3 = CoMaker(2)("Prefix_C")
                        vFirstN_C3 = CoMaker(2)("FirstN_C")
                        vMiddleN_C3 = CoMaker(2)("MiddleN_C")
                        vLastN_C3 = CoMaker(2)("LastN_C")
                        vSuffix_C3 = CoMaker(2)("Suffix_C")
                        vNoC_C3 = CoMaker(2)("NoC_C")
                        vStreetC_C3 = CoMaker(2)("StreetC_C")
                        vBarangayC_C3 = CoMaker(2)("BarangayC_C")
                        vAddressC_C3 = CoMaker(2)("AddressC_C")
                        vNoP_C3 = CoMaker(2)("NoP_C")
                        vStreetP_C3 = CoMaker(2)("StreetP_C")
                        vBarangayP_C3 = CoMaker(2)("BarangayP_C")
                        vAddressP_C3 = CoMaker(2)("AddressP_C")
                        vBirth_C3 = CoMaker(2)("Birth_C")
                        vPlaceBirth_C3 = CoMaker(2)("PlaceBirth_C")
                        If CoMaker(2)("Gender_C") = "Male" Then
                            vMale_C3 = True
                        ElseIf CoMaker(2)("Gender_C") = "Female" Then
                            vFemale_C3 = True
                        End If
                        If CoMaker(2)("Civil_C") = "Single" Then
                            vSingle_C3 = True
                        ElseIf CoMaker(2)("Civil_C") = "Married" Then
                            vMarried_C3 = True
                        ElseIf CoMaker(2)("Civil_C") = "Separated" Then
                            vSeparated_C3 = True
                        ElseIf CoMaker(2)("Civil_C") = "Widowed" Then
                            vWidowed_C3 = True
                        End If
                        vCitizenship_C3 = CoMaker(2)("Citizenship_C")
                        vTIN_C3 = CoMaker(2)("TIN_C")
                        vTelephone_C3 = CoMaker(2)("Telephone_C")
                        vSSS_C3 = CoMaker(2)("SSS_C")
                        vMobile_C3 = CoMaker(2)("Mobile_C")
                        vEmail_C3 = CoMaker(2)("Email_C")
                        If CoMaker(2)("House_C") = "Owned" Then
                            vOwned_C3 = True
                        ElseIf CoMaker(2)("House_C") = "Free" Then
                            vFree_C3 = True
                        ElseIf CoMaker(2)("House_C") = "Rented" Then
                            vRented_C3 = True
                            vRent_C3 = CoMaker(2)("Rent_C")
                        End If
                        Try
                            Using TempPB As New DevExpress.XtraEditors.PictureEdit
                                TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, GridView5.GetFocusedRowCellValue("branch_code"), GridView5.GetFocusedRowCellValue("Credit Number"), "CoMaker3.jpg"))
                                ResizeImages(TempPB.Image.Clone, CoMaker3, 850, 700)
                            End Using
                        Catch ex As Exception
                        End Try
                        TotalImageC3 = CoMaker(2)("Attach")
                        vRelationship_C3 = CoMaker(2)("Relation")
                        vRelationship_C3_ID = CoMaker(2)("Relation_ID")
                        vEmployer_C3 = CoMaker(2)("Employer_C")
                        vEmpAddress_C3 = CoMaker(2)("EmployerAddress_C")
                        vEmpTelephone_C3 = CoMaker(2)("EmployerTelephone_C")
                        vPosition_C3 = CoMaker(2)("Position_C")
                        If CoMaker(2)("EmploymentStat_C") = "Casual" Then
                            vCasual_C3 = True
                        ElseIf CoMaker(2)("EmploymentStat_C") = "Temporary" Then
                            vTemporary_C3 = True
                        ElseIf CoMaker(2)("EmploymentStat_C") = "Permanent" Then
                            vPermanent_C3 = True
                        End If
                        vHired_C3 = CoMaker(2)("Hired_C")
                        vYearHired_C3 = CoMaker(2)("YearHired_C")
                        vSupervisor_C3 = CoMaker(2)("Supervisor_C")
                        vSalary_C3 = CoMaker(2)("Monthly_C")
                        vBusinessName_C3 = CoMaker(2)("BusinessName_C")
                        vBusinessAddress_C3 = CoMaker(2)("BusinessAddress_C")
                        vBusinessTelephone_C3 = CoMaker(2)("BusinessTelephone_C")
                        vNatureBusiness_C3 = CoMaker(2)("NatureBusiness_C")
                        vYrsOperation_C3 = CoMaker(2)("YrsOperation_C")
                        vBusinessIncome_C3 = CoMaker(2)("BusinessIncome_C")
                        vNoEmployees_C3 = CoMaker(2)("NoEmployees_C")
                        vCapital_C3 = CoMaker(2)("Capital_C")
                        vArea_C3 = CoMaker(2)("Area_C")
                        vExpiry_C3 = CoMaker(2)("Expiry_C")
                        vOutlet_C3 = CoMaker(2)("Outlet_C")
                        vOtherIncome_C3 = CoMaker(2)("OtherIncome_C")
                        vOtherIncomeD_C3 = CoMaker(2)("OtherIncome_C-Amount")
                        Industry_C3.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker3'", GridView5.GetFocusedRowCellValue("Credit Number"))))

                        If CoMaker.Rows.Count > 3 Then 'COMAKER 4
                            btnCM_4.Enabled = True
                            ReferenceID_4 = CoMaker(3)("ReferenceID")
                            vPrefix_C4 = CoMaker(3)("Prefix_C")
                            vFirstN_C4 = CoMaker(3)("FirstN_C")
                            vMiddleN_C4 = CoMaker(3)("MiddleN_C")
                            vLastN_C4 = CoMaker(3)("LastN_C")
                            vSuffix_C4 = CoMaker(3)("Suffix_C")
                            vNoC_C4 = CoMaker(3)("NoC_C")
                            vStreetC_C4 = CoMaker(3)("StreetC_C")
                            vBarangayC_C4 = CoMaker(3)("BarangayC_C")
                            vAddressC_C4 = CoMaker(3)("AddressC_C")
                            vNoP_C4 = CoMaker(3)("NoP_C")
                            vStreetP_C4 = CoMaker(3)("StreetP_C")
                            vBarangayP_C4 = CoMaker(3)("BarangayP_C")
                            vAddressP_C4 = CoMaker(3)("AddressP_C")
                            vBirth_C4 = CoMaker(3)("Birth_C")
                            vPlaceBirth_C4 = CoMaker(3)("PlaceBirth_C")
                            If CoMaker(3)("Gender_C") = "Male" Then
                                vMale_C4 = True
                            ElseIf CoMaker(3)("Gender_C") = "Female" Then
                                vFemale_C4 = True
                            End If
                            If CoMaker(3)("Civil_C") = "Single" Then
                                vSingle_C4 = True
                            ElseIf CoMaker(3)("Civil_C") = "Married" Then
                                vMarried_C4 = True
                            ElseIf CoMaker(3)("Civil_C") = "Separated" Then
                                vSeparated_C4 = True
                            ElseIf CoMaker(3)("Civil_C") = "Widowed" Then
                                vWidowed_C4 = True
                            End If
                            vCitizenship_C4 = CoMaker(3)("Citizenship_C")
                            vTIN_C4 = CoMaker(3)("TIN_C")
                            vTelephone_C4 = CoMaker(3)("Telephone_C")
                            vSSS_C4 = CoMaker(3)("SSS_C")
                            vMobile_C4 = CoMaker(3)("Mobile_C")
                            vEmail_C4 = CoMaker(3)("Email_C")
                            If CoMaker(3)("House_C") = "Owned" Then
                                vOwned_C4 = True
                            ElseIf CoMaker(3)("House_C") = "Free" Then
                                vFree_C4 = True
                            ElseIf CoMaker(3)("House_C") = "Rented" Then
                                vRented_C4 = True
                                vRent_C4 = CoMaker(3)("Rent_C")
                            End If
                            Try
                                Using TempPB As New DevExpress.XtraEditors.PictureEdit
                                    TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, GridView5.GetFocusedRowCellValue("branch_code"), GridView5.GetFocusedRowCellValue("Credit Number"), "CoMaker4.jpg"))
                                    ResizeImages(TempPB.Image.Clone, CoMaker4, 850, 700)
                                End Using
                            Catch ex As Exception
                            End Try
                            TotalImageC4 = CoMaker(3)("Attach")
                            vRelationship_C4 = CoMaker(3)("Relation")
                            vRelationship_C4_ID = CoMaker(3)("Relation_ID")
                            vEmployer_C4 = CoMaker(3)("Employer_C")
                            vEmpAddress_C4 = CoMaker(3)("EmployerAddress_C")
                            vEmpTelephone_C4 = CoMaker(3)("EmployerTelephone_C")
                            vPosition_C4 = CoMaker(3)("Position_C")
                            If CoMaker(3)("EmploymentStat_C") = "Casual" Then
                                vCasual_C4 = True
                            ElseIf CoMaker(3)("EmploymentStat_C") = "Temporary" Then
                                vTemporary_C4 = True
                            ElseIf CoMaker(3)("EmploymentStat_C") = "Permanent" Then
                                vPermanent_C4 = True
                            End If
                            vHired_C4 = CoMaker(3)("Hired_C")
                            vYearHired_C4 = CoMaker(3)("YearHired_C")
                            vSupervisor_C4 = CoMaker(3)("Supervisor_C")
                            vSalary_C4 = CoMaker(3)("Monthly_C")
                            vBusinessName_C4 = CoMaker(3)("BusinessName_C")
                            vBusinessAddress_C4 = CoMaker(3)("BusinessAddress_C")
                            vBusinessTelephone_C4 = CoMaker(3)("BusinessTelephone_C")
                            vNatureBusiness_C4 = CoMaker(3)("NatureBusiness_C")
                            vYrsOperation_C4 = CoMaker(3)("YrsOperation_C")
                            vBusinessIncome_C4 = CoMaker(3)("BusinessIncome_C")
                            vNoEmployees_C4 = CoMaker(3)("NoEmployees_C")
                            vCapital_C4 = CoMaker(3)("Capital_C")
                            vArea_C4 = CoMaker(3)("Area_C")
                            vExpiry_C4 = CoMaker(3)("Expiry_C")
                            vOutlet_C4 = CoMaker(3)("Outlet_C")
                            vOtherIncome_C4 = CoMaker(3)("OtherIncome_C")
                            vOtherIncomeD_C4 = CoMaker(3)("OtherIncome_C-Amount")
                            Industry_C4.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker4'", GridView5.GetFocusedRowCellValue("Credit Number"))))
                        End If
                    End If
                End If
            End If
        End If

        '*** I D E N T I F I C A T I O N ***
        Dim BorrowerID_B As DataTable = DataSource(String.Format("SELECT * FROM profile_borrowerid WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE' AND ID_Type = 'B'", BorrowerID))
        If BorrowerID_B.Rows.Count > 0 Then
            GSIS = BorrowerID_B(0)("GSIS")
            PhilHealth = BorrowerID_B(0)("PhilHealth")
            Senior = BorrowerID_B(0)("Senior")
            UMID = BorrowerID_B(0)("UMID")
            SEC = BorrowerID_B(0)("SEC")
            DTI = BorrowerID_B(0)("DTI")
            CDA = BorrowerID_B(0)("CDA")
            Cooperative = BorrowerID_B(0)("Cooperative")
            Drivers = BorrowerID_B(0)("Drivers")
            dDrivers = BorrowerID_B(0)("dDrivers")
            VIN = BorrowerID_B(0)("VIN")
            dVIN = BorrowerID_B(0)("dVIN")
            Passport = BorrowerID_B(0)("Passport")
            dPassport = BorrowerID_B(0)("dPassport")
            PRC = BorrowerID_B(0)("PRC")
            dPRC = BorrowerID_B(0)("dPRC")
            NBI = BorrowerID_B(0)("NBI")
            dNBI = BorrowerID_B(0)("dNBI")
            Police = BorrowerID_B(0)("Police")
            dPolice = BorrowerID_B(0)("dPolice")
            Postal = BorrowerID_B(0)("Postal")
            dPostal = BorrowerID_B(0)("dPostal")
            Barangay = BorrowerID_B(0)("Barangay")
            dBarangay = BorrowerID_B(0)("dBarangay")
            OWWA = BorrowerID_B(0)("OWWA")
            dOWWA = BorrowerID_B(0)("dOWWA")
            OFW = BorrowerID_B(0)("OFW")
            dOFW = BorrowerID_B(0)("dOFW")
            Seaman = BorrowerID_B(0)("Seaman")
            dSeaman = BorrowerID_B(0)("dSeaman")
            PNP = BorrowerID_B(0)("PNP")
            dPNP = BorrowerID_B(0)("dPNP")
            AFP = BorrowerID_B(0)("AFP")
            dAFP = BorrowerID_B(0)("dAFP")
            HDMF = BorrowerID_B(0)("HDMF")
            dHDMF = BorrowerID_B(0)("dHDMF")
            PWD = BorrowerID_B(0)("PWD")
            dPWD = BorrowerID_B(0)("dPWD")
            DSWD = BorrowerID_B(0)("DSWD")
            dDSWD = BorrowerID_B(0)("dDSWD")
            ACR = BorrowerID_B(0)("ACR")
            dACR = BorrowerID_B(0)("dACR")
            DTI_Business = BorrowerID_B(0)("DTI_Business")
            dDTI_Business = BorrowerID_B(0)("dDTI_Business")
            IBP = BorrowerID_B(0)("IBP")
            dIBP = BorrowerID_B(0)("dIBP")
            FireArms = BorrowerID_B(0)("FireArms")
            dFireArms = BorrowerID_B(0)("dFireArms")
            Government = BorrowerID_B(0)("Government")
            dGovernment = BorrowerID_B(0)("dGovernment")
            Diplomat = BorrowerID_B(0)("Diplomat")
            dDiplomat = BorrowerID_B(0)("dDiplomat")
            National = BorrowerID_B(0)("National")
            dNational = BorrowerID_B(0)("dNational")
            Work = BorrowerID_B(0)("Work")
            dWork = BorrowerID_B(0)("dWork")
            GOCC = BorrowerID_B(0)("GOCC")
            dGOCC = BorrowerID_B(0)("dGOCC")
            PLRA = BorrowerID_B(0)("PLRA")
            dPLRA = BorrowerID_B(0)("dPLRA")
            Major = BorrowerID_B(0)("Major")
            dMajor = BorrowerID_B(0)("dMajor")
            Media = BorrowerID_B(0)("Media")
            dMedia = BorrowerID_B(0)("dMedia")
            Student = BorrowerID_B(0)("Student")
            dStudent = BorrowerID_B(0)("dStudent")
            SIRV = BorrowerID_B(0)("SIRV")
            dSIRV = BorrowerID_B(0)("dSIRV")
        End If

        With GridView5
            txtNoC_B.Text = .GetFocusedRowCellValue("NoC_B")
            txtNoC_B.Tag = .GetFocusedRowCellValue("NoC_B")

            txtStreetC_B.Text = .GetFocusedRowCellValue("StreetC_B")
            txtStreetC_B.Tag = .GetFocusedRowCellValue("StreetC_B")

            txtBarangayC_B.Text = .GetFocusedRowCellValue("BarangayC_B")
            txtBarangayC_B.Tag = .GetFocusedRowCellValue("BarangayC_B")

            cbxAddressC_B.Text = .GetFocusedRowCellValue("AddressC_B")
            cbxAddressC_B.Tag = .GetFocusedRowCellValue("AddressC_B")

            txtNoP_B.Text = .GetFocusedRowCellValue("NoP_B")
            txtNoP_B.Tag = .GetFocusedRowCellValue("NoP_B")

            txtStreetP_B.Text = .GetFocusedRowCellValue("StreetP_B")
            txtStreetP_B.Tag = .GetFocusedRowCellValue("StreetP_B")

            txtBarangayP_B.Text = .GetFocusedRowCellValue("BarangayP_B")
            txtBarangayP_B.Tag = .GetFocusedRowCellValue("BarangayP_B")

            cbxAddressP_B.Text = .GetFocusedRowCellValue("AddressP_B")
            cbxAddressP_B.Tag = .GetFocusedRowCellValue("AddressP_B")

            If .GetFocusedRowCellValue("Birth_B") = "" Then
                DtpBirth_B.CustomFormat = ""
            Else
                DtpBirth_B.CustomFormat = "MMMM dd, yyyy"
                DtpBirth_B.Value = .GetFocusedRowCellValue("Birth_B")
            End If
            DtpBirth_B.Tag = .GetFocusedRowCellValue("Birth_B")

            cbxPlaceBirth_B.Text = .GetFocusedRowCellValue("PlaceBirth_B")
            cbxPlaceBirth_B.Tag = .GetFocusedRowCellValue("PlaceBirth_B")

            If .GetFocusedRowCellValue("Gender_B") = "Male" Then
                cbxMale_B.Checked = True
            ElseIf .GetFocusedRowCellValue("Gender_B") = "Female" Then
                cbxFemale_B.Checked = True
            End If
            cbxMale_B.Tag = .GetFocusedRowCellValue("Gender_B")
            cbxFemale_B.Tag = .GetFocusedRowCellValue("Gender_B")

            If .GetFocusedRowCellValue("Civil_B") = "Single" Then
                cbxSingle_B.Checked = True
            ElseIf .GetFocusedRowCellValue("Civil_B") = "Married" Then
                cbxMarried_B.Checked = True
            ElseIf .GetFocusedRowCellValue("Civil_B") = "Separated" Then
                cbxSeparated_B.Checked = True
            ElseIf .GetFocusedRowCellValue("Civil_B") = "Widowed" Then
                cbxWidowed_B.Checked = True
            End If
            cbxSingle_B.Tag = .GetFocusedRowCellValue("Civil_B")
            cbxMarried_B.Tag = .GetFocusedRowCellValue("Civil_B")
            cbxSeparated_B.Tag = .GetFocusedRowCellValue("Civil_B")
            cbxWidowed_B.Tag = .GetFocusedRowCellValue("Civil_B")

            cbxCitizenship_B.Text = .GetFocusedRowCellValue("Citizenship_B")
            cbxCitizenship_B.Tag = .GetFocusedRowCellValue("Citizenship_B")

            txtTIN_B.Text = .GetFocusedRowCellValue("TIN_B")
            txtTIN_B.Tag = .GetFocusedRowCellValue("TIN_B")

            txtTelephone_B.Text = .GetFocusedRowCellValue("Telephone_B")
            txtTelephone_B.Tag = .GetFocusedRowCellValue("Telephone_B")

            txtSSS_B.Text = .GetFocusedRowCellValue("SSS_B")
            txtSSS_B.Tag = .GetFocusedRowCellValue("SSS_B")

            txtMobile_B.Text = .GetFocusedRowCellValue("Mobile_B")
            txtMobile_B.Tag = .GetFocusedRowCellValue("Mobile_B")

            txtMobile_B2.Text = .GetFocusedRowCellValue("Mobile_B2")
            txtMobile_B2.Tag = .GetFocusedRowCellValue("Mobile_B2")

            txtEmail_B.Text = .GetFocusedRowCellValue("Email_B")
            txtEmail_B.Tag = .GetFocusedRowCellValue("Email_B")

            If .GetFocusedRowCellValue("House_B") = "Owned" Then
                cbxOwned_B.Checked = True
                dRent_B.Value = 0
            ElseIf .GetFocusedRowCellValue("House_B") = "Free" Then
                cbxFree_B.Checked = True
                dRent_B.Value = 0
            ElseIf .GetFocusedRowCellValue("House_B") = "Rented" Then
                cbxRented_B.Checked = True
                dRent_B.Value = .GetFocusedRowCellValue("Rent_B")
            End If
            cbxOwned_B.Tag = .GetFocusedRowCellValue("House_B")
            cbxFree_B.Tag = .GetFocusedRowCellValue("House_B")
            cbxRented_B.Tag = .GetFocusedRowCellValue("House_B")
            dRent_B.Tag = .GetFocusedRowCellValue("Rent_B")
            Try
                Using TempPB As New DevExpress.XtraEditors.PictureEdit
                    TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, GridView5.GetFocusedRowCellValue("branch_code"), GridView5.GetFocusedRowCellValue("Credit Number"), "Borrower.jpg"))
                    ResizeImages(TempPB.Image.Clone, pb_B, 850, 700)
                End Using
            Catch ex As Exception
                pb_B.Image = DefaultImage.Image.Clone
            End Try
            '**DEPENDENT
            CbxPrefix_1.Text = .GetFocusedRowCellValue("Prefix_D1")
            CbxPrefix_1.Tag = .GetFocusedRowCellValue("Prefix_D1")

            TxtFirstN_1.Text = .GetFocusedRowCellValue("FirstN_D1")
            TxtFirstN_1.Tag = .GetFocusedRowCellValue("FirstN_D1")

            TxtMiddleN_1.Text = .GetFocusedRowCellValue("MiddleN_D1")
            TxtMiddleN_1.Tag = .GetFocusedRowCellValue("MiddleN_D1")

            TxtLastN_1.Text = .GetFocusedRowCellValue("LastN_D1")
            TxtLastN_1.Tag = .GetFocusedRowCellValue("LastN_D1")

            cbxSuffix_1.Text = .GetFocusedRowCellValue("Suffix_D1")
            cbxSuffix_1.Tag = .GetFocusedRowCellValue("Suffix_D1")

            iAge_D1.Value = .GetFocusedRowCellValue("Age_D1")
            iAge_D1.Tag = .GetFocusedRowCellValue("Age_D1")

            txtGrade_1.Text = .GetFocusedRowCellValue("Grade_D1")
            txtGrade_1.Tag = .GetFocusedRowCellValue("Grade_D1")

            txtSchool_1.Text = .GetFocusedRowCellValue("School_D1")
            txtSchool_1.Tag = .GetFocusedRowCellValue("School_D1")

            txtSchoolAddress_1.Text = .GetFocusedRowCellValue("SchoolAddress_D1")
            txtSchoolAddress_1.Tag = .GetFocusedRowCellValue("SchoolAddress_D1")

            CbxPrefix_2.Text = .GetFocusedRowCellValue("Prefix_D2")
            CbxPrefix_2.Tag = .GetFocusedRowCellValue("Prefix_D2")

            TxtFirstN_2.Text = .GetFocusedRowCellValue("FirstN_D2")
            TxtFirstN_2.Tag = .GetFocusedRowCellValue("FirstN_D2")

            TxtMiddleN_2.Text = .GetFocusedRowCellValue("MiddleN_D2")
            TxtMiddleN_2.Tag = .GetFocusedRowCellValue("MiddleN_D2")

            TxtLastN_2.Text = .GetFocusedRowCellValue("LastN_D2")
            TxtLastN_2.Tag = .GetFocusedRowCellValue("LastN_D2")

            cbxSuffix_2.Text = .GetFocusedRowCellValue("Suffix_D2")
            cbxSuffix_2.Tag = .GetFocusedRowCellValue("Suffix_D2")

            iAge_D2.Value = .GetFocusedRowCellValue("Age_D2")
            iAge_D2.Tag = .GetFocusedRowCellValue("Age_D2")

            txtGrade_2.Text = .GetFocusedRowCellValue("Grade_D2")
            txtGrade_2.Tag = .GetFocusedRowCellValue("Grade_D2")

            txtSchool_2.Text = .GetFocusedRowCellValue("School_D2")
            txtSchool_2.Tag = .GetFocusedRowCellValue("School_D2")

            txtSchoolAddress_2.Text = .GetFocusedRowCellValue("SchoolAddress_D2")
            txtSchoolAddress_2.Tag = .GetFocusedRowCellValue("SchoolAddress_D2")

            CbxPrefix_3.Text = .GetFocusedRowCellValue("Prefix_D3")
            CbxPrefix_3.Tag = .GetFocusedRowCellValue("Prefix_D3")

            TxtFirstN_3.Text = .GetFocusedRowCellValue("FirstN_D3")
            TxtFirstN_3.Tag = .GetFocusedRowCellValue("FirstN_D3")

            TxtMiddleN_3.Text = .GetFocusedRowCellValue("MiddleN_D3")
            TxtMiddleN_3.Tag = .GetFocusedRowCellValue("MiddleN_D3")

            TxtLastN_3.Text = .GetFocusedRowCellValue("LastN_D3")
            TxtLastN_3.Tag = .GetFocusedRowCellValue("LastN_D3")

            cbxSuffix_3.Text = .GetFocusedRowCellValue("Suffix_D3")
            cbxSuffix_3.Tag = .GetFocusedRowCellValue("Suffix_D3")

            iAge_D3.Value = .GetFocusedRowCellValue("Age_D3")
            iAge_D3.Tag = .GetFocusedRowCellValue("Age_D3")

            txtGrade_3.Text = .GetFocusedRowCellValue("Grade_D3")
            txtGrade_3.Tag = .GetFocusedRowCellValue("Grade_D3")

            txtSchool_3.Text = .GetFocusedRowCellValue("School_D3")
            txtSchool_3.Tag = .GetFocusedRowCellValue("School_D3")

            txtSchoolAddress_3.Text = .GetFocusedRowCellValue("SchoolAddress_D3")
            txtSchoolAddress_3.Tag = .GetFocusedRowCellValue("SchoolAddress_D3")

            CbxPrefix_4.Text = .GetFocusedRowCellValue("Prefix_D4")
            CbxPrefix_4.Tag = .GetFocusedRowCellValue("Prefix_D4")

            TxtFirstN_4.Text = .GetFocusedRowCellValue("FirstN_D4")
            TxtFirstN_4.Tag = .GetFocusedRowCellValue("FirstN_D4")

            TxtMiddleN_4.Text = .GetFocusedRowCellValue("MiddleN_D4")
            TxtMiddleN_4.Tag = .GetFocusedRowCellValue("MiddleN_D4")

            TxtLastN_4.Text = .GetFocusedRowCellValue("LastN_D4")
            TxtLastN_4.Tag = .GetFocusedRowCellValue("LastN_D4")

            cbxSuffix_4.Text = .GetFocusedRowCellValue("Suffix_D4")
            cbxSuffix_4.Tag = .GetFocusedRowCellValue("Suffix_D4")

            iAge_D4.Value = .GetFocusedRowCellValue("Age_D4")
            iAge_D4.Tag = .GetFocusedRowCellValue("Age_D4")

            txtGrade_4.Text = .GetFocusedRowCellValue("Grade_D4")
            txtGrade_4.Tag = .GetFocusedRowCellValue("Grade_D4")

            txtSchool_4.Text = .GetFocusedRowCellValue("School_D4")
            txtSchool_4.Tag = .GetFocusedRowCellValue("School_D4")

            txtSchoolAddress_4.Text = .GetFocusedRowCellValue("SchoolAddress_D4")
            txtSchoolAddress_4.Tag = .GetFocusedRowCellValue("SchoolAddress_D4")
            '**DEPENDENT
            rRemarks.Text = .GetFocusedRowCellValue("Remarks")
            rRemarks.Tag = .GetFocusedRowCellValue("Remarks")

            cbxEmployer_B.Text = .GetFocusedRowCellValue("Employer_B")
            cbxEmployer_B.Tag = .GetFocusedRowCellValue("Employer_B")

            txtEmployerAddress_B.Text = .GetFocusedRowCellValue("EmployerAddress_B")
            txtEmployerAddress_B.Tag = .GetFocusedRowCellValue("EmployerAddress_B")

            txtEmployerTelephone_B.Text = .GetFocusedRowCellValue("EmployerTelephone_B")
            txtEmployerTelephone_B.Tag = .GetFocusedRowCellValue("EmployerTelephone_B")

            cbxPosition_B.Text = .GetFocusedRowCellValue("Position_B")
            cbxPosition_B.Tag = .GetFocusedRowCellValue("Position_B")

            If .GetFocusedRowCellValue("EmploymentStat_B") = "Casual" Then
                cbxCasual_B.Checked = True
            ElseIf .GetFocusedRowCellValue("EmploymentStat_B") = "Temporary" Then
                cbxTemporary_B.Checked = True
            ElseIf .GetFocusedRowCellValue("EmploymentStat_B") = "Permanent" Then
                cbxPermanent_B.Checked = True
            End If
            cbxCasual_B.Tag = .GetFocusedRowCellValue("EmploymentStat_B")
            cbxTemporary_B.Tag = .GetFocusedRowCellValue("EmploymentStat_B")
            cbxPermanent_B.Tag = .GetFocusedRowCellValue("EmploymentStat_B")

            If .GetFocusedRowCellValue("Hired_B") = "" Then
                dtpHired_B.CustomFormat = ""
            Else
                If .GetFocusedRowCellValue("YearHired") = True Then
                    dtpHired_B.CustomFormat = "yyyy"
                Else
                    dtpHired_B.CustomFormat = "MMM. dd, yyyy"
                End If
                dtpHired_B.Value = .GetFocusedRowCellValue("Hired_B")
            End If
            dtpHired_B.Tag = .GetFocusedRowCellValue("Hired_B")

            txtSupervisor_B.Text = .GetFocusedRowCellValue("Supervisor_B")
            txtSupervisor_B.Tag = .GetFocusedRowCellValue("Supervisor_B")

            dMonthly_B.Value = .GetFocusedRowCellValue("Monthly_B")
            dMonthly_B.Tag = .GetFocusedRowCellValue("Monthly_B")

            txtBusinessName_B.Text = .GetFocusedRowCellValue("BusinessName_B")
            txtBusinessName_B.Tag = .GetFocusedRowCellValue("BusinessName_B")

            txtBusinessAddress_B.Text = .GetFocusedRowCellValue("BusinessAddress_B")
            txtBusinessAddress_B.Tag = .GetFocusedRowCellValue("BusinessAddress_B")

            txtBusinessTelephone_B.Text = .GetFocusedRowCellValue("BusinessTelephone_B")
            txtBusinessTelephone_B.Tag = .GetFocusedRowCellValue("BusinessTelephone_B")

            cbxNatureBusiness_B.Text = .GetFocusedRowCellValue("NatureBusiness_B")
            cbxNatureBusiness_B.Tag = .GetFocusedRowCellValue("NatureBusiness_B")

            cbxNatureBusiness_B2.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'Borrower'", .GetFocusedRowCellValue("Credit Number"))))

            iYrsOperation_B.Value = .GetFocusedRowCellValue("YrsOperation_B")
            iYrsOperation_B.Tag = .GetFocusedRowCellValue("YrsOperation_B")

            dBusinessIncome_B.Value = .GetFocusedRowCellValue("BusinessIncome_B")
            dBusinessIncome_B.Tag = .GetFocusedRowCellValue("BusinessIncome_B")

            iNoEmployees_B.Value = .GetFocusedRowCellValue("NoEmployees_B")
            iNoEmployees_B.Tag = .GetFocusedRowCellValue("NoEmployees_B")

            dCapital_B.Value = .GetFocusedRowCellValue("Capital_B")
            dCapital_B.Tag = .GetFocusedRowCellValue("Capital_B")

            txtArea_B.Text = .GetFocusedRowCellValue("Area_B")
            txtArea_B.Tag = .GetFocusedRowCellValue("Area_B")

            If .GetFocusedRowCellValue("Expiry_B") = "" Then
                dtpExpiry_B.CustomFormat = ""
            Else
                If .GetFocusedRowCellValue("YearFranchise") Then
                    dtpExpiry_B.CustomFormat = "yyyy"
                Else
                    dtpExpiry_B.CustomFormat = "MMM. dd, yyyy"
                End If
                dtpExpiry_B.Value = .GetFocusedRowCellValue("Expiry_B")
            End If
            dtpExpiry_B.Tag = .GetFocusedRowCellValue("Expiry_B")

            iOutlet_B.Value = .GetFocusedRowCellValue("Outlet_B")
            iOutlet_B.Tag = .GetFocusedRowCellValue("Outlet_B")

            txtOtherIncome_B.Text = .GetFocusedRowCellValue("OtherIncome_B")
            txtOtherIncome_B.Tag = .GetFocusedRowCellValue("OtherIncome_B")

            dOtherIncome_B.Value = .GetFocusedRowCellValue("OtherIncome_B-Amount")
            dOtherIncome_B.Tag = .GetFocusedRowCellValue("OtherIncome_B-Amount")

            txtCreditor_1.Text = .GetFocusedRowCellValue("Creditor_1")
            txtCreditor_1.Tag = .GetFocusedRowCellValue("Creditor_1")

            txtNatureLoan_1.Text = .GetFocusedRowCellValue("NatureLoan_1")
            txtNatureLoan_1.Tag = .GetFocusedRowCellValue("NatureLoan_1")

            dAmountGranted_1.Value = .GetFocusedRowCellValue("AmountGranted_1")
            dAmountGranted_1.Tag = .GetFocusedRowCellValue("AmountGranted_1")

            dTerm_1.Value = .GetFocusedRowCellValue("Term_1")
            dTerm_1.Tag = .GetFocusedRowCellValue("Term_1")

            dBalance_1.Value = .GetFocusedRowCellValue("Balance_1")
            dBalance_1.Tag = .GetFocusedRowCellValue("Balance_1")

            txtCreditRemarks_1.Text = .GetFocusedRowCellValue("CreditRemarks_1")
            txtCreditRemarks_1.Tag = .GetFocusedRowCellValue("CreditRemarks_1")

            txtCreditor_2.Text = .GetFocusedRowCellValue("Creditor_2")
            txtCreditor_2.Tag = .GetFocusedRowCellValue("Creditor_2")

            txtNatureLoan_2.Text = .GetFocusedRowCellValue("NatureLoan_2")
            txtNatureLoan_2.Tag = .GetFocusedRowCellValue("NatureLoan_2")

            dAmountGranted_2.Value = .GetFocusedRowCellValue("AmountGranted_2")
            dAmountGranted_2.Tag = .GetFocusedRowCellValue("AmountGranted_2")

            dTerm_2.Value = .GetFocusedRowCellValue("Term_2")
            dTerm_2.Tag = .GetFocusedRowCellValue("Term_2")

            dBalance_2.Value = .GetFocusedRowCellValue("Balance_2")
            dBalance_2.Tag = .GetFocusedRowCellValue("Balance_2")

            txtCreditRemarks_2.Text = .GetFocusedRowCellValue("CreditRemarks_2")
            txtCreditRemarks_2.Tag = .GetFocusedRowCellValue("CreditRemarks_2")

            txtCreditor_3.Text = .GetFocusedRowCellValue("Creditor_3")
            txtCreditor_3.Tag = .GetFocusedRowCellValue("Creditor_3")

            txtNatureLoan_3.Text = .GetFocusedRowCellValue("NatureLoan_3")
            txtNatureLoan_3.Tag = .GetFocusedRowCellValue("NatureLoan_3")

            dAmountGranted_3.Value = .GetFocusedRowCellValue("AmountGranted_3")
            dAmountGranted_3.Tag = .GetFocusedRowCellValue("AmountGranted_3")

            dTerm_3.Value = .GetFocusedRowCellValue("Term_3")
            dTerm_3.Tag = .GetFocusedRowCellValue("Term_3")

            dBalance_3.Value = .GetFocusedRowCellValue("Balance_3")
            dBalance_3.Tag = .GetFocusedRowCellValue("Balance_3")

            txtCreditRemarks_3.Text = .GetFocusedRowCellValue("CreditRemarks_3")
            txtCreditRemarks_3.Tag = .GetFocusedRowCellValue("CreditRemarks_3")

            txtBank_1.Text = .GetFocusedRowCellValue("Bank_1")
            txtBank_1.Tag = .GetFocusedRowCellValue("Bank_1")

            txtBranch_1.Text = .GetFocusedRowCellValue("Branch_1")
            txtBranch_1.Tag = .GetFocusedRowCellValue("Branch_1")

            If .GetFocusedRowCellValue("AccountT_1") = "SA" Then
                cbxSA_1.Checked = True
            ElseIf .GetFocusedRowCellValue("AccountT_1") = "CA" Then
                cbxCA_1.Checked = True
            End If
            cbxSA_1.Tag = .GetFocusedRowCellValue("AccountT_1")
            cbxCA_1.Tag = .GetFocusedRowCellValue("AccountT_1")
            txtSA_1.Text = .GetFocusedRowCellValue("SA_1")
            txtSA_1.Tag = .GetFocusedRowCellValue("SA_1")

            dAverageBalance_1.Value = .GetFocusedRowCellValue("AverageBalance_1")
            dAverageBalance_1.Tag = .GetFocusedRowCellValue("AverageBalance_1")

            dPresentBalance_1.Value = .GetFocusedRowCellValue("PresentBalance_1")
            dPresentBalance_1.Tag = .GetFocusedRowCellValue("PresentBalance_1")

            txtOpened_1.Text = .GetFocusedRowCellValue("Opened_1")
            txtOpened_1.Tag = .GetFocusedRowCellValue("Opened_1")

            txtBankRemarks_1.Text = .GetFocusedRowCellValue("BankRemarks_1")
            txtBankRemarks_1.Tag = .GetFocusedRowCellValue("BankRemarks_1")

            txtBank_2.Text = .GetFocusedRowCellValue("Bank_2")
            txtBank_2.Tag = .GetFocusedRowCellValue("Bank_2")

            txtBranch_2.Text = .GetFocusedRowCellValue("Branch_2")
            txtBranch_2.Tag = .GetFocusedRowCellValue("Branch_2")

            If .GetFocusedRowCellValue("AccountT_2") = "SA" Then
                cbxSA_2.Checked = True
            ElseIf .GetFocusedRowCellValue("AccountT_2") = "CA" Then
                cbxCA_2.Checked = True
            End If
            cbxSA_2.Tag = .GetFocusedRowCellValue("AccountT_2")
            cbxCA_2.Tag = .GetFocusedRowCellValue("AccountT_2")
            txtSA_2.Text = .GetFocusedRowCellValue("SA_2")
            txtSA_2.Tag = .GetFocusedRowCellValue("SA_2")

            dAverageBalance_2.Value = .GetFocusedRowCellValue("AverageBalance_2")
            dAverageBalance_2.Tag = .GetFocusedRowCellValue("AverageBalance_2")

            dPresentBalance_2.Value = .GetFocusedRowCellValue("PresentBalance_2")
            dPresentBalance_2.Tag = .GetFocusedRowCellValue("PresentBalance_2")

            txtOpened_2.Text = .GetFocusedRowCellValue("Opened_2")
            txtOpened_2.Tag = .GetFocusedRowCellValue("Opened_2")

            txtBankRemarks_2.Text = .GetFocusedRowCellValue("BankRemarks_2")
            txtBankRemarks_2.Tag = .GetFocusedRowCellValue("BankRemarks_2")

            txtBank_3.Text = .GetFocusedRowCellValue("Bank_3")
            txtBank_3.Tag = .GetFocusedRowCellValue("Bank_3")

            txtBranch_3.Text = .GetFocusedRowCellValue("Branch_3")
            txtBranch_3.Tag = .GetFocusedRowCellValue("Branch_3")

            If .GetFocusedRowCellValue("AccountT_3") = "SA" Then
                cbxSA_3.Checked = True
            ElseIf .GetFocusedRowCellValue("AccountT_3") = "CA" Then
                cbxCA_3.Checked = True
            End If
            cbxSA_3.Tag = .GetFocusedRowCellValue("AccountT_3")
            cbxCA_3.Tag = .GetFocusedRowCellValue("AccountT_3")
            txtSA_3.Text = .GetFocusedRowCellValue("SA_3")
            txtSA_3.Tag = .GetFocusedRowCellValue("SA_3")

            dAverageBalance_3.Value = .GetFocusedRowCellValue("AverageBalance_3")
            dAverageBalance_3.Tag = .GetFocusedRowCellValue("AverageBalance_3")

            dPresentBalance_3.Value = .GetFocusedRowCellValue("PresentBalance_3")
            dPresentBalance_3.Tag = .GetFocusedRowCellValue("PresentBalance_3")

            txtOpened_3.Text = .GetFocusedRowCellValue("Opened_3")
            txtOpened_3.Tag = .GetFocusedRowCellValue("Opened_3")

            txtBankRemarks_3.Text = .GetFocusedRowCellValue("BankRemarks_3")
            txtBankRemarks_3.Tag = .GetFocusedRowCellValue("BankRemarks_3")

            txtLocation_1.Text = .GetFocusedRowCellValue("Location_1")
            txtLocation_1.Tag = .GetFocusedRowCellValue("Location_1")

            txtTCT_1.Text = .GetFocusedRowCellValue("TCT_1")
            txtTCT_1.Tag = .GetFocusedRowCellValue("TCT_1")

            dArea_1.Value = .GetFocusedRowCellValue("Area_1")
            dArea_1.Tag = .GetFocusedRowCellValue("Area_1")

            txtAcquired_1.Text = .GetFocusedRowCellValue("Acquired_1")
            txtAcquired_1.Tag = .GetFocusedRowCellValue("Acquired_1")

            txtPropertiesRemarks_1.Text = .GetFocusedRowCellValue("PropertiesRemarks_1")
            txtPropertiesRemarks_1.Tag = .GetFocusedRowCellValue("PropertiesRemarks_1")

            txtLocation_2.Text = .GetFocusedRowCellValue("Location_2")
            txtLocation_2.Tag = .GetFocusedRowCellValue("Location_2")

            txtTCT_2.Text = .GetFocusedRowCellValue("TCT_2")
            txtTCT_2.Tag = .GetFocusedRowCellValue("TCT_2")

            dArea_2.Value = .GetFocusedRowCellValue("Area_2")
            dArea_2.Tag = .GetFocusedRowCellValue("Area_2")

            txtAcquired_2.Text = .GetFocusedRowCellValue("Acquired_2")
            txtAcquired_2.Tag = .GetFocusedRowCellValue("Acquired_2")

            txtPropertiesRemarks_2.Text = .GetFocusedRowCellValue("PropertiesRemarks_2")
            txtPropertiesRemarks_2.Tag = .GetFocusedRowCellValue("PropertiesRemarks_2")

            txtLocation_3.Text = .GetFocusedRowCellValue("Location_3")
            txtLocation_3.Tag = .GetFocusedRowCellValue("Location_3")

            txtTCT_3.Text = .GetFocusedRowCellValue("TCT_3")
            txtTCT_3.Tag = .GetFocusedRowCellValue("TCT_3")

            dArea_3.Value = .GetFocusedRowCellValue("Area_3")
            dArea_3.Tag = .GetFocusedRowCellValue("Area_3")

            txtAcquired_3.Text = .GetFocusedRowCellValue("Acquired_3")
            txtAcquired_3.Tag = .GetFocusedRowCellValue("Acquired_3")

            txtPropertiesRemarks_3.Text = .GetFocusedRowCellValue("PropertiesRemarks_3")
            txtPropertiesRemarks_3.Tag = .GetFocusedRowCellValue("PropertiesRemarks_3")

            txtVehicle_1.Text = .GetFocusedRowCellValue("Vehicle_1")
            txtVehicle_1.Tag = .GetFocusedRowCellValue("Vehicle_1")

            dtpYear_1.Text = .GetFocusedRowCellValue("Year_1")
            dtpYear_1.Tag = .GetFocusedRowCellValue("Year_1")

            txtWhomAcquired_1.Text = .GetFocusedRowCellValue("WhomAcquired_1")
            txtWhomAcquired_1.Tag = .GetFocusedRowCellValue("WhomAcquired_1")

            txtWhenAcquired_1.Text = .GetFocusedRowCellValue("WhenAcquired_1")
            txtWhenAcquired_1.Tag = .GetFocusedRowCellValue("WhenAcquired_1")

            txtVehicleRemarks_1.Text = .GetFocusedRowCellValue("VehicleRemarks_1")
            txtVehicleRemarks_1.Tag = .GetFocusedRowCellValue("VehicleRemarks_1")

            txtVehicle_2.Text = .GetFocusedRowCellValue("Vehicle_2")
            txtVehicle_2.Tag = .GetFocusedRowCellValue("Vehicle_2")

            dtpYear_2.Text = .GetFocusedRowCellValue("Year_2")
            dtpYear_2.Tag = .GetFocusedRowCellValue("Year_2")

            txtWhomAcquired_2.Text = .GetFocusedRowCellValue("WhomAcquired_2")
            txtWhomAcquired_2.Tag = .GetFocusedRowCellValue("WhomAcquired_2")

            txtWhenAcquired_2.Text = .GetFocusedRowCellValue("WhenAcquired_2")
            txtWhenAcquired_2.Tag = .GetFocusedRowCellValue("WhenAcquired_2")

            txtVehicleRemarks_2.Text = .GetFocusedRowCellValue("VehicleRemarks_2")
            txtVehicleRemarks_2.Tag = .GetFocusedRowCellValue("VehicleRemarks_2")

            txtVehicle_3.Text = .GetFocusedRowCellValue("Vehicle_3")
            txtVehicle_3.Tag = .GetFocusedRowCellValue("Vehicle_3")

            dtpYear_3.Text = .GetFocusedRowCellValue("Year_3")
            dtpYear_3.Tag = .GetFocusedRowCellValue("Year_3")

            txtWhomAcquired_3.Text = .GetFocusedRowCellValue("WhomAcquired_3")
            txtWhomAcquired_3.Tag = .GetFocusedRowCellValue("WhomAcquired_3")

            txtWhenAcquired_3.Text = .GetFocusedRowCellValue("WhenAcquired_3")
            txtWhenAcquired_3.Tag = .GetFocusedRowCellValue("WhenAcquired_3")

            txtVehicleRemarks_3.Text = .GetFocusedRowCellValue("VehicleRemarks_3")
            txtVehicleRemarks_3.Tag = .GetFocusedRowCellValue("VehicleRemarks_3")

            txtHomeAppliances_1.Text = .GetFocusedRowCellValue("HomeAppliances_1")
            txtHomeAppliances_1.Tag = .GetFocusedRowCellValue("HomeAppliances_1")

            txtHomeAppliances_2.Text = .GetFocusedRowCellValue("HomeAppliances_2")
            txtHomeAppliances_2.Tag = .GetFocusedRowCellValue("HomeAppliances_2")

            txtReference_1.Text = .GetFocusedRowCellValue("Reference_1")
            txtReference_1.Tag = .GetFocusedRowCellValue("Reference_1")

            txtReferenceAddress_1.Text = .GetFocusedRowCellValue("ReferenceAddress_1")
            txtReferenceAddress_1.Tag = .GetFocusedRowCellValue("ReferenceAddress_1")

            txtReferenceContact_1.Text = .GetFocusedRowCellValue("ReferenceContact_1")
            txtReferenceContact_1.Tag = .GetFocusedRowCellValue("ReferenceContact_1")

            txtReference_2.Text = .GetFocusedRowCellValue("Reference_2")
            txtReference_2.Tag = .GetFocusedRowCellValue("Reference_2")

            txtReferenceAddress_2.Text = .GetFocusedRowCellValue("ReferenceAddress_2")
            txtReferenceAddress_2.Tag = .GetFocusedRowCellValue("ReferenceAddress_2")

            txtReferenceContact_2.Text = .GetFocusedRowCellValue("ReferenceContact_2")
            txtReferenceContact_2.Tag = .GetFocusedRowCellValue("ReferenceContact_2")

            txtReference_3.Text = .GetFocusedRowCellValue("Reference_3")
            txtReference_3.Tag = .GetFocusedRowCellValue("Reference_3")

            txtReferenceAddress_3.Text = .GetFocusedRowCellValue("ReferenceAddress_3")
            txtReferenceAddress_3.Tag = .GetFocusedRowCellValue("ReferenceAddress_3")

            txtReferenceContact_3.Text = .GetFocusedRowCellValue("ReferenceContact_3")
            txtReferenceContact_3.Tag = .GetFocusedRowCellValue("ReferenceContact_3")

            txtCertificateNo.Text = .GetFocusedRowCellValue("CertificateNo")
            txtCertificateNo.Tag = .GetFocusedRowCellValue("CertificateNo")

            txtPlaceIssue.Text = .GetFocusedRowCellValue("PlaceIssue")
            txtPlaceIssue.Tag = .GetFocusedRowCellValue("PlaceIssue")

            If .GetFocusedRowCellValue("Issue") = "" Then
                dtpIssue.CustomFormat = ""
            Else
                dtpIssue.CustomFormat = "MMM. dd, yyyy"
                dtpIssue.Value = .GetFocusedRowCellValue("Issue")
            End If
            dtpIssue.Tag = .GetFocusedRowCellValue("Issue")

            cbxAgent.Tag = If(.GetFocusedRowCellValue("Agent") = "", "No", "Yes")
            cbxAgent.Checked = If(.GetFocusedRowCellValue("Agent") = "", False, True)

            cbxAgentName.Text = .GetFocusedRowCellValue("Agent")
            cbxAgentName.Tag = .GetFocusedRowCellValue("Agent")

            txtAgentContact.Text = .GetFocusedRowCellValue("AgentNo")
            txtAgentContact.Tag = .GetFocusedRowCellValue("AgentNo")

            cbxAgentV2.Tag = If(.GetFocusedRowCellValue("Agent_2") = "", "No", "Yes")
            cbxAgentV2.Checked = If(.GetFocusedRowCellValue("Agent_2") = "", False, True)

            cbxAgentNameV2.Text = .GetFocusedRowCellValue("Agent_2")
            cbxAgentNameV2.Tag = .GetFocusedRowCellValue("Agent_2")

            txtAgentContactV2.Text = .GetFocusedRowCellValue("AgentNo_2")
            txtAgentContactV2.Tag = .GetFocusedRowCellValue("AgentNo_2")

            cbxMarketing.Checked = If(.GetFocusedRowCellValue("Marketing") = "", False, True)
            cbxMarketing.Tag = If(.GetFocusedRowCellValue("Marketing") = "", "No", "Yes")

            cbxMarketingName.Text = .GetFocusedRowCellValue("Marketing")
            cbxMarketingName.Tag = .GetFocusedRowCellValue("Marketing")

            txtMarketingContact.Text = .GetFocusedRowCellValue("MarketingNo")
            txtMarketingContact.Tag = .GetFocusedRowCellValue("MarketingNo")

            cbxWalkIn.Checked = If(.GetFocusedRowCellValue("WalkIn") = "", False, True)
            cbxWalkIn.Tag = If(.GetFocusedRowCellValue("WalkIn") = "", "No", "Yes")

            cbxWalkInType.Text = .GetFocusedRowCellValue("WalkIn")
            cbxWalkInType.Tag = .GetFocusedRowCellValue("WalkIn")

            txtWalkInOthers.Text = .GetFocusedRowCellValue("WalkIn_Specify")
            txtWalkInOthers.Tag = .GetFocusedRowCellValue("WalkIn_Specify")

            cbxDealer.Checked = If(.GetFocusedRowCellValue("Dealer") = "", False, True)
            cbxDealer.Tag = If(.GetFocusedRowCellValue("Dealer") = "", "No", "Yes")

            cbxDealerName.Text = .GetFocusedRowCellValue("Dealer")
            cbxDealerName.Tag = .GetFocusedRowCellValue("Dealer")

            txtDealersContact.Text = .GetFocusedRowCellValue("DealerNo")
            txtDealersContact.Tag = .GetFocusedRowCellValue("DealerNo")

            cbxBusinessCenter.Text = .GetFocusedRowCellValue("BusinessCenter")
            cbxBusinessCenter.Tag = .GetFocusedRowCellValue("BusinessCenter")

            TotalImage = .GetFocusedRowCellValue("Attach")
            TotalImageS = .GetFocusedRowCellValue("Attach_S")
            Draft_Status = .GetFocusedRowCellValue("status").ToUpper
            Status = .GetFocusedRowCellValue("application_status").ToUpper
            TotalImage_Approval = .GetFocusedRowCellValue("Attach_Approval")
            TotalImage_Crecomm = .GetFocusedRowCellValue("Attach_Crecomm")

            PD_CardNumber = .GetFocusedRowCellValue("PD_CardNumber")
            PD_AccountNumber = .GetFocusedRowCellValue("PD_AccountNumber")
            PD_BankID = .GetFocusedRowCellValue("PD_BankID")
            PD_ATM = .GetFocusedRowCellValue("PD_ATM")

            cbxSpouse_B.Checked = .GetFocusedRowCellValue("Borrower_S")
            cbxCoMaker1_B.Checked = .GetFocusedRowCellValue("Borrower_C1")
            cbxCoMaker2_B.Checked = .GetFocusedRowCellValue("Borrower_C2")
            cbxCoMaker3_B.Checked = .GetFocusedRowCellValue("Borrower_C3")
            cbxCoMaker4_B.Checked = .GetFocusedRowCellValue("Borrower_C4")

            ApproveStatus = .GetFocusedRowCellValue("ApproveStatus")
            ApprovedAmount_Crecomm = .GetFocusedRowCellValue("ApprovedAmount_Crecomm")
            ApprovedTerm_Crecomm = .GetFocusedRowCellValue("ApprovedTerm_Crecomm")
            ApprovedInterest_Crecomm = .GetFocusedRowCellValue("ApprovedInterest_Crecomm")
            ApprovedSC_Crecomm = .GetFocusedRowCellValue("ApprovedSC_Crecomm")
            ManualAmortization = .GetFocusedRowCellValue("ManualAmortization")
        End With

        PanelEx4.Enabled = False
        PanelEx5.Enabled = False
        PanelEx6.Enabled = False
        PanelEx7.Enabled = False
        PanelEx15.Enabled = False

        PanelEx10.Enabled = False
        PanelEx9.Enabled = False
        PanelEx11.Enabled = False
        PanelEx12.Enabled = False
        PanelEx13.Enabled = False
        PanelEx14.Enabled = False
        GridControl1.Enabled = False
        GridControl2.Enabled = False
        GridControl3.Enabled = False
        PanelEx18.Enabled = False
        PanelEx21.Enabled = False

        SuperTabControl1.SelectedTabIndex = 0
        btnSave.Enabled = False
        btnSave_F.Enabled = False
        GeneralRequirements()
        LoadRequirements()
        If GridView5.GetFocusedRowCellValue("FDD") = "" Then
            dtpFDD.CustomFormat = ""
        Else
            dtpFDD.CustomFormat = "MMMM dd, yyyy"
            dtpFDD.Value = GridView5.GetFocusedRowCellValue("FDD")
        End If
        LoadAmortizationSaved(GridView5.GetFocusedRowCellValue("Credit Number"))
        If (GridView5.GetFocusedRowCellValue("application_status") = "PENDING" Or GridView5.GetFocusedRowCellValue("status") = "DRAFT" Or GridView5.GetFocusedRowCellValue("Loan Type") = "MIGRATED") And GridView5.GetFocusedRowCellValue("Application Status") <> "CLOSED ACCOUNT" Then
            btnModify.Enabled = True
            If GridView5.GetFocusedRowCellValue("Loan Type") = "MIGRATED" Then
                From_Migrated = True
            Else
                From_Migrated = False
            End If
        Else
            If GridView5.GetFocusedRowCellValue("CI_Status") = "PENDING" And (User_Type = "ADMIN" Or ComparePosition({"REGIONAL MANAGER", "BRANCH MANAGER", "OPERATIONS MANAGER", "MICROFINANCE LOAN MANAGER", "OFFICER-IN-CHARGE", "OFFICE SUPERVISOR", "ASSISTANT BRANCH MANAGER"}, False)) And GridView5.GetFocusedRowCellValue("Application Status") <> "CLOSED ACCOUNT" Then
                If GridView5.GetFocusedRowCellValue("branch_id") = Branch_ID Then
                    btnModify.Enabled = True
                End If
            Else
                btnModify.Enabled = False
            End If
            From_Migrated = False
        End If
        If (User_Type = "ADMIN" Or ComparePosition({"REGIONAL MANAGER", "BRANCH MANAGER", "OPERATIONS MANAGER", "MICROFINANCE LOAN MANAGER", "OFFICER-IN-CHARGE", "OFFICE SUPERVISOR", "ASSISTANT BRANCH MANAGER"}, False)) And GridView5.GetFocusedRowCellValue("application_status") = "PENDING" And GridView5.GetFocusedRowCellValue("status") = "ACTIVE" Then
            btnApprove.Enabled = True
        Else
            btnApprove.Enabled = False
        End If
        If (User_Type = "ADMIN" Or ComparePosition({"REGIONAL MANAGER", "BRANCH MANAGER", "OPERATIONS MANAGER", "MICROFINANCE LOAN MANAGER", "OFFICER-IN-CHARGE", "OFFICE SUPERVISOR", "ASSISTANT BRANCH MANAGER"}, False)) And GridView5.GetFocusedRowCellValue("application_status") = "APPROVED" And GridView5.GetFocusedRowCellValue("CI_Status") = "PENDING" And GridView5.GetFocusedRowCellValue("CI") = "No" And From_CI = False Then
            btnEmailCrecom.Visible = True
            btnCreComm.Visible = True
            btnEmailCrecom.BringToFront()
            btnCreComm.BringToFront()
        Else
            btnEmailCrecom.Visible = False
            btnCreComm.Visible = False
        End If
        If GridView5.GetFocusedRowCellValue("ApproveStatus") = "For ReApprove" Or GridView5.GetFocusedRowCellValue("ApproveStatus") = "For Special" Then
            btnCreComm.Visible = True
            btnCreComm.BringToFront()
            btnEmailCrecom.Visible = True
            btnEmailCrecom.BringToFront()
        End If
    End Sub

    Private Sub LoadAmortizationSaved(CreditNumber As String)
        Dim Temp_DT As DataTable = DataSource(String.Format("SELECT `No`, IFNULL(DATE_FORMAT(DueDate,'%m.%d.%Y'),'') AS 'Due Date', IF(`No` = '','',Monthly) AS 'Monthly', IF(`No` = '','',InterestIncome) AS 'Interest Income', IF(`No` = '','',RPPD) AS 'RPPD', IF(`No` = '','',PrincipalAllocation) AS 'Principal Allocation', OutstandingPrincipal AS 'Outstanding Principal', Total_RPPD AS 'Total_RPPD', UnearnIncome AS 'Unearn Income', LoansReceivable AS 'Loans Receivable', Penalty AS 'Penalty', PenaltyBalance AS 'Penalty Balance' FROM credit_schedule WHERE CreditNumber = '{0}' AND `status` = 'ACTIVE';", CreditNumber))
        Dim T_Monthly As Double
        Dim T_Interest As Double
        Dim T_RPPD As Double
        Dim T_Principal As Double
        Dim T_Penalty As Double
        For x As Integer = 1 To Temp_DT.Rows.Count - 1
            T_Monthly += CDbl(Temp_DT(x)("Monthly"))
            T_Interest += CDbl(Temp_DT(x)("Interest Income"))
            T_RPPD += CDbl(Temp_DT(x)("RPPD"))
            T_Principal += CDbl(Temp_DT(x)("Principal Allocation"))
            T_Penalty += CDbl(Temp_DT(x)("Penalty"))
        Next
        If T_Penalty > 0 Then
            GridColumn6.VisibleIndex = 0
            GridColumn10.VisibleIndex = 1
            GridColumn27.VisibleIndex = 2
            GridColumn11.VisibleIndex = 3
            GridColumn12.VisibleIndex = 4
            GridColumn7.VisibleIndex = 5
            GridColumn8.VisibleIndex = 6

            GridColumn6.Width = 22
            GridColumn10.Width = 54
            GridColumn11.Width = 54
            GridColumn12.Width = 54
            GridColumn7.Width = 62
            GridColumn27.Width = 52
            GridColumn8.Width = 62
        End If
        Temp_DT.Rows.Add("", "TOTAL", T_Monthly, T_Interest, T_RPPD, T_Principal, 0, 0, 0, 0, T_Penalty, 0)
        GridControl3.DataSource = Temp_DT
    End Sub

    Private Sub BtnModify_Click(sender As Object, e As EventArgs) Handles btnModify.Click
        If vUpdate Then
        Else
            MsgBox(mBox_Update, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        If MsgBoxYes(mModify) = MsgBoxResult.Yes Then
            cbxBorrower.Enabled = False
            cbxOtherBranch.Enabled = False
            dtpDate.Enabled = False
            If Draft_Status = "DRAFT" Then
                btnSave.Text = "Update Draft"
                btnSave_F.Text = "&Save"
                btnSave.Enabled = True
            Else
                btnSave.Enabled = False
                btnSave_F.Text = "Update"
            End If
            btnSave_F.Enabled = True
            btnModify.Enabled = False
            If From_CI = False Then
                btnDelete.Enabled = True
            End If

            If From_Request Then
                'Generate Code **************
                Code = GenerateOTAC()

                dInterest_C.Enabled = False
                dInterest_T.Enabled = False
                dRPPDRate_C.Enabled = False
                dRPPDRate_T.Enabled = False
                dUDI_C.Enabled = False
                dRPPD_C.Enabled = False
                dFA_C.Enabled = False
                cbxRoundUp.Enabled = False
                dGMA_C.Enabled = False
                dGMA_C2.Enabled = False
                dMR_C.Enabled = False
                dMR_C2.Enabled = False
                dNMA_C.Enabled = False
                dNMA_C2.Enabled = False
                iAdvancePayment.Enabled = False
                rNote.Enabled = True
            Else
                If From_Migrated = False Then
                    PanelEx4.Enabled = True
                    PanelEx5.Enabled = True
                    PanelEx6.Enabled = True
                    PanelEx7.Enabled = True
                    PanelEx15.Enabled = True
                End If
            End If

            PanelEx10.Enabled = True
            PanelEx9.Enabled = True
            PanelEx11.Enabled = True
            PanelEx12.Enabled = True
            PanelEx13.Enabled = True
            PanelEx14.Enabled = True
            GridControl1.Enabled = True
            GridControl2.Enabled = True
            GridControl3.Enabled = True
            If From_Migrated = False Then
                PanelEx18.Enabled = True
            Else
                cbxOptions.Enabled = False
            End If
            PanelEx21.Enabled = True

            btnID.Enabled = True
            btnAttachB.Enabled = True
        End If
    End Sub

    Private Sub BtnDelete_Click(sender As Object, e As EventArgs) Handles btnDelete.Click
        If vDelete Then
        Else
            Dim Creator_Draft As Integer = DataObject(String.Format("SELECT COUNT(ID) FROM credit_application WHERE `status` = 'DRAFT' AND user_code = '{0}' AND CreditNumber = '{1}';", User_Code, txtCreditNumber.Text))
            If Creator_Draft > 0 Then
            Else
                MsgBox(mBox_Delete, MsgBoxStyle.Information, "Info")
                Exit Sub
            End If
        End If

        If MsgBoxYes(mDelete) = MsgBoxResult.Yes Then
            Dim Reason As String 'Reason for change
            If FrmReason.ShowDialog = DialogResult.OK Then
                Reason = FrmReason.txtReason.Text
            Else
                Exit Sub
            End If

            Cursor = Cursors.WaitCursor
            Dim SQL As String = ""
            If cbxOptions.SelectedIndex = 2 And cbxAccountNo.SelectedIndex > -1 Then
                SQL &= String.Format("UPDATE credit_application SET ForRestructuring = 0 WHERE ForRestructuring = 1 AND CreditNumber = '{0}';", cbxAccountNo.SelectedValue)
            End If
            SQL &= String.Format("UPDATE credit_application SET `status` = 'DELETED' WHERE CreditNumber = '{0}';", txtCreditNumber.Text)

            If cbxOptions.SelectedIndex = 3 And cbxAccountNo.SelectedIndex > -1 Then
                SQL &= String.Format("UPDATE credit_application SET AssumptionCredit = '' WHERE CreditNumber = '{1}';", txtCreditNumber.Text, cbxAccountNo.SelectedValue)
            End If
            DataObject(SQL)
            Logs("Credit Application", "Cancel", Reason, String.Format("Cancel Credit Application with Credit Number {0}", txtCreditNumber.Text), "", "", txtCreditNumber.Text)
            LoadData()
            Clear()
            Cursor = Cursors.Default
            MsgBox("Successfully Cancelled", MsgBoxStyle.Information, "Info")
        End If
    End Sub

    Private Sub CbxEmployer_B_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbxEmployer_B.SelectedIndexChanged
        If FirstLoad Then
            Exit Sub
        End If

        If cbxEmployer_B.SelectedIndex > -1 Then
            Dim drv As DataRowView = DirectCast(cbxEmployer_B.SelectedItem, DataRowView)
            txtEmployerAddress_B.Text = drv("EmployerAddress_B")
            txtEmployerTelephone_B.Text = drv("EmployerTelephone_B")
        End If
    End Sub

    Private Sub BtnAttach_Click(sender As Object, e As EventArgs) Handles btnAttachB.Click
        Dim Attach As New FrmAttachFileV2
        With Attach
            .FolderName = "Attachment"
            .Type = "Borrower's Attachment I"
            .TotalImage = DataObject(String.Format("SELECT Attach FROM profile_borrower WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE'", Me.BorrowerID))
            .BorrowerNumber = BorrowerID
            .ID = BorrowerID
            Dim Result = .ShowDialog
            If Result = DialogResult.OK Then
                TotalImage = .TotalImage
            ElseIf Result = DialogResult.Yes Then
                TotalImage = .TotalImage
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnID_Click(sender As Object, e As EventArgs) Handles btnID.Click
        Dim ID As New FrmID
        With ID
            .BorrowerID = Me.BorrowerID
            .From_Borrower = False
            .txtTIN.Text = txtTIN_B.Text
            .txtSSS.Text = txtSSS_B.Text
            Dim BorrowerID As DataTable = DataSource(String.Format("SELECT * FROM profile_borrowerid WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE' AND ID_Type = 'B'", Me.BorrowerID))
            If BorrowerID.Rows.Count > 0 Then
                .txtGSIS.Text = BorrowerID(0)("GSIS")
                .txtPhilHealth.Text = BorrowerID(0)("PhilHealth")
                .txtSenior.Text = BorrowerID(0)("Senior")
                .txtUMID.Text = BorrowerID(0)("UMID")
                .txtSEC.Text = BorrowerID(0)("SEC")
                .txtDTI.Text = BorrowerID(0)("DTI")
                .txtCDA.Text = BorrowerID(0)("CDA")
                .txtCooperative.Text = BorrowerID(0)("Cooperative")
                .txtDrivers.Text = BorrowerID(0)("Drivers")
                If BorrowerID(0)("dDrivers") = "" Then
                Else
                    .dtpDrivers.Value = BorrowerID(0)("dDrivers")
                End If
                .txtVIN.Text = BorrowerID(0)("VIN")
                If BorrowerID(0)("dVIN") = "" Then
                Else
                    .dtpVIN.Value = BorrowerID(0)("dVIN")
                End If
                .txtPassport.Text = BorrowerID(0)("Passport")
                If BorrowerID(0)("dPassport") = "" Then
                Else
                    .dtpPassport.Value = BorrowerID(0)("dPassport")
                End If
                .txtPRC.Text = BorrowerID(0)("PRC")
                If BorrowerID(0)("dPRC") = "" Then
                Else
                    .dtpPRC.Value = BorrowerID(0)("dPRC")
                End If
                .txtNBI.Text = BorrowerID(0)("NBI")
                If BorrowerID(0)("dNBI") = "" Then
                Else
                    .dtpNBI.Value = BorrowerID(0)("dNBI")
                End If
                .txtPolice.Text = BorrowerID(0)("Police")
                If BorrowerID(0)("dPolice") = "" Then
                Else
                    .dtpPolice.Value = BorrowerID(0)("dPolice")
                End If
                .txtPostal.Text = BorrowerID(0)("Postal")
                If BorrowerID(0)("dPostal") = "" Then
                Else
                    .dtpPostal.Value = BorrowerID(0)("dPostal")
                End If
                .txtBarangay.Text = BorrowerID(0)("Barangay")
                If BorrowerID(0)("dBarangay") = "" Then
                Else
                    .dtpBarangay.Value = BorrowerID(0)("dBarangay")
                End If
                .txtOWWA.Text = BorrowerID(0)("OWWA")
                If BorrowerID(0)("dOWWA") = "" Then
                Else
                    .dtpOWWA.Value = BorrowerID(0)("dOWWA")
                End If
                .txtOFW.Text = BorrowerID(0)("OFW")
                If BorrowerID(0)("dOFW") = "" Then
                Else
                    .dtpOFW.Value = BorrowerID(0)("dOFW")
                End If
                .txtSeaman.Text = BorrowerID(0)("Seaman")
                If BorrowerID(0)("dSeaman") = "" Then
                Else
                    .dtpSeaman.Value = BorrowerID(0)("dSeaman")
                End If
                .txtPNP.Text = BorrowerID(0)("PNP")
                If BorrowerID(0)("dPNP") = "" Then
                Else
                    .dtpPNP.Value = BorrowerID(0)("dPNP")
                End If
                .txtAFP.Text = BorrowerID(0)("AFP")
                If BorrowerID(0)("dAFP") = "" Then
                Else
                    .dtpAFP.Value = BorrowerID(0)("dAFP")
                End If
                .txtHDMF.Text = BorrowerID(0)("HDMF")
                If BorrowerID(0)("dHDMF") = "" Then
                Else
                    .dtpHDMF.Value = BorrowerID(0)("dHDMF")
                End If
                .txtPWD.Text = BorrowerID(0)("PWD")
                If BorrowerID(0)("dPWD") = "" Then
                Else
                    .dtpPWD.Value = BorrowerID(0)("dPWD")
                End If
                .txtDSWD.Text = BorrowerID(0)("DSWD")
                If BorrowerID(0)("dDSWD") = "" Then
                Else
                    .dtpDSWD.Value = BorrowerID(0)("dDSWD")
                End If
                .txtACR.Text = BorrowerID(0)("ACR")
                If BorrowerID(0)("dACR") = "" Then
                Else
                    .dtpACR.Value = BorrowerID(0)("dACR")
                End If
                .txtDTI_Business.Text = BorrowerID(0)("DTI_Business")
                If BorrowerID(0)("dDTI_Business") = "" Then
                Else
                    .dtpDTI_Business.Value = BorrowerID(0)("dDTI_Business")
                End If
                .txtIBP.Text = BorrowerID(0)("IBP")
                If BorrowerID(0)("dIBP") = "" Then
                Else
                    .dtpIBP.Value = BorrowerID(0)("dIBP")
                End If
                .txtFireArms.Text = BorrowerID(0)("FireArms")
                If BorrowerID(0)("dFireArms") = "" Then
                Else
                    .dtpFireArms.Value = BorrowerID(0)("dFireArms")
                End If
                .txtGovernment.Text = BorrowerID(0)("Government")
                If BorrowerID(0)("dGovernment") = "" Then
                Else
                    .dtpGovernment.Value = BorrowerID(0)("dGovernment")
                End If
                .txtDiplomat.Text = BorrowerID(0)("Diplomat")
                If BorrowerID(0)("dDiplomat") = "" Then
                Else
                    .dtpDiplomat.Value = BorrowerID(0)("dDiplomat")
                End If
                .txtNational.Text = BorrowerID(0)("National")
                If BorrowerID(0)("dNational") = "" Then
                Else
                    .dtpNational.Value = BorrowerID(0)("dNational")
                End If
                .txtWork.Text = BorrowerID(0)("Work")
                If BorrowerID(0)("dWork") = "" Then
                Else
                    .dtpWork.Value = BorrowerID(0)("dWork")
                End If
                .txtGOCC.Text = BorrowerID(0)("GOCC")
                If BorrowerID(0)("dGOCC") = "" Then
                Else
                    .dtpGOCC.Value = BorrowerID(0)("dGOCC")
                End If
                .txtPLRA.Text = BorrowerID(0)("PLRA")
                If BorrowerID(0)("dPLRA") = "" Then
                Else
                    .dtpPLRA.Value = BorrowerID(0)("dPLRA")
                End If
                .txtMajor.Text = BorrowerID(0)("Major")
                If BorrowerID(0)("dMajor") = "" Then
                Else
                    .dtpMajor.Value = BorrowerID(0)("dMajor")
                End If
                .txtMedia.Text = BorrowerID(0)("Media")
                If BorrowerID(0)("dMedia") = "" Then
                Else
                    .dtpMedia.Value = BorrowerID(0)("dMedia")
                End If
                .txtStudent.Text = BorrowerID(0)("Student")
                If BorrowerID(0)("dStudent") = "" Then
                Else
                    .dtpStudent.Value = BorrowerID(0)("dStudent")
                End If
                .txtSIRV.Text = BorrowerID(0)("SIRV")
                If BorrowerID(0)("dSIRV") = "" Then
                Else
                    .dtpSIRV.Value = BorrowerID(0)("dSIRV")
                End If

                .TotalImage_TIN = BorrowerID(0)("Attach_TIN")
                .TotalImage_SSS = BorrowerID(0)("Attach_SSS")
                .TotalImage_GSIS = BorrowerID(0)("Attach_GSIS")
                .TotalImage_PhilHealth = BorrowerID(0)("Attach_PhilHealth")
                .TotalImage_Senior = BorrowerID(0)("Attach_Senior")
                .TotalImage_UMID = BorrowerID(0)("Attach_UMID")
                .TotalImage_SEC = BorrowerID(0)("Attach_SEC")
                .TotalImage_DTI = BorrowerID(0)("Attach_DTI")
                .TotalImage_CDA = BorrowerID(0)("Attach_CDA")
                .TotalImage_Cooperative = BorrowerID(0)("Attach_Cooperative")
                .TotalImage_Drivers = BorrowerID(0)("Attach_Drivers")
                .TotalImage_VIN = BorrowerID(0)("Attach_VIN")
                .TotalImage_Passport = BorrowerID(0)("Attach_Passport")
                .TotalImage_PRC = BorrowerID(0)("Attach_PRC")
                .TotalImage_NBI = BorrowerID(0)("Attach_NBI")
                .TotalImage_Police = BorrowerID(0)("Attach_Police")
                .TotalImage_Postal = BorrowerID(0)("Attach_Postal")
                .TotalImage_Barangay = BorrowerID(0)("Attach_Barangay")
                .TotalImage_OWWA = BorrowerID(0)("Attach_OWWA")
                .TotalImage_OFW = BorrowerID(0)("Attach_OFW")
                .TotalImage_Seaman = BorrowerID(0)("Attach_Seaman")
                .TotalImage_PNP = BorrowerID(0)("Attach_PNP")
                .TotalImage_AFP = BorrowerID(0)("Attach_AFP")
                .TotalImage_HDMF = BorrowerID(0)("Attach_HDMF")
                .TotalImage_PWD = BorrowerID(0)("Attach_PWD")
                .TotalImage_DSWD = BorrowerID(0)("Attach_DSWD")
                .TotalImage_ACR = BorrowerID(0)("Attach_ACR")
                .TotalImage_DTI_Business = BorrowerID(0)("Attach_DTI_Business")
                .TotalImage_IBP = BorrowerID(0)("Attach_IBP")
                .TotalImage_FireArms = BorrowerID(0)("Attach_FireArms")
                .TotalImage_Government = BorrowerID(0)("Attach_Government")
                .TotalImage_Diplomat = BorrowerID(0)("Attach_Diplomat")
                .TotalImage_National = BorrowerID(0)("Attach_National")
                .TotalImage_Work = BorrowerID(0)("Attach_Work")
                .TotalImage_GOCC = BorrowerID(0)("Attach_GOCC")
                .TotalImage_PLRA = BorrowerID(0)("Attach_PLRA")
                .TotalImage_Major = BorrowerID(0)("Attach_Major")
                .TotalImage_Media = BorrowerID(0)("Attach_Media")
                .TotalImage_Student = BorrowerID(0)("Attach_Student")
                .TotalImage_SIRV = BorrowerID(0)("Attach_SIRV")
            End If

            .btnAttach_TIN.Enabled = True
            .btnAttach_SSS.Enabled = True
            .btnAttach_GSIS.Enabled = True
            .btnAttach_PhilHealth.Enabled = True
            .btnAttach_Senior.Enabled = True
            .btnAttach_UMID.Enabled = True
            .btnAttach_SEC.Enabled = True
            .btnAttach_DTI.Enabled = True
            .btnAttach_CDA.Enabled = True
            .btnAttach_Cooperative.Enabled = True
            .btnAttach_Drivers.Enabled = True
            .btnAttach_VIN.Enabled = True
            .btnAttach_Passport.Enabled = True
            .btnAttach_PRC.Enabled = True
            .btnAttach_NBI.Enabled = True
            .btnAttach_Police.Enabled = True
            .btnAttach_Postal.Enabled = True
            .btnAttach_Barangay.Enabled = True
            .btnAttach_OWWA.Enabled = True
            .btnAttach_OFW.Enabled = True
            .btnAttach_Seaman.Enabled = True
            .btnAttach_PNP.Enabled = True
            .btnAttach_AFP.Enabled = True
            .btnAttach_HDMF.Enabled = True
            .btnAttach_PWD.Enabled = True
            .btnAttach_DSWD.Enabled = True
            .btnAttach_ACR.Enabled = True
            .btnAttach_DTI_Business.Enabled = True
            .btnAttach_IBP.Enabled = True
            .btnAttach_FireArms.Enabled = True
            .btnAttach_Government.Enabled = True
            .btnAttach_Diplomat.Enabled = True
            .btnAttach_National.Enabled = True
            .btnAttach_Work.Enabled = True
            .btnAttach_GOCC.Enabled = True
            .btnAttach_PLRA.Enabled = True
            .btnAttach_Major.Enabled = True
            .btnAttach_Media.Enabled = True
            .btnAttach_Student.Enabled = True
            .btnAttach_SIRV.Enabled = True

            If .ShowDialog = DialogResult.OK Then
                txtTIN_B.Text = .txtTIN.Text
                txtSSS_B.Text = .txtSSS.Text
                GSIS = .txtGSIS.Text
                PhilHealth = .txtPhilHealth.Text
                Senior = .txtSenior.Text
                UMID = .txtUMID.Text
                SEC = .txtSEC.Text
                DTI = .txtDTI.Text
                CDA = .txtCDA.Text
                Cooperative = .txtCooperative.Text
                Drivers = .txtDrivers.Text
                dDrivers = FormatDatePicker(.dtpDrivers)
                VIN = .txtVIN.Text
                dVIN = FormatDatePicker(.dtpVIN)
                Passport = .txtPassport.Text
                dPassport = FormatDatePicker(.dtpPassport)
                PRC = .txtPRC.Text
                dPRC = FormatDatePicker(.dtpPRC)
                NBI = .txtNBI.Text
                dNBI = FormatDatePicker(.dtpNBI)
                Police = .txtPolice.Text
                dPolice = FormatDatePicker(.dtpPolice)
                Postal = .txtPostal.Text
                dPostal = FormatDatePicker(.dtpPostal)
                Barangay = .txtBarangay.Text
                dBarangay = FormatDatePicker(.dtpBarangay)
                OWWA = .txtOWWA.Text
                dOWWA = FormatDatePicker(.dtpOWWA)
                OFW = .txtOFW.Text
                dOFW = FormatDatePicker(.dtpOFW)
                Seaman = .txtSeaman.Text
                dSeaman = FormatDatePicker(.dtpSeaman)
                PNP = .txtPNP.Text
                dPNP = FormatDatePicker(.dtpPNP)
                AFP = .txtAFP.Text
                dAFP = FormatDatePicker(.dtpAFP)
                HDMF = .txtHDMF.Text
                dHDMF = FormatDatePicker(.dtpHDMF)
                PWD = .txtPWD.Text
                dPWD = FormatDatePicker(.dtpPWD)
                DSWD = .txtDSWD.Text
                dDSWD = FormatDatePicker(.dtpDSWD)
                ACR = .txtACR.Text
                dACR = FormatDatePicker(.dtpACR)
                DTI_Business = .txtDTI_Business.Text
                dDTI_Business = FormatDatePicker(.dtpDTI_Business)
                IBP = .txtIBP.Text
                dIBP = FormatDatePicker(.dtpIBP)
                FireArms = .txtFireArms.Text
                dFireArms = FormatDatePicker(.dtpFireArms)
                Government = .txtGovernment.Text
                dGovernment = FormatDatePicker(.dtpGovernment)
                Diplomat = .txtDiplomat.Text
                dDiplomat = FormatDatePicker(.dtpDiplomat)
                National = .txtNational.Text
                dNational = FormatDatePicker(.dtpNational)
                Work = .txtWork.Text
                dWork = FormatDatePicker(.dtpWork)
                GOCC = .txtGOCC.Text
                dGOCC = FormatDatePicker(.dtpGOCC)
                PLRA = .txtPLRA.Text
                dPLRA = FormatDatePicker(.dtpPLRA)
                Major = .txtMajor.Text
                dMajor = FormatDatePicker(.dtpMajor)
                Media = .txtMedia.Text
                dMedia = FormatDatePicker(.dtpMedia)
                Student = .txtStudent.Text
                dStudent = FormatDatePicker(.dtpStudent)
                SIRV = .txtSIRV.Text
                dSIRV = FormatDatePicker(.dtpSIRV)
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnApprove_Click(sender As Object, e As EventArgs) Handles btnApprove.Click
        Dim Approved As New FrmCreditApproved
        With Approved
            If BorrowerID.ToString.Contains("C") Then
                .Corporate = True
            End If
            .BorrowerID = BorrowerID
            .Mortgage_ID = MortgageID
            .For_CI = For_CI
            .CreditNumber = txtCreditNumber.Text
            .CbxPrefix_B.Text = CbxPrefix_B.Text
            .TxtFirstN_B.Text = TxtFirstN_B.Text
            .TxtMiddleN_B.Text = TxtMiddleN_B.Text
            .TxtLastN_B.Text = TxtLastN_B.Text
            .cbxSuffix_B.Text = cbxSuffix_B.Text
            '*** COMPARISON *****************************************************************************************************************
            .dPrincipal.Value = dAmountApplied.Value
            .iTerms.Value = iTerms.Value
            .cbxTerms.Text = cbxTerms.Text
            .dInterestRate.Value = dInterest_T.Value
            .dServiceCharge.Value = dSC_Rate.Value
            .dNetProceeds_C.Value = dNetProceeds_C.Value
            .cbxProduct.Text = cbxProduct.Text
            .ApproveStatus = ApproveStatus
            .AssignedCI = AssignedCI

            If ApproveStatus = "For ReApprove" Or ApproveStatus = "For Special" Then
                .dPrincipalA.Value = ApprovedAmount_Crecomm
                .iTermsA.Value = ApprovedTerm_Crecomm
                .cbxTermsA.Text = cbxTerms.Text
                .dInterestRateA.Value = ApprovedInterest_Crecomm
                .dServiceChargeA.Value = ApprovedSC_Crecomm
            End If

            .dPrincipalA.MaxValue = dAmountApplied.Value
            '*** COMPARISON *****************************************************************************************************************

            .cbxProduct.Text = cbxProduct.Text
            .dFA_C.Value = dFA_C.Value
            .dNetProceeds_C.Value = dNetProceeds_C.Value
            .pb_B.Image = pb_B.Image.Clone
            .lblCreditNumber.Text = txtCreditNumber.Text
            .TotalImage = TotalImage_Approval
            .ProductID = cbxProduct.SelectedValue
            .TransDate = dtpDate.Value

            If .ShowDialog = DialogResult.OK Then
                If Branch_ID.ToString <> Borrower_BranchID Then
                    'NOTIFY ORIGINAL BRANCH OF BORROWER THAT IT BORROW ON OTHER BRANCH
                    Dim Subject As String = String.Format("Borrower {0} applied for a loan in branch {2} [{3}]", TxtFirstN_B.Text & " " & TxtLastN_B.Text, dAmountApplied.Text, Branch, txtCreditNumber.Text)
                    Dim Msg As String = "Good day," & vbCrLf
                    Msg &= String.Format("Borrower {0} applied for a loan in branch {2} [{3}]. Please check the attached credit application form for your reference.", TxtFirstN_B.Text & " " & TxtLastN_B.Text, dAmountApplied.Text, Branch, txtCreditNumber.Text)
                    Msg &= " Thank you!"

                    From_CI_Print = True
                    CompareFromBorrower = True
                    PrintName = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) & "\CAF-" & txtCreditNumber.Text & "-" & Format(Date.Now, "yyyy-MM-dd_hhmmss") & ".pdf"
                    BtnPrint_Click(sender, e)
                    AttachmentFiles.Add(PrintName)
                    From_CI_Print = False
                    CompareFromBorrower = False
                    SendNotificationToBM(Borrower_BranchID, Msg, Subject, False, False)
                End If
                Clear()
                LoadData()
            End If
            .Dispose()
        End With
    End Sub

    Private Sub CbxBorrower_TextChanged(sender As Object, e As EventArgs) Handles cbxBorrower.TextChanged
        If cbxBorrower.Text = "" And TxtFirstN_B.Text <> "" Then
            Clear()
        End If
    End Sub

    Private Sub BtnSN_Click(sender As Object, e As EventArgs) Handles btnSN.Click
        If TxtFirstN_B.Enabled = False And cbxBorrower.Enabled = True Then
            MsgBox("Please select a borrower first.", MsgBoxStyle.Information, "Info")
            SuperTabControl1.SelectedTab = tabBorrower
            cbxBorrower.Focus()
            cbxBorrower.DroppedDown = True
            Exit Sub
        End If

        Dim Spouse As New FrmSpouse
        With Spouse
            .BorrowerID = BorrowerID
            .BorrowerName = If(CbxPrefix_B.Text = "", "", CbxPrefix_B.Text & " ") & If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & If(cbxSuffix_B.Text = "", "", cbxSuffix_B.Text)
            .CreditNumber = txtCreditNumber.Text
            .SpouseID = SpouseID
            .Borrower_Branch = Borrower_Branch
            .vSave = vSave
            .vUpdate = vUpdate
            .vDelete = vDelete
            .vPrint = vPrint
            .TotalImage = TotalImageS
            If TxtFirstN_S.Text = "" Then
                .btnSave.Enabled = True
                .btnDelete.Enabled = False
                .btnModify.Enabled = False

                .txtNoC_S.Text = txtNoC_B.Text
                .txtStreetC_S.Text = txtStreetC_B.Text
                .txtBarangayC_S.Text = txtBarangayC_B.Text
                .txtNoP_S.Text = txtNoP_B.Text
                .txtStreetP_S.Text = txtStreetP_B.Text
                .txtBarangayP_S.Text = txtBarangayP_B.Text

                .txtBusinessName_S.Text = txtBusinessName_B.Text
                .txtBusinessAddress_S.Text = txtBusinessAddress_B.Text
                .txtBusinessTelephone_S.Text = txtBusinessTelephone_B.Text
                .iYrsOperation_S.Value = iYrsOperation_B.Value
                .dBusinessIncome_S.Value = dBusinessIncome_B.Value
                .iNoEmployees_S.Value = iNoEmployees_B.Value
                .dCapital_S.Value = dCapital_B.Value
                .txtArea_S.Text = txtArea_B.Text
                .dtpExpiry_S.Value = dtpExpiry_B.Value
                .dtpExpiry_S.CustomFormat = dtpExpiry_B.CustomFormat
                .iOutlet_S.Value = iOutlet_B.Value
                .txtOtherIncome_S.Text = txtOtherIncome_B.Text
                .dOtherIncome_S.Value = dOtherIncome_B.Value
                If cbxMale_B.Checked Then
                    .cbxFemale_S.Checked = True
                ElseIf cbxFemale_B.Checked Then
                    .cbxMale_S.Checked = True
                End If
            Else
                .PanelEx5.Enabled = False
                .PanelEx8.Enabled = False
                .btnModify.Enabled = True
                .btnSave.Enabled = False
                .btnDelete.Enabled = False
                If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
                Else
                    .btnAttach.Enabled = True
                End If

                .CbxPrefix_S.Text = vPrefix_S
                .TxtFirstN_S.Text = vFirstN_S
                .TxtMiddleN_S.Text = vMiddleN_S
                .TxtLastN_S.Text = vLastN_S
                .cbxSuffix_S.Text = vSuffix_S
                .CbxPrefix_M.Text = vPrefix_M
                .TxtFirstN_M.Text = vFirstN_M
                .TxtMiddleN_M.Text = vMiddleN_M
                .TxtLastN_M.Text = vLastN_M
                .cbxSuffix_M.Text = vSuffix_M
                If vNoC_S = "" And vStreetC_S = "" And vBarangayC_S = "" Then
                    .txtNoC_S.Text = txtNoC_B.Text
                    .txtStreetC_S.Text = txtStreetC_B.Text
                    .txtBarangayC_S.Text = txtBarangayC_B.Text
                Else
                    .txtNoC_S.Text = vNoC_S
                    .txtStreetC_S.Text = vStreetC_S
                    .txtBarangayC_S.Text = vBarangayC_S
                End If
                If vNoP_S = "" And vStreetP_S = "" And vBarangayP_S = "" Then
                    .txtNoP_S.Text = txtNoP_B.Text
                    .txtStreetP_S.Text = txtStreetP_B.Text
                    .txtBarangayP_S.Text = txtBarangayP_B.Text
                Else
                    .txtNoP_S.Text = vNoP_S
                    .txtStreetP_S.Text = vStreetP_S
                    .txtBarangayP_S.Text = vBarangayP_S
                End If
                If vBirth_S = "" Then
                    .DtpBirth_S.CustomFormat = ""
                Else
                    .DtpBirth_S.CustomFormat = "MMMM dd, yyyy"
                    .DtpBirth_S.Text = vBirth_S
                End If
                .cbxPlaceBirth_S.Text = vPlaceBirth_S
                .cbxMale_S.Checked = vMale_S
                .cbxFemale_S.Checked = vFemale_S
                .txtCitizenship_S.Text = vCitizenship_S
                .txtTIN_S.Text = vTIN_S
                .txtTelephone_S.Text = vTelephone_S
                .txtSSS_S.Text = vSSS_S
                .txtMobile_S.Text = vMobile_S
                .txtEmail_S.Text = vEmail_S
                .cbxOwned_S.Checked = vOwned_S
                .cbxFree_S.Checked = vFree_S
                .cbxRented_S.Checked = vRented_S
                .dRent_S.Value = vRent_S
                .pb_S.Image = pb_Spouse.Image.Clone
                .txtPath_S.Text = txtPath_S.Text
                .cbxEmployer_S.Text = vEmployer_S
                .txtEmployerAddress_S.Text = vEmpAddress_S
                .txtEmployerTelephone_S.Text = vEmpTelephone_S
                .cbxPosition_S.Text = vPosition_S
                .cbxCasual_S.Checked = vCasual_S
                .cbxTemporary_S.Checked = vTemporary_S
                .cbxPermanent_S.Checked = vPermanent_S
                If vHired_S = "" Then
                    .dtpHired_S.CustomFormat = ""
                Else
                    .dtpHired_S.CustomFormat = "MMMM dd, yyyy"
                    .dtpHired_S.Text = vHired_S
                End If
                .cbxYearHired_S.Checked = vYearHired_S
                .txtSupervisor_S.Text = vSupervisor_S
                .dMonthly_S.Value = vSalary_S
                .txtBusinessName_S.Text = vBusinessName_S
                If vBusinessName_S = "" Then
                    .txtBusinessName_S.Text = txtBusinessName_B.Text
                    .txtBusinessAddress_S.Text = txtBusinessAddress_B.Text
                    .txtBusinessTelephone_S.Text = txtBusinessTelephone_B.Text
                    .iYrsOperation_S.Value = iYrsOperation_B.Value
                    .dBusinessIncome_S.Value = dBusinessIncome_B.Value
                    .iNoEmployees_S.Value = iNoEmployees_B.Value
                    .dCapital_S.Value = dCapital_B.Value
                    .txtArea_S.Text = txtArea_B.Text
                    .dtpExpiry_S.Value = dtpExpiry_B.Value
                    .dtpExpiry_S.CustomFormat = dtpExpiry_B.CustomFormat
                    .iOutlet_S.Value = iOutlet_B.Value
                    .txtOtherIncome_S.Text = txtOtherIncome_B.Text
                    .dOtherIncome_S.Value = dOtherIncome_B.Value
                Else
                    .txtBusinessAddress_S.Text = vBusinessAddress_S
                    .txtBusinessTelephone_S.Text = vBusinessTelephone_S
                    .cbxNatureBusiness_S.Text = vNatureBusiness_S
                    .iYrsOperation_S.Value = vYrsOperation_S
                    .dBusinessIncome_S.Value = vBusinessIncome_S
                    .iNoEmployees_S.Value = vNoEmployees_S
                    .dCapital_S.Value = vCapital_S
                    .txtArea_S.Text = vArea_S
                    If vExpiry_S = "" Then
                        .dtpExpiry_S.CustomFormat = ""
                    Else
                        .dtpExpiry_S.CustomFormat = "MMMM dd, yyyy"
                        .dtpExpiry_S.Text = vExpiry_S
                    End If
                    .iOutlet_S.Value = vOutlet_S
                    .txtOtherIncome_S.Text = vOtherIncome_S
                    .dOtherIncome_S.Value = vOtherIncomeD_S
                End If
                .TotalImage = TotalImageS

                '*********** T A G S **************
                .CbxPrefix_S.Tag = vPrefix_S
                .TxtFirstN_S.Tag = vFirstN_S
                .TxtMiddleN_S.Tag = vMiddleN_S
                .TxtLastN_S.Tag = vLastN_S
                .cbxSuffix_S.Tag = vSuffix_S
                .CbxPrefix_M.Tag = vPrefix_M
                .TxtFirstN_M.Tag = vFirstN_M
                .TxtMiddleN_M.Tag = vMiddleN_M
                .TxtLastN_M.Tag = vLastN_M
                .cbxSuffix_M.Tag = vSuffix_M
                .txtNoC_S.Tag = vNoC_S
                .txtStreetC_S.Tag = vStreetC_S
                .txtBarangayC_S.Tag = vBarangayC_S
                .cbxAddressC_S.Tag = vAddressC_S
                .txtNoP_S.Tag = vNoP_S
                .txtStreetP_S.Tag = vStreetP_S
                .txtBarangayP_S.Tag = vBarangayP_S
                .cbxAddressP_S.Tag = vAddressP_S
                .DtpBirth_S.Tag = If(vBirth_S = "", "", Format(CDate(vBirth_S), "yyyy-MM-dd"))
                .cbxPlaceBirth_S.Tag = vPlaceBirth_S
                .cbxMale_S.Tag = If(vMale_S, "Male", If(vFemale_S, "Female", ""))
                .cbxFemale_S.Tag = If(vMale_S, "Male", If(vFemale_S, "Female", ""))
                .txtCitizenship_S.Tag = vCitizenship_S
                .txtTIN_S.Tag = vTIN_S
                .txtTelephone_S.Tag = vTelephone_S
                .txtSSS_S.Tag = vSSS_S
                .txtMobile_S.Tag = vMobile_S
                .txtEmail_S.Tag = vEmail_S
                .cbxOwned_S.Tag = If(vOwned_S, "Owned", If(vFree_S, "Free", If(vRented_S, "Rented", "")))
                .cbxFree_S.Tag = If(vOwned_S, "Owned", If(vFree_S, "Free", If(vRented_S, "Rented", "")))
                .cbxRented_S.Tag = If(vOwned_S, "Owned", If(vFree_S, "Free", If(vRented_S, "Rented", "")))
                .dRent_S.Tag = vRent_S
                .cbxEmployer_S.Tag = vEmployer_S
                .txtEmployerAddress_S.Tag = vEmpAddress_S
                .txtEmployerTelephone_S.Tag = vEmpTelephone_S
                .cbxPosition_S.Tag = vPosition_S
                .cbxCasual_S.Tag = If(vCasual_S, "Casual", If(vTemporary_S, "Temporary", If(vPermanent_S, "Permanent", "")))
                .cbxTemporary_S.Tag = If(vCasual_S, "Casual", If(vTemporary_S, "Temporary", If(vPermanent_S, "Permanent", "")))
                .cbxPermanent_S.Tag = If(vCasual_S, "Casual", If(vTemporary_S, "Temporary", If(vPermanent_S, "Permanent", "")))
                .dtpHired_S.Tag = If(vHired_S = "", "", Format(CDate(vHired_S), "yyyy-MM-dd"))
                .txtSupervisor_S.Tag = vSupervisor_S
                .dMonthly_S.Tag = vSalary_S
                .txtBusinessName_S.Tag = vBusinessName_S
                .txtBusinessAddress_S.Tag = vBusinessAddress_S
                .txtBusinessTelephone_S.Tag = vBusinessTelephone_S
                .cbxNatureBusiness_S.Tag = vNatureBusiness_S
                .iYrsOperation_S.Tag = vYrsOperation_S
                .dBusinessIncome_S.Tag = vBusinessIncome_S
                .iNoEmployees_S.Tag = vNoEmployees_S
                .dCapital_S.Tag = vCapital_S
                .txtArea_S.Tag = vArea_S
                .dtpExpiry_S.Tag = If(vExpiry_S = "", "", Format(CDate(vExpiry_S), "yyyy-MM-dd"))
                .iOutlet_S.Tag = vOutlet_S
                .txtOtherIncome_S.Tag = vOtherIncome_S
                .dOtherIncome_S.Tag = vOtherIncomeD_S
            End If
            If .ShowDialog = DialogResult.OK Then
                'Delete File Spouse
                Try
                    Dim xPath As String = String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, txtCreditNumber.Text, "Spouse.jpg")
                    Dim xPath_2 As String = String.Format("{0}\{1}\{2}\Borrowers\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, BorrowerID, "Spouse.jpg")
                    If IO.File.Exists(xPath) Then
                        IO.File.Delete(xPath)
                    End If
                    If IO.File.Exists(xPath_2) Then
                        IO.File.Delete(xPath_2)
                    End If
                    txtPath_S.Text = ""
                Catch ex As Exception
                End Try
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnCM_1_Click(sender As Object, e As EventArgs) Handles btnCM_1.Click
        If TxtFirstN_B.Enabled = False And cbxBorrower.Enabled = True Then
            MsgBox("Please select a borrower first.", MsgBoxStyle.Information, "Info")
            SuperTabControl1.SelectedTab = tabBorrower
            cbxBorrower.Focus()
            cbxBorrower.DroppedDown = True
            Exit Sub
        End If

        Dim CoMaker As New FrmCoMaker
        With CoMaker
            .BorrowerID = BorrowerID
            .BorrowerName = If(CbxPrefix_B.Text = "", "", CbxPrefix_B.Text & " ") & If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & If(cbxSuffix_B.Text = "", "", cbxSuffix_B.Text)
            .CreditNumber = txtCreditNumber.Text
            .AmountApplied = dAmountApplied.Value
            .Rank = 1
            .CoMakerID_1 = CoMakerID
            .Borrower_Branch = Borrower_Branch
            .vSave = vSave
            .vUpdate = vUpdate
            .vDelete = vDelete
            .vPrint = vPrint
            If TxtFirstN_C1.Text = "" Then
                .btnSave.Enabled = True
                .btnDelete.Enabled = False
                .btnModify.Enabled = False
            Else
                .PanelEx6.Enabled = False
                .PanelEx9.Enabled = False
                .btnModify.Enabled = True
                .btnSave.Enabled = False
                .btnDelete.Enabled = False
                If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
                Else
                    .btnAttach.Enabled = True
                End If

                .CbxPrefix_C1.Text = vPrefix_C1
                .TxtFirstN_C1.Text = vFirstN_C1
                .TxtMiddleN_C1.Text = vMiddleN_C1
                .TxtLastN_C1.Text = vLastN_C1
                .cbxSuffix_C1.Text = vSuffix_C1
                .txtNoC_C1.Text = vNoC_C1
                .txtStreetC_C1.Text = vStreetC_C1
                .txtBarangayC_C1.Text = vBarangayC_C1
                .cbxAddressC_C1.Text = vAddressC_C1
                .txtNoP_C1.Text = vNoP_C1
                .txtStreetP_C1.Text = vStreetP_C1
                .txtBarangayP_C1.Text = vBarangayP_C1
                .cbxAddressP_C1.Text = vAddressP_C1
                If vBirth_C1 = "" Then
                    .DtpBirth_C1.CustomFormat = ""
                Else
                    .DtpBirth_C1.CustomFormat = "MMMM dd, yyyy"
                    .DtpBirth_C1.Text = vBirth_C1
                End If
                .cbxPlaceBirth_C1.Text = vPlaceBirth_C1
                .cbxMale_C1.Checked = vMale_C1
                .cbxFemale_C1.Checked = vFemale_C1
                .cbxSingle_C1.Checked = vSingle_C1
                .cbxMarried_C1.Checked = vMarried_C1
                .cbxSeparated_C1.Checked = vSeparated_C1
                .cbxWidowed_C1.Checked = vWidowed_C1
                .txtCitizenship_C1.Text = vCitizenship_C1
                .txtTIN_C1.Text = vTIN_C1
                .txtTelephone_C1.Text = vTelephone_C1
                .txtSSS_C1.Text = vSSS_C1
                .txtMobile_C1.Text = vMobile_C1
                .txtEmail_C1.Text = vEmail_C1
                .cbxOwned_C1.Checked = vOwned_C1
                .cbxFree_C1.Checked = vFree_C1
                .cbxRented_C1.Checked = vRented_C1
                .dRent_C1.Value = vRent_C1
                .cbxRelationship_C1.Text = vRelationship_C1
                .pb_C1.Image = CoMaker1.Image.Clone
                .txtPath_C1.Text = "CoMaker1.jpg"
                .cbxEmployer_C1.Text = vEmployer_C1
                .txtEmployerAddress_C1.Text = vEmpAddress_C1
                .txtEmployerTelephone_C1.Text = vEmpTelephone_C1
                .cbxPosition_C1.Text = vPosition_C1
                .cbxCasual_C1.Checked = vCasual_C1
                .cbxTemporary_C1.Checked = vTemporary_C1
                .cbxPermanent_C1.Checked = vPermanent_C1
                If vHired_C1 = "" Then
                    .dtpHired_C1.CustomFormat = ""
                Else
                    .dtpHired_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpHired_C1.Text = vHired_C1
                End If
                .cbxYearHired_C1.Checked = vYearHired_C1
                .txtSupervisor_C1.Text = vSupervisor_C1
                .dMonthly_C1.Value = vSalary_C1
                .txtBusinessName_C1.Text = vBusinessName_C1
                .txtBusinessAddress_C1.Text = vBusinessAddress_C1
                .txtBusinessTelephone_C1.Text = vBusinessTelephone_C1
                .cbxNatureBusiness_C1.Text = vNatureBusiness_C1
                .iYrsOperation_C1.Value = vYrsOperation_C1
                .dBusinessIncome_C1.Value = vBusinessIncome_C1
                .iNoEmployees_C1.Value = vNoEmployees_C1
                .dCapital_C1.Value = vCapital_C1
                .txtArea_C1.Text = vArea_C1
                If vExpiry_C1 = "" Then
                    .dtpExpiry_C1.CustomFormat = ""
                Else
                    .dtpExpiry_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpExpiry_C1.Text = vExpiry_C1
                End If
                .iOutlet_C1.Value = vOutlet_C1
                .txtOtherIncome_C1.Text = vOtherIncome_C1
                .dOtherIncome_C1.Value = vOtherIncomeD_C1
                .TotalImage = TotalImageC1

                '*********** T A G S **************
                .CbxPrefix_C1.Tag = vPrefix_C1
                .TxtFirstN_C1.Tag = vFirstN_C1
                .TxtMiddleN_C1.Tag = vMiddleN_C1
                .TxtLastN_C1.Tag = vLastN_C1
                .cbxSuffix_C1.Tag = vSuffix_C1
                .txtNoC_C1.Tag = vNoC_C1
                .txtStreetC_C1.Tag = vStreetC_C1
                .txtBarangayC_C1.Tag = vBarangayC_C1
                .cbxAddressC_C1.Tag = vAddressC_C1
                .txtNoP_C1.Tag = vNoP_C1
                .txtStreetP_C1.Tag = vStreetP_C1
                .txtBarangayP_C1.Tag = vBarangayP_C1
                .cbxAddressP_C1.Tag = vAddressP_C1
                .DtpBirth_C1.Tag = If(vBirth_C1 = "", "", Format(CDate(vBirth_C1), "yyyy-MM-dd"))
                .cbxPlaceBirth_C1.Tag = vPlaceBirth_C1
                .cbxMale_C1.Tag = If(vMale_C1, "Male", If(vFemale_C1, "Female", ""))
                .cbxFemale_C1.Tag = If(vMale_C1, "Male", If(vFemale_C1, "Female", ""))
                .cbxSingle_C1.Tag = If(vSingle_C1, "Single", If(vMarried_C1, "Married", If(vSeparated_C1, "Separated", If(vWidowed_C1, "Widowed", ""))))
                .cbxMarried_C1.Tag = If(vSingle_C1, "Single", If(vMarried_C1, "Married", If(vSeparated_C1, "Separated", If(vWidowed_C1, "Widowed", ""))))
                .cbxSeparated_C1.Tag = If(vSingle_C1, "Single", If(vMarried_C1, "Married", If(vSeparated_C1, "Separated", If(vWidowed_C1, "Widowed", ""))))
                .cbxWidowed_C1.Tag = If(vSingle_C1, "Single", If(vMarried_C1, "Married", If(vSeparated_C1, "Separated", If(vWidowed_C1, "Widowed", ""))))
                .txtCitizenship_C1.Tag = vCitizenship_C1
                .txtTIN_C1.Tag = vTIN_C1
                .txtTelephone_C1.Tag = vTelephone_C1
                .txtSSS_C1.Tag = vSSS_C1
                .txtMobile_C1.Tag = vMobile_C1
                .txtEmail_C1.Tag = vEmail_C1
                .cbxOwned_C1.Tag = If(vOwned_C1, "Owned", If(vFree_C1, "Free", If(vRented_C1, "Rented", "")))
                .cbxFree_C1.Tag = If(vOwned_C1, "Owned", If(vFree_C1, "Free", If(vRented_C1, "Rented", "")))
                .cbxRented_C1.Tag = If(vOwned_C1, "Owned", If(vFree_C1, "Free", If(vRented_C1, "Rented", "")))
                .dRent_C1.Tag = vRent_C1
                .cbxRelationship_C1.Tag = vRelationship_C1
                .cbxEmployer_C1.Tag = vEmployer_C1
                .txtEmployerAddress_C1.Tag = vEmpAddress_C1
                .txtEmployerTelephone_C1.Tag = vEmpTelephone_C1
                .cbxPosition_C1.Tag = vPosition_C1
                .cbxCasual_C1.Tag = If(vCasual_C1, "Casual", If(vTemporary_C1, "Temporary", If(vPermanent_C1, "Permanent", "")))
                .cbxTemporary_C1.Tag = If(vCasual_C1, "Casual", If(vTemporary_C1, "Temporary", If(vPermanent_C1, "Permanent", "")))
                .cbxPermanent_C1.Tag = If(vCasual_C1, "Casual", If(vTemporary_C1, "Temporary", If(vPermanent_C1, "Permanent", "")))
                .dtpHired_C1.Tag = If(vHired_C1 = "", "", Format(CDate(vHired_C1), "yyyy-MM-dd"))
                .txtSupervisor_C1.Tag = vSupervisor_C1
                .dMonthly_C1.Tag = vSalary_C1
                .txtBusinessName_C1.Tag = vBusinessName_C1
                .txtBusinessAddress_C1.Tag = vBusinessAddress_C1
                .txtBusinessTelephone_C1.Tag = vBusinessTelephone_C1
                .cbxNatureBusiness_C1.Tag = vNatureBusiness_C1
                .iYrsOperation_C1.Tag = vYrsOperation_C1
                .dBusinessIncome_C1.Tag = vBusinessIncome_C1
                .iNoEmployees_C1.Tag = vNoEmployees_C1
                .dCapital_C1.Tag = vCapital_C1
                .txtArea_C1.Tag = vArea_C1
                .dtpExpiry_C1.Tag = If(vExpiry_C1 = "", "", Format(CDate(vExpiry_C1), "yyyy-MM-dd"))
                .iOutlet_C1.Tag = vOutlet_C1
                .txtOtherIncome_C1.Tag = vOtherIncome_C1
                .dOtherIncome_C1.Tag = vOtherIncomeD_C1
            End If
            If .ShowDialog = DialogResult.OK Then
                'Delete File CoMaker
                Try
                    Dim xPath As String = String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, txtCreditNumber.Text, "CoMaker1.jpg")
                    If IO.File.Exists(xPath) Then
                        IO.File.Delete(xPath)
                        If CoMakerShift Then
                            If IO.File.Exists(xPath.Replace("CoMaker1", "CoMaker2")) Then
                                Rename(xPath.Replace("CoMaker1.jpg", "CoMaker2.jpg"), xPath)
                            End If
                            CoMaker1.Image = CoMaker2.Image.Clone
                            xPath = xPath.Replace("CoMaker1", "CoMaker2")

                            If IO.File.Exists(xPath.Replace("CoMaker2", "CoMaker3")) Then
                                Rename(xPath.Replace("CoMaker2.jpg", "CoMaker3.jpg"), xPath)
                            End If
                            CoMaker2.Image = CoMaker3.Image.Clone
                            xPath = xPath.Replace("CoMaker2", "CoMaker3")

                            If IO.File.Exists(xPath.Replace("CoMaker3", "CoMaker4")) Then
                                Rename(xPath.Replace("CoMaker3.jpg", "CoMaker4.jpg"), xPath)
                            End If
                            CoMaker3.Image = CoMaker4.Image.Clone
                        End If
                    End If
                Catch ex As Exception
                End Try
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnCM_2_Click(sender As Object, e As EventArgs) Handles btnCM_2.Click
        If TxtFirstN_B.Enabled = False And cbxBorrower.Enabled = True Then
            MsgBox("Please select a borrower first.", MsgBoxStyle.Information, "Info")
            SuperTabControl1.SelectedTab = tabBorrower
            cbxBorrower.Focus()
            cbxBorrower.DroppedDown = True
            Exit Sub
        End If
        If TxtFirstN_C1.Text = "" Then
            MsgBox("Please add CoMaker 1 first before adding CoMaker 2.", MsgBoxStyle.Information, "Info")
            btnCM_1.Focus()
            Exit Sub
        End If

        Dim CoMaker As New FrmCoMaker
        With CoMaker
            .BorrowerID = BorrowerID
            .BorrowerName = If(CbxPrefix_B.Text = "", "", CbxPrefix_B.Text & " ") & If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & If(cbxSuffix_B.Text = "", "", cbxSuffix_B.Text)
            .CreditNumber = txtCreditNumber.Text
            .AmountApplied = dAmountApplied.Value
            .Rank = 2
            .CoMakerID_1 = CoMakerID
            .vSave = vSave
            .vUpdate = vUpdate
            .vDelete = vDelete
            .vPrint = vPrint
            If TxtFirstN_C2.Text = "" Then
                .btnSave.Enabled = True
                .btnDelete.Enabled = False
                .btnModify.Enabled = False
            Else
                .PanelEx6.Enabled = False
                .PanelEx9.Enabled = False
                .btnModify.Enabled = True
                .btnSave.Enabled = False
                .btnDelete.Enabled = False
                If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
                Else
                    CoMaker.btnAttach.Enabled = True
                End If

                .CbxPrefix_C1.Text = vPrefix_C2
                .TxtFirstN_C1.Text = vFirstN_C2
                .TxtMiddleN_C1.Text = vMiddleN_C2
                .TxtLastN_C1.Text = vLastN_C2
                .cbxSuffix_C1.Text = vSuffix_C2
                .txtNoC_C1.Text = vNoC_C2
                .txtStreetC_C1.Text = vStreetC_C2
                .txtBarangayC_C1.Text = vBarangayC_C2
                .cbxAddressC_C1.Text = vAddressC_C2
                .txtNoP_C1.Text = vNoP_C2
                .txtStreetP_C1.Text = vStreetP_C2
                .txtBarangayP_C1.Text = vBarangayP_C2
                .cbxAddressP_C1.Text = vAddressP_C2
                If vBirth_C2 = "" Then
                    .DtpBirth_C1.CustomFormat = ""
                Else
                    .DtpBirth_C1.CustomFormat = "MMMM dd, yyyy"
                    .DtpBirth_C1.Text = vBirth_C2
                End If
                .cbxPlaceBirth_C1.Text = vPlaceBirth_C2
                .cbxMale_C1.Checked = vMale_C2
                .cbxFemale_C1.Checked = vFemale_C2
                .cbxSingle_C1.Checked = vSingle_C2
                .cbxMarried_C1.Checked = vMarried_C2
                .cbxSeparated_C1.Checked = vSeparated_C2
                .cbxWidowed_C1.Checked = vWidowed_C2
                .txtCitizenship_C1.Text = vCitizenship_C2
                .txtTIN_C1.Text = vTIN_C2
                .txtTelephone_C1.Text = vTelephone_C2
                .txtSSS_C1.Text = vSSS_C2
                .txtMobile_C1.Text = vMobile_C2
                .txtEmail_C1.Text = vEmail_C2
                .cbxOwned_C1.Checked = vOwned_C2
                .cbxFree_C1.Checked = vFree_C2
                .cbxRented_C1.Checked = vRented_C2
                .dRent_C1.Value = vRent_C2
                .cbxRelationship_C1.Text = vRelationship_C2
                .pb_C1.Image = CoMaker2.Image.Clone
                .txtPath_C1.Text = "CoMaker2.jpg"
                .cbxEmployer_C1.Text = vEmployer_C2
                .txtEmployerAddress_C1.Text = vEmpAddress_C2
                .txtEmployerTelephone_C1.Text = vEmpTelephone_C2
                .cbxPosition_C1.Text = vPosition_C2
                .cbxCasual_C1.Checked = vCasual_C2
                .cbxTemporary_C1.Checked = vTemporary_C2
                .cbxPermanent_C1.Checked = vPermanent_C2
                If vHired_C2 = "" Then
                    .dtpHired_C1.CustomFormat = ""
                Else
                    .dtpHired_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpHired_C1.Text = vHired_C2
                End If
                .cbxYearHired_C1.Checked = vYearHired_C2
                .txtSupervisor_C1.Text = vSupervisor_C2
                .dMonthly_C1.Value = vSalary_C2
                .txtBusinessName_C1.Text = vBusinessName_C2
                .txtBusinessAddress_C1.Text = vBusinessAddress_C2
                .txtBusinessTelephone_C1.Text = vBusinessTelephone_C2
                .cbxNatureBusiness_C1.Text = vNatureBusiness_C2
                .iYrsOperation_C1.Value = vYrsOperation_C2
                .dBusinessIncome_C1.Value = vBusinessIncome_C2
                .iNoEmployees_C1.Value = vNoEmployees_C2
                .dCapital_C1.Value = vCapital_C2
                .txtArea_C1.Text = vArea_C2
                If vExpiry_C2 = "" Then
                    .dtpExpiry_C1.CustomFormat = ""
                Else
                    .dtpExpiry_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpExpiry_C1.Text = vExpiry_C2
                End If
                .iOutlet_C1.Value = vOutlet_C2
                .txtOtherIncome_C1.Text = vOtherIncome_C2
                .dOtherIncome_C1.Value = vOtherIncomeD_C2
                .TotalImage = TotalImageC2

                '*********** T A G S **************
                .CbxPrefix_C1.Tag = vPrefix_C2
                .TxtFirstN_C1.Tag = vFirstN_C2
                .TxtMiddleN_C1.Tag = vMiddleN_C2
                .TxtLastN_C1.Tag = vLastN_C2
                .cbxSuffix_C1.Tag = vSuffix_C2
                .txtNoC_C1.Tag = vNoC_C2
                .txtStreetC_C1.Tag = vStreetC_C2
                .txtBarangayC_C1.Tag = vBarangayC_C2
                .cbxAddressC_C1.Tag = vAddressC_C2
                .txtNoP_C1.Tag = vNoP_C2
                .txtStreetP_C1.Tag = vStreetP_C2
                .txtBarangayP_C1.Tag = vBarangayP_C2
                .cbxAddressP_C1.Tag = vAddressP_C2
                .DtpBirth_C1.Tag = If(vBirth_C2 = "", "", Format(CDate(vBirth_C2), "yyyy-MM-dd"))
                .cbxPlaceBirth_C1.Tag = vPlaceBirth_C2
                .cbxMale_C1.Tag = If(vMale_C2, "Male", If(vFemale_C2, "Female", ""))
                .cbxFemale_C1.Tag = If(vMale_C2, "Male", If(vFemale_C2, "Female", ""))
                .cbxSingle_C1.Tag = If(vSingle_C2, "Single", If(vMarried_C2, "Married", If(vSeparated_C2, "Separated", If(vWidowed_C2, "Widowed", ""))))
                .cbxMarried_C1.Tag = If(vSingle_C2, "Single", If(vMarried_C2, "Married", If(vSeparated_C2, "Separated", If(vWidowed_C2, "Widowed", ""))))
                .cbxSeparated_C1.Tag = If(vSingle_C2, "Single", If(vMarried_C2, "Married", If(vSeparated_C2, "Separated", If(vWidowed_C2, "Widowed", ""))))
                .cbxWidowed_C1.Tag = If(vSingle_C2, "Single", If(vMarried_C2, "Married", If(vSeparated_C2, "Separated", If(vWidowed_C2, "Widowed", ""))))
                .txtCitizenship_C1.Tag = vCitizenship_C2
                .txtTIN_C1.Tag = vTIN_C2
                .txtTelephone_C1.Tag = vTelephone_C2
                .txtSSS_C1.Tag = vSSS_C2
                .txtMobile_C1.Tag = vMobile_C2
                .txtEmail_C1.Tag = vEmail_C2
                .cbxOwned_C1.Tag = If(vOwned_C2, "Owned", If(vFree_C2, "Free", If(vRented_C2, "Rented", "")))
                .cbxFree_C1.Tag = If(vOwned_C2, "Owned", If(vFree_C2, "Free", If(vRented_C2, "Rented", "")))
                .cbxRented_C1.Tag = If(vOwned_C2, "Owned", If(vFree_C2, "Free", If(vRented_C2, "Rented", "")))
                .dRent_C1.Tag = vRent_C2
                .cbxRelationship_C1.Tag = vRelationship_C2
                .cbxEmployer_C1.Tag = vEmployer_C2
                .txtEmployerAddress_C1.Tag = vEmpAddress_C2
                .txtEmployerTelephone_C1.Tag = vEmpTelephone_C2
                .cbxPosition_C1.Tag = vPosition_C2
                .cbxCasual_C1.Tag = If(vCasual_C2, "Casual", If(vTemporary_C2, "Temporary", If(vPermanent_C2, "Permanent", "")))
                .cbxTemporary_C1.Tag = If(vCasual_C2, "Casual", If(vTemporary_C2, "Temporary", If(vPermanent_C2, "Permanent", "")))
                .cbxPermanent_C1.Tag = If(vCasual_C2, "Casual", If(vTemporary_C2, "Temporary", If(vPermanent_C2, "Permanent", "")))
                .dtpHired_C1.Tag = If(vHired_C2 = "", "", Format(CDate(vHired_C2), "yyyy-MM-dd"))
                .txtSupervisor_C1.Tag = vSupervisor_C2
                .dMonthly_C1.Tag = vSalary_C2
                .txtBusinessName_C1.Tag = vBusinessName_C2
                .txtBusinessAddress_C1.Tag = vBusinessAddress_C2
                .txtBusinessTelephone_C1.Tag = vBusinessTelephone_C2
                .cbxNatureBusiness_C1.Tag = vNatureBusiness_C2
                .iYrsOperation_C1.Tag = vYrsOperation_C2
                .dBusinessIncome_C1.Tag = vBusinessIncome_C2
                .iNoEmployees_C1.Tag = vNoEmployees_C2
                .dCapital_C1.Tag = vCapital_C2
                .txtArea_C1.Tag = vArea_C2
                .dtpExpiry_C1.Tag = If(vExpiry_C2 = "", "", Format(CDate(vExpiry_C2), "yyyy-MM-dd"))
                .iOutlet_C1.Tag = vOutlet_C2
                .txtOtherIncome_C1.Tag = vOtherIncome_C2
                .dOtherIncome_C1.Tag = vOtherIncomeD_C2
            End If
            If .ShowDialog = DialogResult.OK Then
                'Delete File CoMaker
                Try
                    Dim xPath As String = String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, txtCreditNumber.Text, "CoMaker2.jpg")
                    If IO.File.Exists(xPath) Then
                        IO.File.Delete(xPath)
                        If CoMakerShift Then
                            If IO.File.Exists(xPath.Replace("CoMaker2", "CoMaker3")) Then
                                Rename(xPath.Replace("CoMaker2.jpg", "CoMaker3.jpg"), xPath)
                            End If
                            CoMaker2.Image = CoMaker3.Image.Clone
                            xPath = xPath.Replace("CoMaker2", "CoMaker3")

                            If IO.File.Exists(xPath.Replace("CoMaker3", "CoMaker4")) Then
                                Rename(xPath.Replace("CoMaker3.jpg", "CoMaker4.jpg"), xPath)
                            End If
                            CoMaker3.Image = CoMaker4.Image.Clone
                        End If
                    End If
                Catch ex As Exception
                End Try
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnCM_3_Click(sender As Object, e As EventArgs) Handles btnCM_3.Click
        If TxtFirstN_B.Enabled = False And cbxBorrower.Enabled = True Then
            MsgBox("Please select a borrower first.", MsgBoxStyle.Information, "Info")
            SuperTabControl1.SelectedTab = tabBorrower
            cbxBorrower.Focus()
            cbxBorrower.DroppedDown = True
            Exit Sub
        End If
        If TxtFirstN_C2.Text = "" Then
            MsgBox("Please add CoMaker 2 first before adding CoMaker 3.", MsgBoxStyle.Information, "Info")
            btnCM_2.Focus()
            Exit Sub
        End If

        Dim CoMaker As New FrmCoMaker
        With CoMaker
            .BorrowerID = BorrowerID
            .BorrowerName = If(CbxPrefix_B.Text = "", "", CbxPrefix_B.Text & " ") & If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & If(cbxSuffix_B.Text = "", "", cbxSuffix_B.Text)
            .CreditNumber = txtCreditNumber.Text
            .AmountApplied = dAmountApplied.Value
            .Rank = 3
            .CoMakerID_1 = CoMakerID
            .vSave = vSave
            .vUpdate = vUpdate
            .vDelete = vDelete
            .vPrint = vPrint
            If TxtFirstN_C3.Text = "" Then
                .btnSave.Enabled = True
                .btnDelete.Enabled = False
                .btnModify.Enabled = False
            Else
                .PanelEx6.Enabled = False
                .PanelEx9.Enabled = False
                .btnModify.Enabled = True
                .btnSave.Enabled = False
                .btnDelete.Enabled = False
                If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
                Else
                    .btnAttach.Enabled = True
                End If

                .CbxPrefix_C1.Text = vPrefix_C3
                .TxtFirstN_C1.Text = vFirstN_C3
                .TxtMiddleN_C1.Text = vMiddleN_C3
                .TxtLastN_C1.Text = vLastN_C3
                .cbxSuffix_C1.Text = vSuffix_C3
                .txtNoC_C1.Text = vNoC_C3
                .txtStreetC_C1.Text = vStreetC_C3
                .txtBarangayC_C1.Text = vBarangayC_C3
                .cbxAddressC_C1.Text = vAddressC_C3
                .txtNoP_C1.Text = vNoP_C3
                .txtStreetP_C1.Text = vStreetP_C3
                .txtBarangayP_C1.Text = vBarangayP_C3
                .cbxAddressP_C1.Text = vAddressP_C3
                If vBirth_C3 = "" Then
                    .DtpBirth_C1.CustomFormat = ""
                Else
                    .DtpBirth_C1.CustomFormat = "MMMM dd, yyyy"
                    .DtpBirth_C1.Text = vBirth_C3
                End If
                .cbxPlaceBirth_C1.Text = vPlaceBirth_C3
                .cbxMale_C1.Checked = vMale_C3
                .cbxFemale_C1.Checked = vFemale_C3
                .cbxSingle_C1.Checked = vSingle_C3
                .cbxMarried_C1.Checked = vMarried_C3
                .cbxSeparated_C1.Checked = vSeparated_C3
                .cbxWidowed_C1.Checked = vWidowed_C3
                .txtCitizenship_C1.Text = vCitizenship_C3
                .txtTIN_C1.Text = vTIN_C3
                .txtTelephone_C1.Text = vTelephone_C3
                .txtSSS_C1.Text = vSSS_C3
                .txtMobile_C1.Text = vMobile_C3
                .txtEmail_C1.Text = vEmail_C3
                .cbxOwned_C1.Checked = vOwned_C3
                .cbxFree_C1.Checked = vFree_C3
                .cbxRented_C1.Checked = vRented_C3
                .dRent_C1.Value = vRent_C3
                .cbxRelationship_C1.Text = vRelationship_C3
                .pb_C1.Image = CoMaker3.Image.Clone
                .txtPath_C1.Text = "CoMaker3.jpg"
                .cbxEmployer_C1.Text = vEmployer_C3
                .txtEmployerAddress_C1.Text = vEmpAddress_C3
                .txtEmployerTelephone_C1.Text = vEmpTelephone_C3
                .cbxPosition_C1.Text = vPosition_C3
                .cbxCasual_C1.Checked = vCasual_C3
                .cbxTemporary_C1.Checked = vTemporary_C3
                .cbxPermanent_C1.Checked = vPermanent_C3
                If vHired_C3 = "" Then
                    .dtpHired_C1.CustomFormat = ""
                Else
                    .dtpHired_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpHired_C1.Text = vHired_C3
                End If
                .cbxYearHired_C1.Checked = vYearHired_C3
                .txtSupervisor_C1.Text = vSupervisor_C3
                .dMonthly_C1.Value = vSalary_C3
                .txtBusinessName_C1.Text = vBusinessName_C3
                .txtBusinessAddress_C1.Text = vBusinessAddress_C3
                .txtBusinessTelephone_C1.Text = vBusinessTelephone_C3
                .cbxNatureBusiness_C1.Text = vNatureBusiness_C3
                .iYrsOperation_C1.Value = vYrsOperation_C3
                .dBusinessIncome_C1.Value = vBusinessIncome_C3
                .iNoEmployees_C1.Value = vNoEmployees_C3
                .dCapital_C1.Value = vCapital_C3
                .txtArea_C1.Text = vArea_C3
                If vExpiry_C3 = "" Then
                    .dtpExpiry_C1.CustomFormat = ""
                Else
                    .dtpExpiry_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpExpiry_C1.Text = vExpiry_C3
                End If
                .iOutlet_C1.Value = vOutlet_C3
                .txtOtherIncome_C1.Text = vOtherIncome_C3
                .dOtherIncome_C1.Value = vOtherIncomeD_C3
                .TotalImage = TotalImageC3

                '*********** T A G S **************
                .CbxPrefix_C1.Tag = vPrefix_C3
                .TxtFirstN_C1.Tag = vFirstN_C3
                .TxtMiddleN_C1.Tag = vMiddleN_C3
                .TxtLastN_C1.Tag = vLastN_C3
                .cbxSuffix_C1.Tag = vSuffix_C3
                .txtNoC_C1.Tag = vNoC_C3
                .txtStreetC_C1.Tag = vStreetC_C3
                .txtBarangayC_C1.Tag = vBarangayC_C3
                .cbxAddressC_C1.Tag = vAddressC_C3
                .txtNoP_C1.Tag = vNoP_C3
                .txtStreetP_C1.Tag = vStreetP_C3
                .txtBarangayP_C1.Tag = vBarangayP_C3
                .cbxAddressP_C1.Tag = vAddressP_C3
                .DtpBirth_C1.Tag = If(vBirth_C3 = "", "", Format(CDate(vBirth_C3), "yyyy-MM-dd"))
                .cbxPlaceBirth_C1.Tag = vPlaceBirth_C3
                .cbxMale_C1.Tag = If(vMale_C3, "Male", If(vFemale_C3, "Female", ""))
                .cbxFemale_C1.Tag = If(vMale_C3, "Male", If(vFemale_C3, "Female", ""))
                .cbxSingle_C1.Tag = If(vSingle_C3, "Single", If(vMarried_C3, "Married", If(vSeparated_C3, "Separated", If(vWidowed_C3, "Widowed", ""))))
                .cbxMarried_C1.Tag = If(vSingle_C3, "Single", If(vMarried_C3, "Married", If(vSeparated_C3, "Separated", If(vWidowed_C3, "Widowed", ""))))
                .cbxSeparated_C1.Tag = If(vSingle_C3, "Single", If(vMarried_C3, "Married", If(vSeparated_C3, "Separated", If(vWidowed_C3, "Widowed", ""))))
                .cbxWidowed_C1.Tag = If(vSingle_C3, "Single", If(vMarried_C3, "Married", If(vSeparated_C3, "Separated", If(vWidowed_C3, "Widowed", ""))))
                .txtCitizenship_C1.Tag = vCitizenship_C3
                .txtTIN_C1.Tag = vTIN_C3
                .txtTelephone_C1.Tag = vTelephone_C3
                .txtSSS_C1.Tag = vSSS_C3
                .txtMobile_C1.Tag = vMobile_C3
                .txtEmail_C1.Tag = vEmail_C3
                .cbxOwned_C1.Tag = If(vOwned_C3, "Owned", If(vFree_C3, "Free", If(vRented_C3, "Rented", "")))
                .cbxFree_C1.Tag = If(vOwned_C3, "Owned", If(vFree_C3, "Free", If(vRented_C3, "Rented", "")))
                .cbxRented_C1.Tag = If(vOwned_C3, "Owned", If(vFree_C3, "Free", If(vRented_C3, "Rented", "")))
                .dRent_C1.Tag = vRent_C3
                .cbxRelationship_C1.Tag = vRelationship_C3
                .cbxEmployer_C1.Tag = vEmployer_C3
                .txtEmployerAddress_C1.Tag = vEmpAddress_C3
                .txtEmployerTelephone_C1.Tag = vEmpTelephone_C3
                .cbxPosition_C1.Tag = vPosition_C3
                .cbxCasual_C1.Tag = If(vCasual_C3, "Casual", If(vTemporary_C3, "Temporary", If(vPermanent_C3, "Permanent", "")))
                .cbxTemporary_C1.Tag = If(vCasual_C3, "Casual", If(vTemporary_C3, "Temporary", If(vPermanent_C3, "Permanent", "")))
                .cbxPermanent_C1.Tag = If(vCasual_C3, "Casual", If(vTemporary_C3, "Temporary", If(vPermanent_C3, "Permanent", "")))
                .dtpHired_C1.Tag = If(vHired_C3 = "", "", Format(CDate(vHired_C3), "yyyy-MM-dd"))
                .txtSupervisor_C1.Tag = vSupervisor_C3
                .dMonthly_C1.Tag = vSalary_C3
                .txtBusinessName_C1.Tag = vBusinessName_C3
                .txtBusinessAddress_C1.Tag = vBusinessAddress_C3
                .txtBusinessTelephone_C1.Tag = vBusinessTelephone_C3
                .cbxNatureBusiness_C1.Tag = vNatureBusiness_C3
                .iYrsOperation_C1.Tag = vYrsOperation_C3
                .dBusinessIncome_C1.Tag = vBusinessIncome_C3
                .iNoEmployees_C1.Tag = vNoEmployees_C3
                .dCapital_C1.Tag = vCapital_C3
                .txtArea_C1.Tag = vArea_C3
                .dtpExpiry_C1.Tag = If(vExpiry_C3 = "", "", Format(CDate(vExpiry_C3), "yyyy-MM-dd"))
                .iOutlet_C1.Tag = vOutlet_C3
                .txtOtherIncome_C1.Tag = vOtherIncome_C3
                .dOtherIncome_C1.Tag = vOtherIncomeD_C3
            End If
            If .ShowDialog = DialogResult.OK Then
                'Delete File CoMaker
                Try
                    Dim xPath As String = String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, txtCreditNumber.Text, "CoMaker3.jpg")
                    If IO.File.Exists(xPath) Then
                        IO.File.Delete(xPath)
                        If CoMakerShift Then
                            If IO.File.Exists(xPath.Replace("CoMaker3", "CoMaker4")) Then
                                Rename(xPath.Replace("CoMaker3.jpg", "CoMaker4.jpg"), xPath)
                            End If
                            CoMaker3.Image = CoMaker4.Image.Clone
                        End If
                    End If
                Catch ex As Exception
                End Try
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnCM_4_Click(sender As Object, e As EventArgs) Handles btnCM_4.Click
        If TxtFirstN_B.Enabled = False And cbxBorrower.Enabled = True Then
            MsgBox("Please select a borrower first.", MsgBoxStyle.Information, "Info")
            SuperTabControl1.SelectedTab = tabBorrower
            cbxBorrower.Focus()
            cbxBorrower.DroppedDown = True
            Exit Sub
        End If
        If TxtFirstN_C3.Text = "" Then
            MsgBox("Please add CoMaker 3 first before adding CoMaker 3.", MsgBoxStyle.Information, "Info")
            btnCM_3.Focus()
            Exit Sub
        End If

        Dim CoMaker As New FrmCoMaker
        With CoMaker
            .BorrowerID = BorrowerID
            .BorrowerName = If(CbxPrefix_B.Text = "", "", CbxPrefix_B.Text & " ") & If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & If(cbxSuffix_B.Text = "", "", cbxSuffix_B.Text)
            .CreditNumber = txtCreditNumber.Text
            .AmountApplied = dAmountApplied.Value
            .Rank = 4
            .CoMakerID_1 = CoMakerID
            .vSave = vSave
            .vUpdate = vUpdate
            .vDelete = vDelete
            .vPrint = vPrint
            If TxtFirstN_C4.Text = "" Then
                .btnSave.Enabled = True
                .btnDelete.Enabled = False
                .btnModify.Enabled = False
            Else
                .PanelEx6.Enabled = False
                .PanelEx9.Enabled = False
                .btnModify.Enabled = True
                .btnSave.Enabled = False
                .btnDelete.Enabled = False
                If btnSave.Text = "D&raft" And btnSave_F.Text = "&Save" Then
                Else
                    .btnAttach.Enabled = True
                End If

                .CbxPrefix_C1.Text = vPrefix_C4
                .TxtFirstN_C1.Text = vFirstN_C4
                .TxtMiddleN_C1.Text = vMiddleN_C4
                .TxtLastN_C1.Text = vLastN_C4
                .cbxSuffix_C1.Text = vSuffix_C4
                .txtNoC_C1.Text = vNoC_C4
                .txtStreetC_C1.Text = vStreetC_C4
                .txtBarangayC_C1.Text = vBarangayC_C4
                .cbxAddressC_C1.Text = vAddressC_C4
                .txtNoP_C1.Text = vNoP_C4
                .txtStreetP_C1.Text = vStreetP_C4
                .txtBarangayP_C1.Text = vBarangayP_C4
                .cbxAddressP_C1.Text = vAddressP_C4
                If vBirth_C4 = "" Then
                    .DtpBirth_C1.CustomFormat = ""
                Else
                    .DtpBirth_C1.CustomFormat = "MMMM dd, yyyy"
                    .DtpBirth_C1.Text = vBirth_C4
                End If
                .cbxPlaceBirth_C1.Text = vPlaceBirth_C4
                .cbxMale_C1.Checked = vMale_C4
                .cbxFemale_C1.Checked = vFemale_C4
                .cbxSingle_C1.Checked = vSingle_C4
                .cbxMarried_C1.Checked = vMarried_C4
                .cbxSeparated_C1.Checked = vSeparated_C4
                .cbxWidowed_C1.Checked = vWidowed_C4
                .txtCitizenship_C1.Text = vCitizenship_C4
                .txtTIN_C1.Text = vTIN_C4
                .txtTelephone_C1.Text = vTelephone_C4
                .txtSSS_C1.Text = vSSS_C4
                .txtMobile_C1.Text = vMobile_C4
                .txtEmail_C1.Text = vEmail_C4
                .cbxOwned_C1.Checked = vOwned_C4
                .cbxFree_C1.Checked = vFree_C4
                .cbxRented_C1.Checked = vRented_C4
                .dRent_C1.Value = vRent_C4
                .cbxRelationship_C1.Text = vRelationship_C4
                .pb_C1.Image = CoMaker4.Image.Clone
                .txtPath_C1.Text = "CoMaker4.jpg"
                .cbxEmployer_C1.Text = vEmployer_C4
                .txtEmployerAddress_C1.Text = vEmpAddress_C4
                .txtEmployerTelephone_C1.Text = vEmpTelephone_C4
                .cbxPosition_C1.Text = vPosition_C4
                .cbxCasual_C1.Checked = vCasual_C4
                .cbxTemporary_C1.Checked = vTemporary_C4
                .cbxPermanent_C1.Checked = vPermanent_C4
                If vHired_C4 = "" Then
                    .dtpHired_C1.CustomFormat = ""
                Else
                    .dtpHired_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpHired_C1.Text = vHired_C4
                End If
                .cbxYearHired_C1.Checked = vYearHired_C4
                .txtSupervisor_C1.Text = vSupervisor_C4
                .dMonthly_C1.Value = vSalary_C4
                .txtBusinessName_C1.Text = vBusinessName_C4
                .txtBusinessAddress_C1.Text = vBusinessAddress_C4
                .txtBusinessTelephone_C1.Text = vBusinessTelephone_C4
                .cbxNatureBusiness_C1.Text = vNatureBusiness_C4
                .iYrsOperation_C1.Value = vYrsOperation_C4
                .dBusinessIncome_C1.Value = vBusinessIncome_C4
                .iNoEmployees_C1.Value = vNoEmployees_C4
                .dCapital_C1.Value = vCapital_C4
                .txtArea_C1.Text = vArea_C4
                If vExpiry_C4 = "" Then
                    .dtpExpiry_C1.CustomFormat = ""
                Else
                    .dtpExpiry_C1.CustomFormat = "MMMM dd, yyyy"
                    .dtpExpiry_C1.Text = vExpiry_C4
                End If
                .iOutlet_C1.Value = vOutlet_C4
                .txtOtherIncome_C1.Text = vOtherIncome_C4
                .dOtherIncome_C1.Value = vOtherIncomeD_C4
                .TotalImage = TotalImageC4

                '*********** T A G S **************
                .CbxPrefix_C1.Tag = vPrefix_C4
                .TxtFirstN_C1.Tag = vFirstN_C4
                .TxtMiddleN_C1.Tag = vMiddleN_C4
                .TxtLastN_C1.Tag = vLastN_C4
                .cbxSuffix_C1.Tag = vSuffix_C4
                .txtNoC_C1.Tag = vNoC_C4
                .txtStreetC_C1.Tag = vStreetC_C4
                .txtBarangayC_C1.Tag = vBarangayC_C4
                .cbxAddressC_C1.Tag = vAddressC_C4
                .txtNoP_C1.Tag = vNoP_C4
                .txtStreetP_C1.Tag = vStreetP_C4
                .txtBarangayP_C1.Tag = vBarangayP_C4
                .cbxAddressP_C1.Tag = vAddressP_C4
                .DtpBirth_C1.Tag = If(vBirth_C4 = "", "", Format(CDate(vBirth_C4), "yyyy-MM-dd"))
                .cbxPlaceBirth_C1.Tag = vPlaceBirth_C4
                .cbxMale_C1.Tag = If(vMale_C4, "Male", If(vFemale_C4, "Female", ""))
                .cbxFemale_C1.Tag = If(vMale_C4, "Male", If(vFemale_C4, "Female", ""))
                .cbxSingle_C1.Tag = If(vSingle_C4, "Single", If(vMarried_C4, "Married", If(vSeparated_C4, "Separated", If(vWidowed_C4, "Widowed", ""))))
                .cbxMarried_C1.Tag = If(vSingle_C4, "Single", If(vMarried_C4, "Married", If(vSeparated_C4, "Separated", If(vWidowed_C4, "Widowed", ""))))
                .cbxSeparated_C1.Tag = If(vSingle_C4, "Single", If(vMarried_C4, "Married", If(vSeparated_C4, "Separated", If(vWidowed_C4, "Widowed", ""))))
                .cbxWidowed_C1.Tag = If(vSingle_C4, "Single", If(vMarried_C4, "Married", If(vSeparated_C4, "Separated", If(vWidowed_C4, "Widowed", ""))))
                .txtCitizenship_C1.Tag = vCitizenship_C4
                .txtTIN_C1.Tag = vTIN_C4
                .txtTelephone_C1.Tag = vTelephone_C4
                .txtSSS_C1.Tag = vSSS_C4
                .txtMobile_C1.Tag = vMobile_C4
                .txtEmail_C1.Tag = vEmail_C4
                .cbxOwned_C1.Tag = If(vOwned_C4, "Owned", If(vFree_C4, "Free", If(vRented_C4, "Rented", "")))
                .cbxFree_C1.Tag = If(vOwned_C4, "Owned", If(vFree_C4, "Free", If(vRented_C4, "Rented", "")))
                .cbxRented_C1.Tag = If(vOwned_C4, "Owned", If(vFree_C4, "Free", If(vRented_C4, "Rented", "")))
                .dRent_C1.Tag = vRent_C4
                .cbxRelationship_C1.Tag = vRelationship_C4
                .cbxEmployer_C1.Tag = vEmployer_C4
                .txtEmployerAddress_C1.Tag = vEmpAddress_C4
                .txtEmployerTelephone_C1.Tag = vEmpTelephone_C4
                .cbxPosition_C1.Tag = vPosition_C4
                .cbxCasual_C1.Tag = If(vCasual_C4, "Casual", If(vTemporary_C4, "Temporary", If(vPermanent_C4, "Permanent", "")))
                .cbxTemporary_C1.Tag = If(vCasual_C4, "Casual", If(vTemporary_C4, "Temporary", If(vPermanent_C4, "Permanent", "")))
                .cbxPermanent_C1.Tag = If(vCasual_C4, "Casual", If(vTemporary_C4, "Temporary", If(vPermanent_C4, "Permanent", "")))
                .dtpHired_C1.Tag = If(vHired_C4 = "", "", Format(CDate(vHired_C4), "yyyy-MM-dd"))
                .txtSupervisor_C1.Tag = vSupervisor_C4
                .dMonthly_C1.Tag = vSalary_C4
                .txtBusinessName_C1.Tag = vBusinessName_C4
                .txtBusinessAddress_C1.Tag = vBusinessAddress_C4
                .txtBusinessTelephone_C1.Tag = vBusinessTelephone_C4
                .cbxNatureBusiness_C1.Tag = vNatureBusiness_C4
                .iYrsOperation_C1.Tag = vYrsOperation_C4
                .dBusinessIncome_C1.Tag = vBusinessIncome_C4
                .iNoEmployees_C1.Tag = vNoEmployees_C4
                .dCapital_C1.Tag = vCapital_C4
                .txtArea_C1.Tag = vArea_C4
                .dtpExpiry_C1.Tag = If(vExpiry_C4 = "", "", Format(CDate(vExpiry_C4), "yyyy-MM-dd"))
                .iOutlet_C1.Tag = vOutlet_C4
                .txtOtherIncome_C1.Tag = vOtherIncome_C4
                .dOtherIncome_C1.Tag = vOtherIncomeD_C4
            End If
            If .ShowDialog = DialogResult.OK Then
                'Delete File CoMaker
                Try
                    Dim xPath As String = String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, Borrower_Branch, txtCreditNumber.Text, "CoMaker4.jpg")
                    If IO.File.Exists(xPath) Then
                        IO.File.Delete(xPath)
                    End If
                Catch ex As Exception
                End Try
            End If
            .Dispose()
        End With
    End Sub

    Private Sub CbxAgent_CheckedChanged(sender As Object, e As EventArgs) Handles cbxAgent.CheckedChanged
        Dim drv As DataRowView = DirectCast(cbxProduct.SelectedItem, DataRowView)
        If cbxAgent.Checked Then
            cbxAgentName.Enabled = True
            txtAgentContact.Enabled = True

            If cbxProduct.Text.Contains("SHOWMONEY") Then
                Product_Interest = drv("interest") + 0.5
                dInterest_T.Value = Product_Interest * 12
                Interest_UDI = (drv("interest") + 0.5) * Identify_Terms(iTerms.Value)
                dInterest_C.Value = Interest_UDI
            End If
            cbxAgentV2.Enabled = True
        Else
            cbxAgentName.Enabled = False
            cbxAgentName.Text = ""
            txtAgentContact.Enabled = False
            txtAgentContact.Text = ""

            If cbxProduct.Text.Contains("SHOWMONEY") Then
                Product_Interest = drv("interest")
                dInterest_T.Value = Product_Interest * 12
                Interest_UDI = drv("interest") * Identify_Terms(iTerms.Value)
                dInterest_C.Value = Interest_UDI
            End If
            cbxAgentV2.Enabled = False
            cbxAgentV2.Checked = False
        End If
    End Sub

    Private Sub CbxAgentV2_CheckedChanged(sender As Object, e As EventArgs) Handles cbxAgentV2.CheckedChanged
        If cbxAgentV2.Checked Then
            cbxAgentNameV2.Enabled = True
            txtAgentContactV2.Enabled = True
        Else
            cbxAgentNameV2.Enabled = False
            cbxAgentNameV2.Text = ""
            txtAgentContactV2.Enabled = False
            txtAgentContactV2.Text = ""
        End If
    End Sub

    Private Sub CbxMarketing_CheckedChanged(sender As Object, e As EventArgs) Handles cbxMarketing.CheckedChanged
        If cbxMarketing.Checked Then
            cbxMarketingName.Enabled = True
            txtMarketingContact.Enabled = True
        Else
            cbxMarketingName.Enabled = False
            cbxMarketingName.Text = ""
            txtMarketingContact.Enabled = False
            txtMarketingContact.Text = ""
        End If
    End Sub

    Private Sub CbxWalkIn_CheckedChanged(sender As Object, e As EventArgs) Handles cbxWalkIn.CheckedChanged
        If cbxWalkIn.Checked Then
            cbxWalkInType.Enabled = True
            txtWalkInOthers.Enabled = True
        Else
            cbxWalkInType.Enabled = False
            cbxWalkInType.Text = ""
            txtWalkInOthers.Enabled = False
            txtWalkInOthers.Text = ""
        End If
    End Sub

    Private Sub CbxDealer_CheckedChanged(sender As Object, e As EventArgs) Handles cbxDealer.CheckedChanged
        If cbxDealer.Checked Then
            cbxDealerName.Enabled = True
            txtDealersContact.Enabled = True
        Else
            cbxDealerName.Enabled = False
            cbxDealerName.Text = ""
            txtDealersContact.Enabled = False
            txtDealersContact.Text = ""
        End If
    End Sub

    Private Sub CbxDealerName_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbxDealerName.SelectedIndexChanged
        If FirstLoad Then
            Exit Sub
        End If

        If cbxDealerName.SelectedIndex = -1 Or cbxDealerName.Text = "" Then
        Else
            Dim drv As DataRowView = DirectCast(cbxDealerName.SelectedItem, DataRowView)
            txtDealersContact.Text = drv("Contact")
        End If
    End Sub

    Private Sub CbxDealerName_TextChanged(sender As Object, e As EventArgs) Handles cbxDealerName.TextChanged
        If cbxDealerName.Text = "" Then
            txtDealersContact.Text = ""
        End If
    End Sub

    Private Sub CbxAgentName_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbxAgentName.SelectedIndexChanged
        If FirstLoad Then
            Exit Sub
        End If

        If cbxAgentName.SelectedIndex = -1 Or cbxAgentName.Text = "" Then
        Else
            Dim drv As DataRowView = DirectCast(cbxAgentName.SelectedItem, DataRowView)
            txtAgentContact.Text = drv("Contact")
        End If
    End Sub

    Private Sub CbxAgentNameV2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbxAgentNameV2.SelectedIndexChanged
        If FirstLoad Then
            Exit Sub
        End If

        If cbxAgentNameV2.SelectedIndex = -1 Or cbxAgentNameV2.Text = "" Then
        Else
            Dim drv As DataRowView = DirectCast(cbxAgentNameV2.SelectedItem, DataRowView)
            txtAgentContactV2.Text = drv("Contact")
        End If
    End Sub

    Private Sub CbxAgentName_TextChanged(sender As Object, e As EventArgs) Handles cbxAgentName.TextChanged
        If cbxAgentName.Text = "" Then
            txtAgentContact.Text = ""
        End If
    End Sub

    Private Sub CbxAgentNameV2_TextChanged(sender As Object, e As EventArgs) Handles cbxAgentNameV2.TextChanged
        If cbxAgentNameV2.Text = "" Then
            txtAgentContactV2.Text = ""
        End If
    End Sub

    Private Sub CbxMarketingName_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbxMarketingName.SelectedIndexChanged
        If FirstLoad Then
            Exit Sub
        End If

        If cbxMarketingName.SelectedIndex = -1 Or cbxMarketingName.Text = "" Then
        Else
            Dim drv As DataRowView = DirectCast(cbxMarketingName.SelectedItem, DataRowView)
            txtMarketingContact.Text = drv("Phone")
        End If
    End Sub

    Private Sub CbxMarketingName_TextChanged(sender As Object, e As EventArgs) Handles cbxMarketingName.TextChanged
        If cbxMarketingName.Text = "" Then
            txtMarketingContact.Text = ""
        End If
    End Sub

    Private Sub CbxA_CheckedChanged(sender As Object, e As EventArgs) Handles cbxA.CheckedChanged
        If cbxA.Checked Then
            cbxB.Checked = False
            cbxC.Checked = False
            cbxD.Checked = False

            iAdvancePayment.MaxValue = iTerms_C.Value
            iAdvancePayment.Value = iTerms_C.Value
            ComputeNMA()
            dNMA_C.Value = dPA_C.Value

            LabelX94.Text = "Last Month Amort :"
        Else
            iAdvancePayment.MaxValue = iTerms_C.Value - 1
        End If

        If cbxA.Checked = False And cbxB.Checked = False And cbxC.Checked = False And cbxD.Checked = False Then
            cbxA.Checked = True
        End If
    End Sub

    Private Sub CbxB_CheckedChanged(sender As Object, e As EventArgs) Handles cbxB.CheckedChanged
        If cbxB.Checked Then
            cbxA.Checked = False
            cbxC.Checked = False
            cbxD.Checked = False

            iAdvancePayment.Value = 0
            ComputeNMA()

            LabelX94.Text = "Last Month Amort :"
        End If

        If cbxA.Checked = False And cbxB.Checked = False And cbxC.Checked = False And cbxD.Checked = False Then
            cbxA.Checked = True
        End If
    End Sub

    Private Sub CbxC_CheckedChanged(sender As Object, e As EventArgs) Handles cbxC.CheckedChanged
        If cbxC.Checked Then
            cbxB.Checked = False
            cbxA.Checked = False
            cbxD.Checked = False

            iAdvancePayment.Value = 1
            ComputeNMA()

            LabelX94.Text = "Last Month Amort :"
        End If

        If cbxA.Checked = False And cbxB.Checked = False And cbxC.Checked = False And cbxD.Checked = False Then
            cbxA.Checked = True
        End If
    End Sub

    Private Sub CbxD_CheckedChanged(sender As Object, e As EventArgs) Handles cbxD.CheckedChanged
        If cbxD.Checked Then
            cbxB.Checked = False
            cbxA.Checked = False
            cbxC.Checked = False

            iAdvancePayment.Value = 6
            ComputeNMA()

            LabelX94.Text = "Semi Annual Pay :"
        End If

        If cbxA.Checked = False And cbxB.Checked = False And cbxC.Checked = False And cbxD.Checked = False Then
            cbxA.Checked = True
        End If
    End Sub

    Private Sub CbxOptions_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbxOptions.SelectedIndexChanged
        If cbxOptions.SelectedIndex > 0 Then
            cbxAccountNo.Enabled = True
        Else
            cbxAccountNo.Enabled = False
            cbxAccountNo.Text = ""
        End If

        If cbxOptions.SelectedIndex = 2 Then
            If cbxProduct.Text.Contains("SHOWMONEY") Then
                LabelX99.Text = "Total Payables :"
            Else
                LabelX99.Text = "Total Charges :"
            End If
            LabelX97.Text = "Restructuring Fee :"
            LabelX107.Text = "Deficient Amount :"

            dMiscellaneous_C.Tag = dMiscellaneous_C.Value
            dSC_C.Tag = dSC_C.Value
            dAppraisalFee_C.Tag = dAppraisalFee_C.Value
            dAdvancePayment_C.Tag = dAdvancePayment_C.Value
            dCIFee_C.Tag = dCIFee_C.Value
            dInsurance_C.Tag = dInsurance_C.Value

            dMiscellaneous_C.Value = 1500
            dSC_C.Value = dAmountApplied.Value * 0.02
            dAppraisalFee_C.Value = 0
            dAdvancePayment_C.Value = dNMA_C.Value

            PrevTagTrigger = True
        Else
            If cbxProduct.Text.Contains("SHOWMONEY") Then
                LabelX99.Text = "Total Payables :"
            Else
                LabelX99.Text = "Total Deductions :"
            End If
            LabelX97.Text = "Inspection Fee :"
            LabelX107.Text = "Appraisal Fee :"

            If PrevTagTrigger Then
                dMiscellaneous_C.Value = dMiscellaneous_C.Tag
                dSC_C.Value = dSC_C.Tag
                dAppraisalFee_C.Value = dAppraisalFee_C.Tag
                dAdvancePayment_C.Value = dAdvancePayment_C.Tag
                dCIFee_C.Value = dCIFee_C.Tag
                dInsurance_C.Value = dInsurance_C.Tag
            End If
            PrevTagTrigger = False
        End If
        If cbxOptions.SelectedIndex = 3 And cbxAccountNo.Items.Count < 10 Then
            LoadAccountNumber("", cbxOptions.SelectedIndex = 3)
        ElseIf cbxOptions.SelectedIndex < 3 And cbxAccountNo.Items.Count > 10 Then
            LoadAccountNumber("", cbxOptions.SelectedIndex = 3)
        End If
        If cbxOptions.SelectedIndex > 1 Then
            cbxBill.Checked = True
            cbxBill.Visible = False
            LabelX100.Visible = False
            dNetProceeds_C.Visible = False
        Else
            cbxBill.Visible = True
            LabelX100.Visible = True
            dNetProceeds_C.Visible = True
        End If
    End Sub

    Private Sub LoadAccountNumber(CreditNumber As String, Assumption As Boolean)
        With cbxAccountNo
            .DisplayMember = "AccountNumber"
            .ValueMember = "CreditNumber"
            .DataSource = DataSource(String.Format("SELECT credit_application.*, FORMAT((AmountApplied + Interest + RPPD) - (SELECT IFNULL(SUM(CASE WHEN PaidFor = 'UDI' OR PaidFor = 'Principal' OR PaidFor = 'RPPD-A'  OR PaidFor = 'RPPD'  OR PaidFor = 'RPPD-W' THEN IF(EntryType = 'CREDIT',Amount,0 - Amount) END),0) AS 'Total Payment' FROM accounting_entry WHERE `status` = 'ACTIVE' AND ReferenceN = credit_application.CreditNumber),2) AS 'Balance', IF(BusinessID = 0,(SELECT CONCAT(Branch,' [Main]') FROM branch WHERE ID = credit_application.Branch_ID),(SELECT BusinessCenter FROM business_center WHERE ID = credit_application.BusinessID)) AS 'BusinessCenter' FROM credit_application WHERE `status` = 'ACTIVE' AND IF(Loan_Type = 'ASSUMPTION',CI_Status = 'APPROVED',PaymentRequest = 'RELEASED') AND IF('{1}' = '',ForRestructuring = 0 AND IF({2} = TRUE,BorrowerID != '{0}' AND mortgage_ID IN (1,2),BorrowerID = '{0}'),CreditNumber = '{1}') AND Branch_ID = '{3}' ORDER BY AccountNumber;", cbxBorrower.SelectedValue, CreditNumber, Assumption, Branch_ID))
            .SelectedIndex = -1
        End With
    End Sub

    Private Sub CbxAccountNo_Leave(sender As Object, e As EventArgs) Handles cbxAccountNo.Leave
        cbxAccountNo.Text = ReplaceText(cbxAccountNo.Text)
    End Sub

    Private Sub BtnAttach_Click_1(sender As Object, e As EventArgs) Handles btnAttach.Click
        Dim Attach As New FrmAttachFileV2
        With Attach
            .FolderName = "Attachment"
            .Type = "Credit App Attachment"
            .TotalImage = TotalImage
            .CreditNumber = txtCreditNumber.Text
            .ID = txtCreditNumber.Text
            Dim Result = .ShowDialog
            If Result = DialogResult.OK Then
                TotalImage = .TotalImage
            ElseIf Result = DialogResult.Yes Then
                TotalImage = .TotalImage
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnPrint_MouseDown(sender As Object, e As MouseEventArgs) Handles btnPrint.MouseDown
        If e.Button = Windows.Forms.MouseButtons.Left Then
            If SuperTabControl1.SelectedTabIndex = 6 Then
                If vPrint Then
                Else
                    MsgBox(mBox_Print, MsgBoxStyle.Information, "Info")
                    Exit Sub
                End If

                GridView5.OptionsPrint.UsePrintStyles = False
                StandardPrinting("CREDIT APPLICATION LIST", GridControl5)
                Logs("Credit Application", "Print", "[SENSITIVE] Print Application List", "", "", "", txtCreditNumber.Text)
            Else
                BtnPrint_Click(sender, e)
            End If
        ElseIf e.Button = Windows.Forms.MouseButtons.Right Then
            If vPrint Then
            Else
                MsgBox(mBox_Print, MsgBoxStyle.Information, "Info")
                Exit Sub
            End If

            GridView5.OptionsPrint.UsePrintStyles = False
            StandardPrinting("CREDIT APPLICATION LIST", GridControl5)
            Logs("Credit Application", "Print", "[SENSITIVE] Print Application List", "", "", "", txtCreditNumber.Text)
        End If
    End Sub

    Private Sub BtnEmailCrecom_Click(sender As Object, e As EventArgs) Handles btnEmailCrecom.Click
        If MsgBoxYes("Are you sure you want to send this credit application to crecomm?") = MsgBoxResult.Yes Then
            Dim drv As DataRowView = DirectCast(cbxProduct.SelectedItem, DataRowView)
            Dim Salary As Double
            If drv("code") = "SL" Then
                Dim Sweldo As New FrmSalary
                With Sweldo
                    .lblBorrower.Text = TxtFirstN_B.Text & " " & TxtLastN_B.Text
                    If .ShowDialog = DialogResult.OK Then
                        Salary = .dSalary.Value
                    Else
                        Exit Sub
                    End If
                    .Dispose()
                End With
            End If
            Dim CreComm As New FrmCrecomList
            If CreComm.ShowDialog = DialogResult.OK Then
                Dim Email As String = ""
                For x As Integer = 0 To CreComm.GridView1.RowCount - 1
                    If CBool(CreComm.GridView1.GetRowCellValue(x, "Include")) = True Then
                        Email &= CreComm.GridView1.GetRowCellValue(x, "Email Address") & ", "
                    End If
                Next
                If Email = "" Then
                    MsgBox("Please select a Credit Committee.", MsgBoxStyle.Information, "Info")
                    Exit Sub
                Else
                    Email = Email.Substring(0, Email.Length - 2)
                End If

                'Amortization Calculator  ************************************************************************
                Dim Report2 As New RptAmortizationCalculator
                With Report2
                    .Name = "Amortization Calculator " & cbxProduct.Text
                    '***PAGE I
                    .lblCreditNumber.Text = If(cbxBorrower.Enabled, "", txtCreditNumber.Text)
                    .tAmount.Text = dAmountApplied.Text
                    .tTerms.Text = iTerms.Text & " " & cbxTerms.Text
                    .tCollateral.Text = cbxProduct.Text
                    .lblTerms.Text = iTerms_C.Text & " " & cbxTerms.Text
                    .lblInterest_Rate.Text = dInterest_C.Value & "% (" & dInterest_T.Value & lblInterest.Text & ")"
                    .lblRPPD_Rate.Text = dRPPDRate_C.Value & "% (" & dRPPDRate_T.Value & lblRPPDRate_T.Text & ")"
                    .lblPA.Text = dPA_C.Text
                    .lblUDI.Text = dUDI_C.Text
                    .lblRPPD.Text = dRPPD_C.Text
                    .lblFA.Text = dFA_C.Text
                    .lblGMA.Text = dGMA_C.Text & If(dGMA_C2.Visible, "/" & dGMA_C2.Text, "")
                    .lblMR.Text = dMR_C.Text & If(dMR_C2.Visible, "/" & dMR_C2.Text, "")
                    .lblNMA.Text = dNMA_C.Text & If(dNMA_C2.Visible, "/" & dNMA_C2.Text, "")
                    If cbxProduct.Text.ToUpper.ToUpper.Contains("DEALER") Or cbxProduct.Text.ToUpper.Contains("AGRICULTURE") Or cbxProduct.Text.ToUpper.Contains("FARM EQUIPMENT") Or cbxProduct.Text.ToUpper.Contains("CREDIT LINE") Then
                        .XrLabel17.Text = "Monthly Int. :"
                        .XrLabel19.Text = LabelX94.Text
                        .XrLabel15.Visible = False
                        .lblGMA.Visible = False
                        .XrLabel11.Visible = False
                        .lblRPPD.Visible = False
                        .XrLabel4.Visible = False
                        .lblRPPD_Rate.Visible = False
                    Else
                        If dRPPDRate_C.Visible = False Then
                            '***HIDE REBATE
                            .XrLabel4.Visible = False
                            .lblRPPD_Rate.Visible = False
                            .XrLabel11.Visible = False
                            .lblRPPD.Visible = False
                            .XrLabel17.Visible = False
                            .lblMR.Visible = False
                        Else
                            .XrLabel15.Visible = True
                            .lblGMA.Visible = True
                            .XrLabel11.Visible = True
                            .lblRPPD.Visible = True
                            .XrLabel4.Visible = True
                            .lblRPPD_Rate.Visible = True
                        End If
                        .XrLabel17.Text = "Monthly Rebate :"
                        .XrLabel19.Text = "NMA :"
                    End If
                    .rNote.Text = rNote.Text
                    .lblTotalPF.Text = dTPF_C.Text
                    .lblSC.Text = dSC_C.Text
                    .XrLabel25.Text = LabelX97.Text
                    .lblAppraisal.Text = dAppraisalFee_C.Text
                    .lblCI.Text = dCIFee_C.Text
                    .lblPFandSC.Text = dMiscellaneous_C.Text
                    .lblAdvancePayment.Text = dAdvancePayment_C.Text
                    .lblDeductBalance.Text = dDeductBalance_C.Text
                    .lblInsurance.Text = dInsurance_C.Text
                    .lblTotalDeductions.Text = dTD_C.Text
                    .lblNetProceeds.Text = dNetProceeds_C.Text

                    .XrTable3.Rows.Clear()
                    Dim R As New XRTableRow With {.Weight = 105}
                    Dim PF_Cell As New XRTableCell With {.Weight = 105, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
                    Dim Amount_Cell As New XRTableCell With {.Weight = 70, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
                    PF_Cell.Text = "Processing Fee"
                    Amount_Cell.Text = "Amount"
                    R.Cells.Add(PF_Cell)
                    R.Cells.Add(Amount_Cell)
                    .XrTable3.Rows.Add(R)
                    For x As Integer = 0 To GridView4.RowCount - 1
                        Dim R_2 As New XRTableRow With {.Weight = 105}
                        Dim PF_Cell_2 As New XRTableCell With {.Weight = 105, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid))}
                        Dim Amount_Cell_2 As New XRTableCell With {.Weight = 70, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid))}
                        PF_Cell_2.Text = GridView4.GetRowCellValue(x, "Processing Fee")
                        Amount_Cell_2.Text = FormatNumber(CDbl(GridView4.GetRowCellValue(x, "Amount")), 2)
                        If CDbl(GridView4.GetRowCellValue(x, "Amount")) > 0 Then
                            R_2.Cells.Add(PF_Cell_2)
                            R_2.Cells.Add(Amount_Cell_2)
                            .XrTable3.Rows.Add(R_2)
                        End If
                    Next
                    If .XrTable3.Rows.Count < 12 Then
                        For x As Integer = 0 To 12 - .XrTable3.Rows.Count
                            Dim R_4 As New XRTableRow With {.Weight = 105}
                            Dim PF_Cell_4 As New XRTableCell With {.Weight = 105, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid))}
                            Dim Amount_Cell_4 As New XRTableCell With {.Weight = 70, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid))}
                            PF_Cell_4.Text = ""
                            Amount_Cell_4.Text = ""
                            R_4.Cells.Add(PF_Cell_4)
                            R_4.Cells.Add(Amount_Cell_4)
                            .XrTable3.Rows.Add(R_4)
                        Next
                    End If
                    '***PAGE II
                    .lblCreditNumber_2.Text = If(cbxBorrower.Enabled, "", txtCreditNumber.Text)
                    .tAmount_2.Text = dAmountApplied.Text
                    .tTerms_2.Text = iTerms.Text & " " & cbxTerms.Text
                    .tCollateral_2.Text = cbxProduct.Text
                    .lblTerms_2.Text = iTerms_C.Text & " " & cbxTerms.Text
                    .lblInterest_Rate_2.Text = dInterest_C.Value & "% (" & dInterest_T.Value & lblInterest.Text & ")"
                    .lblRPPD_Rate_2.Text = dRPPDRate_C.Value & "% (" & dRPPDRate_T.Value & lblRPPDRate_T.Text & ")"
                    .lblPA_2.Text = dPA_C.Text
                    .lblUDI_2.Text = dUDI_C.Text
                    .lblRPPD_2.Text = dRPPD_C.Text
                    .lblFA_2.Text = dFA_C.Text
                    .lblGMA_2.Text = dGMA_C.Text & If(dGMA_C2.Visible, "/" & dGMA_C2.Text, "")
                    .lblMR_2.Text = dMR_C.Text & If(dMR_C2.Visible, "/" & dMR_C2.Text, "")
                    .lblNMA_2.Text = dNMA_C.Text & If(dNMA_C2.Visible, "/" & dNMA_C2.Text, "")
                    If cbxProduct.Text.ToUpper.ToUpper.Contains("DEALER") Or cbxProduct.Text.ToUpper.Contains("AGRICULTURE") Or cbxProduct.Text.ToUpper.Contains("FARM EQUIPMENT") Or cbxProduct.Text.ToUpper.Contains("CREDIT LINE") Then
                        .XrLabel49.Text = "Monthly Int. :"
                        .XrLabel19.Text = LabelX94.Text
                        .XrLabel37.Visible = False
                        .lblRPPD_Rate_2.Visible = False
                        .XrLabel43.Visible = False
                        .lblRPPD_2.Visible = False
                        .XrLabel47.Visible = False
                        .lblGMA_2.Visible = False
                    Else
                        If dRPPDRate_C.Visible = False Then
                            '***HIDE REBATE
                            .XrLabel37.Visible = False
                            .lblRPPD_Rate_2.Visible = False
                            .XrLabel43.Visible = False
                            .lblRPPD_2.Visible = False
                            .XrLabel49.Visible = False
                            .lblMR_2.Visible = False
                        Else
                            .XrLabel37.Visible = True
                            .lblRPPD_Rate_2.Visible = True
                            .XrLabel43.Visible = True
                            .lblRPPD_2.Visible = True
                            .XrLabel47.Visible = True
                            .lblGMA_2.Visible = True
                        End If
                        .XrLabel49.Text = "Monthly Rebate :"
                        .XrLabel51.Text = "NMA :"
                    End If
                    .rNote_2.Text = rNote.Text
                    .lblTotalPF_2.Text = dTPF_C.Text
                    .lblSC_2.Text = dSC_C.Text
                    .XrLabel57.Text = LabelX97.Text
                    .lblAppraisal_2.Text = dAppraisalFee_C.Text
                    .lblCI_2.Text = dCIFee_C.Text
                    .lblPFandSC_2.Text = dMiscellaneous_C.Text
                    .lblAdvancePayment_2.Text = dAdvancePayment_C.Text
                    .lblDeductBalance_2.Text = dDeductBalance_C.Text
                    .lblInsurance_2.Text = dInsurance_C.Text
                    .lblTotalDeductions_2.Text = dTD_C.Text
                    .lblNetProceeds_2.Text = dNetProceeds_C.Text

                    .XrTable6.Rows.Clear()
                    Dim RT2 As New XRTableRow With {.Weight = 105}
                    Dim PF_CellT2 As New XRTableCell With {.Weight = 105, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
                    Dim Amount_CellT2 As New XRTableCell With {.Weight = 70, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
                    PF_CellT2.Text = "Processing Fee"
                    Amount_CellT2.Text = "Amount"
                    RT2.Cells.Add(PF_CellT2)
                    RT2.Cells.Add(Amount_CellT2)
                    .XrTable6.Rows.Add(RT2)
                    For x As Integer = 0 To GridView4.RowCount - 1
                        Dim R_2T2 As New XRTableRow With {.Weight = 105}
                        Dim PF_Cell_2T2 As New XRTableCell With {.Weight = 105, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
                        Dim Amount_Cell_2T2 As New XRTableCell With {.Weight = 70, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
                        PF_Cell_2T2.Text = GridView4.GetRowCellValue(x, "Processing Fee")
                        Amount_Cell_2T2.Text = FormatNumber(CDbl(GridView4.GetRowCellValue(x, "Amount")), 2)
                        If CDbl(GridView4.GetRowCellValue(x, "Amount")) > 0 Then
                            R_2T2.Cells.Add(PF_Cell_2T2)
                            R_2T2.Cells.Add(Amount_Cell_2T2)
                            .XrTable6.Rows.Add(R_2T2)
                        End If
                    Next
                    If .XrTable6.Rows.Count < 12 Then
                        For x As Integer = 0 To 12 - .XrTable6.Rows.Count
                            Dim R_4T2 As New XRTableRow With {.Weight = 105}
                            Dim PF_Cell_4T2 As New XRTableCell With {.Weight = 105, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
                            Dim Amount_Cell_4T2 As New XRTableCell With {.Weight = 70, .TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight, .Font = New Font(OfficialFont, CSng(OfficialFontSizeGrid), FontStyle.Bold)}
                            PF_Cell_4T2.Text = ""
                            Amount_Cell_4T2.Text = ""
                            R_4T2.Cells.Add(PF_Cell_4T2)
                            R_4T2.Cells.Add(Amount_Cell_4T2)
                            .XrTable6.Rows.Add(R_4T2)
                        Next
                    End If
                End With
                Dim Attachment_2 As String = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) & "\Amortization Calculator-" & Format(Date.Now, "yyyy-MM-dd_hhmmss") & ".pdf"
                Try
                    Report2.ExportToPdf(Attachment_2)
                Catch ex As Exception
                End Try

                'Amortization Schedule ************************************************************************
                Dim Report As New RptAmortizationSchedule
                With Report
                    .Name = "Amortization Scheduling"
                    .lblAmountApplied.Text = dAmountApplied.Text
                    .lblTerms.Text = iTerms.Value & " " & cbxTerms.Text
                    .lblProduct.Text = cbxProduct.Text & " [" & cbxCollateral.Text & "]"
                    .lblPurpose.Text = txtPurpose.Text
                    .lblDate.Text = Format(dtpDate.Value, "MM.dd.yyyy")

                    .DataSource = GridControl3.DataSource
                    .lblNo.DataBindings.Add("Text", GridControl3.DataSource, "No")
                    .lblDue.DataBindings.Add("Text", GridControl3.DataSource, "Due Date")
                    .lblMonthly.DataBindings.Add("Text", GridControl3.DataSource, "Monthly")
                    .lblInterest.DataBindings.Add("Text", GridControl3.DataSource, "Interest Income")
                    .lblRPPD.DataBindings.Add("Text", GridControl3.DataSource, "RPPD")
                    .lblPrincipal.DataBindings.Add("Text", GridControl3.DataSource, "Principal Allocation")
                    .lblOutstanding.DataBindings.Add("Text", GridControl3.DataSource, "Outstanding Principal")
                    .lblUnearn.DataBindings.Add("Text", GridControl3.DataSource, "Unearn Income")
                    .lblRPPD_2.DataBindings.Add("Text", GridControl3.DataSource, "Total_RPPD")
                    .lblLoansReceivable.DataBindings.Add("Text", GridControl3.DataSource, "Loans Receivable")
                End With
                Dim Attachment_1 As String = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) & "\Amortization Schedule-" & Format(Date.Now, "yyyy-MM-dd_hhmmss") & ".pdf"
                Try
                    Report.ExportToPdf(Attachment_1)
                Catch ex As Exception
                End Try

                'Credit Application ************************************************************************
                Dim Report3 As New RptLoanApplication
                With Report3
                    .Name = txtCreditNumber.Text
                    .tAmount.Text = dAmountApplied.Text
                    .tTerms.Text = iTerms.Value & " " & cbxTerms.Text
                    .tCollateral.Text = cbxProduct.Text & " [" & cbxCollateral.Text & "]"
                    .tPurpose.Text = txtPurpose.Text
                    .tDate.Text = dtpDate.Text
                    .p_Borrower.Image = pb_B.Image.Clone
                    .lblLoanNumber.Text = txtCreditNumber.Text
                    .lblBorrowerID.Text = cbxBorrower.Text
                    .lblBorrower.Text = If(CbxPrefix_B.Text.Trim = "", "", CbxPrefix_B.Text.Trim & " ") & If(TxtFirstN_B.Text.Trim = "", "", TxtFirstN_B.Text.Trim & " ") & If(TxtMiddleN_B.Text.Trim = "", "", TxtMiddleN_B.Text.Trim & " ") & If(TxtLastN_B.Text.Trim = "", "", TxtLastN_B.Text.Trim & " ") & If(cbxSuffix_B.Text.Trim = "", "", cbxSuffix_B.Text.Trim & " ")
                    .lblSpouse.Text = If(CbxPrefix_S.Text.Trim = "", "", CbxPrefix_S.Text.Trim & " ") & If(TxtFirstN_S.Text.Trim = "", "", TxtFirstN_S.Text.Trim & " ") & If(TxtMiddleN_S.Text.Trim = "", "", TxtMiddleN_S.Text.Trim & " ") & If(TxtLastN_S.Text.Trim = "", "", TxtLastN_S.Text.Trim & " ") & If(cbxSuffix_S.Text.Trim = "", "", cbxSuffix_S.Text.Trim & " ")
                    .lblCoMaker1.Text = If(CbxPrefix_C1.Text.Trim = "", "", CbxPrefix_C1.Text.Trim & " ") & If(TxtFirstN_C1.Text.Trim = "", "", TxtFirstN_C1.Text.Trim & " ") & If(TxtMiddleN_C1.Text.Trim = "", "", TxtMiddleN_C1.Text.Trim & " ") & If(TxtLastN_C1.Text.Trim = "", "", TxtLastN_C1.Text.Trim & " ") & If(cbxSuffix_C1.Text.Trim = "", "", cbxSuffix_C1.Text.Trim & " ")
                    .lblCoMakerII.Text = If(CbxPrefix_C2.Text.Trim = "", "", CbxPrefix_C2.Text.Trim & " ") & If(TxtFirstN_C2.Text.Trim = "", "", TxtFirstN_C2.Text.Trim & " ") & If(TxtMiddleN_C2.Text.Trim = "", "", TxtMiddleN_C2.Text.Trim & " ") & If(TxtLastN_C2.Text.Trim = "", "", TxtLastN_C2.Text.Trim & " ") & If(cbxSuffix_C2.Text.Trim = "", "", cbxSuffix_C2.Text.Trim & " ")
                    .lblCompleteAdd.Text = If(txtNoC_B.Text.Trim = "", "", txtNoC_B.Text.Trim & " ") & If(txtStreetC_B.Text.Trim = "", "", txtStreetC_B.Text.Trim & " ") & If(txtBarangayC_B.Text.Trim = "", "", txtBarangayC_B.Text.Trim & " ") & If(cbxAddressC_B.Text.Trim = "", "", cbxAddressC_B.Text.Trim & " ")
                    .lblProvincialAdd.Text = If(txtNoP_B.Text.Trim = "", "", txtNoP_B.Text.Trim & " ") & If(txtStreetP_B.Text.Trim = "", "", txtStreetP_B.Text.Trim & " ") & If(txtBarangayP_B.Text.Trim = "", "", txtBarangayP_B.Text.Trim & " ") & If(cbxAddressP_B.Text.Trim = "", "", cbxAddressP_B.Text.Trim & " ")
                    .lblBirthDate.Text = DtpBirth_B.Text
                    .lblBirthPlace.Text = cbxPlaceBirth_B.Text
                    .cbxMale.Checked = cbxMale_B.Checked
                    .cbxFemale.Checked = cbxFemale_B.Checked
                    .cbxSingle.Checked = cbxSingle_B.Checked
                    .cbxMarried.Checked = cbxMarried_B.Checked
                    .cbxSeparated.Checked = cbxSeparated_B.Checked
                    .cbxWidowed.Checked = cbxWidowed_B.Checked
                    .lblCitizenship.Text = cbxCitizenship_B.Text
                    .lblTIN.Text = txtTIN_B.Text
                    .lblTelephone.Text = txtTelephone_B.Text
                    .lblSSS.Text = txtSSS_B.Text
                    .lblMobile.Text = txtMobile_B.Text
                    .lblEmail.Text = txtEmail_B.Text
                    .cbxOwned.Checked = cbxOwned_B.Checked
                    .cbxFree.Checked = cbxFree_B.Checked
                    .cbxRented.Checked = cbxRented_B.Checked
                    .lblRent.Text = If(cbxRented_B.Checked, dRent_B.Text & " / month", "")
                    .lblDependent_1.Text = If(CbxPrefix_1.Text.Trim = "", "", CbxPrefix_1.Text.Trim & " ") & If(TxtFirstN_1.Text.Trim = "", "", TxtFirstN_1.Text.Trim & " ") & If(TxtMiddleN_1.Text.Trim = "", "", TxtMiddleN_1.Text.Trim & " ") & If(TxtLastN_1.Text.Trim = "", "", TxtLastN_1.Text.Trim & " ") & If(cbxSuffix_1.Text.Trim = "", "", cbxSuffix_1.Text.Trim & " ")
                    .lblBirthDate_1.Text = iAge_D1.Text
                    .lblGrade_1.Text = If(txtGrade_1.Text.Trim = "", "", txtGrade_1.Text.Trim & " ") & If(txtSchool_1.Text.Trim = "", "", txtSchool_1.Text.Trim & " ") & If(txtSchoolAddress_1.Text.Trim = "", "", txtSchoolAddress_1.Text.Trim & " ")
                    .lblDependent_2.Text = If(CbxPrefix_2.Text.Trim = "", "", CbxPrefix_2.Text.Trim & " ") & If(TxtFirstN_2.Text.Trim = "", "", TxtFirstN_2.Text.Trim & " ") & If(TxtMiddleN_2.Text.Trim = "", "", TxtMiddleN_2.Text.Trim & " ") & If(TxtLastN_2.Text.Trim = "", "", TxtLastN_2.Text.Trim & " ") & If(cbxSuffix_2.Text.Trim = "", "", cbxSuffix_2.Text.Trim & " ")
                    .lblBirthDate_2.Text = iAge_D2.Text
                    .lblGrade_2.Text = If(txtGrade_2.Text.Trim = "", "", txtGrade_2.Text.Trim & " ") & If(txtSchool_2.Text.Trim = "", "", txtSchool_2.Text.Trim & " ") & If(txtSchoolAddress_2.Text.Trim = "", "", txtSchoolAddress_2.Text.Trim & " ")
                    .lblDependent_3.Text = If(CbxPrefix_3.Text.Trim = "", "", CbxPrefix_3.Text.Trim & " ") & If(TxtFirstN_3.Text.Trim = "", "", TxtFirstN_3.Text.Trim & " ") & If(TxtMiddleN_3.Text.Trim = "", "", TxtMiddleN_3.Text.Trim & " ") & If(TxtLastN_3.Text.Trim = "", "", TxtLastN_3.Text.Trim & " ") & If(cbxSuffix_3.Text.Trim = "", "", cbxSuffix_3.Text.Trim & " ")
                    .lblBirthDate_3.Text = iAge_D3.Text
                    .lblGrade_3.Text = If(txtGrade_3.Text.Trim = "", "", txtGrade_3.Text.Trim & " ") & If(txtSchool_3.Text.Trim = "", "", txtSchool_3.Text.Trim & " ") & If(txtSchoolAddress_3.Text.Trim = "", "", txtSchoolAddress_3.Text.Trim & " ")
                    .lblDependent_4.Text = If(CbxPrefix_4.Text.Trim = "", "", CbxPrefix_4.Text.Trim & " ") & If(TxtFirstN_4.Text.Trim = "", "", TxtFirstN_4.Text.Trim & " ") & If(TxtMiddleN_4.Text.Trim = "", "", TxtMiddleN_4.Text.Trim & " ") & If(TxtLastN_4.Text.Trim = "", "", TxtLastN_4.Text.Trim & " ") & If(cbxSuffix_4.Text.Trim = "", "", cbxSuffix_4.Text.Trim & " ")
                    .lblBirthDate_4.Text = iAge_D4.Text
                    .lblGrade_4.Text = If(txtGrade_4.Text.Trim = "", "", txtGrade_4.Text.Trim & " ") & If(txtSchool_4.Text.Trim = "", "", txtSchool_4.Text.Trim & " ") & If(txtSchoolAddress_4.Text.Trim = "", "", txtSchoolAddress_4.Text.Trim & " ")
                    .lblEmployer.Text = cbxEmployer_B.Text
                    .lblEmployerAddress.Text = txtEmployerAddress_B.Text
                    .lblEmployerTel.Text = txtEmployerTelephone_B.Text
                    .lblPosition.Text = cbxPosition_B.Text
                    .cbxCasual.Checked = cbxCasual_B.Checked
                    .cbxTemporary.Checked = cbxTemporary_B.Checked
                    .cbxPermanent.Checked = cbxPermanent_B.Checked
                    .lblDateHired.Text = dtpHired_B.Text
                    .lblSupervisor.Text = txtSupervisor_B.Text
                    .lblMonthlyIncome.Text = dMonthly_B.Text

                    .lblEmployer_S.Text = vEmployer_S
                    .lblEmployerAddress_S.Text = vEmpAddress_S
                    .lblEmployerTel_S.Text = vEmpTelephone_S
                    .lblPosition_S.Text = vPosition_S
                    .cbxCasual_S.Checked = vCasual_S
                    .cbxTemporary_S.Checked = vTemporary_S
                    .cbxPermanent_S.Checked = vPermanent_S
                    .lblDateHired_S.Text = vHired_S
                    .lblSupervisor_S.Text = vSupervisor_S
                    .lblMonthlyIncome_S.Text = vSalary_S

                    .lblBusiness.Text = txtBusinessName_B.Text
                    .lblBusinessAddress.Text = txtBusinessAddress_B.Text
                    .lblBusinessTel.Text = txtBusinessTelephone_B.Text
                    .lblNature.Text = cbxNatureBusiness_B.Text
                    .lblYearsOperation.Text = iYrsOperation_B.Text
                    .lblBusinessIncome.Text = dBusinessIncome_B.Text
                    .lblNoEmployees.Text = iNoEmployees_B.Text
                    .lblCapital.Text = dCapital_B.Text
                    .lblCoverageArea.Text = txtArea_B.Text
                    .lblExpiry.Text = dtpExpiry_B.Text
                    .lblOutlet.Text = iOutlet_B.Text
                    .lblOtherIncome.Text = txtOtherIncome_B.Text
                    .lblOtherMonthlyIncome.Text = dOtherIncome_B.Text
                    .lblCreditor_1.Text = txtCreditor_1.Text
                    .lblNature_1.Text = txtNatureLoan_1.Text
                    .lblAmount_1.Text = dAmountGranted_1.Text
                    .lblTerm_1.Text = dTerm_1.Text
                    .lblBalance_1.Text = dBalance_1.Text
                    .lblRemarks_1.Text = txtCreditRemarks_1.Text
                    .lblCreditor_2.Text = txtCreditor_2.Text
                    .lblNature_2.Text = txtNatureLoan_2.Text
                    .lblAmount_2.Text = dAmountGranted_2.Text
                    .lblTerm_2.Text = dTerm_2.Text
                    .lblBalance_2.Text = dBalance_2.Text
                    .lblRemarks_2.Text = txtCreditRemarks_2.Text
                    .lblCreditor_3.Text = txtCreditor_3.Text
                    .lblNature_3.Text = txtNatureLoan_3.Text
                    .lblAmount_3.Text = dAmountGranted_3.Text
                    .lblTerm_3.Text = dTerm_3.Text
                    .lblBalance_3.Text = dBalance_3.Text
                    .lblRemarks_3.Text = txtCreditRemarks_3.Text
                    .lblBank_1.Text = txtBank_1.Text
                    .lblSA_1.Text = txtSA_1.Text
                    .lblAverage_1.Text = dAverageBalance_1.Text
                    .lblPresent_1.Text = dPresentBalance_1.Text
                    .lblDateOpened_1.Text = txtOpened_1.Text
                    .lblBankRemarks_1.Text = txtBankRemarks_1.Text
                    .lblBank_2.Text = txtBank_2.Text
                    .lblSA_2.Text = txtSA_2.Text
                    .lblAverage_2.Text = dAverageBalance_2.Text
                    .lblPresent_2.Text = dPresentBalance_2.Text
                    .lblDateOpened_2.Text = txtOpened_2.Text
                    .lblBankRemarks_2.Text = txtBankRemarks_2.Text
                    .lblBank_3.Text = txtBank_3.Text
                    .lblSA_3.Text = txtSA_3.Text
                    .lblAverage_3.Text = dAverageBalance_3.Text
                    .lblPresent_3.Text = dPresentBalance_3.Text
                    .lblDateOpened_3.Text = txtOpened_3.Text
                    .lblBankRemarks_3.Text = txtBankRemarks_3.Text
                    .lblLocation_1.Text = txtLocation_1.Text
                    .lblTCT_1.Text = txtTCT_1.Text
                    .lblArea_1.Text = dArea_1.Text
                    .lblAcquired_1.Text = txtAcquired_1.Text
                    .lblEstateRemarks_1.Text = txtPropertiesRemarks_1.Text
                    .lblLocation_2.Text = txtLocation_2.Text
                    .lblTCT_2.Text = txtTCT_2.Text
                    .lblArea_2.Text = dArea_2.Text
                    .lblAcquired_2.Text = txtAcquired_2.Text
                    .lblEstateRemarks_2.Text = txtPropertiesRemarks_2.Text
                    .lblLocation_3.Text = txtLocation_3.Text
                    .lblTCT_3.Text = txtTCT_3.Text
                    .lblArea_3.Text = dArea_3.Text
                    .lblAcquired_3.Text = txtAcquired_3.Text
                    .lblEstateRemarks_3.Text = txtPropertiesRemarks_3.Text
                    .lblVehicle_1.Text = txtVehicle_1.Text
                    .lblYear_1.Text = dtpYear_1.Text
                    .lblWhom_1.Text = txtWhomAcquired_1.Text
                    .lblWhen_1.Text = txtWhenAcquired_1.Text
                    .lblVehicleRemarks_1.Text = txtVehicleRemarks_1.Text
                    .lblVehicle_2.Text = txtVehicle_2.Text
                    .lblYear_2.Text = dtpYear_2.Text
                    .lblWhom_2.Text = txtWhomAcquired_2.Text
                    .lblWhen_2.Text = txtWhenAcquired_2.Text
                    .lblVehicleRemarks_2.Text = txtVehicleRemarks_2.Text
                    .lblVehicle_3.Text = txtVehicle_3.Text
                    .lblYear_3.Text = dtpYear_3.Text
                    .lblWhom_3.Text = txtWhomAcquired_3.Text
                    .lblWhen_3.Text = txtWhenAcquired_3.Text
                    .lblVehicleRemarks_3.Text = txtVehicleRemarks_3.Text
                    .lblAppliances_1.Text = txtHomeAppliances_1.Text
                    .lblAppliances_2.Text = txtHomeAppliances_2.Text
                    .lblReference_1.Text = txtReference_1.Text
                    .lblReferenceAdd_1.Text = txtReferenceAddress_1.Text
                    .lblReferenceTel_1.Text = txtReferenceContact_1.Text
                    .lblReference_2.Text = txtReference_2.Text
                    .lblReferenceAdd_2.Text = txtReferenceAddress_2.Text
                    .lblReferenceTel_2.Text = txtReferenceContact_2.Text
                    .lblReference_3.Text = txtReference_3.Text
                    .lblReferenceAdd_3.Text = txtReferenceAddress_3.Text
                    .lblReferenceTel_3.Text = txtReferenceContact_3.Text
                    .lblDateSigned.Text = ""
                    .lblSignature_1.Text = ""
                    .lblSignature_2.Text = ""
                    .tResidence.Text = txtCertificateNo.Text
                    .tPlaceIssue.Text = txtPlaceIssue.Text
                    .tDateIssue.Text = dtpIssue.Text
                    .cbxAgent.Checked = cbxAgent.Checked
                    .txtAgent.Text = cbxAgentName.Text & " " & If(txtAgentContact.Text = "", "", "(" & txtAgentContact.Text & ")")
                    .cbxMarketing.Checked = cbxMarketing.Checked
                    .txtMarketing.Text = cbxMarketingName.Text & " " & If(txtMarketingContact.Text = "", "", "(" & txtMarketingContact.Text & ")")
                    .cbxWalkIn.Checked = cbxWalkIn.Checked
                    .txtWalkIn.Text = cbxWalkInType.Text & " " & If(txtWalkInOthers.Text = "", "", "(" & txtWalkInOthers.Text & ")")
                    .lblRemarks.Text = rRemarks.Text
                End With
                Dim Attachment_3 As String = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) & "\Credit Application-" & Format(Date.Now, "yyyy-MM-dd_hhmmss") & ".pdf"
                Try
                    Report3.ExportToPdf(Attachment_3)
                Catch ex As Exception
                End Try

                With AttachmentFiles
                    .Add(Attachment_2)
                    .Add(Attachment_1)
                    .Add(Attachment_3)
                End With

                Dim SQL As String = "SELECT "
                SQL &= "    FORMAT(IFNULL(SUM(AmountApplied),0),2) AS 'Total Booking',"
                SQL &= String.Format("    FORMAT(IFNULL((SELECT `M{0}T` FROM target_booking WHERE ProductID = {1} AND BranchID = '{2}' AND `status` = 'ACTIVE' AND FP_Status = 'APPROVED' AND YEAR('{3}') = `Year` AND Half = IF(MONTH('{3}') BETWEEN 1 AND 6,1,2)),0),2) AS 'Threshold'", If(Format(dtpDate.Value, "MM") > 6, Format(dtpDate.Value.AddMonths(-6), "MM"), Format(dtpDate.Value, "MM")), cbxProduct.SelectedValue, Branch_ID, Format(dtpDate.Value, "yyyy-MM-dd"))
                SQL &= " FROM credit_application"
                SQL &= String.Format(" WHERE `status` = 'ACTIVE' AND PaymentRequest IN ('RELEASED','REQUESTED','CHECKED REQUEST','APPROVED REQUEST') AND Product_ID = '{1}' AND MONTH(IFNULL(Released,Trans_Date)) = MONTH('{0}') AND YEAR(IFNULL(Released,Trans_Date)) = YEAR('{0}')", Format(dtpDate.Value, "yyyy-MM-dd"), cbxProduct.SelectedValue)
                Dim DT_Thresholding As DataTable = DataSource(SQL)

                Dim Subject As String = String.Format("{0}-{1}-{2} {3} {4}", Branch_Code, drv("code"), TxtFirstN_B.Text & " " & TxtLastN_B.Text, dAmountApplied.Text, txtCreditNumber.Text)
                Dim Body As String = "Dear Sir/Madam,<br><br>"
                Body &= "Sending to you RLA under the following scope<br><br>"
                Body &= "Name : <b>" & UpperCaseFirst(TxtFirstN_B.Text & " " & TxtLastN_B.Text) & "</b><br>"
                If drv("code") = "SL" Then
                    Dim DT As New DataTable
                    DT = DataSource(String.Format("SELECT `position`, DATE_FORMAT(hireddate,'%M %Y') AS 'DateHired' FROM employee_setup WHERE `status` = 'ACTIVE' AND first_name = '{0}' AND last_name = '{1}' AND suffix = '{2}' LIMIT 1;", TxtFirstN_B.Text, TxtLastN_B.Text, cbxSuffix_B.Text))
                    If DT.Rows.Count > 0 Then
                        Body &= "Designation : <b>" & UpperCaseFirst(DT(0)("Position")) & "</b><br>"
                        Body &= "Salary : <b>P" & FormatNumber(Salary, 2) & "</b><br>"
                        Body &= "Date Hired : <b>" & DT(0)("DateHired") & "</b><br><br>"
                    End If
                End If
                Body &= "Amount Applied : <b>P" & dAmountApplied.Text & "</b><br>"
                Body &= "Interest : <b>" & dInterest_C.Text & "% Per " & UpperCaseFirst(cbxTerms.Text) & "</b><br>"
                Body &= "Terms : <b>" & iTerms.Value & " " & UpperCaseFirst(cbxTerms.Text) & "(s)</b><br>"
                Body &= "Purpose : <i>" & txtPurpose.Text & "</i><br><br>"

                If DT_Thresholding.Rows.Count > 0 Then
                    If CDbl(DT_Thresholding(0)("Total Booking")) + dFA_C.Value > CDbl(DT_Thresholding(0)("Threshold")) Then
                        Body &= "<font color='red'>Note : <b>Approved Principal Amount will reach or exceed the Threshold for Product" & cbxProduct.Text & "</b><br>"
                        Body &= "Total Booking : <b>" & DT_Thresholding(0)("Total Booking") & "</b><br>"
                        Body &= "Threshold : <b>" & DT_Thresholding(0)("Threshold") & "</b><br>"
                        Body &= "Excess : <b>" & FormatNumber((CDbl(DT_Thresholding(0)("Total Booking")) + dFA_C.Value) - CDbl(DT_Thresholding(0)("Threshold")), 2) & "</b><br>"
                        Body &= "Excess % : <b>" & FormatNumber((((CDbl(DT_Thresholding(0)("Total Booking")) + dFA_C.Value) - CDbl(DT_Thresholding(0)("Threshold"))) / CDbl(DT_Thresholding(0)("Threshold")) * 100), 2) & "%</font></b><br><br>"
                    End If
                End If
                Body &= "For your perusal<br><br>"
                Body &= "Thank you<br>"

                If Empl_Email = "" Then
                    SendEmail(Email, Subject, Body, True, True, False, 0, "", "")
                Else
                    SendEmail(Email & "," & Empl_Email, Subject, Body, True, True, False, 0, "", "")
                End If
                Logs("Credit Application", "Email", "Email", String.Format("Email Credit Application with Credit Number {0}", txtCreditNumber.Text), "", "", txtCreditNumber.Text)
                LoadData()
            End If
            CreComm.Dispose()
        End If
    End Sub

    Private Sub BtnCreComm_Click(sender As Object, e As EventArgs) Handles btnCreComm.Click
        Dim Approved As New FrmCreditApproved
        With Approved
            .BorrowerID = BorrowerID
            .Mortgage_ID = MortgageID
            .For_CI = For_CI
            .CreditNumber = txtCreditNumber.Text
            .CbxPrefix_B.Text = CbxPrefix_B.Text
            .TxtFirstN_B.Text = TxtFirstN_B.Text
            .TxtMiddleN_B.Text = TxtMiddleN_B.Text
            .TxtLastN_B.Text = TxtLastN_B.Text
            .cbxSuffix_B.Text = cbxSuffix_B.Text

            '*** COMPARISON *****************************************************************************************************************
            .dPrincipal.Value = dAmountApplied.Value
            .iTerms.Value = iTerms.Value
            .cbxTerms.Text = cbxTerms.Text
            .dInterestRate.Value = dInterest_T.Value
            .dServiceCharge.Value = dSC_Rate.Value
            .dNetProceeds_C.Value = dNetProceeds_C.Value
            .cbxProduct.Text = cbxProduct.Text
            .ApproveStatus = ApproveStatus

            If ApproveStatus = "For ReApprove" Or ApproveStatus = "For Special" Then
                .dPrincipalA.Value = ApprovedAmount_Crecomm
                .iTermsA.Value = ApprovedTerm_Crecomm
                .cbxTermsA.Text = cbxTerms.Text
                .dInterestRateA.Value = ApprovedInterest_Crecomm
                .dServiceChargeA.Value = ApprovedSC_Crecomm
            Else
                .dPrincipalA.Value = dAmountApplied.Value
                .iTermsA.Value = iTerms.Value
                .cbxTermsA.Text = cbxTerms.Text
                .dInterestRateA.Value = dInterest_T.Value
                .dServiceChargeA.Value = dSC_Rate.Value
            End If

            .dPrincipalA.MaxValue = dAmountApplied.Value
            '*** COMPARISON *****************************************************************************************************************

            .cbxProduct.Text = cbxProduct.Text
            .dFA_C.Value = dFA_C.Value
            .dNetProceeds_C.Value = dNetProceeds_C.Value
            .pb_B.Image = pb_B.Image.Clone
            .lblCreditNumber.Text = txtCreditNumber.Text
            .btnUpdate.Visible = True
            .TotalImage = TotalImage_Crecomm

            If .ShowDialog = DialogResult.OK Then
                Clear()
                LoadData()
            End If
            .Dispose()
        End With
    End Sub

    Private Sub IReassign_Click(sender As Object, e As EventArgs) Handles iReassign.Click
        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Then
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("Application Status") = "FOR CREDIT INVESTIGATION" Then
            Else
                MsgBox(String.Format("Credit Application is {0}, reassigning of CI is not available.", GridView5.GetFocusedRowCellValue("Application Status")), MsgBoxStyle.Information, "Info")
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        If User_Type = "ADMIN" Or ComparePosition({"REGIONAL MANAGER", "DISTRICT MANAGER", "BRANCH MANAGER", "OPERATIONS MANAGER", "MICROFINANCE LOAN MANAGER", "OFFICER-IN-CHARGE", "OFFICE SUPERVISOR", "ASSISTANT BRANCH MANAGER"}, False) Then
            Dim Reassign As New FrmReassignCI
            With Reassign
                .Borrower = GridView5.GetFocusedRowCellValue("Borrower")
                If GridView5.GetFocusedRowCellValue("OutsourceCI") = Branch_ID.ToString Then
                    .AssignedBranch = True
                End If
                .CreditNumber = GridView5.GetFocusedRowCellValue("Credit Number")
                If .ShowDialog = DialogResult.OK Then
                    LoadData()
                End If
                .Dispose()
            End With
        Else
            MsgBox(mAccessDenied, MsgBoxStyle.Information, "Info")
        End If
    End Sub

    Private Sub IHold_Click(sender As Object, e As EventArgs) Handles iHold.Click
        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Then
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("status") = "DRAFT" Then
                MsgBox(String.Format("Credit Application is {0}, holding the application won't matter.", GridView5.GetFocusedRowCellValue("Application Status")), MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("status") = "DELETED" Or GridView5.GetFocusedRowCellValue("Application Status") = "DISAPPROVED" Or GridView5.GetFocusedRowCellValue("status") = "CANCELLED" Then
                MsgBox(String.Format("Credit Application is already {0}, please check your data.", GridView5.GetFocusedRowCellValue("Application Status")), MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("Application Status") = "BOOKED" And (DataObject(String.Format("SELECT IFNULL(SUM(Amount),0) FROM accounting_entry WHERE ReferenceN = '{0}' AND PaidFor IN ('RPPD','UDI','Principal') AND `status` = 'ACTIVE';", GridView5.GetFocusedRowCellValue("Credit Number"))) > 0 Or If(GridView5.GetFocusedRowCellValue("FDD") = "", False, CDate(GridView5.GetFocusedRowCellValue("FDD")) <= Date.Now)) Then
                MsgBox("Credit Application is already due or might have a payment with loans receivable. You can settle this application through early settlement.", MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("Application Status") = "CLOSED ACCOUNT" Then
                MsgBox("Credit Application is already CLOSED.", MsgBoxStyle.Information, "Info")
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim Hold As New FrmHoldApplication
        With Hold
            .CreditNumber = GridView5.GetFocusedRowCellValue("Credit Number")
            .Status = GridView5.GetFocusedRowCellValue("status")
            .ApplicationStatus = GridView5.GetFocusedRowCellValue("application_status")
            .CI_Status = GridView5.GetFocusedRowCellValue("CI_Status")
            If GridView5.GetFocusedRowCellValue("status") = "HOLD" Then
                .btnHold.Visible = False
                .btnUnhold.Visible = True
                .btnCancelApp.Visible = False
                .btnActivate.Visible = False
                .rNote.Text = GridView5.GetFocusedRowCellValue("HoldReason")
                .lblTitle.Text = "UNHOLD APPLICATION"
            Else
                .btnHold.Visible = True
                .btnUnhold.Visible = False
                .btnCancelApp.Visible = False
                .btnActivate.Visible = False
                .lblTitle.Text = "HOLD APPLICATION"
            End If
            If .ShowDialog = DialogResult.OK Then
                LoadData()
            End If
            .Dispose()
        End With
    End Sub

    Private Sub ICancel_Click(sender As Object, e As EventArgs) Handles iCancel.Click
        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Then
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("status") = "DRAFT" Then
                MsgBox(String.Format("Credit Application is {0}, cancellation of application won't matter.", GridView5.GetFocusedRowCellValue("Application Status")), MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("status") = "DELETED" Or GridView5.GetFocusedRowCellValue("Application Status") = "DISAPPROVED" Or GridView5.GetFocusedRowCellValue("status") = "CANCELLED" Or GridView5.GetFocusedRowCellValue("status") = "HOLD" Then
                MsgBox(String.Format("Credit Application is already {0}, please check your data.", GridView5.GetFocusedRowCellValue("Application Status")), MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("Application Status") = "CV FOR CHECKING" Or GridView5.GetFocusedRowCellValue("Application Status") = "CV FOR APPROVAL" Or GridView5.GetFocusedRowCellValue("Application Status") = "FOR RELEASING" Then
                MsgBox("Please cancel the Check Voucher first.", MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("Application Status") = "BOOKED" Then
                MsgBox("Credit Application is already Booked, please use JV to CANCEL this application.", MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("Application Status") = "CLOSED ACCOUNT" Then
                MsgBox("Credit Application is already CLOSED.", MsgBoxStyle.Information, "Info")
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim Hold As New FrmHoldApplication
        With Hold
            .CreditNumber = GridView5.GetFocusedRowCellValue("Credit Number")
            .CreditNumber_Old = GridView5.GetFocusedRowCellValue("CreditNumber_Old")
            .Status = GridView5.GetFocusedRowCellValue("status")
            .ApplicationStatus = GridView5.GetFocusedRowCellValue("application_status")
            .CI_Status = GridView5.GetFocusedRowCellValue("CI_Status")
            .btnHold.Visible = False
            .btnUnhold.Visible = False
            .btnCancelApp.Visible = True
            .btnActivate.Visible = False
            .BorrowerName = GridView5.GetFocusedRowCellValue("Borrower")
            .lblTitle.Text = "CANCEL APPLICATION"
            If .ShowDialog = DialogResult.OK Then
                LoadData()
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnOpen_Click(sender As Object, e As EventArgs) Handles btnOpen.Click
        Dim BM As DataTable = GetBM(Branch_ID)
        Dim Msg As String = "Are you sure you want to open the computation fields?"
        If Code = Old_Code Then
            Msg = "Would you like to enter the code now?"
        ElseIf Old_Code = "" Then
            Msg = "Are you sure you want to open the computation fields? This will send an Email or SMS to authorized personnel and please wait for their code."
        Else
            Msg = "Are you sure you want to open the computation fields? This will send a NEW Email or SMS to authorized personnel and please wait for their code."
        End If
        If MsgBoxYes(Msg) = MsgBoxResult.Yes Then
            If Code = Old_Code Then
            Else
                Old_Code = Code
                For x As Integer = 0 To BM.Rows.Count - 1
                    'Email*******************************************
                    If BM(x)("EmailAdd") = "" Then
                    Else
                        Cursor = Cursors.WaitCursor

                        Dim Subject As String = "One Time Authorization Code " & Code & " [" & txtCreditNumber.Text & "]"
                        Dim Body As String = String.Format("Good day {0}," & vbCrLf, UpperCaseFirst(BM(x)("Employee")))
                        Body &= String.Format(" One Time Authorization Code is <b>{0}</b> for opening the computation fields of {1} for the credit application {2}.", Code, If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & cbxSuffix_B.Text, CreditNumber)
                        SendEmail(BM(x)("EmailAdd"), Subject, Body, False, False, False, 0, "", "")

                        Cursor = Cursors.Default
                    End If

                    'SMS*******************************************
                    If BM(x)("Phone") = "" Then
                    Else
                        Dim Body As String = String.Format("Good day {0}," & vbCrLf, UpperCaseFirst(BM(x)("Employee")))
                        Body &= String.Format(" One Time Authorization Code is <b>{0}</b> for opening the computation fields of {1} for the credit application {2}.", Code, If(TxtFirstN_B.Text = "", "", TxtFirstN_B.Text & " ") & If(TxtMiddleN_B.Text = "", "", TxtMiddleN_B.Text & " ") & If(TxtLastN_B.Text = "", "", TxtLastN_B.Text & " ") & cbxSuffix_B.Text, CreditNumber)

                        SendSMS(BM(x)("Phone").Substring(3), Body, True)
                    End If
                Next
            End If

            Timer1.Start()
            Dim OTP As New FrmOneTimePassword
            With OTP
                .OTP = Code
                If .ShowDialog = DialogResult.OK Then
                    PanelEx4.Enabled = True
                    PanelEx5.Enabled = True
                    PanelEx15.Enabled = True

                    dInterest_T.Enabled = True
                    dRPPDRate_T.Enabled = True
                    dUDI_C.Enabled = True
                    dRPPD_C.Enabled = True
                    dFA_C.Enabled = True
                    cbxRoundUp.Enabled = True
                    dGMA_C.Enabled = True
                    dGMA_C2.Enabled = True
                    dMR_C.Enabled = True
                    dMR_C2.Enabled = True
                    dNMA_C.Enabled = True
                    dNMA_C2.Enabled = True
                    iAdvancePayment.Enabled = True
                    rNote.Enabled = True

                    btnOpen.Enabled = False
                    Timer1_Tick(sender, e)
                End If
            End With
        End If
    End Sub

    Private Sub Timer1_Tick(sender As Object, e As EventArgs) Handles Timer1.Tick
        'Generate Code **************

        Code = GenerateOTAC()
        Timer1.Stop()
    End Sub

    Private Sub BtnMigrated_Click(sender As Object, e As EventArgs) Handles btnMigrated.Click
        If MsgBox("Are you sure you want to open Migrated Applications?", MsgBoxStyle.YesNo, "Info") = MsgBoxResult.Yes Then
            Dim Migrated As New FrmMigratedApplication
            With Migrated
                .vSave = vSave
                .vPrint = vPrint
                .vUpdate = vUpdate
                .vDelete = vDelete
                .From_Application = True
                If .ShowDialog = DialogResult.OK Then
                    LoadData()
                End If
                .Dispose()
            End With
        End If
    End Sub

    Private Sub DtpBirth_B_Click(sender As Object, e As EventArgs) Handles DtpBirth_B.Click
        DtpBirth_B.CustomFormat = "MMMM dd, yyyy"
    End Sub

    Private Sub TabBorrower_VisibleChanged(sender As Object, e As EventArgs) Handles tabBorrower.VisibleChanged
        If tabBorrower.Visible Or From_Request Then
            dDeductBalance_C.Enabled = False
            dDeductBalance_C.Size = New Point(98, 23)
            btnAddDB.Visible = True
        Else
            dDeductBalance_C.Enabled = True
            dDeductBalance_C.Size = New Point(138, 23)
            btnAddDB.Visible = False
        End If
    End Sub

    Private Sub BtnAddDB_Click(sender As Object, e As EventArgs) Handles btnAddDB.Click
        If (cbxBorrower.Text = "" Or cbxBorrower.SelectedIndex = -1) And cbxBorrower.Enabled Then
            MsgBox("Please select a borrower.", MsgBoxStyle.Information, "Info")
            Exit Sub
        ElseIf dtpDate.CustomFormat = "" Then
            MsgBox("Please fill the Application Date to check for the As Of Date of the Deduct Balance.", MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Dim SQL As String = "SELECT "
        SQL &= "    ID,"
        SQL &= "    AccountNumber AS 'Account Number',"
        SQL &= "    CreditNumber AS 'Credit Number',"
        SQL &= "    FORMAT(LR,2) AS 'Loans Receivable',"
        SQL &= "    FORMAT(UDI_Discount,2) AS 'UDI Discount',"
        SQL &= "    FORMAT(UDI_DiscountP,2) AS 'UDI Percent',"
        SQL &= "    FORMAT(AvailedRPPD,2) AS 'Availed RPPD',"
        SQL &= "    FORMAT(AR,2) AS 'Accounts Receivable',"
        SQL &= "    FORMAT(Penalty,2) AS 'Penalty',"
        SQL &= "    DATE_FORMAT(Asof,'%b-%d-%Y') AS 'As Of',"
        SQL &= "    FORMAT((LR - (UDI_Discount + AvailedRPPD)) + (AR + Penalty),2) AS 'Net Payable',"
        SQL &= "    FORMAT(0,2) AS 'Amount'"
        SQL &= String.Format("  FROM credit_deductbalance WHERE `status` = 'ACTIVE' AND (SELECT PaymentRequest FROM credit_application C WHERE C.`CreditNumber` = credit_deductbalance.`CreditNumber` AND Branch_ID IN ({0})) IN ('RELEASED') AND Deduct_Status = 'PENDING';", If(Multiple_ID = "", Branch_ID, Multiple_ID))
        Dim SQL_II As String = String.Format("SELECT AccountNumber AS 'Account Number' FROM credit_deductbalance WHERE `status` = 'ACTIVE' AND (SELECT PaymentRequest FROM credit_application C WHERE C.`CreditNumber` = credit_deductbalance.`CreditNumber` AND Branch_ID IN ({0})) IN ('RELEASED') AND Deduct_Status = 'PENDING';", If(Multiple_ID = "", Branch_ID, Multiple_ID))
        Dim DB As New FrmDeductBalance
        With DB
            .AccountNum = DataSource(SQL)
            .AccountNum_2 = DataSource(SQL_II)
            .DT_Account = DT_Account.Copy
            .NetProceeds = dNetProceeds_C.Value + dDeductBalance_C.Value
            .ApplicationDate = dtpDate.Value
            If .ShowDialog() = DialogResult.OK Then
                DT_Account = .DT_Account
                Dim TotalDeduct As Double
                For x As Integer = 0 To DT_Account.Rows.Count - 1
                    TotalDeduct += CDbl(DT_Account(x)("Amount"))
                Next
                dDeductBalance_C.MaxValue = TotalDeduct
                dDeductBalance_C.Value = TotalDeduct
            End If
            .Dispose()
        End With
    End Sub

    Private Sub Timer_Date_Tick(sender As Object, e As EventArgs) Handles Timer_Date.Tick
        LoadCompanyMode()
    End Sub

    Private Sub LoadCompanyMode()
        If Prev_CompanyMode = CompanyMode Then
            Exit Sub
        Else
            Prev_CompanyMode = CompanyMode
        End If
        If CompanyMode = 0 Then
            GridColumn22.Caption = "Interest"
            LabelX89.Text = "Interest :"
            lblRPPDRate_C.Visible = False
            dRPPDRate_C.Visible = False
            lblRPPDRate_Percent.Visible = False
            dRPPDRate_T.Visible = False
            lblRPPDRate_T.Visible = False
            btnEarly.Visible = False

            lblRPPD_C.Visible = False
            dRPPD_C.Visible = False

            lblMR_C.Visible = False
            dMR_C.Visible = False
            lblMR_Slash.Visible = False
            dMR_C2.Visible = False

            LabelX97.Visible = False
            dMiscellaneous_C.Visible = False
            dMiscellaneous_C.Value = 0

            GridColumn19.Visible = False
            GridColumn23.Visible = False
            GridColumn36.Visible = False
            If GridView5.RowCount > 15 Then
                GridColumn31.Width = 220 + 70
            Else
                GridColumn31.Width = 220 + 70 + 17
            End If
            GridColumn34.Width = 160 + 30
            GridColumn17.Width = 123 + 41
            GridColumn18.Width = 123 + 41
            GridColumn20.Width = 123 + 41
            GridColumn21.Width = 127 + 42
            GridColumn22.Width = 127 + 42
            GridColumn24.Width = 127 + 43

            dRPPDRate_T.Value = 0
            dRPPDRate_C.Value = 0
            If Interest_RPPD = 0 Then
                Interest_RPPD = Last_RPPD
            End If

            ComputeNMA()
            If SuperTabControl1.SelectedTabIndex = 1 Then
                LoadAmortization(GridControl3, True)
            End If
        Else
            GridColumn22.Caption = "Unearn Income"
            LabelX89.Text = "UDI :"
            lblRPPDRate_C.Visible = True
            dRPPDRate_C.Visible = True
            lblRPPDRate_Percent.Visible = True
            dRPPDRate_T.Visible = True
            lblRPPDRate_T.Visible = True
            btnEarly.Visible = True

            lblRPPD_C.Visible = True
            dRPPD_C.Visible = True

            lblMR_C.Visible = True
            dMR_C.Visible = True
            lblMR_Slash.Visible = True
            dMR_C2.Visible = True

            LabelX97.Visible = True
            dMiscellaneous_C.Visible = True

            GridColumn19.Visible = True
            GridColumn23.Visible = True
            GridColumn15.VisibleIndex = 0
            GridColumn16.VisibleIndex = 1
            GridColumn17.VisibleIndex = 2
            GridColumn18.VisibleIndex = 3
            GridColumn19.VisibleIndex = 4
            GridColumn20.VisibleIndex = 5
            GridColumn21.VisibleIndex = 6
            GridColumn23.VisibleIndex = 7
            GridColumn22.VisibleIndex = 8
            GridColumn24.VisibleIndex = 9

            GridColumn29.VisibleIndex = 0
            GridColumn30.VisibleIndex = 1
            GridColumn31.VisibleIndex = 2
            GridColumn52.VisibleIndex = 3
            GridColumn49.VisibleIndex = 4
            GridColumn53.VisibleIndex = 5
            GridColumn32.VisibleIndex = 6
            GridColumn33.VisibleIndex = 7
            GridColumn34.VisibleIndex = 8
            GridColumn35.VisibleIndex = 9
            GridColumn36.VisibleIndex = 10
            GridColumn37.VisibleIndex = 11
            GridColumn38.VisibleIndex = 12
            GridColumn41.VisibleIndex = 13
            GridColumn51.VisibleIndex = 14
            GridColumn50.VisibleIndex = 15
            GridColumn45.VisibleIndex = 16
            If GridView5.RowCount > 15 Then
                GridColumn31.Width = 220
            Else
                GridColumn31.Width = 220 + 17
            End If
            GridColumn34.Width = 140

            GridColumn17.Width = 123
            GridColumn18.Width = 123
            GridColumn20.Width = 123
            GridColumn21.Width = 127
            GridColumn22.Width = 127
            GridColumn24.Width = 127

            dRPPDRate_T.Value = Interest_RPPD
            dRPPDRate_C.Value = (Interest_RPPD * Identify_Terms(iTerms_C.Value)) / 12

            ComputeNMA()
            If SuperTabControl1.SelectedTabIndex = 1 Then
                LoadAmortization(GridControl3, True)
            End If
        End If
    End Sub

    Private Sub CbxOtherBranch_CheckedChanged(sender As Object, e As EventArgs) Handles cbxOtherBranch.CheckedChanged
        If FirstLoad Then
            Exit Sub
        End If

        LoadBorrower()
    End Sub

    Private Sub CbxCollateral_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbxCollateral.SelectedIndexChanged
        If cbxCollateral.Text = "ATM" Or cbxCollateral.Text = "PASSBOOK" Then
            cbxCollateral.Size = New Point(87, 25)
            btnATM.Visible = True
        Else
            cbxCollateral.Size = New Point(118, 25)
            btnATM.Visible = False
        End If
    End Sub

    Private Sub BtnATM_Click(sender As Object, e As EventArgs) Handles btnATM.Click
        Dim PayDay As New FrmPayDayDetails
        With PayDay
            .BankID = PD_BankID
            .txtAccountNumber.Text = PD_AccountNumber
            .txtCardNumber.Text = PD_CardNumber
            .cbxYes.Checked = PD_ATM
            If cbxCollateral.Text = "PASSBOOK" Then
                .txtCardNumber.Visible = False
                .LabelX2.Visible = False
                .LabelX14.Visible = True
                .cbxYes.Visible = True
            End If
            If .ShowDialog = DialogResult.OK Then
                PD_BankID = .cbxBank.SelectedValue
                PD_AccountNumber = .txtAccountNumber.Text
                PD_CardNumber = .txtCardNumber.Text
                PD_ATM = .cbxYes.Checked
                cbxCollateral.Enabled = False
            End If
            .Dispose()
        End With
    End Sub

    Private Sub CbxCollateral_TextChanged(sender As Object, e As EventArgs) Handles cbxCollateral.TextChanged
        CbxCollateral_SelectedIndexChanged(sender, e)
    End Sub

    Private Sub IBankDetails_Click(sender As Object, e As EventArgs) Handles iBankDetails.Click
        If vUpdate Then
        Else
            MsgBox(mBox_Update, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim PayDay As New FrmPayDayDetails
        With PayDay
            .BankID = GridView5.GetFocusedRowCellValue("PD_BankID")
            .txtAccountNumber.Text = GridView5.GetFocusedRowCellValue("PD_AccountNumber")
            .txtCardNumber.Text = GridView5.GetFocusedRowCellValue("PD_CardNumber")
            .cbxYes.Checked = GridView5.GetFocusedRowCellValue("PD_ATM")
            .CreditNumber = GridView5.GetFocusedRowCellValue("Credit Number")
            .From_List = True
            If GridView5.GetFocusedRowCellValue("Product").Contains("SHOWMONEY") Then
                .txtCardNumber.Visible = False
                .LabelX2.Visible = False
                .LabelX14.Visible = True
                .cbxYes.Visible = True
            End If
            If .ShowDialog = DialogResult.OK Then
                Dim IndexX As Integer = GridView5.FocusedRowHandle
                LoadData()
                GridView5.FocusedRowHandle = IndexX
            End If
            .Dispose()
        End With
    End Sub

    Private Sub RRemarks_Leave(sender As Object, e As EventArgs) Handles rRemarks.Leave
        rRemarks.Text = ReplaceText(rRemarks.Text)
    End Sub

    Private Sub CbxAccountNo_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbxAccountNo.SelectedIndexChanged, cbxOptions.SelectedIndexChanged
        If FirstLoad Then
            Exit Sub
        End If

        If cbxOptions.SelectedIndex = 3 And cbxAccountNo.SelectedIndex > -1 And cbxAccountNo.Text <> "" Then
            Dim drv As DataRowView = DirectCast(cbxAccountNo.SelectedItem, DataRowView)

            dAmountApplied.Value = drv("AmountApplied")
            iTerms.Value = drv("Terms")
            cbxTerms.Text = drv("TermType")
            cbxProduct.SelectedValue = drv("product_id")
            cbxCollateral.Text = drv("collateral")
            dtpDate.CustomFormat = "MMM dd, yyyy"

            dInterest_T.Value = drv("interest_rate")
            dInterest_T.Tag = drv("interest_rate")

            If CompanyMode = 0 Then
                dRPPDRate_T.Value = 0
            Else
                dRPPDRate_T.Value = drv("rppd_rate")
            End If

            iAdvancePayment.Value = drv("AdvancePayment_Count")
            rNote.Text = drv("Note")
            dSC_C.Value = drv("Service_Charge")
            dAppraisalFee_C.Value = drv("Appraisal_Fee")
            dCIFee_C.Value = drv("CI_Fee")
            dInsurance_C.Value = drv("Insurance")
            dMiscellaneous_C.Value = drv("Miscellaneous_Income")
            dAdvancePayment_C.Value = drv("Advance_Payment")
            dDeductBalance_C.Value = drv("Deduct_Balance")

            PanelEx4.Enabled = False
            PanelEx5.Enabled = False
            PanelEx7.Enabled = False
            PanelEx6.Enabled = False
            PanelEx18.Enabled = False
        ElseIf cbxOptions.SelectedIndex = 2 And cbxAccountNo.SelectedIndex > -1 And cbxAccountNo.Text <> "" Then
            If cbxAccountNo.Text.Substring(cbxAccountNo.Text.Length - 2, 2) = "R2" Then
                If MsgBoxYes("Account is already restructured twice, would you like to proceed?") = MsgBoxResult.No Then
                    Exit Sub
                End If
            End If
            PanelEx4.Enabled = True
            PanelEx5.Enabled = True
            PanelEx7.Enabled = True
            PanelEx6.Enabled = True
            PanelEx15.Enabled = True
            PanelEx18.Enabled = True
            Dim drv As DataRowView = DirectCast(cbxAccountNo.SelectedItem, DataRowView)
            dAmountApplied.Value = drv("AmountApplied")
            dAmountApplied.Tag = drv("AmountApplied")
            iTerms.Value = drv("Terms")
            iTerms.Tag = drv("Terms")
            cbxTerms.Text = drv("TermType")
            cbxProduct.SelectedValue = drv("product_id")
            cbxCollateral.Text = drv("collateral")
            txtPurpose.Text = drv("purpose") & " [RESTRUCTURE]"

            dInterest_T.Value = drv("interest_rate")
            dInterest_T.Tag = drv("interest_rate")

            If CompanyMode = 0 Then
                dRPPDRate_T.Value = 0
            Else
                dRPPDRate_T.Value = drv("rppd_rate")
            End If

            iAdvancePayment.Value = drv("AdvancePayment_Count")
            rNote.Text = drv("Note")
            dSC_C.Value = drv("Service_Charge")
            dAppraisalFee_C.Value = drv("Appraisal_Fee")
            dCIFee_C.Value = drv("CI_Fee")
            dInsurance_C.Value = drv("Insurance")
            dMiscellaneous_C.Value = drv("Miscellaneous_Income")
            dAdvancePayment_C.Value = drv("Advance_Payment")
            dDeductBalance_C.Value = drv("Deduct_Balance")
            BorrowerID = drv("BorrowerID")
            CbxPrefix_B.Text = drv("Prefix_B")
            CbxPrefix_B.Text = drv("Prefix_B")
            TxtFirstN_B.Text = drv("FirstN_B")
            TxtMiddleN_B.Text = drv("MiddleN_B")
            TxtLastN_B.Text = drv("LastN_B")
            cbxSuffix_B.Text = drv("Suffix_B")
            CbxPrefix_S.Text = drv("Prefix_S")
            TxtFirstN_S.Text = drv("FirstN_S")
            TxtMiddleN_S.Text = drv("MiddleN_S")
            TxtLastN_S.Text = drv("LastN_S")
            cbxSuffix_S.Text = drv("Suffix_S")

            If TxtFirstN_S.Text = "" Then
                SpouseID = ""
            Else
                Dim Spouse As DataTable = DataSource(String.Format("SELECT * FROM profile_spouse WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE' ORDER BY ID DESC LIMIT 1;", BorrowerID))
                If Spouse.Rows.Count > 0 Then
                    btnSN.Enabled = True
                    SpouseID = Spouse(0)("SpouseID")
                    CbxPrefix_S.Text = Spouse(0)("Prefix_S")
                    TxtFirstN_S.Text = Spouse(0)("FirstN_S")
                    TxtMiddleN_S.Text = Spouse(0)("MiddleN_S")
                    TxtLastN_S.Text = Spouse(0)("LastN_S")
                    cbxSuffix_S.Text = Spouse(0)("Suffix_S")

                    vPrefix_S = Spouse(0)("Prefix_S")
                    vFirstN_S = Spouse(0)("FirstN_S")
                    vMiddleN_S = Spouse(0)("MiddleN_S")
                    vLastN_S = Spouse(0)("LastN_S")
                    vSuffix_S = Spouse(0)("Suffix_S")
                    vNoC_S = Spouse(0)("NoC_S")
                    vStreetC_S = Spouse(0)("StreetC_S")
                    vBarangayC_S = Spouse(0)("BarangayC_S")
                    vAddressC_S = Spouse(0)("AddressC_S")
                    vNoP_S = Spouse(0)("NoP_S")
                    vStreetP_S = Spouse(0)("StreetP_S")
                    vBarangayP_S = Spouse(0)("BarangayP_S")
                    vAddressP_S = Spouse(0)("AddressP_S")
                    vBirth_S = Spouse(0)("Birth_S")
                    vPlaceBirth_S = Spouse(0)("PlaceBirth_S")
                    If Spouse(0)("Gender_S") = "Male" Then
                        vMale_S = True
                    ElseIf Spouse(0)("Gender_S") = "Female" Then
                        vFemale_S = True
                    End If
                    vCitizenship_S = Spouse(0)("Citizenship_S")
                    vTIN_S = Spouse(0)("TIN_S")
                    vTelephone_S = Spouse(0)("Telephone_S")
                    vSSS_S = Spouse(0)("SSS_S")
                    vMobile_S = Spouse(0)("Mobile_S")
                    vEmail_S = Spouse(0)("Email_S")
                    If Spouse(0)("House_S") = "Owned" Then
                        vOwned_S = True
                    ElseIf Spouse(0)("House_S") = "Free" Then
                        vFree_S = True
                    ElseIf Spouse(0)("House_S") = "Rented" Then
                        vRented_S = True
                        vRent_S = Spouse(0)("Rent_S")
                    End If
                    Try
                        Using TempPB As New DevExpress.XtraEditors.PictureEdit
                            TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Borrowers\{3}\{4}", RootFolder, MainFolder, drv("branch_code"), BorrowerID, "Spouse.jpg"))
                            If IO.File.Exists(String.Format("{0}\{1}\{2}\Borrowers\{3}\{4}", RootFolder, MainFolder, drv("branch_code"), BorrowerID, "Spouse.jpg")) Then
                                txtPath_S.Text = "Spouse.jpg"
                            Else
                                txtPath_S.Text = ""
                            End If
                            ResizeImages(TempPB.Image.Clone, pb_Spouse, 850, 700)
                        End Using
                    Catch ex As Exception
                        txtPath_S.Text = ""
                    End Try
                    vEmployer_S = Spouse(0)("Employer_S")
                    vEmpAddress_S = Spouse(0)("EmployerAddress_S")
                    vEmpTelephone_S = Spouse(0)("EmployerTelephone_S")
                    vPosition_S = Spouse(0)("Position_S")
                    If Spouse(0)("EmploymentStat_S") = "Casual" Then
                        vCasual_S = True
                    ElseIf Spouse(0)("EmploymentStat_S") = "Temporary" Then
                        vTemporary_S = True
                    ElseIf Spouse(0)("EmploymentStat_S") = "Permanent" Then
                        vPermanent_S = True
                    End If
                    vHired_S = Spouse(0)("Hired_S")
                    vYearHired_S = Spouse(0)("YearHired_S")
                    vSupervisor_S = Spouse(0)("Supervisor_S")
                    vSalary_S = Spouse(0)("Monthly_S")
                    vBusinessName_S = Spouse(0)("BusinessName_S")
                    vBusinessAddress_S = Spouse(0)("BusinessAddress_S")
                    vBusinessTelephone_S = Spouse(0)("BusinessTelephone_S")
                    vNatureBusiness_S = Spouse(0)("NatureBusiness_S")
                    vYrsOperation_S = Spouse(0)("YrsOperation_S")
                    vBusinessIncome_S = Spouse(0)("BusinessIncome_S")
                    vNoEmployees_S = Spouse(0)("NoEmployees_S")
                    vCapital_S = Spouse(0)("Capital_S")
                    vArea_S = Spouse(0)("Area_S")
                    vExpiry_S = Spouse(0)("Expiry_S")
                    vOutlet_S = Spouse(0)("Outlet_S")
                    vOtherIncome_S = Spouse(0)("OtherIncome_S")
                    vOtherIncomeD_S = Spouse(0)("OtherIncome_S-Amount")
                    Industry_S.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM profile_borrower_industry WHERE `status` = 'ACTIVE' AND BorrowerID = '{0}' AND `Type` = 'Spouse'", Spouse(0)("BorrowerID"))))

                    '*** I D E N T I F I C A T I O N ***
                    Dim BorrowerID_S As DataTable = DataSource(String.Format("SELECT * FROM profile_borrowerid WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE' AND ID_Type = 'S'", BorrowerID))
                    If BorrowerID_S.Rows.Count > 0 Then
                        TIN_S = BorrowerID_S(0)("TIN")
                        SSS_S = BorrowerID_S(0)("SSS")
                        GSIS_S = BorrowerID_S(0)("GSIS")
                        PhilHealth_S = BorrowerID_S(0)("PhilHealth")
                        Senior_S = BorrowerID_S(0)("Senior")
                        UMID_S = BorrowerID_S(0)("UMID")
                        SEC_S = BorrowerID_S(0)("SEC")
                        DTI_S = BorrowerID_S(0)("DTI")
                        CDA_S = BorrowerID_S(0)("CDA")
                        Cooperative_S = BorrowerID_S(0)("Cooperative")
                        Drivers_S = BorrowerID_S(0)("Drivers")
                        dDrivers_S = BorrowerID_S(0)("dDrivers")
                        VIN_S = BorrowerID_S(0)("VIN")
                        dVIN_S = BorrowerID_S(0)("dVIN")
                        Passport_S = BorrowerID_S(0)("Passport")
                        dPassport_S = BorrowerID_S(0)("dPassport")
                        PRC_S = BorrowerID_S(0)("PRC")
                        dPRC_S = BorrowerID_S(0)("dPRC")
                        NBI_S = BorrowerID_S(0)("NBI")
                        dNBI_S = BorrowerID_S(0)("dNBI")
                        Police_S = BorrowerID_S(0)("Police")
                        dPolice_S = BorrowerID_S(0)("dPolice")
                        Postal_S = BorrowerID_S(0)("Postal")
                        dPostal_S = BorrowerID_S(0)("dPostal")
                        Barangay_S = BorrowerID_S(0)("Barangay")
                        dBarangay_S = BorrowerID_S(0)("dBarangay")
                        OWWA_S = BorrowerID_S(0)("OWWA")
                        dOWWA_S = BorrowerID_S(0)("dOWWA")
                        OFW_S = BorrowerID_S(0)("OFW")
                        dOFW_S = BorrowerID_S(0)("dOFW")
                        Seaman_S = BorrowerID_S(0)("Seaman")
                        dSeaman_S = BorrowerID_S(0)("dSeaman")
                        PNP_S = BorrowerID_S(0)("PNP")
                        dPNP_S = BorrowerID_S(0)("dPNP")
                        AFP_S = BorrowerID_S(0)("AFP")
                        dAFP_S = BorrowerID_S(0)("dAFP")
                        HDMF_S = BorrowerID_S(0)("HDMF")
                        dHDMF_S = BorrowerID_S(0)("dHDMF")
                        PWD_S = BorrowerID_S(0)("PWD")
                        dPWD_S = BorrowerID_S(0)("dPWD")
                        DSWD_S = BorrowerID_S(0)("DSWD")
                        dDSWD_S = BorrowerID_S(0)("dDSWD")
                        ACR_S = BorrowerID_S(0)("ACR")
                        dACR_S = BorrowerID_S(0)("dACR")
                        DTI_Business_S = BorrowerID_S(0)("DTI_Business")
                        dDTI_Business_S = BorrowerID_S(0)("dDTI_Business")
                        IBP_S = BorrowerID_S(0)("IBP")
                        dIBP_S = BorrowerID_S(0)("dIBP")
                        FireArms_S = BorrowerID_S(0)("FireArms")
                        dFireArms_S = BorrowerID_S(0)("dFireArms")
                        Government_S = BorrowerID_S(0)("Government")
                        dGovernment_S = BorrowerID_S(0)("dGovernment")
                        Diplomat_S = BorrowerID_S(0)("Diplomat")
                        dDiplomat_S = BorrowerID_S(0)("dDiplomat")
                        National_S = BorrowerID_S(0)("National")
                        dNational_S = BorrowerID_S(0)("dNational")
                        Work_S = BorrowerID_S(0)("Work")
                        dWork_S = BorrowerID_S(0)("dWork")
                        GOCC_S = BorrowerID_S(0)("GOCC")
                        dGOCC_S = BorrowerID_S(0)("dGOCC")
                        PLRA_S = BorrowerID_S(0)("PLRA")
                        dPLRA_S = BorrowerID_S(0)("dPLRA")
                        Major_S = BorrowerID_S(0)("Major")
                        dMajor_S = BorrowerID_S(0)("dMajor")
                        Media_S = BorrowerID_S(0)("Media")
                        dMedia_S = BorrowerID_S(0)("dMedia")
                        Student_S = BorrowerID_S(0)("Student")
                        dStudent_S = BorrowerID_S(0)("dStudent")
                        SIRV_S = BorrowerID_S(0)("SIRV")
                        dSIRV_S = BorrowerID_S(0)("dSIRV")
                    End If
                    '*** I D E N T I F I C A T I O N ***
                End If
            End If

            CbxPrefix_C1.Text = drv("Prefix_C1")
            TxtFirstN_C1.Text = drv("FirstN_C1")
            TxtMiddleN_C1.Text = drv("MiddleN_C1")
            TxtLastN_C1.Text = drv("LastN_C1")
            cbxSuffix_C1.Text = drv("Suffix_C1")
            CbxPrefix_C2.Text = drv("Prefix_C2")
            TxtFirstN_C2.Text = drv("FirstN_C2")
            TxtMiddleN_C2.Text = drv("MiddleN_C2")
            TxtLastN_C2.Text = drv("LastN_C2")
            cbxSuffix_C2.Text = drv("Suffix_C2")
            CbxPrefix_C3.Text = drv("Prefix_C3")
            TxtFirstN_C3.Text = drv("FirstN_C3")
            TxtMiddleN_C3.Text = drv("MiddleN_C3")
            TxtLastN_C3.Text = drv("LastN_C3")
            cbxSuffix_C3.Text = drv("Suffix_C3")
            CbxPrefix_C4.Text = drv("Prefix_C4")
            TxtFirstN_C4.Text = drv("FirstN_C4")
            TxtMiddleN_C4.Text = drv("MiddleN_C4")
            TxtLastN_C4.Text = drv("LastN_C4")
            cbxSuffix_C4.Text = drv("Suffix_C4")

            btnSN.Enabled = True
            btnCM_1.Enabled = True
            btnCM_2.Enabled = True
            btnCM_3.Enabled = True
            btnCM_4.Enabled = True
            If TxtFirstN_C1.Text = "" Then
                CoMakerID = ""
            Else
                Dim CoMaker As DataTable = DataSource(String.Format("SELECT * FROM credit_application_comaker WHERE CreditNumber = '{0}' AND `status` = 'ACTIVE' ORDER BY `Rank`", drv("CreditNumber")))
                If CoMaker.Rows.Count > 0 Then
                    btnCM_1.Enabled = True
                    CoMakerID = CoMaker(0)("CoMakerID")
                    vPrefix_C1 = CoMaker(0)("Prefix_C")
                    vFirstN_C1 = CoMaker(0)("FirstN_C")
                    vMiddleN_C1 = CoMaker(0)("MiddleN_C")
                    vLastN_C1 = CoMaker(0)("LastN_C")
                    vSuffix_C1 = CoMaker(0)("Suffix_C")
                    vNoC_C1 = CoMaker(0)("NoC_C")
                    vStreetC_C1 = CoMaker(0)("StreetC_C")
                    vBarangayC_C1 = CoMaker(0)("BarangayC_C")
                    vAddressC_C1 = CoMaker(0)("AddressC_C")
                    vNoP_C1 = CoMaker(0)("NoP_C")
                    vStreetP_C1 = CoMaker(0)("StreetP_C")
                    vBarangayP_C1 = CoMaker(0)("BarangayP_C")
                    vAddressP_C1 = CoMaker(0)("AddressP_C")
                    vBirth_C1 = CoMaker(0)("Birth_C")
                    vPlaceBirth_C1 = CoMaker(0)("PlaceBirth_C")
                    If CoMaker(0)("Gender_C") = "Male" Then
                        vMale_C1 = True
                    ElseIf CoMaker(0)("Gender_C") = "Female" Then
                        vFemale_C1 = True
                    End If
                    If CoMaker(0)("Civil_C") = "Single" Then
                        vSingle_C1 = True
                    ElseIf CoMaker(0)("Civil_C") = "Married" Then
                        vMarried_C1 = True
                    ElseIf CoMaker(0)("Civil_C") = "Separated" Then
                        vSeparated_C1 = True
                    ElseIf CoMaker(0)("Civil_C") = "Widowed" Then
                        vWidowed_C1 = True
                    End If
                    vCitizenship_C1 = CoMaker(0)("Citizenship_C")
                    vTIN_C1 = CoMaker(0)("TIN_C")
                    vTelephone_C1 = CoMaker(0)("Telephone_C")
                    vSSS_C1 = CoMaker(0)("SSS_C")
                    vMobile_C1 = CoMaker(0)("Mobile_C")
                    vEmail_C1 = CoMaker(0)("Email_C")
                    If CoMaker(0)("House_C") = "Owned" Then
                        vOwned_C1 = True
                    ElseIf CoMaker(0)("House_C") = "Free" Then
                        vFree_C1 = True
                    ElseIf CoMaker(0)("House_C") = "Rented" Then
                        vRented_C1 = True
                        vRent_C1 = CoMaker(0)("Rent_C")
                    End If
                    Try
                        Using TempPB As New DevExpress.XtraEditors.PictureEdit
                            TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, drv("branch_code"), drv("CreditNumber"), "CoMaker1.jpg"))
                            ResizeImages(TempPB.Image.Clone, CoMaker1, 850, 700)
                        End Using
                    Catch ex As Exception
                    End Try
                    TotalImageC1 = CoMaker(0)("Attach")
                    vRelationship_C1 = CoMaker(0)("Relation")
                    vRelationship_C1_ID = CoMaker(0)("Relation_ID")
                    vEmployer_C1 = CoMaker(0)("Employer_C")
                    vEmpAddress_C1 = CoMaker(0)("EmployerAddress_C")
                    vEmpTelephone_C1 = CoMaker(0)("EmployerTelephone_C")
                    vPosition_C1 = CoMaker(0)("Position_C")
                    If CoMaker(0)("EmploymentStat_C") = "Casual" Then
                        vCasual_C1 = True
                    ElseIf CoMaker(0)("EmploymentStat_C") = "Temporary" Then
                        vTemporary_C1 = True
                    ElseIf CoMaker(0)("EmploymentStat_C") = "Permanent" Then
                        vPermanent_C1 = True
                    End If
                    vHired_C1 = CoMaker(0)("Hired_C")
                    vYearHired_C1 = CoMaker(0)("YearHired_C")
                    vSupervisor_C1 = CoMaker(0)("Supervisor_C")
                    vSalary_C1 = CoMaker(0)("Monthly_C")
                    vBusinessName_C1 = CoMaker(0)("BusinessName_C")
                    vBusinessAddress_C1 = CoMaker(0)("BusinessAddress_C")
                    vBusinessTelephone_C1 = CoMaker(0)("BusinessTelephone_C")
                    vNatureBusiness_C1 = CoMaker(0)("NatureBusiness_C")
                    vYrsOperation_C1 = CoMaker(0)("YrsOperation_C")
                    vBusinessIncome_C1 = CoMaker(0)("BusinessIncome_C")
                    vNoEmployees_C1 = CoMaker(0)("NoEmployees_C")
                    vCapital_C1 = CoMaker(0)("Capital_C")
                    vArea_C1 = CoMaker(0)("Area_C")
                    vExpiry_C1 = CoMaker(0)("Expiry_C")
                    vOutlet_C1 = CoMaker(0)("Outlet_C")
                    vOtherIncome_C1 = CoMaker(0)("OtherIncome_C")
                    vOtherIncomeD_C1 = CoMaker(0)("OtherIncome_C-Amount")
                    Industry_C1.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker1'", drv("CreditNumber"))))

                    If CoMaker.Rows.Count > 1 Then 'COMAKER 2
                        btnCM_2.Enabled = True
                        vPrefix_C2 = CoMaker(1)("Prefix_C")
                        vFirstN_C2 = CoMaker(1)("FirstN_C")
                        vMiddleN_C2 = CoMaker(1)("MiddleN_C")
                        vLastN_C2 = CoMaker(1)("LastN_C")
                        vSuffix_C2 = CoMaker(1)("Suffix_C")
                        vNoC_C2 = CoMaker(1)("NoC_C")
                        vStreetC_C2 = CoMaker(1)("StreetC_C")
                        vBarangayC_C2 = CoMaker(1)("BarangayC_C")
                        vAddressC_C2 = CoMaker(1)("AddressC_C")
                        vNoP_C2 = CoMaker(1)("NoP_C")
                        vStreetP_C2 = CoMaker(1)("StreetP_C")
                        vBarangayP_C2 = CoMaker(1)("BarangayP_C")
                        vAddressP_C2 = CoMaker(1)("AddressP_C")
                        vBirth_C2 = CoMaker(1)("Birth_C")
                        vPlaceBirth_C2 = CoMaker(1)("PlaceBirth_C")
                        If CoMaker(1)("Gender_C") = "Male" Then
                            vMale_C2 = True
                        ElseIf CoMaker(1)("Gender_C") = "Female" Then
                            vFemale_C2 = True
                        End If
                        If CoMaker(1)("Civil_C") = "Single" Then
                            vSingle_C2 = True
                        ElseIf CoMaker(1)("Civil_C") = "Married" Then
                            vMarried_C2 = True
                        ElseIf CoMaker(1)("Civil_C") = "Separated" Then
                            vSeparated_C2 = True
                        ElseIf CoMaker(1)("Civil_C") = "Widowed" Then
                            vWidowed_C2 = True
                        End If
                        vCitizenship_C2 = CoMaker(1)("Citizenship_C")
                        vTIN_C2 = CoMaker(1)("TIN_C")
                        vTelephone_C2 = CoMaker(1)("Telephone_C")
                        vSSS_C2 = CoMaker(1)("SSS_C")
                        vMobile_C2 = CoMaker(1)("Mobile_C")
                        vEmail_C2 = CoMaker(1)("Email_C")
                        If CoMaker(1)("House_C") = "Owned" Then
                            vOwned_C2 = True
                        ElseIf CoMaker(1)("House_C") = "Free" Then
                            vFree_C2 = True
                        ElseIf CoMaker(1)("House_C") = "Rented" Then
                            vRented_C2 = True
                            vRent_C2 = CoMaker(1)("Rent_C")
                        End If
                        Try
                            Using TempPB As New DevExpress.XtraEditors.PictureEdit
                                TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, drv("branch_code"), drv("CreditNumber"), "CoMaker2.jpg"))
                                ResizeImages(TempPB.Image.Clone, CoMaker2, 850, 700)
                            End Using
                        Catch ex As Exception
                        End Try
                        TotalImageC2 = CoMaker(1)("Attach")
                        vRelationship_C2 = CoMaker(1)("Relation")
                        vRelationship_C2_ID = CoMaker(1)("Relation_ID")
                        vEmployer_C2 = CoMaker(1)("Employer_C")
                        vEmpAddress_C2 = CoMaker(1)("EmployerAddress_C")
                        vEmpTelephone_C2 = CoMaker(1)("EmployerTelephone_C")
                        vPosition_C2 = CoMaker(1)("Position_C")
                        If CoMaker(1)("EmploymentStat_C") = "Casual" Then
                            vCasual_C2 = True
                        ElseIf CoMaker(1)("EmploymentStat_C") = "Temporary" Then
                            vTemporary_C2 = True
                        ElseIf CoMaker(1)("EmploymentStat_C") = "Permanent" Then
                            vPermanent_C2 = True
                        End If
                        vHired_C2 = CoMaker(1)("Hired_C")
                        vYearHired_C2 = CoMaker(1)("YearHired_C")
                        vSupervisor_C2 = CoMaker(1)("Supervisor_C")
                        vSalary_C2 = CoMaker(1)("Monthly_C")
                        vBusinessName_C2 = CoMaker(1)("BusinessName_C")
                        vBusinessAddress_C2 = CoMaker(1)("BusinessAddress_C")
                        vBusinessTelephone_C2 = CoMaker(1)("BusinessTelephone_C")
                        vNatureBusiness_C2 = CoMaker(1)("NatureBusiness_C")
                        vYrsOperation_C2 = CoMaker(1)("YrsOperation_C")
                        vBusinessIncome_C2 = CoMaker(1)("BusinessIncome_C")
                        vNoEmployees_C2 = CoMaker(1)("NoEmployees_C")
                        vCapital_C2 = CoMaker(1)("Capital_C")
                        vArea_C2 = CoMaker(1)("Area_C")
                        vExpiry_C2 = CoMaker(1)("Expiry_C")
                        vOutlet_C2 = CoMaker(1)("Outlet_C")
                        vOtherIncome_C2 = CoMaker(1)("OtherIncome_C")
                        vOtherIncomeD_C2 = CoMaker(1)("OtherIncome_C-Amount")
                        Industry_C2.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker2'", drv("CreditNumber"))))

                        If CoMaker.Rows.Count > 2 Then 'COMAKER 3
                            btnCM_3.Enabled = True
                            vPrefix_C3 = CoMaker(2)("Prefix_C")
                            vFirstN_C3 = CoMaker(2)("FirstN_C")
                            vMiddleN_C3 = CoMaker(2)("MiddleN_C")
                            vLastN_C3 = CoMaker(2)("LastN_C")
                            vSuffix_C3 = CoMaker(2)("Suffix_C")
                            vNoC_C3 = CoMaker(2)("NoC_C")
                            vStreetC_C3 = CoMaker(2)("StreetC_C")
                            vBarangayC_C3 = CoMaker(2)("BarangayC_C")
                            vAddressC_C3 = CoMaker(2)("AddressC_C")
                            vNoP_C3 = CoMaker(2)("NoP_C")
                            vStreetP_C3 = CoMaker(2)("StreetP_C")
                            vBarangayP_C3 = CoMaker(2)("BarangayP_C")
                            vAddressP_C3 = CoMaker(2)("AddressP_C")
                            vBirth_C3 = CoMaker(2)("Birth_C")
                            vPlaceBirth_C3 = CoMaker(2)("PlaceBirth_C")
                            If CoMaker(2)("Gender_C") = "Male" Then
                                vMale_C3 = True
                            ElseIf CoMaker(2)("Gender_C") = "Female" Then
                                vFemale_C3 = True
                            End If
                            If CoMaker(2)("Civil_C") = "Single" Then
                                vSingle_C3 = True
                            ElseIf CoMaker(2)("Civil_C") = "Married" Then
                                vMarried_C3 = True
                            ElseIf CoMaker(2)("Civil_C") = "Separated" Then
                                vSeparated_C3 = True
                            ElseIf CoMaker(2)("Civil_C") = "Widowed" Then
                                vWidowed_C3 = True
                            End If
                            vCitizenship_C3 = CoMaker(2)("Citizenship_C")
                            vTIN_C3 = CoMaker(2)("TIN_C")
                            vTelephone_C3 = CoMaker(2)("Telephone_C")
                            vSSS_C3 = CoMaker(2)("SSS_C")
                            vMobile_C3 = CoMaker(2)("Mobile_C")
                            vEmail_C3 = CoMaker(2)("Email_C")
                            If CoMaker(2)("House_C") = "Owned" Then
                                vOwned_C3 = True
                            ElseIf CoMaker(2)("House_C") = "Free" Then
                                vFree_C3 = True
                            ElseIf CoMaker(2)("House_C") = "Rented" Then
                                vRented_C3 = True
                                vRent_C3 = CoMaker(2)("Rent_C")
                            End If
                            Try
                                Using TempPB As New DevExpress.XtraEditors.PictureEdit
                                    TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, drv("branch_code"), drv("CreditNumber"), "CoMaker3.jpg"))
                                    ResizeImages(TempPB.Image.Clone, CoMaker3, 850, 700)
                                End Using
                            Catch ex As Exception
                            End Try
                            TotalImageC3 = CoMaker(2)("Attach")
                            vRelationship_C3 = CoMaker(2)("Relation")
                            vRelationship_C3_ID = CoMaker(2)("Relation_ID")
                            vEmployer_C3 = CoMaker(2)("Employer_C")
                            vEmpAddress_C3 = CoMaker(2)("EmployerAddress_C")
                            vEmpTelephone_C3 = CoMaker(2)("EmployerTelephone_C")
                            vPosition_C3 = CoMaker(2)("Position_C")
                            If CoMaker(2)("EmploymentStat_C") = "Casual" Then
                                vCasual_C3 = True
                            ElseIf CoMaker(2)("EmploymentStat_C") = "Temporary" Then
                                vTemporary_C3 = True
                            ElseIf CoMaker(2)("EmploymentStat_C") = "Permanent" Then
                                vPermanent_C3 = True
                            End If
                            vHired_C3 = CoMaker(2)("Hired_C")
                            vYearHired_C3 = CoMaker(2)("YearHired_C")
                            vSupervisor_C3 = CoMaker(2)("Supervisor_C")
                            vSalary_C3 = CoMaker(2)("Monthly_C")
                            vBusinessName_C3 = CoMaker(2)("BusinessName_C")
                            vBusinessAddress_C3 = CoMaker(2)("BusinessAddress_C")
                            vBusinessTelephone_C3 = CoMaker(2)("BusinessTelephone_C")
                            vNatureBusiness_C3 = CoMaker(2)("NatureBusiness_C")
                            vYrsOperation_C3 = CoMaker(2)("YrsOperation_C")
                            vBusinessIncome_C3 = CoMaker(2)("BusinessIncome_C")
                            vNoEmployees_C3 = CoMaker(2)("NoEmployees_C")
                            vCapital_C3 = CoMaker(2)("Capital_C")
                            vArea_C3 = CoMaker(2)("Area_C")
                            vExpiry_C3 = CoMaker(2)("Expiry_C")
                            vOutlet_C3 = CoMaker(2)("Outlet_C")
                            vOtherIncome_C3 = CoMaker(2)("OtherIncome_C")
                            vOtherIncomeD_C3 = CoMaker(2)("OtherIncome_C-Amount")
                            Industry_C3.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker3'", drv("CreditNumber"))))

                            If CoMaker.Rows.Count > 3 Then 'COMAKER 4
                                btnCM_4.Enabled = True
                                vPrefix_C4 = CoMaker(3)("Prefix_C")
                                vFirstN_C4 = CoMaker(3)("FirstN_C")
                                vMiddleN_C4 = CoMaker(3)("MiddleN_C")
                                vLastN_C4 = CoMaker(3)("LastN_C")
                                vSuffix_C4 = CoMaker(3)("Suffix_C")
                                vNoC_C4 = CoMaker(3)("NoC_C")
                                vStreetC_C4 = CoMaker(3)("StreetC_C")
                                vBarangayC_C4 = CoMaker(3)("BarangayC_C")
                                vAddressC_C4 = CoMaker(3)("AddressC_C")
                                vNoP_C4 = CoMaker(3)("NoP_C")
                                vStreetP_C4 = CoMaker(3)("StreetP_C")
                                vBarangayP_C4 = CoMaker(3)("BarangayP_C")
                                vAddressP_C4 = CoMaker(3)("AddressP_C")
                                vBirth_C4 = CoMaker(3)("Birth_C")
                                vPlaceBirth_C4 = CoMaker(3)("PlaceBirth_C")
                                If CoMaker(3)("Gender_C") = "Male" Then
                                    vMale_C4 = True
                                ElseIf CoMaker(3)("Gender_C") = "Female" Then
                                    vFemale_C4 = True
                                End If
                                If CoMaker(3)("Civil_C") = "Single" Then
                                    vSingle_C4 = True
                                ElseIf CoMaker(3)("Civil_C") = "Married" Then
                                    vMarried_C4 = True
                                ElseIf CoMaker(3)("Civil_C") = "Separated" Then
                                    vSeparated_C4 = True
                                ElseIf CoMaker(3)("Civil_C") = "Widowed" Then
                                    vWidowed_C4 = True
                                End If
                                vCitizenship_C4 = CoMaker(3)("Citizenship_C")
                                vTIN_C4 = CoMaker(3)("TIN_C")
                                vTelephone_C4 = CoMaker(3)("Telephone_C")
                                vSSS_C4 = CoMaker(3)("SSS_C")
                                vMobile_C4 = CoMaker(3)("Mobile_C")
                                vEmail_C4 = CoMaker(3)("Email_C")
                                If CoMaker(3)("House_C") = "Owned" Then
                                    vOwned_C4 = True
                                ElseIf CoMaker(3)("House_C") = "Free" Then
                                    vFree_C4 = True
                                ElseIf CoMaker(3)("House_C") = "Rented" Then
                                    vRented_C4 = True
                                    vRent_C4 = CoMaker(3)("Rent_C")
                                End If
                                Try
                                    Using TempPB As New DevExpress.XtraEditors.PictureEdit
                                        TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, drv("branch_code"), drv("CreditNumber"), "CoMaker4.jpg"))
                                        ResizeImages(TempPB.Image.Clone, CoMaker4, 850, 700)
                                    End Using
                                Catch ex As Exception
                                End Try
                                TotalImageC4 = CoMaker(3)("Attach")
                                vRelationship_C4 = CoMaker(3)("Relation")
                                vRelationship_C4_ID = CoMaker(3)("Relation_ID")
                                vEmployer_C4 = CoMaker(3)("Employer_C")
                                vEmpAddress_C4 = CoMaker(3)("EmployerAddress_C")
                                vEmpTelephone_C4 = CoMaker(3)("EmployerTelephone_C")
                                vPosition_C4 = CoMaker(3)("Position_C")
                                If CoMaker(3)("EmploymentStat_C") = "Casual" Then
                                    vCasual_C4 = True
                                ElseIf CoMaker(3)("EmploymentStat_C") = "Temporary" Then
                                    vTemporary_C4 = True
                                ElseIf CoMaker(3)("EmploymentStat_C") = "Permanent" Then
                                    vPermanent_C4 = True
                                End If
                                vHired_C4 = CoMaker(3)("Hired_C")
                                vYearHired_C4 = CoMaker(3)("YearHired_C")
                                vSupervisor_C4 = CoMaker(3)("Supervisor_C")
                                vSalary_C4 = CoMaker(3)("Monthly_C")
                                vBusinessName_C4 = CoMaker(3)("BusinessName_C")
                                vBusinessAddress_C4 = CoMaker(3)("BusinessAddress_C")
                                vBusinessTelephone_C4 = CoMaker(3)("BusinessTelephone_C")
                                vNatureBusiness_C4 = CoMaker(3)("NatureBusiness_C")
                                vYrsOperation_C4 = CoMaker(3)("YrsOperation_C")
                                vBusinessIncome_C4 = CoMaker(3)("BusinessIncome_C")
                                vNoEmployees_C4 = CoMaker(3)("NoEmployees_C")
                                vCapital_C4 = CoMaker(3)("Capital_C")
                                vArea_C4 = CoMaker(3)("Area_C")
                                vExpiry_C4 = CoMaker(3)("Expiry_C")
                                vOutlet_C4 = CoMaker(3)("Outlet_C")
                                vOtherIncome_C4 = CoMaker(3)("OtherIncome_C")
                                vOtherIncomeD_C4 = CoMaker(3)("OtherIncome_C-Amount")
                                Industry_C4.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'CoMaker4'", drv("CreditNumber"))))
                            End If
                        End If
                    End If
                End If
            End If

            '*** I D E N T I F I C A T I O N ***
            Dim BorrowerID_B As DataTable = DataSource(String.Format("SELECT * FROM profile_borrowerid WHERE BorrowerID = '{0}' AND `status` = 'ACTIVE' AND ID_Type = 'B'", BorrowerID))
            If BorrowerID_B.Rows.Count > 0 Then
                GSIS = BorrowerID_B(0)("GSIS")
                PhilHealth = BorrowerID_B(0)("PhilHealth")
                Senior = BorrowerID_B(0)("Senior")
                UMID = BorrowerID_B(0)("UMID")
                SEC = BorrowerID_B(0)("SEC")
                DTI = BorrowerID_B(0)("DTI")
                CDA = BorrowerID_B(0)("CDA")
                Cooperative = BorrowerID_B(0)("Cooperative")
                Drivers = BorrowerID_B(0)("Drivers")
                dDrivers = BorrowerID_B(0)("dDrivers")
                VIN = BorrowerID_B(0)("VIN")
                dVIN = BorrowerID_B(0)("dVIN")
                Passport = BorrowerID_B(0)("Passport")
                dPassport = BorrowerID_B(0)("dPassport")
                PRC = BorrowerID_B(0)("PRC")
                dPRC = BorrowerID_B(0)("dPRC")
                NBI = BorrowerID_B(0)("NBI")
                dNBI = BorrowerID_B(0)("dNBI")
                Police = BorrowerID_B(0)("Police")
                dPolice = BorrowerID_B(0)("dPolice")
                Postal = BorrowerID_B(0)("Postal")
                dPostal = BorrowerID_B(0)("dPostal")
                Barangay = BorrowerID_B(0)("Barangay")
                dBarangay = BorrowerID_B(0)("dBarangay")
                OWWA = BorrowerID_B(0)("OWWA")
                dOWWA = BorrowerID_B(0)("dOWWA")
                OFW = BorrowerID_B(0)("OFW")
                dOFW = BorrowerID_B(0)("dOFW")
                Seaman = BorrowerID_B(0)("Seaman")
                dSeaman = BorrowerID_B(0)("dSeaman")
                PNP = BorrowerID_B(0)("PNP")
                dPNP = BorrowerID_B(0)("dPNP")
                AFP = BorrowerID_B(0)("AFP")
                dAFP = BorrowerID_B(0)("dAFP")
                HDMF = BorrowerID_B(0)("HDMF")
                dHDMF = BorrowerID_B(0)("dHDMF")
                PWD = BorrowerID_B(0)("PWD")
                dPWD = BorrowerID_B(0)("dPWD")
                DSWD = BorrowerID_B(0)("DSWD")
                dDSWD = BorrowerID_B(0)("dDSWD")
                ACR = BorrowerID_B(0)("ACR")
                dACR = BorrowerID_B(0)("dACR")
                DTI_Business = BorrowerID_B(0)("DTI_Business")
                dDTI_Business = BorrowerID_B(0)("dDTI_Business")
                IBP = BorrowerID_B(0)("IBP")
                dIBP = BorrowerID_B(0)("dIBP")
                FireArms = BorrowerID_B(0)("FireArms")
                dFireArms = BorrowerID_B(0)("dFireArms")
                Government = BorrowerID_B(0)("Government")
                dGovernment = BorrowerID_B(0)("dGovernment")
                Diplomat = BorrowerID_B(0)("Diplomat")
                dDiplomat = BorrowerID_B(0)("dDiplomat")
                National = BorrowerID_B(0)("National")
                dNational = BorrowerID_B(0)("dNational")
                Work = BorrowerID_B(0)("Work")
                dWork = BorrowerID_B(0)("dWork")
                GOCC = BorrowerID_B(0)("GOCC")
                dGOCC = BorrowerID_B(0)("dGOCC")
                PLRA = BorrowerID_B(0)("PLRA")
                dPLRA = BorrowerID_B(0)("dPLRA")
                Major = BorrowerID_B(0)("Major")
                dMajor = BorrowerID_B(0)("dMajor")
                Media = BorrowerID_B(0)("Media")
                dMedia = BorrowerID_B(0)("dMedia")
                Student = BorrowerID_B(0)("Student")
                dStudent = BorrowerID_B(0)("dStudent")
                SIRV = BorrowerID_B(0)("SIRV")
                dSIRV = BorrowerID_B(0)("dSIRV")
            End If

            txtNoC_B.Text = drv("NoC_B")
            txtStreetC_B.Text = drv("StreetC_B")
            txtBarangayC_B.Text = drv("BarangayC_B")
            cbxAddressC_B.Text = drv("AddressC_B")
            txtNoP_B.Text = drv("NoP_B")
            txtStreetP_B.Text = drv("StreetP_B")
            txtBarangayP_B.Text = drv("BarangayP_B")
            cbxAddressP_B.Text = drv("AddressP_B")

            If drv("Birth_B") = "" Then
                DtpBirth_B.CustomFormat = ""
            Else
                DtpBirth_B.CustomFormat = "MMMM dd, yyyy"
                DtpBirth_B.Value = drv("Birth_B")
            End If
            cbxPlaceBirth_B.Text = drv("PlaceBirth_B")

            If drv("Gender_B") = "Male" Then
                cbxMale_B.Checked = True
            ElseIf drv("Gender_B") = "Female" Then
                cbxFemale_B.Checked = True
            End If

            If drv("Civil_B") = "Single" Then
                cbxSingle_B.Checked = True
            ElseIf drv("Civil_B") = "Married" Then
                cbxMarried_B.Checked = True
            ElseIf drv("Civil_B") = "Separated" Then
                cbxSeparated_B.Checked = True
            ElseIf drv("Civil_B") = "Widowed" Then
                cbxWidowed_B.Checked = True
            End If

            cbxCitizenship_B.Text = drv("Citizenship_B")
            txtTIN_B.Text = drv("TIN_B")
            txtTelephone_B.Text = drv("Telephone_B")
            txtSSS_B.Text = drv("SSS_B")
            txtMobile_B.Text = drv("Mobile_B")
            txtMobile_B2.Text = drv("Mobile_B2")
            txtEmail_B.Text = drv("Email_B")

            If drv("House_B") = "Owned" Then
                cbxOwned_B.Checked = True
                dRent_B.Value = 0
            ElseIf drv("House_B") = "Free" Then
                cbxFree_B.Checked = True
                dRent_B.Value = 0
            ElseIf drv("House_B") = "Rented" Then
                cbxRented_B.Checked = True
                dRent_B.Value = drv("Rent_B")
            End If
            Try
                Using TempPB As New DevExpress.XtraEditors.PictureEdit
                    TempPB.Image = Image.FromFile(String.Format("{0}\{1}\{2}\Application\{3}\{4}", RootFolder, MainFolder, drv("branch_code"), drv("CreditNumber"), "Borrower.jpg"))
                    ResizeImages(TempPB.Image.Clone, pb_B, 850, 700)
                End Using
            Catch ex As Exception
                pb_B.Image = DefaultImage.Image.Clone
            End Try
            '**DEPENDENT
            CbxPrefix_1.Text = drv("Prefix_D1")
            TxtFirstN_1.Text = drv("FirstN_D1")
            TxtMiddleN_1.Text = drv("MiddleN_D1")
            TxtLastN_1.Text = drv("LastN_D1")
            cbxSuffix_1.Text = drv("Suffix_D1")
            iAge_D1.Value = drv("Age_D1")
            txtGrade_1.Text = drv("Grade_D1")
            txtSchool_1.Text = drv("School_D1")
            txtSchoolAddress_1.Text = drv("SchoolAddress_D1")
            CbxPrefix_2.Text = drv("Prefix_D2")
            TxtFirstN_2.Text = drv("FirstN_D2")
            TxtMiddleN_2.Text = drv("MiddleN_D2")
            TxtLastN_2.Text = drv("LastN_D2")
            cbxSuffix_2.Text = drv("Suffix_D2")
            iAge_D2.Value = drv("Age_D2")
            txtGrade_2.Text = drv("Grade_D2")
            txtSchool_2.Text = drv("School_D2")
            txtSchoolAddress_2.Text = drv("SchoolAddress_D2")
            CbxPrefix_3.Text = drv("Prefix_D3")
            TxtFirstN_3.Text = drv("FirstN_D3")
            TxtMiddleN_3.Text = drv("MiddleN_D3")
            TxtLastN_3.Text = drv("LastN_D3")
            cbxSuffix_3.Text = drv("Suffix_D3")
            iAge_D3.Value = drv("Age_D3")
            txtGrade_3.Text = drv("Grade_D3")
            txtSchool_3.Text = drv("School_D3")
            txtSchoolAddress_3.Text = drv("SchoolAddress_D3")
            CbxPrefix_4.Text = drv("Prefix_D4")
            TxtFirstN_4.Text = drv("FirstN_D4")
            TxtMiddleN_4.Text = drv("MiddleN_D4")
            TxtLastN_4.Text = drv("LastN_D4")
            cbxSuffix_4.Text = drv("Suffix_D4")
            iAge_D4.Value = drv("Age_D4")
            txtGrade_4.Text = drv("Grade_D4")
            txtSchool_4.Text = drv("School_D4")
            txtSchoolAddress_4.Text = drv("SchoolAddress_D4")
            '**DEPENDENT
            rRemarks.Text = drv("Remarks")
            cbxEmployer_B.Text = drv("Employer_B")
            txtEmployerAddress_B.Text = drv("EmployerAddress_B")
            txtEmployerTelephone_B.Text = drv("EmployerTelephone_B")
            cbxPosition_B.Text = drv("Position_B")
            If drv("EmploymentStat_B") = "Casual" Then
                cbxCasual_B.Checked = True
            ElseIf drv("EmploymentStat_B") = "Temporary" Then
                cbxTemporary_B.Checked = True
            ElseIf drv("EmploymentStat_B") = "Permanent" Then
                cbxPermanent_B.Checked = True
            End If

            If drv("Hired_B") = "" Then
                dtpHired_B.CustomFormat = ""
            Else
                dtpHired_B.CustomFormat = "MMM. dd, yyyy"
                dtpHired_B.Value = drv("Hired_B")
            End If

            txtSupervisor_B.Text = drv("Supervisor_B")
            dMonthly_B.Value = drv("Monthly_B")
            txtBusinessName_B.Text = drv("BusinessName_B")
            txtBusinessAddress_B.Text = drv("BusinessAddress_B")
            txtBusinessTelephone_B.Text = drv("BusinessTelephone_B")
            cbxNatureBusiness_B.Text = drv("NatureBusiness_B")

            cbxNatureBusiness_B2.SetEditValue(DataObject(String.Format("SELECT GROUP_CONCAT(Industry_ID SEPARATOR ';') FROM credit_application_industry WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}' AND `Type` = 'Borrower'", drv("CreditNumber"))))

            iYrsOperation_B.Value = drv("YrsOperation_B")
            dBusinessIncome_B.Value = drv("BusinessIncome_B")
            iNoEmployees_B.Value = drv("NoEmployees_B")
            dCapital_B.Value = drv("Capital_B")
            txtArea_B.Text = drv("Area_B")

            If drv("Expiry_B") = "" Then
                dtpExpiry_B.CustomFormat = ""
            Else
                dtpExpiry_B.CustomFormat = "MMM. dd, yyyy"
                dtpExpiry_B.Value = drv("Expiry_B")
            End If

            iOutlet_B.Value = drv("Outlet_B")
            txtOtherIncome_B.Text = drv("OtherIncome_B")
            dOtherIncome_B.Value = drv("OtherIncome_B-Amount")
            txtCreditor_1.Text = drv("Creditor_1")
            txtNatureLoan_1.Text = drv("NatureLoan_1")
            dAmountGranted_1.Value = drv("AmountGranted_1")
            dTerm_1.Value = drv("Term_1")
            dBalance_1.Value = drv("Balance_1")
            txtCreditRemarks_1.Text = drv("CreditRemarks_1")
            txtCreditor_2.Text = drv("Creditor_2")
            txtNatureLoan_2.Text = drv("NatureLoan_2")
            dAmountGranted_2.Value = drv("AmountGranted_2")
            dTerm_2.Value = drv("Term_2")
            dBalance_2.Value = drv("Balance_2")
            txtCreditRemarks_2.Text = drv("CreditRemarks_2")
            txtCreditor_3.Text = drv("Creditor_3")
            txtNatureLoan_3.Text = drv("NatureLoan_3")
            dAmountGranted_3.Value = drv("AmountGranted_3")
            dTerm_3.Value = drv("Term_3")
            dBalance_3.Value = drv("Balance_3")
            txtCreditRemarks_3.Text = drv("CreditRemarks_3")
            txtBank_1.Text = drv("Bank_1")
            txtBranch_1.Text = drv("Branch_1")

            If drv("AccountT_1") = "SA" Then
                cbxSA_1.Checked = True
            ElseIf drv("AccountT_1") = "CA" Then
                cbxCA_1.Checked = True
            End If
            txtSA_1.Text = drv("SA_1")
            dAverageBalance_1.Value = drv("AverageBalance_1")
            dPresentBalance_1.Value = drv("PresentBalance_1")
            txtOpened_1.Text = drv("Opened_1")
            txtBankRemarks_1.Text = drv("BankRemarks_1")
            txtBank_2.Text = drv("Bank_2")
            txtBranch_2.Text = drv("Branch_2")

            If drv("AccountT_2") = "SA" Then
                cbxSA_2.Checked = True
            ElseIf drv("AccountT_2") = "CA" Then
                cbxCA_2.Checked = True
            End If
            txtSA_2.Text = drv("SA_2")
            dAverageBalance_2.Value = drv("AverageBalance_2")
            dPresentBalance_2.Value = drv("PresentBalance_2")
            txtOpened_2.Text = drv("Opened_2")
            txtBankRemarks_2.Text = drv("BankRemarks_2")
            txtBank_3.Text = drv("Bank_3")
            txtBranch_3.Text = drv("Branch_3")

            If drv("AccountT_3") = "SA" Then
                cbxSA_3.Checked = True
            ElseIf drv("AccountT_3") = "CA" Then
                cbxCA_3.Checked = True
            End If
            txtSA_3.Text = drv("SA_3")

            dAverageBalance_3.Value = drv("AverageBalance_3")
            dPresentBalance_3.Value = drv("PresentBalance_3")
            txtOpened_3.Text = drv("Opened_3")
            txtBankRemarks_3.Text = drv("BankRemarks_3")
            txtLocation_1.Text = drv("Location_1")
            txtTCT_1.Text = drv("TCT_1")
            dArea_1.Value = drv("Area_1")
            txtAcquired_1.Text = drv("Acquired_1")
            txtPropertiesRemarks_1.Text = drv("PropertiesRemarks_1")
            txtLocation_2.Text = drv("Location_2")
            txtTCT_2.Text = drv("TCT_2")
            dArea_2.Value = drv("Area_2")
            txtAcquired_2.Text = drv("Acquired_2")
            txtPropertiesRemarks_2.Text = drv("PropertiesRemarks_2")
            txtLocation_3.Text = drv("Location_3")
            txtTCT_3.Text = drv("TCT_3")
            dArea_3.Value = drv("Area_3")
            txtAcquired_3.Text = drv("Acquired_3")
            txtPropertiesRemarks_3.Text = drv("PropertiesRemarks_3")
            txtVehicle_1.Text = drv("Vehicle_1")
            dtpYear_1.Text = drv("Year_1")
            txtWhomAcquired_1.Text = drv("WhomAcquired_1")
            txtWhenAcquired_1.Text = drv("WhenAcquired_1")
            txtVehicleRemarks_1.Text = drv("VehicleRemarks_1")
            txtVehicle_2.Text = drv("Vehicle_2")
            dtpYear_2.Text = drv("Year_2")
            txtWhomAcquired_2.Text = drv("WhomAcquired_2")
            txtWhenAcquired_2.Text = drv("WhenAcquired_2")
            txtVehicleRemarks_2.Text = drv("VehicleRemarks_2")
            txtVehicle_3.Text = drv("Vehicle_3")
            dtpYear_3.Text = drv("Year_3")
            txtWhomAcquired_3.Text = drv("WhomAcquired_3")
            txtWhenAcquired_3.Text = drv("WhenAcquired_3")
            txtVehicleRemarks_3.Text = drv("VehicleRemarks_3")
            txtHomeAppliances_1.Text = drv("HomeAppliances_1")
            txtHomeAppliances_2.Text = drv("HomeAppliances_2")
            txtReference_1.Text = drv("Reference_1")
            txtReferenceAddress_1.Text = drv("ReferenceAddress_1")
            txtReferenceContact_1.Text = drv("ReferenceContact_1")
            txtReference_2.Text = drv("Reference_2")
            txtReferenceAddress_2.Text = drv("ReferenceAddress_2")
            txtReferenceContact_2.Text = drv("ReferenceContact_2")
            txtReference_3.Text = drv("Reference_3")
            txtReferenceAddress_3.Text = drv("ReferenceAddress_3")
            txtReferenceContact_3.Text = drv("ReferenceContact_3")
            txtCertificateNo.Text = drv("CertificateNo")
            txtPlaceIssue.Text = drv("PlaceIssue")

            If drv("Issue") = "" Then
                dtpIssue.CustomFormat = ""
            Else
                dtpIssue.CustomFormat = "MMM. dd, yyyy"
                dtpIssue.Value = drv("Issue")
            End If

            cbxAgentName.Text = drv("Agent")
            txtAgentContact.Text = drv("AgentNo")
            cbxMarketing.Checked = If(drv("Marketing") = "", False, True)
            cbxMarketingName.Text = drv("Marketing")
            txtMarketingContact.Text = drv("MarketingNo")
            cbxWalkIn.Checked = If(drv("WalkIn") = "", False, True)
            cbxWalkInType.Text = drv("WalkIn")
            txtWalkInOthers.Text = drv("WalkIn_Specify")
            cbxDealer.Checked = If(drv("Dealer") = "", False, True)
            cbxDealerName.Text = drv("Dealer")
            txtDealersContact.Text = drv("DealerNo")
            cbxBusinessCenter.Text = drv("BusinessCenter")

            If cbxOptions.SelectedIndex = 2 Then
                Dim CurrentTerms As Integer
                Dim Early As New FrmEarlySettlement
                With Early
                    .From_Payment = True
                    .AsOf = dtpDate.Value
                    .Show()
                    .GridControl3.DataSource = DataSource(String.Format("SELECT *, DueDate AS 'Due Date', LoansReceivable AS 'Loans Receivable' FROM credit_schedule WHERE CreditNumber = '{0}' AND `status` = 'ACTIVE';", cbxAccountNo.SelectedValue))
                    For x As Integer = 1 To .GridView3.RowCount - 1
                        If .GridView3.GetRowCellValue(x, "Due Date") = "" Or .GridView3.GetRowCellValue(x, "Due Date") = "TOTAL" Then
                        Else
                            If dtpDate.Value >= CDate(.GridView3.GetRowCellValue(x, "Due Date")) Then
                                .GridView3.FocusedRowHandle = x
                            ElseIf x = .GridView3.RowCount - 2 And dtpDate.Value < CDate(.GridView3.GetRowCellValue(1, "Due Date")) Then
                                .GridView3.FocusedRowHandle = 1
                            End If
                        End If
                    Next
                    .btnEarly.Enabled = True
                    .LR = CDbl(drv("Balance"))
                    .Updated = CDbl(drv("Balance")) <= CDbl(.GridView3.GetFocusedRowCellValue("Loans Receivable"))
                    .Terms = drv("Terms")
                    .UDI = drv("Interest")
                    CurrentTerms = .GridView3.FocusedRowHandle
                    If DateDiff(DateInterval.Day, dtpDate.Value, CDate(.GridView3.GetFocusedRowCellValue("Due Date"))) >= 15 Then
                    Else
                        CurrentTerms += 1
                    End If
                    If DateDiff(DateInterval.Day, dtpDate.Value, CDate(.GridView3.GetRowCellValue(.GridView3.FocusedRowHandle + 1, "Due Date"))) >= 15 Then
                    Else
                        CurrentTerms += 1
                    End If
                    Dim Temp_Terms As Integer = 0
                    For y As Integer = 1 To .GridView3.RowCount - 2
                        If .LR <= CDbl(.GridView3.GetRowCellValue(y, "Loans Receivable")) Then
                            Temp_Terms += 1
                        End If
                    Next
                    For y As Integer = 1 To .GridView3.RowCount - 2
                        If .LR <= CDbl(.GridView3.GetRowCellValue(y, "Loans Receivable")) And CurrentTerms <= Temp_Terms Then
                            CurrentTerms += 1
                        End If
                    Next
                    .iTerm.Value = CurrentTerms
                    If .dLR.Value = 0 Then
                        .dLR.Value = CDbl(drv("Balance"))
                    End If
                    .iTerm.MaxValue = drv("Terms") - 1
                    .iTerm.MinValue = CurrentTerms
                    dAmountApplied.Value = .dTP.Value
                    dAmountApplied.Tag = .dTP.Value
                    RestructureDeductionUDI = .dUDI.Value
                    RestructureDeductionRPPD = .dRPPD.Value
                    .Close()
                    .Dispose()
                End With

                If cbxProduct.Text.Contains("SHOWMONEY") Then
                    LabelX99.Text = "Total Payables :"
                Else
                    LabelX99.Text = "Total Charges :"
                End If
                LabelX97.Text = "Restructuring Fee :"
                LabelX107.Text = "Deficient Amount :"

                dMiscellaneous_C.Value = 1500
                dSC_C.Value = dAmountApplied.Value * 0.02
                dAppraisalFee_C.Value = 0
                dAdvancePayment_C.Value = dNMA_C.Value
            Else
                If cbxProduct.Text.Contains("SHOWMONEY") Then
                    LabelX99.Text = "Total Payables :"
                Else
                    LabelX99.Text = "Total Deductions :"
                End If
                LabelX97.Text = "Inspection Fee :"
                LabelX107.Text = "Appraisal Fee :"

                dMiscellaneous_C.Value = 0
                dSC_C.Value = 0
                dAppraisalFee_C.Value = 0
                dAdvancePayment_C.Value = 0
            End If

            TotalImage = drv("Attach")
            TotalImageS = drv("Attach_S")
            Draft_Status = drv("status").ToUpper
            Status = drv("application_status").ToUpper
            TotalImage_Approval = drv("Attach_Approval")
            TotalImage_Crecomm = drv("Attach_Crecomm")

            PD_CardNumber = drv("PD_CardNumber")
            PD_AccountNumber = drv("PD_AccountNumber")
            PD_BankID = drv("PD_BankID")
            PD_ATM = drv("PD_ATM")
        Else
            txtPurpose.Text = txtPurpose.Text.Replace("[RESTRUCTURE]", "")
        End If
    End Sub

    Private Sub CbxCorporate_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCorporate.CheckedChanged
        If FirstLoad = False Then
            LoadBorrower()
        End If

        If cbxCorporate.Checked Then
            LabelX43.Text = "Trade Name :"
            LabelX21.Text = "Representative 1 :"
            LabelX77.Text = "Representative 2 :"
            LabelX78.Text = "Representative 3 :"
            LabelX109.Text = "Representative 4 :"
            LabelX93.Text = "Representative 5 :"
            cbxSpouse_B.Visible = False
            cbxCoMaker1_B.Visible = False
            cbxCoMaker2_B.Visible = False
            cbxCoMaker3_B.Visible = False
            cbxCoMaker4_B.Visible = False

            btnSN.Visible = False
            btnCM_1.Visible = False
            btnCM_2.Visible = False
            btnCM_3.Visible = False
            btnCM_4.Visible = False

            TxtFirstN_B.Location = New Point(146, 35)
            TxtFirstN_B.Size = New Point(740, 23)
            CbxPrefix_B.Visible = False
            TxtMiddleN_B.Visible = False
            TxtLastN_B.Visible = False
            cbxSuffix_B.Visible = False
            LabelX10.Text = "Incorporation Date :"

            LabelX142.Visible = False
            LabelX19.Visible = False
            LabelX18.Visible = False
            LabelX7.Visible = False
            CbxPrefix_1.Visible = False
            TxtFirstN_1.Visible = False
            TxtMiddleN_1.Visible = False
            TxtLastN_1.Visible = False
            cbxSuffix_1.Visible = False
            iAge_D1.Visible = False
            txtGrade_1.Visible = False
            txtSchool_1.Visible = False
            txtSchoolAddress_1.Visible = False

            CbxPrefix_2.Visible = False
            TxtFirstN_2.Visible = False
            TxtMiddleN_2.Visible = False
            TxtLastN_2.Visible = False
            cbxSuffix_2.Visible = False
            iAge_D2.Visible = False
            txtGrade_2.Visible = False
            txtSchool_2.Visible = False
            txtSchoolAddress_2.Visible = False

            CbxPrefix_3.Visible = False
            TxtFirstN_3.Visible = False
            TxtMiddleN_3.Visible = False
            TxtLastN_3.Visible = False
            cbxSuffix_3.Visible = False
            iAge_D3.Visible = False
            txtGrade_3.Visible = False
            txtSchool_3.Visible = False
            txtSchoolAddress_3.Visible = False

            CbxPrefix_4.Visible = False
            TxtFirstN_4.Visible = False
            TxtMiddleN_4.Visible = False
            TxtLastN_4.Visible = False
            cbxSuffix_4.Visible = False
            iAge_D4.Visible = False
            txtGrade_4.Visible = False
            txtSchool_4.Visible = False
            txtSchoolAddress_4.Visible = False

            LabelX112.Location = New Point(3, 442)
            rRemarks.Location = New Point(146, 442)
            LabelX113.Location = New Point(146, 505)
            LabelX113.Visible = False
        Else
            LabelX43.Text = "<span align='right'><font color='red'>*</font>Borrower's Name :</span>"
            LabelX21.Text = "Spouse Name :"
            LabelX77.Text = "Co-Maker I :"
            LabelX78.Text = "Co-Maker II :"
            LabelX109.Text = "Co-Maker III :"
            LabelX93.Text = "Co-Maker IV :"
            cbxSpouse_B.Visible = True
            cbxCoMaker1_B.Visible = True
            cbxCoMaker2_B.Visible = True
            cbxCoMaker3_B.Visible = True
            cbxCoMaker4_B.Visible = True

            btnSN.Visible = True
            btnCM_1.Visible = True
            btnCM_2.Visible = True
            btnCM_3.Visible = True
            btnCM_4.Visible = True

            TxtFirstN_B.Location = New Point(224, 35)
            TxtFirstN_B.Size = New Point(200, 23)
            CbxPrefix_B.Visible = True
            TxtMiddleN_B.Visible = True
            TxtLastN_B.Visible = True
            cbxSuffix_B.Visible = True
            LabelX10.Text = "<span align='right'><font color='red'>*</font>Date of Birth :</span>"

            LabelX142.Visible = True
            LabelX19.Visible = True
            LabelX18.Visible = True
            LabelX7.Visible = True
            CbxPrefix_1.Visible = True
            TxtFirstN_1.Visible = True
            TxtMiddleN_1.Visible = True
            TxtLastN_1.Visible = True
            cbxSuffix_1.Visible = True
            iAge_D1.Visible = True
            txtGrade_1.Visible = True
            txtSchool_1.Visible = True
            txtSchoolAddress_1.Visible = True

            CbxPrefix_2.Visible = True
            TxtFirstN_2.Visible = True
            TxtMiddleN_2.Visible = True
            TxtLastN_2.Visible = True
            cbxSuffix_2.Visible = True
            iAge_D2.Visible = True
            txtGrade_2.Visible = True
            txtSchool_2.Visible = True
            txtSchoolAddress_2.Visible = True

            CbxPrefix_3.Visible = True
            TxtFirstN_3.Visible = True
            TxtMiddleN_3.Visible = True
            TxtLastN_3.Visible = True
            cbxSuffix_3.Visible = True
            iAge_D3.Visible = True
            txtGrade_3.Visible = True
            txtSchool_3.Visible = True
            txtSchoolAddress_3.Visible = True

            CbxPrefix_4.Visible = True
            TxtFirstN_4.Visible = True
            TxtMiddleN_4.Visible = True
            TxtLastN_4.Visible = True
            cbxSuffix_4.Visible = True
            iAge_D4.Visible = True
            txtGrade_4.Visible = True
            txtSchool_4.Visible = True
            txtSchoolAddress_4.Visible = True

            LabelX112.Location = New Point(3, 593)
            rRemarks.Location = New Point(146, 593)
            LabelX113.Location = New Point(146, 656)
            LabelX113.Visible = True
        End If
    End Sub

    Private Sub IAddProcessing_Click(sender As Object, e As EventArgs) Handles iAddProcessing.Click
        Dim Processing As New FrmProcessing
        If IsNothing(GridControl4.DataSource) Then
            GridControl4.DataSource = DataSource("SELECT 0 AS 'ID', '' AS 'Processing Fee', 0.0 AS 'Amount', 'No' AS 'Tariff', 0.0 AS 'Amount 2' LIMIT 0")
        End If
        Dim DT_Processing As DataTable = GridControl4.DataSource
        With Processing
            If .ShowDialog = DialogResult.OK Then
                DT_Processing.Rows.Add(0, .txtProcessingFee.Text, .dAmount.Text, "NO", .dAmount.Value)
                MsgBox("Successfully Added!", MsgBoxStyle.Information, "Info")
            End If
            .Dispose()
        End With

        Dim TotalPF As Double
        For x As Integer = 0 To GridView4.RowCount - 1
            TotalPF += If(IsNumeric(GridView4.GetRowCellValue(x, "Amount")), GridView4.GetRowCellValue(x, "Amount"), 0)
        Next
        dTPF_C.Value = TotalPF

        If GridView4.RowCount > 11 Then
            GridColumn26.Width = 400
        Else
            GridColumn26.Width = 400 + 17
        End If
    End Sub

    Private Sub IRemoveProcessing_Click(sender As Object, e As EventArgs) Handles iRemoveProcessing.Click
        If GridView4.RowCount = 0 Then
            Exit Sub
        End If

        Dim DT_Processing As DataTable = GridControl4.DataSource
Here:
        Dim selectedRowHandles As Integer() = GridView4.GetSelectedRows()
        If selectedRowHandles.Length > 1 Then
            Dim I As Integer
            'Dim Docs As String
            For I = 0 To selectedRowHandles.Length - 1
                Dim selectedRowHandle As Integer = selectedRowHandles(I)
                If (selectedRowHandle >= 0) Then
                    DT_Processing.Rows.RemoveAt(selectedRowHandle)
                    GoTo Here
                End If
            Next
        Else
            DT_Processing.Rows.RemoveAt(GridView4.FocusedRowHandle)
        End If

        Dim TotalPF As Double
        For x As Integer = 0 To GridView4.RowCount - 1
            TotalPF += If(IsNumeric(GridView4.GetRowCellValue(x, "Amount")), GridView4.GetRowCellValue(x, "Amount"), 0)
        Next
        dTPF_C.Value = TotalPF

        If GridView4.RowCount > 11 Then
            GridColumn26.Width = 400
        Else
            GridColumn26.Width = 400 + 17
        End If
    End Sub

    Private Sub ISpouseCoMakerAsBorrower_Click(sender As Object, e As EventArgs) Handles iSpouseCoMakerAsBorrower.Click
        If vUpdate Then
        Else
            MsgBox(mBox_Update, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim AsBorrower As New FrmSpouseAndCoMakerAsBorrower
        With AsBorrower
            .CreditNumber = GridView5.GetFocusedRowCellValue("Credit Number")
            .CbxPrefix_S.Text = GridView5.GetFocusedRowCellValue("Prefix_S")
            .TxtFirstN_S.Text = GridView5.GetFocusedRowCellValue("FirstN_S")
            .TxtMiddleN_S.Text = GridView5.GetFocusedRowCellValue("MiddleN_S")
            .TxtLastN_S.Text = GridView5.GetFocusedRowCellValue("LastN_S")
            .cbxSuffix_S.Text = GridView5.GetFocusedRowCellValue("Suffix_S")
            If GridView5.GetFocusedRowCellValue("Borrower_S") = 1 Then
                .cbxSpouse_B.Checked = True
                .cbxSpouse_B.Tag = True
            Else
                .cbxSpouse_B.Checked = False
                .cbxSpouse_B.Tag = False
            End If
            If .TxtFirstN_S.Text = "" Then
                .cbxSpouse_B.Enabled = False
            End If

            .CbxPrefix_C1.Text = GridView5.GetFocusedRowCellValue("Prefix_C1")
            .TxtFirstN_C1.Text = GridView5.GetFocusedRowCellValue("FirstN_C1")
            .TxtMiddleN_C1.Text = GridView5.GetFocusedRowCellValue("MiddleN_C1")
            .TxtLastN_C1.Text = GridView5.GetFocusedRowCellValue("LastN_C1")
            .cbxSuffix_C1.Text = GridView5.GetFocusedRowCellValue("Suffix_C1")
            If GridView5.GetFocusedRowCellValue("Borrower_C1") = 1 Then
                .cbxCoMaker1_B.Checked = True
                .cbxCoMaker1_B.Tag = True
            Else
                .cbxCoMaker1_B.Checked = False
                .cbxCoMaker1_B.Tag = False
            End If
            If .TxtFirstN_C1.Text = "" Then
                .cbxCoMaker1_B.Enabled = False
            End If

            .CbxPrefix_C2.Text = GridView5.GetFocusedRowCellValue("Prefix_C2")
            .TxtFirstN_C2.Text = GridView5.GetFocusedRowCellValue("FirstN_C2")
            .TxtMiddleN_C2.Text = GridView5.GetFocusedRowCellValue("MiddleN_C2")
            .TxtLastN_C2.Text = GridView5.GetFocusedRowCellValue("LastN_C2")
            .cbxSuffix_C2.Text = GridView5.GetFocusedRowCellValue("Suffix_C2")
            .cbxCoMaker2_B.Checked = GridView5.GetFocusedRowCellValue("Borrower_C2")
            If GridView5.GetFocusedRowCellValue("Borrower_C2") = 1 Then
                .cbxCoMaker2_B.Checked = True
                .cbxCoMaker2_B.Tag = True
            Else
                .cbxCoMaker2_B.Checked = False
                .cbxCoMaker2_B.Tag = False
            End If
            If .TxtFirstN_C2.Text = "" Then
                .cbxCoMaker2_B.Enabled = False
            End If

            .CbxPrefix_C3.Text = GridView5.GetFocusedRowCellValue("Prefix_C3")
            .TxtFirstN_C3.Text = GridView5.GetFocusedRowCellValue("FirstN_C3")
            .TxtMiddleN_C3.Text = GridView5.GetFocusedRowCellValue("MiddleN_C3")
            .TxtLastN_C3.Text = GridView5.GetFocusedRowCellValue("LastN_C3")
            .cbxSuffix_C3.Text = GridView5.GetFocusedRowCellValue("Suffix_C3")
            If GridView5.GetFocusedRowCellValue("Borrower_C3") = 1 Then
                .cbxCoMaker3_B.Checked = True
                .cbxCoMaker3_B.Tag = True
            Else
                .cbxCoMaker3_B.Checked = False
                .cbxCoMaker3_B.Tag = False
            End If
            If .TxtFirstN_C3.Text = "" Then
                .cbxCoMaker3_B.Enabled = False
            End If

            .CbxPrefix_C4.Text = GridView5.GetFocusedRowCellValue("Prefix_C4")
            .TxtFirstN_C4.Text = GridView5.GetFocusedRowCellValue("FirstN_C4")
            .TxtMiddleN_C4.Text = GridView5.GetFocusedRowCellValue("MiddleN_C4")
            .TxtLastN_C4.Text = GridView5.GetFocusedRowCellValue("LastN_C4")
            .cbxSuffix_C4.Text = GridView5.GetFocusedRowCellValue("Suffix_C4")
            If GridView5.GetFocusedRowCellValue("Borrower_C4") = 1 Then
                .cbxCoMaker4_B.Checked = True
                .cbxCoMaker4_B.Tag = True
            Else
                .cbxCoMaker4_B.Checked = False
                .cbxCoMaker4_B.Tag = False
            End If
            If .TxtFirstN_C4.Text = "" Then
                .cbxCoMaker4_B.Enabled = False
            End If
            If .ShowDialog = DialogResult.OK Then
                LoadData()
            End If
            .Dispose()
        End With
    End Sub

    Private Sub IBusinessCenter_Click(sender As Object, e As EventArgs) Handles iBusinessCenter.Click
        If vUpdate Then
        Else
            MsgBox(mBox_Update, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Then
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("Application Status") = "BOOKED" Or GridView5.GetFocusedRowCellValue("Application Status") = "CLOSED ACCOUNT" Or GridView5.GetFocusedRowCellValue("Application Status") = "CV FOR APPROVAL" Or GridView5.GetFocusedRowCellValue("Application Status") = "FOR RELEASING" Or GridView5.GetFocusedRowCellValue("Application Status") = "CV FOR CHECKING" Then
                MsgBox("Credit Application is already " & GridView5.GetFocusedRowCellValue("Application Status"), MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("ApprovedAmount_President") > 0 Then
                MsgBox("Special Approval is already made, re-approval is not applicable.", MsgBoxStyle.Information, "Info")
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim BusinessC As New FrmCreditBusinessCenter
        With BusinessC
            .CreditNumber = GridView5.GetFocusedRowCellValue("Credit Number")
            .vBusinessCenter = GridView5.GetFocusedRowCellValue("BusinessID")
            If .ShowDialog = DialogResult.OK Then
                LoadData()
            End If
            .Dispose()
        End With
    End Sub

    Private Sub IReferral_Click(sender As Object, e As EventArgs) Handles iReferral.Click
        If vUpdate Then
        Else
            MsgBox(mBox_Update, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Or GridView5.RowCount = 0 Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim Referral As New FrmCreditReferral
        With Referral
            .CreditNumber = GridView5.GetFocusedRowCellValue("Credit Number")
            .cbxAgent.Checked = If(GridView5.GetFocusedRowCellValue("Agent") = "", False, True)
            .cbxAgentV2.Checked = If(GridView5.GetFocusedRowCellValue("Agent_2") = "", False, True)
            .cbxMarketing.Checked = If(GridView5.GetFocusedRowCellValue("Marketing") = "", False, True)
            .cbxWalkIn.Checked = If(GridView5.GetFocusedRowCellValue("WalkIn") = "", False, True)
            .cbxDealer.Checked = If(GridView5.GetFocusedRowCellValue("Dealer") = "", False, True)
            .vAgent = GridView5.GetFocusedRowCellValue("AgentID")
            .vAgentV2 = GridView5.GetFocusedRowCellValue("AgentID_2")
            .vMarketing = GridView5.GetFocusedRowCellValue("MarketingID")
            .vWalkIn = GridView5.GetFocusedRowCellValue("WalkinID")
            .vDealer = GridView5.GetFocusedRowCellValue("DealerID")

            If GridView5.GetFocusedRowCellValue("status") = "DELETED" Or GridView5.GetFocusedRowCellValue("status") = "CANCELLED" Or GridView5.GetFocusedRowCellValue("Application Status") = "BOOKED" Or GridView5.GetFocusedRowCellValue("Application Status") = "CLOSED ACCOUNT" Then
                .btnSave.Enabled = False
                .cbxAgent.Enabled = False
                .cbxAgentV2.Enabled = False
                .cbxMarketing.Enabled = False
                .cbxWalkIn.Enabled = False
                .cbxDealer.Enabled = False
                .cbxAgentName.Enabled = False
                .cbxAgentNameV2.Enabled = False
                .cbxMarketingName.Enabled = False
                .cbxWalkInType.Enabled = False
                .cbxDealerName.Enabled = False
                .txtAgentContact.Enabled = False
                .txtAgentContactV2.Enabled = False
                .txtMarketingContact.Enabled = False
                .txtWalkInOthers.Enabled = False
                .txtDealersContact.Enabled = False
            End If
            If .ShowDialog = DialogResult.OK Then
                LoadData()
            End If
            .Dispose()
        End With
    End Sub

    Private Sub CbxSpouse_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxSpouse_B.CheckedChanged
        If cbxSpouse_B.Checked Then
            If TxtFirstN_S.Text = "" Then
                MsgBox("Please fill spouse information first.", MsgBoxStyle.Information, "Info")
                cbxSpouse_B.Checked = False
            End If
        End If
    End Sub

    Private Sub CbxCoMaker1_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCoMaker1_B.CheckedChanged
        If cbxCoMaker1_B.Checked Then
            If TxtFirstN_C1.Text = "" Then
                MsgBox("Please fill comaker information first.", MsgBoxStyle.Information, "Info")
                cbxCoMaker1_B.Checked = False
            End If
        End If
    End Sub

    Private Sub CbxCoMaker2_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCoMaker2_B.CheckedChanged
        If cbxCoMaker2_B.Checked Then
            If TxtFirstN_C2.Text = "" Then
                MsgBox("Please fill comaker information first.", MsgBoxStyle.Information, "Info")
                cbxCoMaker2_B.Checked = False
            End If
        End If
    End Sub

    Private Sub CbxCoMaker3_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCoMaker3_B.CheckedChanged
        If cbxCoMaker3_B.Checked Then
            If TxtFirstN_C3.Text = "" Then
                MsgBox("Please fill comaker information first.", MsgBoxStyle.Information, "Info")
                cbxCoMaker3_B.Checked = False
            End If
        End If
    End Sub

    Private Sub CbxCoMaker4_B_CheckedChanged(sender As Object, e As EventArgs) Handles cbxCoMaker4_B.CheckedChanged
        If cbxCoMaker4_B.Checked Then
            If TxtFirstN_C4.Text = "" Then
                MsgBox("Please fill comaker information first.", MsgBoxStyle.Information, "Info")
                cbxCoMaker4_B.Checked = False
            End If
        End If
    End Sub

    Private Sub DSC_Rate_ValueChanged(sender As Object, e As EventArgs) Handles dSC_Rate.ValueChanged
        If UpdateAmount Then
            Exit Sub
        End If
        UpdatePercent = True
        dSC_C.Value = dAmountApplied.Value * (dSC_Rate.Value / 100)
        UpdatePercent = False
    End Sub

    Private Sub IReapprove_Click(sender As Object, e As EventArgs) Handles iReapprove.Click
        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Then
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("ApproveStatus") = "For ReApprove" Then
                MsgBox("Credit Application is already For ReApprove.", MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("CI_Status") = "PENDING" Then
                MsgBox("Credit Application is not yet APPROVED/DISAPPROVED", MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("Application Status") = "BOOKED" Or GridView5.GetFocusedRowCellValue("Application Status") = "CLOSED ACCOUNT" Or GridView5.GetFocusedRowCellValue("Application Status") = "CV FOR APPROVAL" Or GridView5.GetFocusedRowCellValue("Application Status") = "FOR RELEASING" Or GridView5.GetFocusedRowCellValue("Application Status") = "FOR CRECOMM APPROVAL" Or GridView5.GetFocusedRowCellValue("Application Status") = "CV FOR CHECKING" Then
                MsgBox("Credit Application is already " & GridView5.GetFocusedRowCellValue("Application Status"), MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("ApprovedAmount_President") > 0 Then
                MsgBox("Special Approval is already made, re-approval is not applicable.", MsgBoxStyle.Information, "Info")
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        If MsgBoxYes("Are you sure you want to set this application for reapproval?") = MsgBoxResult.Yes Then
            Dim Reason As String 'Reason for change
            If FrmReason.ShowDialog = DialogResult.OK Then
                Reason = FrmReason.txtReason.Text
            Else
                Exit Sub
            End If

            Dim SQL As String = String.Format("UPDATE credit_application SET ApproveStatus = 'For ReApprove' WHERE CreditNumber = '{0}';", GridView5.GetFocusedRowCellValue("Credit Number"))
            DataObject(SQL)
            Logs("Credit Application", "For Reapproval", Reason, "", "", "", "")
            LoadData()
            MsgBox("Successfully Updated!", MsgBoxStyle.Information, "Info")
        End If
    End Sub

    Private Sub ISpecialApproval_Click(sender As Object, e As EventArgs) Handles iSpecialApproval.Click
        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Then
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("ApproveStatus") = "For Special" Then
                MsgBox("Credit Application is already For Special Approval.", MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("CI_Status") = "PENDING" Then
                MsgBox("Credit Application is not yet APPROVED/DISAPPROVED", MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("Application Status") = "BOOKED" Or GridView5.GetFocusedRowCellValue("Application Status") = "CLOSED ACCOUNT" Or GridView5.GetFocusedRowCellValue("Application Status") = "CV FOR APPROVAL" Or GridView5.GetFocusedRowCellValue("Application Status") = "FOR RELEASING" Or GridView5.GetFocusedRowCellValue("Application Status") = "FOR CRECOMM APPROVAL" Or GridView5.GetFocusedRowCellValue("Application Status") = "CV FOR CHECKING" Then
                MsgBox("Credit Application is already " & GridView5.GetFocusedRowCellValue("Application Status"), MsgBoxStyle.Information, "Info")
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        If MsgBoxYes("Are you sure you want to set this application for special approval?") = MsgBoxResult.Yes Then
            Dim Reason As String 'Reason for change
            If FrmReason.ShowDialog = DialogResult.OK Then
                Reason = FrmReason.txtReason.Text
            Else
                Exit Sub
            End If

            Dim SQL As String = String.Format("UPDATE credit_application SET ApproveStatus = 'For Special' WHERE CreditNumber = '{0}';", GridView5.GetFocusedRowCellValue("Credit Number"))
            DataObject(SQL)
            Logs("Credit Application", "For Special Approval", Reason, "", "", "", "")
            LoadData()
            MsgBox("Successfully Updated!", MsgBoxStyle.Information, "Info")
        End If
    End Sub

    Private Sub CbxBill_CheckedChanged(sender As Object, e As EventArgs) Handles cbxBill.CheckedChanged
        If cbxBill.Checked Then
            cbxAdvancePayment.Visible = True
        Else
            cbxAdvancePayment.Visible = False
        End If
        If cbxProduct.Text.Contains("SHOWMONEY") Or cbxBill.Checked Then
            dNetProceeds_C.Value = dPA_C.Value - If(cbxAdvancePayment.Checked, 0, dAdvancePayment_C.Value)
        Else
            dNetProceeds_C.Value = dPA_C.Value - dTD_C.Value
        End If
        If cbxOptions.SelectedIndex = 2 Then
            dNetProceeds_C.Value = dPA_C.Value - If(cbxAdvancePayment.Checked, 0, dAdvancePayment_C.Value)
        End If
    End Sub

    Private Sub CbxAdvancePayment_CheckedChanged(sender As Object, e As EventArgs) Handles cbxAdvancePayment.CheckedChanged
        cbxBill_CheckedChanged(sender, e)
    End Sub

    Private Sub RNote_Leave(sender As Object, e As EventArgs) Handles rNote.Leave
        rNote.Text = ReplaceText(rNote.Text)
    End Sub

    Private Sub CbxYearHired_CheckedChanged(sender As Object, e As EventArgs) Handles cbxYearHired.CheckedChanged
        If cbxYearHired.Checked Then
            dtpHired_B.CustomFormat = "yyyy"
        Else
            dtpHired_B.CustomFormat = "MMMM dd, yyyy"
        End If
    End Sub

    Private Sub CbxYearFranchise_CheckedChanged(sender As Object, e As EventArgs) Handles cbxYearFranchise.CheckedChanged
        If FirstLoad Then
            Exit Sub
        End If

        If cbxYearFranchise.Checked Then
            dtpExpiry_B.CustomFormat = "yyyy"
        Else
            dtpExpiry_B.CustomFormat = "MMMM dd, yyyy"
        End If
    End Sub

    Private Sub BtnDefault_Click(sender As Object, e As EventArgs) Handles btnDefault.Click
        txtPath_B.Text = " "
        ResizeImages(DefaultImage.Image.Clone, pb_B, 650, 500)
    End Sub

    Private Sub BtnManual_Click(sender As Object, e As EventArgs) Handles btnManual.Click
        If MsgBoxYes("Are you sure you want to edit the amortization manually?") = MsgBoxResult.Yes Then
            GridColumn16.OptionsColumn.AllowEdit = True
            GridColumn17.OptionsColumn.AllowEdit = True
            GridColumn18.OptionsColumn.AllowEdit = True
            GridColumn19.OptionsColumn.AllowEdit = True
            GridColumn20.OptionsColumn.AllowEdit = True
            GridColumn21.OptionsColumn.AllowEdit = True
            GridColumn22.OptionsColumn.AllowEdit = True
            GridColumn23.OptionsColumn.AllowEdit = True
            GridColumn24.OptionsColumn.AllowEdit = True
            btnManual.Enabled = False
            btnVerify.Enabled = True

            cbxAuto.Visible = True
            btnSave.Enabled = False
            btnSave_F.Enabled = False
            MsgBox("Columns are now editable, Please fill the correct amortization schedule.", MsgBoxStyle.Information, "Info")
        End If
    End Sub

    Private Sub GridView3_CustomColumnDisplayText(sender As Object, e As DevExpress.XtraGrid.Views.Base.CustomColumnDisplayTextEventArgs) Handles GridView3.CustomColumnDisplayText
        If ((e.Column.FieldName = "Monthly") Or (e.Column.FieldName = "Interest Income") Or (e.Column.FieldName = "RPPD") Or (e.Column.FieldName = "Principal Allocation") Or (e.Column.FieldName = "Outstanding Principal") Or (e.Column.FieldName = "Unearn Income") Or (e.Column.FieldName = "Total_RPPD") Or (e.Column.FieldName = "Loans Receivable")) AndAlso e.ListSourceRowIndex <> DevExpress.XtraGrid.GridControl.InvalidRowHandle Then
            Try
                If IsNumeric(e.Value) = False Then
                Else
                    e.DisplayText = NegativeParenthesisV2(Convert.ToDecimal(e.Value))
                End If
            Catch ex As Exception
            End Try
        End If
    End Sub

    Private Sub GridView3_CellValueChanged(sender As Object, e As DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs) Handles GridView3.CellValueChanged
        If Flag Or e.RowHandle = 0 Or cbxAuto.Checked = False Then
            Exit Sub
        End If
        'Dim Plus1 As Integer
        Dim TotalInterest As Double
        Dim TotalRPPD As Double
        Dim TotalPrincipal As Double
        Dim TotalPenalty As Double
        Dim TotalMonthly As Double
        For x As Integer = e.RowHandle To GridView3.RowCount - 3
            ' * * * * * * * M O N T H L Y * * * * * * * *
            If e.Column.FieldName = "Monthly" AndAlso (Not Flag) Then
                Flag = True
                GridView3.SetRowCellValue(x, "Monthly", FormatNumber(Convert.ToDecimal(e.Value), 2))
                GridView3.SetRowCellValue(x, "Loans Receivable", CDbl(If(IsNumeric(GridView3.GetRowCellValue(x - 1, "Loans Receivable")), GridView3.GetRowCellValue(x - 1, "Loans Receivable"), 0)) - CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Monthly")), GridView3.GetRowCellValue(x, "Monthly"), 0)))
                Flag = False
            End If
            If e.Column.FieldName = "Penalty" AndAlso (Not Flag) Then
                Flag = True
                GridView3.SetRowCellValue(x, "Penalty", FormatNumber(Convert.ToDecimal(e.Value), 2))
                GridView3.SetRowCellValue(x, "Penalty Balance", CDbl(If(IsNumeric(GridView3.GetRowCellValue(x - 1, "Penalty Balance")), GridView3.GetRowCellValue(x - 1, "Penalty Balance"), 0)) - CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Penalty")), GridView3.GetRowCellValue(x, "Penalty"), 0)))
                Flag = False
            End If
            If e.Column.FieldName = "Interest Income" AndAlso (Not Flag) Then
                Flag = True
                GridView3.SetRowCellValue(x, "Interest Income", FormatNumber(Convert.ToDecimal(e.Value), 2))
                GridView3.SetRowCellValue(x, "Unearn Income", CDbl(If(IsNumeric(GridView3.GetRowCellValue(x - 1, "Unearn Income")), GridView3.GetRowCellValue(x - 1, "Unearn Income"), 0)) - CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Interest Income")), GridView3.GetRowCellValue(x, "Interest Income"), 0)))
                Flag = False
            End If
            If e.Column.FieldName = "RPPD" AndAlso (Not Flag) Then
                Flag = True
                GridView3.SetRowCellValue(x, "RPPD", FormatNumber(Convert.ToDecimal(e.Value), 2))
                GridView3.SetRowCellValue(x, "Total_RPPD", CDbl(If(IsNumeric(GridView3.GetRowCellValue(x - 1, "Total_RPPD")), GridView3.GetRowCellValue(x - 1, "Total_RPPD"), 0)) - CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "RPPD")), GridView3.GetRowCellValue(x, "RPPD"), 0)))
                Flag = False
            End If
            If e.Column.FieldName = "Principal Allocation" AndAlso (Not Flag) Then
                Flag = True
                GridView3.SetRowCellValue(x, "Principal Allocation", FormatNumber(Convert.ToDecimal(e.Value), 2))
                GridView3.SetRowCellValue(x, "Outstanding Principal", CDbl(If(IsNumeric(GridView3.GetRowCellValue(x - 1, "Outstanding Principal")), GridView3.GetRowCellValue(x - 1, "Outstanding Principal"), 0)) - CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Principal Allocation")), GridView3.GetRowCellValue(x, "Principal Allocation"), 0)))
                Flag = False
            End If
        Next
        For x As Integer = 1 To GridView3.RowCount - 3
            TotalInterest += CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Interest Income")), GridView3.GetRowCellValue(x, "Interest Income"), 0))
            TotalRPPD += CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "RPPD")), GridView3.GetRowCellValue(x, "RPPD"), 0))
            TotalPrincipal += CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Principal Allocation")), GridView3.GetRowCellValue(x, "Principal Allocation"), 0))
            TotalPenalty += CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Penalty")), GridView3.GetRowCellValue(x, "Penalty"), 0))
            TotalMonthly += CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Monthly")), GridView3.GetRowCellValue(x, "Monthly"), 0))
        Next
        For x As Integer = GridView3.RowCount - 3 To GridView3.RowCount - 1
            If x = GridView3.RowCount - 1 Then
                ' * * * * * * * T O T A L * * * * * * * *
                If e.Column.FieldName = "Monthly" AndAlso (Not Flag) Then
                    Flag = True
                    GridView3.SetRowCellValue(GridView3.RowCount - 1, "Monthly", TotalMonthly)
                    Flag = False
                End If
                If e.Column.FieldName = "Penalty" AndAlso (Not Flag) Then
                    Flag = True
                    GridView3.SetRowCellValue(GridView3.RowCount - 1, "Penalty", TotalPenalty)
                    Flag = False
                End If
                If e.Column.FieldName = "Interest Income" AndAlso (Not Flag) Then
                    Flag = True
                    GridView3.SetRowCellValue(GridView3.RowCount - 1, "Interest Income", TotalInterest)
                    Flag = False
                End If
                If e.Column.FieldName = "RPPD" AndAlso (Not Flag) Then
                    Flag = True
                    GridView3.SetRowCellValue(GridView3.RowCount - 1, "RPPD", TotalRPPD)
                    Flag = False
                End If
                If e.Column.FieldName = "Principal Allocation" AndAlso (Not Flag) Then
                    Flag = True
                    GridView3.SetRowCellValue(GridView3.RowCount - 1, "Principal Allocation", TotalPrincipal)
                    Flag = False
                End If
            ElseIf x = GridView3.RowCount - 2 Then
                ' * * * * * * * L A S T    R O W * * * * * * * *
                If e.Column.FieldName = "Monthly" AndAlso (Not Flag) Then
                    Flag = True
                    GridView3.SetRowCellValue(GridView3.RowCount - 2, "Monthly", CDbl(If(IsNumeric(GridView3.GetRowCellValue(0, "Loans Receivable")), GridView3.GetRowCellValue(0, "Loans Receivable"), 0)) - TotalMonthly)
                    Flag = False
                End If
                If e.Column.FieldName = "Penalty" AndAlso (Not Flag) Then
                    Flag = True
                    GridView3.SetRowCellValue(GridView3.RowCount - 2, "Penalty", CDbl(If(IsNumeric(GridView3.GetRowCellValue(0, "Penalty Balance")), GridView3.GetRowCellValue(0, "Penalty Balance"), 0)) - TotalPenalty)
                    Flag = False
                End If
                If e.Column.FieldName = "Interest Income" AndAlso (Not Flag) Then
                    Flag = True
                    GridView3.SetRowCellValue(GridView3.RowCount - 2, "Interest Income", CDbl(If(IsNumeric(GridView3.GetRowCellValue(0, "Unearn Income")), GridView3.GetRowCellValue(0, "Unearn Income"), 0)) - TotalInterest)
                    Flag = False
                End If
                If e.Column.FieldName = "RPPD" AndAlso (Not Flag) Then
                    Flag = True
                    GridView3.SetRowCellValue(GridView3.RowCount - 2, "RPPD", CDbl(If(IsNumeric(GridView3.GetRowCellValue(0, "Total_RPPD")), GridView3.GetRowCellValue(0, "Total_RPPD"), 0)) - TotalRPPD)
                    Flag = False
                End If
                If e.Column.FieldName = "Principal Allocation" AndAlso (Not Flag) Then
                    Flag = True
                    GridView3.SetRowCellValue(GridView3.RowCount - 2, "Principal Allocation", CDbl(If(IsNumeric(GridView3.GetRowCellValue(0, "Outstanding Principal")), GridView3.GetRowCellValue(0, "Outstanding Principal"), 0)) - TotalPrincipal)
                    Flag = False
                End If
                TotalInterest += CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Interest Income")), GridView3.GetRowCellValue(x, "Interest Income"), 0))
                TotalRPPD += CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "RPPD")), GridView3.GetRowCellValue(x, "RPPD"), 0))
                TotalPrincipal += CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Principal Allocation")), GridView3.GetRowCellValue(x, "Principal Allocation"), 0))
                TotalPenalty += CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Penalty")), GridView3.GetRowCellValue(x, "Penalty"), 0))
                TotalMonthly += CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Monthly")), GridView3.GetRowCellValue(x, "Monthly"), 0))
            End If
        Next
    End Sub

    Private Sub BtnVerify_Click(sender As Object, e As EventArgs) Handles btnVerify.Click
        If btnVerify.DialogResult = DialogResult.OK Then
            Exit Sub
        End If

        If GridView3.RowCount <= 1 Then
            MsgBox("Please fill amortization schedule.", MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        If MsgBoxYes("Are you sure you want to Verify this Amortization Schedule?") = MsgBoxResult.Yes Then
            Dim ErrorX As String = ""
            Dim Num As Integer = 1

            Cursor = Cursors.WaitCursor
            If If(IsNumeric(GridView3.GetRowCellValue(GridView3.RowCount - 1, "Principal Allocation")), CDbl(GridView3.GetRowCellValue(GridView3.RowCount - 1, "Principal Allocation")), 0) <> If(IsNumeric(GridView3.GetRowCellValue(0, "Outstanding Principal")), CDbl(GridView3.GetRowCellValue(0, "Outstanding Principal")), 0) Then
                ErrorX &= Num & ".) Total Principal Allocation and Principal Balance is not equal, please check your data. " & vbCrLf
                Num += 1
            End If
            If If(IsNumeric(GridView3.GetRowCellValue(GridView3.RowCount - 1, "RPPD")), CDbl(GridView3.GetRowCellValue(GridView3.RowCount - 1, "RPPD")), 0) <> If(IsNumeric(GridView3.GetRowCellValue(0, "Total_RPPD")), CDbl(GridView3.GetRowCellValue(0, "Total_RPPD")), 0) Then
                ErrorX &= Num & ".) Total RPPD Allocation and RPPD Balance is not equal, please check your data. " & vbCrLf
                Num += 1
            End If
            If If(IsNumeric(GridView3.GetRowCellValue(GridView3.RowCount - 1, "Interest Income")), CDbl(GridView3.GetRowCellValue(GridView3.RowCount - 1, "Interest Income")), 0) <> If(IsNumeric(GridView3.GetRowCellValue(0, "Unearn Income")), CDbl(GridView3.GetRowCellValue(0, "Unearn Income")), 0) Then
                ErrorX &= Num & ".) Total Interest Allocation and Interest Balance is not equal, please check your data. " & vbCrLf
                Num += 1
            End If
            If If(IsNumeric(GridView3.GetRowCellValue(GridView3.RowCount - 1, "Monthly")), CDbl(GridView3.GetRowCellValue(GridView3.RowCount - 1, "Monthly")), 0) <> If(IsNumeric(GridView3.GetRowCellValue(0, "Loans Receivable")), CDbl(GridView3.GetRowCellValue(0, "Loans Receivable")), 0) Then
                ErrorX &= Num & ".) Total Monthly Amortization and Loans Receivable Balance is not equal, please check your data. " & vbCrLf
                Num += 1
            End If
            Dim TotalMonthly As Double
            Dim TotalInterest As Double
            Dim TotalRPPD As Double
            Dim TotalPrincipal As Double
            For x As Integer = 0 To GridView3.RowCount - 1
                If x < GridView3.RowCount - 1 Then
                    TotalMonthly += CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Monthly")), GridView3.GetRowCellValue(x, "Monthly"), 0))
                    TotalInterest += CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Interest Income")), GridView3.GetRowCellValue(x, "Interest Income"), 0))
                    TotalRPPD += CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "RPPD")), GridView3.GetRowCellValue(x, "RPPD"), 0))
                    TotalPrincipal += CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Principal Allocation")), GridView3.GetRowCellValue(x, "Principal Allocation"), 0))
                End If
                If x > 0 And x < GridView3.RowCount - 1 Then
                    If FormatNumber(CDbl(If(IsNumeric(GridView3.GetRowCellValue(x - 1, "Outstanding Principal")), GridView3.GetRowCellValue(x - 1, "Outstanding Principal"), 0)) - CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Principal Allocation")), GridView3.GetRowCellValue(x, "Principal Allocation"), 0)), 2) <> FormatNumber(CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Outstanding Principal")), GridView3.GetRowCellValue(x, "Outstanding Principal"), 0)), 2) Then
                        ErrorX &= Num & ".) Outstanding Principal is not equal with the Previous Outstanding Principal - Principal Allocation at row " & x & vbCrLf
                        Num += 1
                    End If
                    If FormatNumber(CDbl(If(IsNumeric(GridView3.GetRowCellValue(x - 1, "Unearn Income")), GridView3.GetRowCellValue(x - 1, "Unearn Income"), 0)) - CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Interest Income")), GridView3.GetRowCellValue(x, "Interest Income"), 0)), 2) <> FormatNumber(CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Unearn Income")), GridView3.GetRowCellValue(x, "Unearn Income"), 0)), 2) Then
                        ErrorX &= Num & ".) Unearn Income is not equal with the Previous Unearn Income - Interest Income at row " & x & vbCrLf
                        Num += 1
                    End If
                    If FormatNumber(CDbl(If(IsNumeric(GridView3.GetRowCellValue(x - 1, "Total_RPPD")), GridView3.GetRowCellValue(x - 1, "Total_RPPD"), 0)) - CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "RPPD")), GridView3.GetRowCellValue(x, "RPPD"), 0)), 2) <> FormatNumber(CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Total_RPPD")), GridView3.GetRowCellValue(x, "Total_RPPD"), 0)), 2) Then
                        ErrorX &= Num & ".) RPPD Balance is not equal with the Previous RPPD Balance - RPPD at row " & x & vbCrLf
                        Num += 1
                    End If
                    If FormatNumber(CDbl(If(IsNumeric(GridView3.GetRowCellValue(x - 1, "Loans Receivable")), GridView3.GetRowCellValue(x - 1, "Loans Receivable"), 0)) - CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Monthly")), GridView3.GetRowCellValue(x, "Monthly"), 0)), 2) <> FormatNumber(CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Loans Receivable")), GridView3.GetRowCellValue(x, "Loans Receivable"), 0)), 2) Then
                        ErrorX &= Num & ".) Loans Receivable is not equal with the Previous Loans Receivable - Principal Allocation at row " & x & vbCrLf
                        Num += 1
                    End If
                End If
                If FormatNumber(CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Monthly")), GridView3.GetRowCellValue(x, "Monthly"), 0)), 2) <> FormatNumber(CDbl(CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Penalty")), GridView3.GetRowCellValue(x, "Penalty"), 0)) + CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Interest Income")), GridView3.GetRowCellValue(x, "Interest Income"), 0)) + CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "RPPD")), GridView3.GetRowCellValue(x, "RPPD"), 0)) + CDbl(If(IsNumeric(GridView3.GetRowCellValue(x, "Principal Allocation")), GridView3.GetRowCellValue(x, "Principal Allocation"), 0))), 2) Then
                    ErrorX &= Num & ".) Monthly Amortization is not equal with Monthly Allocation, Please check your data for row " & x & vbCrLf
                    Num += 1
                End If
                If IsDate(GridView3.GetRowCellValue(x, "Due Date")) = False And x > 0 And x < GridView3.RowCount - 1 Then
                    ErrorX &= Num & ".) Please check your data on column Due Date for row " & x & vbCrLf
                    Num += 1
                End If
                If If(IsDate(GridView3.GetRowCellValue(x, "Due Date")), CDate(GridView3.GetRowCellValue(x, "Due Date")), Date.Now.AddYears(1000)) < If(IsDate(GridView3.GetRowCellValue(x - 1, "Due Date")), CDate(GridView3.GetRowCellValue(x - 1, "Due Date")), Date.Now.AddYears(1000)) And x > 1 And x < GridView3.RowCount - 1 Then
                    ErrorX &= Num & ".) Due Date for row " & x & " is earlier than previous Due Date, please check your data." & vbCrLf
                    Num += 1
                End If
                If IsNumeric(GridView3.GetRowCellValue(x, "Monthly")) = False And x > 0 And x < GridView3.RowCount - 1 Then
                    ErrorX &= Num & ".) Please check your data on column Monthly for row " & x & vbCrLf
                    Num += 1
                End If
                If IsNumeric(GridView3.GetRowCellValue(x, "Penalty")).ToString = False And GridView3.GetRowCellValue(x, "Penalty").ToString <> "" And x > 0 And x < GridView3.RowCount - 1 Then
                    ErrorX &= Num & ".) Please check your data on column Penalty for row " & x & vbCrLf
                    Num += 1
                End If
                If IsNumeric(GridView3.GetRowCellValue(x, "Interest Income")) = False And x > 0 And x < GridView3.RowCount - 1 Then
                    ErrorX &= Num & ".) Please check your data on column Interest Income for row " & x & vbCrLf
                    Num += 1
                End If
                If IsNumeric(GridView3.GetRowCellValue(x, "RPPD")) = False And x > 0 And x < GridView3.RowCount - 1 Then
                    ErrorX &= Num & ".) Please check your data on column RPPD for row " & x & vbCrLf
                    Num += 1
                End If
                If IsNumeric(GridView3.GetRowCellValue(x, "Principal Allocation")) = False And x > 0 And x < GridView3.RowCount - 1 Then
                    ErrorX &= Num & ".) Please check your data on column Principal Allocation for row " & x & vbCrLf
                    Num += 1
                End If
                If IsNumeric(GridView3.GetRowCellValue(x, "Outstanding Principal")) = False And x > 0 And x < GridView3.RowCount - 1 Then
                    ErrorX &= Num & ".) Please check your data on column Outstanding Principal for row " & x & vbCrLf
                    Num += 1
                End If
                If IsNumeric(GridView3.GetRowCellValue(x, "Unearn Income")) = False And x > 0 And x < GridView3.RowCount - 1 Then
                    ErrorX &= Num & ".) Please check your data on column Unearn Income for row " & x & vbCrLf
                    Num += 1
                End If
                If IsNumeric(GridView3.GetRowCellValue(x, "Total_RPPD")) = False And x > 0 And x < GridView3.RowCount - 1 Then
                    ErrorX &= Num & ".) Please check your data on column RPPD Balance for row " & x & vbCrLf
                    Num += 1
                End If
                If IsNumeric(GridView3.GetRowCellValue(x, "Loans Receivable")) = False And x > 0 And x < GridView3.RowCount - 1 Then
                    ErrorX &= Num & ".) Please check your data on column Loans Receivable for row " & x & vbCrLf
                    Num += 1
                End If
            Next
            If TotalMonthly <> CDbl(If(IsNumeric(GridView3.GetRowCellValue(GridView3.RowCount - 1, "Monthly")), GridView3.GetRowCellValue(GridView3.RowCount - 1, "Monthly"), 0)) Then
                ErrorX &= Num & ".) Please check the total Monthly " & vbCrLf
                Num += 1
            End If
            If TotalInterest <> CDbl(If(IsNumeric(GridView3.GetRowCellValue(GridView3.RowCount - 1, "Interest Income")), GridView3.GetRowCellValue(GridView3.RowCount - 1, "Interest Income"), 0)) Then
                ErrorX &= Num & ".) Please check the total Interest Income " & vbCrLf
                Num += 1
            End If
            If TotalRPPD <> CDbl(If(IsNumeric(GridView3.GetRowCellValue(GridView3.RowCount - 1, "RPPD")), GridView3.GetRowCellValue(GridView3.RowCount - 1, "RPPD"), 0)) Then
                ErrorX &= Num & ".) Please check the total RPPD " & vbCrLf
                Num += 1
            End If
            If TotalPrincipal <> CDbl(If(IsNumeric(GridView3.GetRowCellValue(GridView3.RowCount - 1, "Principal Allocation")), GridView3.GetRowCellValue(GridView3.RowCount - 1, "Principal Allocation"), 0)) Then
                ErrorX &= Num & ".) Please check the total Principal Alloc. " & vbCrLf
            End If

            Cursor = Cursors.Default
            If ErrorX = "" Then
                btnManual.Enabled = True
                If From_CV_VerifySchedule = False Then
                    btnVerify.Enabled = False
                End If
                cbxAuto.Visible = False
                GridColumn16.OptionsColumn.AllowEdit = False
                GridColumn17.OptionsColumn.AllowEdit = False
                GridColumn18.OptionsColumn.AllowEdit = False
                GridColumn19.OptionsColumn.AllowEdit = False
                GridColumn20.OptionsColumn.AllowEdit = False
                GridColumn21.OptionsColumn.AllowEdit = False
                GridColumn22.OptionsColumn.AllowEdit = False
                GridColumn23.OptionsColumn.AllowEdit = False
                GridColumn24.OptionsColumn.AllowEdit = False
            Else
                Dim FName As String = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) & "\Validation Error Log-" & Format(Date.Now, "yyyy-MM-dd_hhmmss") & ".txt"
                btnSave.Enabled = False
                btnSave_F.Enabled = False
                IO.File.AppendAllText(FName, "*** E R R O R   I N   V A L I D A T I O N ***" & vbCrLf & vbCrLf & ErrorX & vbCrLf & vbCrLf & "*** E R R O R   I N   V A L I D A T I O N ***", System.Text.Encoding.UTF8)
                Process.Start(FName)
                Exit Sub
            End If
            btnSave.Enabled = True
            btnSave_F.Enabled = True
            ManualAmortization = True
            MsgBox("Successfully Verified!", MsgBoxStyle.Information, "Info")
            If From_CV_VerifySchedule Then
                btnVerify.DialogResult = DialogResult.OK
                btnVerify.DialogResult = DialogResult.OK
                '*************AMORTIZATION SCHEDULE 
                Dim SQL As String = String.Format("UPDATE credit_schedule SET `status` = 'DELETED' WHERE `status` = 'ACTIVE' AND CreditNumber = '{0}';", txtCreditNumber.Text)
                For x As Integer = 0 To GridView3.RowCount - 2
                    If GridView3.GetRowCellValue(x, "No") = "" Then
                        SQL &= " INSERT INTO credit_schedule SET"
                        SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                        SQL &= String.Format(" `No` = '{0}', ", GridView3.GetRowCellValue(x, "No"))
                        SQL &= String.Format(" DueDate = '{0}', ", "")
                        SQL &= String.Format(" Monthly = '{0}', ", 0)
                        SQL &= String.Format(" InterestIncome = '{0}', ", 0)
                        SQL &= String.Format(" RPPD = '{0}', ", 0)
                        SQL &= String.Format(" PrincipalAllocation = '{0}', ", 0)
                        SQL &= String.Format(" OutstandingPrincipal = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Outstanding Principal")))
                        SQL &= String.Format(" Total_RPPD = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Total_RPPD")))
                        SQL &= String.Format(" UnearnIncome = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Unearn Income")))
                        SQL &= String.Format(" LoansReceivable = '{0}';", CDbl(GridView3.GetRowCellValue(x, "Loans Receivable")))
                    Else
                        SQL &= " INSERT INTO credit_schedule SET"
                        SQL &= String.Format(" CreditNumber = '{0}', ", txtCreditNumber.Text)
                        SQL &= String.Format(" `No` = '{0}', ", GridView3.GetRowCellValue(x, "No"))
                        SQL &= String.Format(" DueDate = '{0}', ", Format(DateValue(GridView3.GetRowCellValue(x, "Due Date")), "yyyy-MM-dd"))
                        SQL &= String.Format(" Monthly = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Monthly")))
                        SQL &= String.Format(" InterestIncome = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Interest Income")))
                        SQL &= String.Format(" RPPD = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "RPPD")))
                        SQL &= String.Format(" PrincipalAllocation = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Principal Allocation")))
                        SQL &= String.Format(" OutstandingPrincipal = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Outstanding Principal")))
                        SQL &= String.Format(" Total_RPPD = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Total_RPPD")))
                        SQL &= String.Format(" UnearnIncome = '{0}', ", CDbl(GridView3.GetRowCellValue(x, "Unearn Income")))
                        SQL &= String.Format(" LoansReceivable = '{0}';", CDbl(GridView3.GetRowCellValue(x, "Loans Receivable")))
                    End If
                Next
                SQL &= String.Format("UPDATE credit_application SET VerifiedManualAmort = 1 WHERE CreditNumber = '{0}' AND ManualAmortization = 1;", txtCreditNumber.Text)
                '*************AMORTIZATION SCHEDULE 
                DataObject(SQL)
                btnVerify.PerformClick()
            End If
        End If
    End Sub

    Private Sub TxtAgentContactV2_Leave(sender As Object, e As EventArgs) Handles txtAgentContactV2.Leave
        txtAgentContactV2.Text = ReplaceText(txtAgentContactV2.Text.Trim)
    End Sub

    Private Sub DtpFDD_Click(sender As Object, e As EventArgs) Handles dtpFDD.Click
        dtpFDD.CustomFormat = "MMMM dd, yyyy"
    End Sub

    Private Sub DtpFDD_ValueChanged(sender As Object, e As EventArgs) Handles dtpFDD.ValueChanged
        If FirstLoad Then
            Exit Sub
        End If

        If dtpFDD.CustomFormat <> "" And dtpFDD.Visible Then
            LoadAmortization(GridControl3, True)
        End If
    End Sub

    Private Sub DtpFDD_KeyDown(sender As Object, e As KeyEventArgs) Handles dtpFDD.KeyDown
        If e.KeyCode = Keys.Escape Or e.KeyCode = Keys.Delete Then
            dtpFDD.CustomFormat = ""
        End If
    End Sub

    Private Sub IActivate_Click(sender As Object, e As EventArgs) Handles iActivate.Click
        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Then
                Exit Sub
            ElseIf (GridView5.GetFocusedRowCellValue("status") = "DELETED" Or GridView5.GetFocusedRowCellValue("Application Status") = "DISAPPROVED" Or GridView5.GetFocusedRowCellValue("status") = "CANCELLED") Then
            Else
                If GridView5.GetFocusedRowCellValue("Loan Type") = "RESTRUCTURE" Or GridView5.GetFocusedRowCellValue("Loan Type") = "ASSUMPTION" Or GridView5.GetFocusedRowCellValue("Loan Type") = "ASSUMPTION RESTRUCTURE" Then
                    MsgBox(String.Format("Credit Application with Loan Type of {0} is not allowed to activate, their might be changes in computations.", GridView5.GetFocusedRowCellValue("Loan Type")), MsgBoxStyle.Information, "Info")
                ElseIf GridView5.GetFocusedRowCellValue("status") = "HOLD" Then
                    MsgBox("Credit Application can be unhold using the HOLD Button.", MsgBoxStyle.Information, "Info")
                Else
                    MsgBox("Credit Application is already active.", MsgBoxStyle.Information, "Info")
                End If
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim Hold As New FrmHoldApplication
        With Hold
            .CreditNumber = GridView5.GetFocusedRowCellValue("Credit Number")
            .Status = GridView5.GetFocusedRowCellValue("status")
            .ApplicationStatus = GridView5.GetFocusedRowCellValue("application_status")
            .CI_Status = GridView5.GetFocusedRowCellValue("CI_Status")
            .btnHold.Visible = False
            .btnUnhold.Visible = False
            .btnCancelApp.Visible = False
            .btnActivate.Visible = True
            .BorrowerName = GridView5.GetFocusedRowCellValue("Borrower")
            .lblTitle.Text = "ACTIVATE APPLICATION"
            If .ShowDialog = DialogResult.OK Then
                LoadData()
            End If
            .Dispose()
        End With
    End Sub

    Private Sub CbxProduct_TextChanged(sender As Object, e As EventArgs) Handles cbxProduct.TextChanged
        If cbxProduct.Text = "" Then
            cbxCollateral.Text = ""
            btnFromROPA.Visible = False
        End If
    End Sub

    Private Sub IChangeBorrower_Click(sender As Object, e As EventArgs) Handles iChangeBorrower.Click
        If vUpdate Then
        Else
            MsgBox(mBox_Update, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Or GridView5.RowCount = 0 Then
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("status") = "DELETED" Or GridView5.GetFocusedRowCellValue("status") = "CANCELLED" Or GridView5.GetFocusedRowCellValue("Application Status") = "CLOSED ACCOUNT" Then
                MsgBox(String.Format("Credit Application is already {0}, please check your data.", GridView5.GetFocusedRowCellValue("status")), MsgBoxStyle.Information, "Info")
                Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("Loan Type") <> "MIGRATED" And (GridView5.GetFocusedRowCellValue("status") = "BOOKED" Or GridView5.GetFocusedRowCellValue("status") = "FOR RELEASING") Then
                MsgBox(String.Format("Credit Application is already {0} and application is not from Migration, please check your data.", GridView5.GetFocusedRowCellValue("status")), MsgBoxStyle.Information, "Info")
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim SelectB As New FrmSelectBorrower
        With SelectB
            .CreditNumber = GridView5.GetFocusedRowCellValue("Credit Number")
            .CreditBorrower = GridView5.GetFocusedRowCellValue("Borrower")
            .Principal = GridView5.GetFocusedRowCellValue("Principal")
            If .ShowDialog = DialogResult.OK Then
                LoadData()
            End If
            .Dispose()
        End With
    End Sub

    Private Sub CbxAccountNo_TextChanged(sender As Object, e As EventArgs) Handles cbxAccountNo.TextChanged
        If cbxAccountNo.Text = "" Then
            PanelEx4.Enabled = True
            PanelEx5.Enabled = True
            PanelEx7.Enabled = True
            PanelEx6.Enabled = True
            PanelEx15.Enabled = True
            PanelEx18.Enabled = True
        End If
    End Sub

    Private Sub BtnUpdateEmployer_Click(sender As Object, e As EventArgs) Handles btnUpdateEmployer.Click
        If vUpdate Then
        Else
            MsgBox(mBox_Update, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Or GridView5.RowCount = 0 Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim Referral As New FrmUpdateEmployer
        With Referral
            .CreditNumber = GridView5.GetFocusedRowCellValue("Credit Number")
            .Product = GridView5.GetFocusedRowCellValue("Product")
            .cbxEmployer_B.Text = GridView5.GetFocusedRowCellValue("Employer_B")
            .cbxEmployer_B.Tag = GridView5.GetFocusedRowCellValue("Employer_B")
            .txtEmployerAddress_B.Text = GridView5.GetFocusedRowCellValue("EmployerAddress_B")
            .txtEmployerAddress_B.Tag = GridView5.GetFocusedRowCellValue("EmployerAddress_B")
            .txtEmployerTelephone_B.Text = GridView5.GetFocusedRowCellValue("EmployerTelephone_B")
            .txtEmployerTelephone_B.Tag = GridView5.GetFocusedRowCellValue("EmployerTelephone_B")

            If GridView5.GetFocusedRowCellValue("status") = "DELETED" Or GridView5.GetFocusedRowCellValue("status") = "CANCELLED" Or (GridView5.GetFocusedRowCellValue("Application Status") = "BOOKED" And GridView5.GetFocusedRowCellValue("Loan Type") <> "MIGRATED") Or GridView5.GetFocusedRowCellValue("Application Status") = "CLOSED ACCOUNT" Then
                .btnSave.Enabled = False
                .cbxEmployer_B.Enabled = False
                .txtEmployerAddress_B.Enabled = False
                .txtEmployerTelephone_B.Enabled = False
            End If
            If .ShowDialog = DialogResult.OK Then
                LoadData()
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnLoanType_Click(sender As Object, e As EventArgs) Handles btnLoanType.Click
        If vUpdate Then
        Else
            MsgBox(mBox_Update, MsgBoxStyle.Information, "Info")
            Exit Sub
        End If

        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Or GridView5.RowCount = 0 Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        Dim Referral As New FrmUpdateLoanType
        With Referral
            .CreditNumber = GridView5.GetFocusedRowCellValue("Credit Number")
            .cbxOptions.Text = GridView5.GetFocusedRowCellValue("Loan Type")
            .cbxOptions.Tag = GridView5.GetFocusedRowCellValue("Loan Type")

            If GridView5.GetFocusedRowCellValue("status") = "DELETED" Or GridView5.GetFocusedRowCellValue("status") = "CANCELLED" Or (GridView5.GetFocusedRowCellValue("Application Status") = "BOOKED" And GridView5.GetFocusedRowCellValue("Loan Type") <> "MIGRATED") Or GridView5.GetFocusedRowCellValue("Application Status") = "CLOSED ACCOUNT" Or (GridView5.GetFocusedRowCellValue("Loan Type") <> "NEW" And GridView5.GetFocusedRowCellValue("Loan Type") <> "RELOAN") Then
                .btnSave.Enabled = False
                .cbxOptions.Enabled = False
            End If
            If .ShowDialog = DialogResult.OK Then
                LoadData()
            End If
            .Dispose()
        End With
    End Sub

    Private Sub BtnFromROPA_Click(sender As Object, e As EventArgs) Handles btnFromROPA.Click
        Dim CollateralROPA As New FrmCollateralROPA
        With CollateralROPA
            Dim drv As DataRowView = DirectCast(cbxProduct.SelectedItem, DataRowView)
            If drv("mortgage_id") = 1 Then
                .ROPA = "VL"
            ElseIf drv("mortgage_id") = 2 Then
                .ROPA = "RE"
            End If
            .AssetNumber_1 = AssetNumber_1
            .AssetNumber_2 = AssetNumber_2
            .AssetNumber_3 = AssetNumber_3
            .AssetNumber_4 = AssetNumber_4
            .AssetNumber_5 = AssetNumber_5
            .From_Application = True
            Dim Result = .ShowDialog
            If Result = DialogResult.OK Then
                If AssetNumber_1 = "" Then
                    AssetNumber_1 = .GridView1.GetFocusedRowCellValue("Asset Number")
                    AssetSelling_1 = .GridView1.GetFocusedRowCellValue("Price")
                    Description_1 = .GridView1.GetFocusedRowCellValue("Description")
                ElseIf AssetNumber_2 = "" Then
                    AssetNumber_2 = .GridView1.GetFocusedRowCellValue("Asset Number")
                    AssetSelling_2 = .GridView1.GetFocusedRowCellValue("Price")
                    Description_2 = .GridView1.GetFocusedRowCellValue("Description")
                ElseIf AssetNumber_3 = "" Then
                    AssetNumber_3 = .GridView1.GetFocusedRowCellValue("Asset Number")
                    AssetSelling_3 = .GridView1.GetFocusedRowCellValue("Price")
                    Description_3 = .GridView1.GetFocusedRowCellValue("Description")
                ElseIf AssetNumber_4 = "" Then
                    AssetNumber_4 = .GridView1.GetFocusedRowCellValue("Asset Number")
                    AssetSelling_4 = .GridView1.GetFocusedRowCellValue("Price")
                    Description_4 = .GridView1.GetFocusedRowCellValue("Description")
                ElseIf AssetNumber_5 = "" Then
                    AssetNumber_5 = .GridView1.GetFocusedRowCellValue("Asset Number")
                    AssetSelling_5 = .GridView1.GetFocusedRowCellValue("Price")
                    Description_5 = .GridView1.GetFocusedRowCellValue("Description")
                End If
                If drv("mortgage_id") = 1 Then
                    DataObject(String.Format("UPDATE ropoa_vehicle SET AppraiseSellingPrice = {0} WHERE AssetNumber = '{1}';", .GridView1.GetFocusedRowCellValue("Price"), .GridView1.GetFocusedRowCellValue("Asset Number")))
                ElseIf drv("mortgage_id") = 2 Then
                    DataObject(String.Format("UPDATE ropoa_realestate SET AppraiseSellingPrice = {0} WHERE AssetNumber = '{1}';", .GridView1.GetFocusedRowCellValue("Price"), .GridView1.GetFocusedRowCellValue("Asset Number")))
                End If
                dAmountApplied.Value = AssetSelling_1 + AssetSelling_2 + AssetSelling_3 + AssetSelling_4 + AssetSelling_5
                cbxProduct.Enabled = False
            ElseIf Result = DialogResult.Cancel Then
                txtPurpose.Text = txtPurpose.Text.Replace(" [" & Description_1 & "]", "")
                txtPurpose.Text = txtPurpose.Text.Replace(" [" & Description_2 & "]", "")
                txtPurpose.Text = txtPurpose.Text.Replace(" [" & Description_3 & "]", "")
                txtPurpose.Text = txtPurpose.Text.Replace(" [" & Description_4 & "]", "")
                txtPurpose.Text = txtPurpose.Text.Replace(" [" & Description_5 & "]", "")
                If .AssetNumber_1 = "" Then
                    AssetNumber_1 = AssetNumber_2
                    AssetSelling_1 = AssetSelling_2
                    Description_1 = Description_2
                    AssetNumber_2 = AssetNumber_3
                    AssetSelling_2 = AssetSelling_3
                    Description_2 = Description_3
                    AssetNumber_3 = AssetNumber_4
                    AssetSelling_3 = AssetSelling_4
                    Description_3 = Description_4
                    AssetNumber_4 = AssetNumber_5
                    AssetSelling_4 = AssetSelling_5
                    Description_4 = Description_5
                ElseIf .AssetNumber_2 = "" Then
                    AssetNumber_2 = AssetNumber_3
                    AssetSelling_2 = AssetSelling_3
                    Description_2 = Description_3
                    AssetNumber_3 = AssetNumber_4
                    AssetSelling_3 = AssetSelling_4
                    Description_3 = Description_4
                    AssetNumber_4 = AssetNumber_5
                    AssetSelling_4 = AssetSelling_5
                    Description_5 = Description_5
                ElseIf .AssetNumber_3 = "" Then
                    AssetNumber_3 = AssetNumber_4
                    AssetSelling_3 = AssetSelling_4
                    Description_3 = Description_4
                    AssetNumber_4 = AssetNumber_5
                    AssetSelling_4 = AssetSelling_5
                    Description_5 = Description_5
                ElseIf .AssetNumber_4 = "" Then
                    AssetNumber_4 = AssetNumber_5
                    AssetSelling_4 = AssetSelling_5
                    Description_4 = Description_5
                ElseIf .AssetNumber_5 = "" Then
                    AssetNumber_5 = ""
                    AssetSelling_5 = 0
                End If
                dAmountApplied.Value = AssetSelling_1 + AssetSelling_2 + AssetSelling_3 + AssetSelling_4 + AssetSelling_5
            End If
            If Description_1 <> "" Then
                txtPurpose.Text &= " [" & Description_1 & "]"
            End If
            If Description_2 <> "" Then
                txtPurpose.Text &= " [" & Description_2 & "]"
            End If
            If Description_3 <> "" Then
                txtPurpose.Text &= " [" & Description_3 & "]"
            End If
            If Description_4 <> "" Then
                txtPurpose.Text &= " [" & Description_4 & "]"
            End If
            If Description_5 <> "" Then
                txtPurpose.Text &= " [" & Description_5 & "]"
            End If
            .Dispose()
        End With
    End Sub

    Private Sub TxtPurpose_Leave(sender As Object, e As EventArgs) Handles txtPurpose.Leave
        txtPurpose.Text = ReplaceText(txtPurpose.Text)
    End Sub

    Private Sub IForJournalVoucher_Click(sender As Object, e As EventArgs) Handles iForJournalVoucher.Click
        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Then
                Exit Sub
                'ElseIf GridView5.GetFocusedRowCellValue("CVforJV") = 1 Then
                '    MsgBox("Account is set for Journal Voucher already.", MsgBoxStyle.Information, "Info")
                '    Exit Sub
            ElseIf GridView5.GetFocusedRowCellValue("Application Status") = "FOR CHECK VOUCHER" Or GridView5.GetFocusedRowCellValue("Application Status") = "FOR PAYMENT REQUEST" Or GridView5.GetFocusedRowCellValue("Application Status") = "FOR JOURNAL VOUCHER" Then
            Else
                MsgBox("For Journal/Check Voucher is only available for application with status of For Check Preparation", MsgBoxStyle.Information, "Info")
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        If MsgBoxYes(String.Format("Are you sure you want to set this application {0}?", iForJournalVoucher.Text)) = MsgBoxResult.Yes Then
            Dim Reason As String 'Reason for change
            If FrmReason.ShowDialog = DialogResult.OK Then
                Reason = FrmReason.txtReason.Text
            Else
                Exit Sub
            End If

            Dim SQL As String
            If iForJournalVoucher.Text = "For Journal Voucher" Then
                SQL = String.Format("UPDATE credit_application SET CVforJV = 1 WHERE CreditNumber = '{0}';", GridView5.GetFocusedRowCellValue("Credit Number"))
            Else
                SQL = String.Format("UPDATE credit_application SET CVforJV = 0 WHERE CreditNumber = '{0}';", GridView5.GetFocusedRowCellValue("Credit Number"))
            End If
            DataObject(SQL)
            Logs("Credit Application", iForJournalVoucher.Text, Reason, "", "", "", "")
            LoadData()
            MsgBox("Successfully Updated!", MsgBoxStyle.Information, "Info")
        End If
    End Sub

    Private Sub GridView5_SelectionChanged(sender As Object, e As DevExpress.Data.SelectionChangedEventArgs) Handles GridView5.SelectionChanged
        Try
            If GridView5.GetFocusedRowCellValue("ID").ToString = "" Then
                Exit Sub
            End If
        Catch ex As Exception
            Exit Sub
        End Try

        If GridView5.GetFocusedRowCellValue("Application Status") = "FOR JOURNAL VOUCHER" Then
            iForJournalVoucher.Text = "For Check Voucher"
        ElseIf GridView5.GetFocusedRowCellValue("Application Status") = "FOR CHECK VOUCHER" Or GridView5.GetFocusedRowCellValue("Application Status") = "FOR PAYMENT REQUEST" Then
            iForJournalVoucher.Text = "For Journal Voucher"
        End If
        If GridView5.GetFocusedRowCellValue("OutsourceCI").ToString = "" Then
            iHold.Enabled = True
            iCancel.Enabled = True
            iActivate.Enabled = True
            iBankDetails.Enabled = True
            iChangeBorrower.Enabled = True
            btnUpdateEmployer.Enabled = True
            btnLoanType.Enabled = True
            iReferral.Enabled = True
            iBusinessCenter.Enabled = True
            iForJournalVoucher.Enabled = True
            iSpouseCoMakerAsBorrower.Enabled = True
            iReapprove.Enabled = True
            iSpecialApproval.Enabled = True
        Else
            If GridView5.GetFocusedRowCellValue("branch_id") = Branch_ID Then
                iHold.Enabled = True
                iCancel.Enabled = True
                iActivate.Enabled = True
                iBankDetails.Enabled = True
                iChangeBorrower.Enabled = True
                btnUpdateEmployer.Enabled = True
                btnLoanType.Enabled = True
                iReferral.Enabled = True
                iBusinessCenter.Enabled = True
                iForJournalVoucher.Enabled = True
                iSpouseCoMakerAsBorrower.Enabled = True
                iReapprove.Enabled = True
                iSpecialApproval.Enabled = True
            Else
                iHold.Enabled = False
                iCancel.Enabled = False
                iActivate.Enabled = False
                iBankDetails.Enabled = False
                iChangeBorrower.Enabled = False
                btnUpdateEmployer.Enabled = False
                btnLoanType.Enabled = False
                iReferral.Enabled = False
                iBusinessCenter.Enabled = False
                iForJournalVoucher.Enabled = False
                iSpouseCoMakerAsBorrower.Enabled = False
                iReapprove.Enabled = False
                iSpecialApproval.Enabled = False
            End If
        End If
    End Sub
End Class